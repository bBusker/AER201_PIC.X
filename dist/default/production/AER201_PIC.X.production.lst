

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Apr 11 11:21:13 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114  0000                     
   115                           ; Version 1.40
   116                           ; Generated 01/12/2016 GMT
   117                           ; 
   118                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4620 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataBANK1
   151  0054E6                     __pidataBANK1:
   152                           	opt stack 0
   153                           
   154                           ;initializer for _bottle_count_disp
   155  0054E6  FFFF               	dw	65535
   156  0054E8  00                 	db	0
   157  0054E9  00                 	db	0
   158  0054EA  00                 	db	0
   159  0054EB  00                 	db	0
   160  0054EC  00                 	db	0
   161  0054ED  00                 	db	0
   162  0054EE  00                 	db	0
   163  0054EF  00                 	db	0
   164                           
   165                           	psect	mediumconst
   166  00FDF2                     __pmediumconst:
   167                           	opt stack 0
   168  00FDF2  00                 	db	0
   169  00FDF3                     _keys:
   170                           	opt stack 0
   171  00FDF3  31                 	db	49
   172  00FDF4  32                 	db	50
   173  00FDF5  33                 	db	51
   174  00FDF6  41                 	db	65
   175  00FDF7  34                 	db	52
   176  00FDF8  35                 	db	53
   177  00FDF9  36                 	db	54
   178  00FDFA  42                 	db	66
   179  00FDFB  37                 	db	55
   180  00FDFC  38                 	db	56
   181  00FDFD  39                 	db	57
   182  00FDFE  43                 	db	67
   183  00FDFF  2A                 	db	42
   184  00FE00  30                 	db	48
   185  00FE01  23                 	db	35
   186  00FE02  44                 	db	68
   187  00FE03  00                 	db	0
   188  00FE04                     __end_of_keys:
   189                           	opt stack 0
   190  00FE04                     _dpowers:
   191                           	opt stack 0
   192  00FE04  0001               	dw	1
   193  00FE06  000A               	dw	10
   194  00FE08  0064               	dw	100
   195  00FE0A  03E8               	dw	1000
   196  00FE0C  2710               	dw	10000
   197  00FE0E                     __end_of_dpowers:
   198                           	opt stack 0
   199  00FE0E                     _hexpowers:
   200                           	opt stack 0
   201  00FE0E  0001               	dw	1
   202  00FE10  0010               	dw	16
   203  00FE12  0100               	dw	256
   204  00FE14  1000               	dw	4096
   205  00FE16                     __end_of_hexpowers:
   206                           	opt stack 0
   207  00FE16                     _timeset:
   208                           	opt stack 0
   209  00FE16  50                 	db	80
   210  00FE17  36                 	db	54
   211  00FE18  19                 	db	25
   212  00FE19  01                 	db	1
   213  00FE1A  10                 	db	16
   214  00FE1B  04                 	db	4
   215  00FE1C  17                 	db	23
   216  00FE1D                     __end_of_timeset:
   217                           	opt stack 0
   218  00FE1D                     exp@coeff:
   219                           	opt stack 0
   220  00FE1D  00                 	db	0
   221  00FE1E  80                 	db	128
   222  00FE1F  3F                 	db	63
   223  00FE20  72                 	db	114
   224  00FE21  31                 	db	49
   225  00FE22  3F                 	db	63
   226  00FE23  FE                 	db	254
   227  00FE24  75                 	db	117
   228  00FE25  3E                 	db	62
   229  00FE26  58                 	db	88
   230  00FE27  63                 	db	99
   231  00FE28  3D                 	db	61
   232  00FE29  95                 	db	149
   233  00FE2A  1D                 	db	29
   234  00FE2B  3C                 	db	60
   235  00FE2C  C5                 	db	197
   236  00FE2D  AE                 	db	174
   237  00FE2E  3A                 	db	58
   238  00FE2F  79                 	db	121
   239  00FE30  21                 	db	33
   240  00FE31  39                 	db	57
   241  00FE32  94                 	db	148
   242  00FE33  80                 	db	128
   243  00FE34  37                 	db	55
   244  00FE35  93                 	db	147
   245  00FE36  A7                 	db	167
   246  00FE37  35                 	db	53
   247  00FE38  56                 	db	86
   248  00FE39  15                 	db	21
   249  00FE3A  34                 	db	52
   250  00FE3B                     __end_ofexp@coeff:
   251                           	opt stack 0
   252  00FE3B                     log@coeff:
   253                           	opt stack 0
   254  00FE3B  00                 	db	0
   255  00FE3C  00                 	db	0
   256  00FE3D  00                 	db	0
   257  00FE3E  00                 	db	0
   258  00FE3F  80                 	db	128
   259  00FE40  3F                 	db	63
   260  00FE41  F0                 	db	240
   261  00FE42  FF                 	db	255
   262  00FE43  BE                 	db	190
   263  00FE44  E2                 	db	226
   264  00FE45  A9                 	db	169
   265  00FE46  3E                 	db	62
   266  00FE47  83                 	db	131
   267  00FE48  76                 	db	118
   268  00FE49  BE                 	db	190
   269  00FE4A  AE                 	db	174
   270  00FE4B  2B                 	db	43
   271  00FE4C  3E                 	db	62
   272  00FE4D  3C                 	db	60
   273  00FE4E  C3                 	db	195
   274  00FE4F  BD                 	db	189
   275  00FE50  D2                 	db	210
   276  00FE51  13                 	db	19
   277  00FE52  3D                 	db	61
   278  00FE53  78                 	db	120
   279  00FE54  D3                 	db	211
   280  00FE55  BB                 	db	187
   281  00FE56                     __end_oflog@coeff:
   282                           	opt stack 0
   283  0000                     _TMR0	set	4054
   284  0000                     _TMR1	set	4046
   285  0000                     _TMR3	set	4018
   286  0000                     _ADCON0	set	4034
   287  0000                     _ADCON1	set	4033
   288  0000                     _EEADR	set	4009
   289  0000                     _EEADRH	set	4010
   290  0000                     _EECON1bits	set	4006
   291  0000                     _EECON2	set	4007
   292  0000                     _EEDATA	set	4008
   293  0000                     _INTCONbits	set	4082
   294  0000                     _LATA	set	3977
   295  0000                     _LATAbits	set	3977
   296  0000                     _LATB	set	3978
   297  0000                     _LATC	set	3979
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATD	set	3980
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATE	set	3981
   302  0000                     _PIR2bits	set	4001
   303  0000                     _PORTAbits	set	3968
   304  0000                     _PORTB	set	3969
   305  0000                     _SSPADD	set	4040
   306  0000                     _SSPBUF	set	4041
   307  0000                     _SSPCON1	set	4038
   308  0000                     _SSPCON2	set	4037
   309  0000                     _SSPSTAT	set	4039
   310  0000                     _T1CON	set	4045
   311  0000                     _T3CON	set	4017
   312  0000                     _TRISA	set	3986
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISC	set	3988
   315  0000                     _TRISD	set	3989
   316  0000                     _TRISE	set	3990
   317  0000                     _ACKDT	set	32301
   318  0000                     _ACKEN	set	32300
   319  0000                     _GIE	set	32663
   320  0000                     _INT0IE	set	32660
   321  0000                     _INT1IE	set	32643
   322  0000                     _INT1IF	set	32640
   323  0000                     _INT2IE	set	32644
   324  0000                     _PEIE	set	32662
   325  0000                     _PEN	set	32298
   326  0000                     _PSA	set	32427
   327  0000                     _RCEN	set	32299
   328  0000                     _RSEN	set	32297
   329  0000                     _SEN	set	32296
   330  0000                     _T08BIT	set	32430
   331  0000                     _T0CS	set	32429
   332  0000                     _T0PS0	set	32424
   333  0000                     _T0PS1	set	32425
   334  0000                     _T0PS2	set	32426
   335  0000                     _T1CKPS0	set	32364
   336  0000                     _T1CKPS1	set	32365
   337  0000                     _T3CKPS0	set	32140
   338  0000                     _T3CKPS1	set	32141
   339  0000                     _TMR0IE	set	32661
   340  0000                     _TMR0IF	set	32658
   341  0000                     _TMR0ON	set	32431
   342  0000                     _TMR1CS	set	32361
   343  0000                     _TMR1IE	set	31976
   344  0000                     _TMR1IF	set	31984
   345  0000                     _TMR1ON	set	32360
   346  0000                     _TMR3CS	set	32137
   347  0000                     _TMR3IE	set	32001
   348  0000                     _TMR3IF	set	32009
   349  0000                     _TMR3ON	set	32136
   350  0000                     _TRISC3	set	31907
   351  0000                     _TRISC4	set	31908
   352  0000                     _nRBPU	set	32655
   353  00FE56                     STR_3:
   354  00FE56  47                 	db	71	;'G'
   355  00FE57  25                 	db	37
   356  00FE58  75                 	db	117	;'u'
   357  00FE59  20                 	db	32
   358  00FE5A  42                 	db	66	;'B'
   359  00FE5B  25                 	db	37
   360  00FE5C  75                 	db	117	;'u'
   361  00FE5D  20                 	db	32
   362  00FE5E  20                 	db	32
   363  00FE5F  20                 	db	32
   364  00FE60  20                 	db	32
   365  00FE61  20                 	db	32
   366  00FE62  20                 	db	32
   367  00FE63  20                 	db	32
   368  00FE64  20                 	db	32
   369  00FE65  20                 	db	32
   370  00FE66  20                 	db	32
   371  00FE67  20                 	db	32
   372  00FE68  20                 	db	32
   373  00FE69  20                 	db	32
   374  00FE6A  20                 	db	32
   375  00FE6B  20                 	db	32
   376  00FE6C  20                 	db	32
   377  00FE6D  00                 	db	0
   378  00FE6E                     STR_2:
   379  00FE6E  43                 	db	67	;'C'
   380  00FE6F  25                 	db	37
   381  00FE70  75                 	db	117	;'u'
   382  00FE71  20                 	db	32
   383  00FE72  52                 	db	82	;'R'
   384  00FE73  25                 	db	37
   385  00FE74  75                 	db	117	;'u'
   386  00FE75  20                 	db	32
   387  00FE76  20                 	db	32
   388  00FE77  20                 	db	32
   389  00FE78  20                 	db	32
   390  00FE79  20                 	db	32
   391  00FE7A  20                 	db	32
   392  00FE7B  20                 	db	32
   393  00FE7C  20                 	db	32
   394  00FE7D  20                 	db	32
   395  00FE7E  20                 	db	32
   396  00FE7F  20                 	db	32
   397  00FE80  20                 	db	32
   398  00FE81  20                 	db	32
   399  00FE82  20                 	db	32
   400  00FE83  20                 	db	32
   401  00FE84  20                 	db	32
   402  00FE85  00                 	db	0
   403  00FE86                     STR_44:
   404  00FE86  54                 	db	84	;'T'
   405  00FE87  6F                 	db	111	;'o'
   406  00FE88  74                 	db	116	;'t'
   407  00FE89  61                 	db	97	;'a'
   408  00FE8A  6C                 	db	108	;'l'
   409  00FE8B  20                 	db	32
   410  00FE8C  4F                 	db	79	;'O'
   411  00FE8D  70                 	db	112	;'p'
   412  00FE8E  65                 	db	101	;'e'
   413  00FE8F  72                 	db	114	;'r'
   414  00FE90  61                 	db	97	;'a'
   415  00FE91  74                 	db	116	;'t'
   416  00FE92  69                 	db	105	;'i'
   417  00FE93  6F                 	db	111	;'o'
   418  00FE94  6E                 	db	110	;'n'
   419  00FE95  20                 	db	32
   420  00FE96  20                 	db	32
   421  00FE97  20                 	db	32
   422  00FE98  20                 	db	32
   423  00FE99  20                 	db	32
   424  00FE9A  20                 	db	32
   425  00FE9B  20                 	db	32
   426  00FE9C  00                 	db	0
   427  00FE9D                     STR_7:
   428  00FE9D  44                 	db	68	;'D'
   429  00FE9E  61                 	db	97	;'a'
   430  00FE9F  74                 	db	116	;'t'
   431  00FEA0  65                 	db	101	;'e'
   432  00FEA1  3A                 	db	58	;':'
   433  00FEA2  20                 	db	32
   434  00FEA3  25                 	db	37
   435  00FEA4  30                 	db	48	;'0'
   436  00FEA5  32                 	db	50	;'2'
   437  00FEA6  78                 	db	120	;'x'
   438  00FEA7  2F                 	db	47
   439  00FEA8  25                 	db	37
   440  00FEA9  30                 	db	48	;'0'
   441  00FEAA  32                 	db	50	;'2'
   442  00FEAB  78                 	db	120	;'x'
   443  00FEAC  2F                 	db	47
   444  00FEAD  25                 	db	37
   445  00FEAE  30                 	db	48	;'0'
   446  00FEAF  32                 	db	50	;'2'
   447  00FEB0  78                 	db	120	;'x'
   448  00FEB1  20                 	db	32
   449  00FEB2  20                 	db	32
   450  00FEB3  00                 	db	0
   451  00FEB4                     STR_8:
   452  00FEB4  54                 	db	84	;'T'
   453  00FEB5  69                 	db	105	;'i'
   454  00FEB6  6D                 	db	109	;'m'
   455  00FEB7  65                 	db	101	;'e'
   456  00FEB8  3A                 	db	58	;':'
   457  00FEB9  20                 	db	32
   458  00FEBA  25                 	db	37
   459  00FEBB  30                 	db	48	;'0'
   460  00FEBC  32                 	db	50	;'2'
   461  00FEBD  78                 	db	120	;'x'
   462  00FEBE  3A                 	db	58	;':'
   463  00FEBF  25                 	db	37
   464  00FEC0  30                 	db	48	;'0'
   465  00FEC1  32                 	db	50	;'2'
   466  00FEC2  78                 	db	120	;'x'
   467  00FEC3  3A                 	db	58	;':'
   468  00FEC4  25                 	db	37
   469  00FEC5  30                 	db	48	;'0'
   470  00FEC6  32                 	db	50	;'2'
   471  00FEC7  78                 	db	120	;'x'
   472  00FEC8  20                 	db	32
   473  00FEC9  20                 	db	32
   474  00FECA  00                 	db	0
   475  00FECB                     STR_16:
   476  00FECB  42                 	db	66	;'B'
   477  00FECC  74                 	db	116	;'t'
   478  00FECD  74                 	db	116	;'t'
   479  00FECE  6C                 	db	108	;'l'
   480  00FECF  43                 	db	67	;'C'
   481  00FED0  6E                 	db	110	;'n'
   482  00FED1  74                 	db	116	;'t'
   483  00FED2  20                 	db	32
   484  00FED3  50                 	db	80	;'P'
   485  00FED4  72                 	db	114	;'r'
   486  00FED5  65                 	db	101	;'e'
   487  00FED6  76                 	db	118	;'v'
   488  00FED7  20                 	db	32
   489  00FED8  31                 	db	49	;'1'
   490  00FED9  20                 	db	32
   491  00FEDA  20                 	db	32
   492  00FEDB  20                 	db	32
   493  00FEDC  20                 	db	32
   494  00FEDD  00                 	db	0
   495  00FEDE                     STR_23:
   496  00FEDE  42                 	db	66	;'B'
   497  00FEDF  74                 	db	116	;'t'
   498  00FEE0  74                 	db	116	;'t'
   499  00FEE1  6C                 	db	108	;'l'
   500  00FEE2  43                 	db	67	;'C'
   501  00FEE3  6E                 	db	110	;'n'
   502  00FEE4  74                 	db	116	;'t'
   503  00FEE5  20                 	db	32
   504  00FEE6  50                 	db	80	;'P'
   505  00FEE7  72                 	db	114	;'r'
   506  00FEE8  65                 	db	101	;'e'
   507  00FEE9  76                 	db	118	;'v'
   508  00FEEA  20                 	db	32
   509  00FEEB  32                 	db	50	;'2'
   510  00FEEC  20                 	db	32
   511  00FEED  20                 	db	32
   512  00FEEE  20                 	db	32
   513  00FEEF  20                 	db	32
   514  00FEF0  00                 	db	0
   515  00FEF1                     STR_30:
   516  00FEF1  42                 	db	66	;'B'
   517  00FEF2  74                 	db	116	;'t'
   518  00FEF3  74                 	db	116	;'t'
   519  00FEF4  6C                 	db	108	;'l'
   520  00FEF5  43                 	db	67	;'C'
   521  00FEF6  6E                 	db	110	;'n'
   522  00FEF7  74                 	db	116	;'t'
   523  00FEF8  20                 	db	32
   524  00FEF9  50                 	db	80	;'P'
   525  00FEFA  72                 	db	114	;'r'
   526  00FEFB  65                 	db	101	;'e'
   527  00FEFC  76                 	db	118	;'v'
   528  00FEFD  20                 	db	32
   529  00FEFE  33                 	db	51	;'3'
   530  00FEFF  20                 	db	32
   531  00FF00  20                 	db	32
   532  00FF01  20                 	db	32
   533  00FF02  20                 	db	32
   534  00FF03  00                 	db	0
   535  00FF04                     STR_37:
   536  00FF04  42                 	db	66	;'B'
   537  00FF05  74                 	db	116	;'t'
   538  00FF06  74                 	db	116	;'t'
   539  00FF07  6C                 	db	108	;'l'
   540  00FF08  43                 	db	67	;'C'
   541  00FF09  6E                 	db	110	;'n'
   542  00FF0A  74                 	db	116	;'t'
   543  00FF0B  20                 	db	32
   544  00FF0C  50                 	db	80	;'P'
   545  00FF0D  72                 	db	114	;'r'
   546  00FF0E  65                 	db	101	;'e'
   547  00FF0F  76                 	db	118	;'v'
   548  00FF10  20                 	db	32
   549  00FF11  34                 	db	52	;'4'
   550  00FF12  20                 	db	32
   551  00FF13  20                 	db	32
   552  00FF14  20                 	db	32
   553  00FF15  20                 	db	32
   554  00FF16  00                 	db	0
   555  00FF17                     STR_5:
   556  00FF17  73                 	db	115	;'s'
   557  00FF18  74                 	db	116	;'t'
   558  00FF19  61                 	db	97	;'a'
   559  00FF1A  6E                 	db	110	;'n'
   560  00FF1B  64                 	db	100	;'d'
   561  00FF1C  62                 	db	98	;'b'
   562  00FF1D  79                 	db	121	;'y'
   563  00FF1E  20                 	db	32
   564  00FF1F  20                 	db	32
   565  00FF20  20                 	db	32
   566  00FF21  20                 	db	32
   567  00FF22  20                 	db	32
   568  00FF23  20                 	db	32
   569  00FF24  20                 	db	32
   570  00FF25  20                 	db	32
   571  00FF26  20                 	db	32
   572  00FF27  20                 	db	32
   573  00FF28  00                 	db	0
   574  00FF29                     STR_45:
   575  00FF29  54                 	db	84	;'T'
   576  00FF2A  69                 	db	105	;'i'
   577  00FF2B  6D                 	db	109	;'m'
   578  00FF2C  65                 	db	101	;'e'
   579  00FF2D  3A                 	db	58	;':'
   580  00FF2E  20                 	db	32
   581  00FF2F  25                 	db	37
   582  00FF30  64                 	db	100	;'d'
   583  00FF31  20                 	db	32
   584  00FF32  73                 	db	115	;'s'
   585  00FF33  20                 	db	32
   586  00FF34  20                 	db	32
   587  00FF35  20                 	db	32
   588  00FF36  20                 	db	32
   589  00FF37  20                 	db	32
   590  00FF38  20                 	db	32
   591  00FF39  20                 	db	32
   592  00FF3A  00                 	db	0
   593  00FF3B                     STR_48:
   594  00FF3B  30                 	db	48	;'0'
   595  00FF3C  31                 	db	49	;'1'
   596  00FF3D  32                 	db	50	;'2'
   597  00FF3E  33                 	db	51	;'3'
   598  00FF3F  34                 	db	52	;'4'
   599  00FF40  35                 	db	53	;'5'
   600  00FF41  36                 	db	54	;'6'
   601  00FF42  37                 	db	55	;'7'
   602  00FF43  38                 	db	56	;'8'
   603  00FF44  39                 	db	57	;'9'
   604  00FF45  61                 	db	97	;'a'
   605  00FF46  62                 	db	98	;'b'
   606  00FF47  63                 	db	99	;'c'
   607  00FF48  64                 	db	100	;'d'
   608  00FF49  65                 	db	101	;'e'
   609  00FF4A  66                 	db	102	;'f'
   610  00FF4B  00                 	db	0
   611  00FF4C                     STR_10:
   612  00FF4C  54                 	db	84	;'T'
   613  00FF4D  6F                 	db	111	;'o'
   614  00FF4E  74                 	db	116	;'t'
   615  00FF4F  61                 	db	97	;'a'
   616  00FF50  6C                 	db	108	;'l'
   617  00FF51  3A                 	db	58	;':'
   618  00FF52  20                 	db	32
   619  00FF53  25                 	db	37
   620  00FF54  64                 	db	100	;'d'
   621  00FF55  20                 	db	32
   622  00FF56  20                 	db	32
   623  00FF57  20                 	db	32
   624  00FF58  20                 	db	32
   625  00FF59  20                 	db	32
   626  00FF5A  20                 	db	32
   627  00FF5B  20                 	db	32
   628  00FF5C  00                 	db	0
   629  00FF5D                     STR_9:
   630  00FF5D  42                 	db	66	;'B'
   631  00FF5E  6F                 	db	111	;'o'
   632  00FF5F  74                 	db	116	;'t'
   633  00FF60  74                 	db	116	;'t'
   634  00FF61  6C                 	db	108	;'l'
   635  00FF62  65                 	db	101	;'e'
   636  00FF63  20                 	db	32
   637  00FF64  43                 	db	67	;'C'
   638  00FF65  6F                 	db	111	;'o'
   639  00FF66  75                 	db	117	;'u'
   640  00FF67  6E                 	db	110	;'n'
   641  00FF68  74                 	db	116	;'t'
   642  00FF69  20                 	db	32
   643  00FF6A  20                 	db	32
   644  00FF6B  20                 	db	32
   645  00FF6C  20                 	db	32
   646  00FF6D  00                 	db	0
   647  00FF6E                     STR_11:
   648  00FF6E  59                 	db	89	;'Y'
   649  00FF6F  4F                 	db	79	;'O'
   650  00FF70  50                 	db	80	;'P'
   651  00FF71  20                 	db	32
   652  00FF72  57                 	db	87	;'W'
   653  00FF73  2F                 	db	47
   654  00FF74  20                 	db	32
   655  00FF75  43                 	db	67	;'C'
   656  00FF76  41                 	db	65	;'A'
   657  00FF77  50                 	db	80	;'P'
   658  00FF78  3A                 	db	58	;':'
   659  00FF79  20                 	db	32
   660  00FF7A  25                 	db	37
   661  00FF7B  64                 	db	100	;'d'
   662  00FF7C  20                 	db	32
   663  00FF7D  20                 	db	32
   664  00FF7E  00                 	db	0
   665  00FF7F                     STR_12:
   666  00FF7F  59                 	db	89	;'Y'
   667  00FF80  4F                 	db	79	;'O'
   668  00FF81  50                 	db	80	;'P'
   669  00FF82  20                 	db	32
   670  00FF83  4E                 	db	78	;'N'
   671  00FF84  4F                 	db	79	;'O'
   672  00FF85  20                 	db	32
   673  00FF86  43                 	db	67	;'C'
   674  00FF87  41                 	db	65	;'A'
   675  00FF88  50                 	db	80	;'P'
   676  00FF89  3A                 	db	58	;':'
   677  00FF8A  20                 	db	32
   678  00FF8B  25                 	db	37
   679  00FF8C  64                 	db	100	;'d'
   680  00FF8D  20                 	db	32
   681  00FF8E  20                 	db	32
   682  00FF8F  00                 	db	0
   683  00FF90                     STR_13:
   684  00FF90  45                 	db	69	;'E'
   685  00FF91  53                 	db	83	;'S'
   686  00FF92  4B                 	db	75	;'K'
   687  00FF93  41                 	db	65	;'A'
   688  00FF94  20                 	db	32
   689  00FF95  57                 	db	87	;'W'
   690  00FF96  2F                 	db	47
   691  00FF97  20                 	db	32
   692  00FF98  43                 	db	67	;'C'
   693  00FF99  41                 	db	65	;'A'
   694  00FF9A  50                 	db	80	;'P'
   695  00FF9B  3A                 	db	58	;':'
   696  00FF9C  20                 	db	32
   697  00FF9D  25                 	db	37
   698  00FF9E  64                 	db	100	;'d'
   699  00FF9F  20                 	db	32
   700  00FFA0  00                 	db	0
   701  00FFA1                     STR_14:
   702  00FFA1  45                 	db	69	;'E'
   703  00FFA2  53                 	db	83	;'S'
   704  00FFA3  4B                 	db	75	;'K'
   705  00FFA4  41                 	db	65	;'A'
   706  00FFA5  20                 	db	32
   707  00FFA6  4E                 	db	78	;'N'
   708  00FFA7  4F                 	db	79	;'O'
   709  00FFA8  20                 	db	32
   710  00FFA9  43                 	db	67	;'C'
   711  00FFAA  41                 	db	65	;'A'
   712  00FFAB  50                 	db	80	;'P'
   713  00FFAC  3A                 	db	58	;':'
   714  00FFAD  20                 	db	32
   715  00FFAE  25                 	db	37
   716  00FFAF  64                 	db	100	;'d'
   717  00FFB0  20                 	db	32
   718  00FFB1  00                 	db	0
   719  00FFB2                     STR_46:
   720  00FFB2  4F                 	db	79	;'O'
   721  00FFB3  70                 	db	112	;'p'
   722  00FFB4  65                 	db	101	;'e'
   723  00FFB5  72                 	db	114	;'r'
   724  00FFB6  61                 	db	97	;'a'
   725  00FFB7  74                 	db	116	;'t'
   726  00FFB8  69                 	db	105	;'i'
   727  00FFB9  6F                 	db	111	;'o'
   728  00FFBA  6E                 	db	110	;'n'
   729  00FFBB  20                 	db	32
   730  00FFBC  44                 	db	68	;'D'
   731  00FFBD  6F                 	db	111	;'o'
   732  00FFBE  6E                 	db	110	;'n'
   733  00FFBF  65                 	db	101	;'e'
   734  00FFC0  21                 	db	33
   735  00FFC1  00                 	db	0
   736  00FFC2                     STR_15:
   737  00FFC2  45                 	db	69	;'E'
   738  00FFC3  52                 	db	82	;'R'
   739  00FFC4  52                 	db	82	;'R'
   740  00FFC5  3A                 	db	58	;':'
   741  00FFC6  20                 	db	32
   742  00FFC7  42                 	db	66	;'B'
   743  00FFC8  41                 	db	65	;'A'
   744  00FFC9  44                 	db	68	;'D'
   745  00FFCA  20                 	db	32
   746  00FFCB  42                 	db	66	;'B'
   747  00FFCC  54                 	db	84	;'T'
   748  00FFCD  4C                 	db	76	;'L'
   749  00FFCE  43                 	db	67	;'C'
   750  00FFCF  4E                 	db	78	;'N'
   751  00FFD0  54                 	db	84	;'T'
   752  00FFD1  00                 	db	0
   753  00FFD2                     STR_47:
   754  00FFD2  45                 	db	69	;'E'
   755  00FFD3  4D                 	db	77	;'M'
   756  00FFD4  45                 	db	69	;'E'
   757  00FFD5  52                 	db	82	;'R'
   758  00FFD6  47                 	db	71	;'G'
   759  00FFD7  45                 	db	69	;'E'
   760  00FFD8  4E                 	db	78	;'N'
   761  00FFD9  43                 	db	67	;'C'
   762  00FFDA  59                 	db	89	;'Y'
   763  00FFDB  20                 	db	32
   764  00FFDC  53                 	db	83	;'S'
   765  00FFDD  54                 	db	84	;'T'
   766  00FFDE  4F                 	db	79	;'O'
   767  00FFDF  50                 	db	80	;'P'
   768  00FFE0  00                 	db	0
   769  00FFE1                     STR_4:
   770  00FFE1  45                 	db	69	;'E'
   771  00FFE2  52                 	db	82	;'R'
   772  00FFE3  52                 	db	82	;'R'
   773  00FFE4  3A                 	db	58	;':'
   774  00FFE5  20                 	db	32
   775  00FFE6  42                 	db	66	;'B'
   776  00FFE7  41                 	db	65	;'A'
   777  00FFE8  44                 	db	68	;'D'
   778  00FFE9  20                 	db	32
   779  00FFEA  49                 	db	73	;'I'
   780  00FFEB  53                 	db	83	;'S'
   781  00FFEC  52                 	db	82	;'R'
   782  00FFED  00                 	db	0
   783  00FFEE                     STR_6:
   784  00FFEE  25                 	db	37
   785  00FFEF  64                 	db	100	;'d'
   786  00FFF0  20                 	db	32
   787  00FFF1  20                 	db	32
   788  00FFF2  20                 	db	32
   789  00FFF3  20                 	db	32
   790  00FFF4  20                 	db	32
   791  00FFF5  20                 	db	32
   792  00FFF6  00                 	db	0
   793  00FFF7                     STR_1:
   794  00FFF7  72                 	db	114	;'r'
   795  00FFF8  75                 	db	117	;'u'
   796  00FFF9  6E                 	db	110	;'n'
   797  00FFFA  6E                 	db	110	;'n'
   798  00FFFB  69                 	db	105	;'i'
   799  00FFFC  6E                 	db	110	;'n'
   800  00FFFD  67                 	db	103	;'g'
   801  00FFFE  00                 	db	0
   802  0000                     
   803                           ; #config settings
   804  00FFFF  00                 	db	0	; dummy byte at the end
   805  0000                     
   806                           	psect	cinit
   807  004F60                     __pcinit:
   808                           	opt stack 0
   809  004F60                     start_initialization:
   810                           	opt stack 0
   811  004F60                     __initialization:
   812                           	opt stack 0
   813                           
   814                           ; Initialize objects allocated to BANK1 (10 bytes)
   815                           ; load TBLPTR registers with __pidataBANK1
   816  004F60  0EE6               	movlw	low __pidataBANK1
   817  004F62  6EF6               	movwf	tblptrl,c
   818  004F64  0E54               	movlw	high __pidataBANK1
   819  004F66  6EF7               	movwf	tblptrh,c
   820  004F68  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   821  004F6A  6EF8               	movwf	tblptru,c
   822  004F6C  EE01  F072         	lfsr	0,__pdataBANK1
   823  004F70  EE10 F00A          	lfsr	1,10
   824  004F74                     copy_data0:
   825  004F74  0009               	tblrd		*+
   826  004F76  CFF5 FFEE          	movff	tablat,postinc0
   827  004F7A  50E5               	movf	postdec1,w,c
   828  004F7C  50E1               	movf	fsr1l,w,c
   829  004F7E  E1FA               	bnz	copy_data0
   830                           
   831                           ; Clear objects allocated to BANK1 (73 bytes)
   832  004F80  EE01  F000         	lfsr	0,__pbssBANK1
   833  004F84  0E49               	movlw	73
   834  004F86                     clear_0:
   835  004F86  6AEE               	clrf	postinc0,c
   836  004F88  06E8               	decf	wreg,f,c
   837  004F8A  E1FD               	bnz	clear_0
   838                           
   839                           ; Clear objects allocated to BANK0 (16 bytes)
   840  004F8C  EE00  F0DF         	lfsr	0,__pbssBANK0
   841  004F90  0E10               	movlw	16
   842  004F92                     clear_1:
   843  004F92  6AEE               	clrf	postinc0,c
   844  004F94  06E8               	decf	wreg,f,c
   845  004F96  E1FD               	bnz	clear_1
   846                           
   847                           ; Clear objects allocated to COMRAM (9 bytes)
   848  004F98  EE00  F076         	lfsr	0,__pbssCOMRAM
   849  004F9C  0E09               	movlw	9
   850  004F9E                     clear_2:
   851  004F9E  6AEE               	clrf	postinc0,c
   852  004FA0  06E8               	decf	wreg,f,c
   853  004FA2  E1FD               	bnz	clear_2
   854  004FA4                     end_of_initialization:
   855                           	opt stack 0
   856  004FA4                     __end_of__initialization:
   857                           	opt stack 0
   858  004FA4  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   859  004FA6  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   860  004FA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   861  004FAA  6EF8               	movwf	tblptru,c
   862  004FAC  0100               	movlb	0
   863  004FAE  EF12  F00D         	goto	_main	;jump to C main() function
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           
   873                           	psect	bssCOMRAM
   874  000076                     __pbssCOMRAM:
   875                           	opt stack 0
   876  000076                     _end_time:
   877                           	opt stack 0
   878  000076                     	ds	2
   879  000078                     _j:
   880                           	opt stack 0
   881  000078                     	ds	2
   882  00007A                     _start_time:
   883                           	opt stack 0
   884  00007A                     	ds	2
   885  00007C                     _temp:
   886                           	opt stack 0
   887  00007C                     	ds	2
   888  00007E                     _servo0_flag:
   889                           	opt stack 0
   890  00007E                     	ds	1
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           
   900                           	psect	bssBANK0
   901  0000DF                     __pbssBANK0:
   902                           	opt stack 0
   903  0000DF                     _bottle_count_array:
   904                           	opt stack 0
   905  0000DF                     	ds	10
   906  0000E9                     _flag_picbug:
   907                           	opt stack 0
   908  0000E9                     	ds	2
   909  0000EB                     _i:
   910                           	opt stack 0
   911  0000EB                     	ds	2
   912  0000ED                     _curr_state:
   913                           	opt stack 0
   914  0000ED                     	ds	1
   915  0000EE                     _servo1_flag:
   916                           	opt stack 0
   917  0000EE                     	ds	1
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postdec1	equ	0xFE5
   925                           fsr1l	equ	0xFE1
   926                           
   927                           	psect	bssBANK1
   928  000100                     __pbssBANK1:
   929                           	opt stack 0
   930  000100                     _color:
   931                           	opt stack 0
   932  000100                     	ds	8
   933  000108                     _colorprev:
   934                           	opt stack 0
   935  000108                     	ds	8
   936  000110                     _time:
   937                           	opt stack 0
   938  000110                     	ds	7
   939  000117                     _color_high:
   940                           	opt stack 0
   941  000117                     	ds	4
   942  00011B                     _color_low:
   943                           	opt stack 0
   944  00011B                     	ds	4
   945  00011F                     _b:
   946                           	opt stack 0
   947  00011F                     	ds	3
   948  000122                     _b_p:
   949                           	opt stack 0
   950  000122                     	ds	3
   951  000125                     _r:
   952                           	opt stack 0
   953  000125                     	ds	3
   954  000128                     _r_p:
   955                           	opt stack 0
   956  000128                     	ds	3
   957  00012B                     _bottle_read_bot:
   958                           	opt stack 0
   959  00012B                     	ds	2
   960  00012D                     _bottle_read_top:
   961                           	opt stack 0
   962  00012D                     	ds	2
   963  00012F                     _errno:
   964                           	opt stack 0
   965  00012F                     	ds	2
   966  000131                     _etime:
   967                           	opt stack 0
   968  000131                     	ds	2
   969  000133                     _flag_bottle:
   970                           	opt stack 0
   971  000133                     	ds	2
   972  000135                     _flag_bottle_high:
   973                           	opt stack 0
   974  000135                     	ds	2
   975  000137                     _flag_eskaC:
   976                           	opt stack 0
   977  000137                     	ds	2
   978  000139                     _flag_top_read:
   979                           	opt stack 0
   980  000139                     	ds	2
   981  00013B                     _flag_yopNC:
   982                           	opt stack 0
   983  00013B                     	ds	2
   984  00013D                     _operation_disp:
   985                           	opt stack 0
   986  00013D                     	ds	2
   987  00013F                     _operation_time:
   988                           	opt stack 0
   989  00013F                     	ds	2
   990  000141                     _operation_timeout:
   991                           	opt stack 0
   992  000141                     	ds	2
   993  000143                     _servo0_timer:
   994                           	opt stack 0
   995  000143                     	ds	2
   996  000145                     _servo1_timer:
   997                           	opt stack 0
   998  000145                     	ds	2
   999  000147                     _stime:
  1000                           	opt stack 0
  1001  000147                     	ds	2
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec1	equ	0xFE5
  1009                           fsr1l	equ	0xFE1
  1010                           
  1011                           	psect	dataBANK1
  1012  000172                     __pdataBANK1:
  1013                           	opt stack 0
  1014  000172                     _bottle_count_disp:
  1015                           	opt stack 0
  1016  000172                     	ds	10
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           postdec1	equ	0xFE5
  1024                           fsr1l	equ	0xFE1
  1025                           
  1026                           	psect	cstackBANK1
  1027  000149                     __pcstackBANK1:
  1028                           	opt stack 0
  1029  000149                     _exp$1415:
  1030                           	opt stack 0
  1031                           
  1032                           ; 3 bytes @ 0x0
  1033  000149                     	ds	3
  1034  00014C                     exp@exponent:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x3
  1038  00014C                     	ds	2
  1039  00014E                     exp@sign:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0x5
  1043  00014E                     	ds	1
  1044  00014F                     ?_pow:
  1045                           	opt stack 0
  1046  00014F                     pow@x:
  1047                           	opt stack 0
  1048                           
  1049                           ; 3 bytes @ 0x6
  1050  00014F                     	ds	3
  1051  000152                     pow@y:
  1052                           	opt stack 0
  1053                           
  1054                           ; 3 bytes @ 0x9
  1055  000152                     	ds	3
  1056  000155                     _pow$1413:
  1057                           	opt stack 0
  1058                           
  1059                           ; 3 bytes @ 0xC
  1060  000155                     	ds	3
  1061  000158                     _pow$1414:
  1062                           	opt stack 0
  1063                           
  1064                           ; 3 bytes @ 0xF
  1065  000158                     	ds	3
  1066  00015B                     pow@sign:
  1067                           	opt stack 0
  1068                           
  1069                           ; 1 bytes @ 0x12
  1070  00015B                     	ds	1
  1071  00015C                     pow@yi:
  1072                           	opt stack 0
  1073                           
  1074                           ; 4 bytes @ 0x13
  1075  00015C                     	ds	4
  1076  000160                     _dec_to_hex$1410:
  1077                           	opt stack 0
  1078                           
  1079                           ; 3 bytes @ 0x17
  1080  000160                     	ds	3
  1081  000163                     _dec_to_hex$1411:
  1082                           	opt stack 0
  1083                           
  1084                           ; 3 bytes @ 0x1A
  1085  000163                     	ds	3
  1086  000166                     dec_to_hex@temp:
  1087                           	opt stack 0
  1088                           
  1089                           ; 2 bytes @ 0x1D
  1090  000166                     	ds	2
  1091  000168                     dec_to_hex@i:
  1092                           	opt stack 0
  1093                           
  1094                           ; 2 bytes @ 0x1F
  1095  000168                     	ds	2
  1096  00016A                     dec_to_hex@hexnum:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0x21
  1100  00016A                     	ds	2
  1101  00016C                     dec_to_hex@quotient:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x23
  1105  00016C                     	ds	2
  1106  00016E                     _operation$1412:
  1107                           	opt stack 0
  1108                           
  1109                           ; 2 bytes @ 0x25
  1110  00016E                     	ds	2
  1111  000170                     ??_main:
  1112                           
  1113                           ; 1 bytes @ 0x27
  1114  000170                     	ds	2
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           
  1124                           	psect	cstackBANK0
  1125  000080                     __pcstackBANK0:
  1126                           	opt stack 0
  1127  000080                     ??_isr:
  1128                           
  1129                           ; 1 bytes @ 0x0
  1130  000080                     	ds	16
  1131  000090                     ??_isdigit:
  1132  000090                     ??_I2C_Master_Wait:
  1133  000090                     ?___wmul:
  1134                           	opt stack 0
  1135  000090                     ?___awdiv:
  1136                           	opt stack 0
  1137  000090                     ?___awmod:
  1138                           	opt stack 0
  1139  000090                     ?___lwdiv:
  1140                           	opt stack 0
  1141  000090                     ?___ftpack:
  1142                           	opt stack 0
  1143  000090                     ?_frexp:
  1144                           	opt stack 0
  1145  000090                     ?___ftneg:
  1146                           	opt stack 0
  1147  000090                     ?___lldiv:
  1148                           	opt stack 0
  1149  000090                     lcdNibble@temp:
  1150                           	opt stack 0
  1151  000090                     eeprom_readbyte@address:
  1152                           	opt stack 0
  1153  000090                     ___wmul@multiplier:
  1154                           	opt stack 0
  1155  000090                     ___awdiv@dividend:
  1156                           	opt stack 0
  1157  000090                     ___awmod@dividend:
  1158                           	opt stack 0
  1159  000090                     ___lwdiv@dividend:
  1160                           	opt stack 0
  1161  000090                     ___ftpack@arg:
  1162                           	opt stack 0
  1163  000090                     ___ftneg@f1:
  1164                           	opt stack 0
  1165  000090                     frexp@value:
  1166                           	opt stack 0
  1167  000090                     ___lldiv@dividend:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x10
  1171  000090                     	ds	1
  1172  000091                     I2C_Master_Read@a:
  1173                           	opt stack 0
  1174  000091                     lcdNibble@data:
  1175                           	opt stack 0
  1176  000091                     _isdigit$965:
  1177                           	opt stack 0
  1178  000091                     I2C_Master_Write@d:
  1179                           	opt stack 0
  1180                           
  1181                           ; 2 bytes @ 0x11
  1182  000091                     	ds	1
  1183  000092                     I2C_Master_Read@temp:
  1184                           	opt stack 0
  1185  000092                     lcdInst@data:
  1186                           	opt stack 0
  1187  000092                     putch@data:
  1188                           	opt stack 0
  1189  000092                     isdigit@c:
  1190                           	opt stack 0
  1191  000092                     eeprom_writebyte@address:
  1192                           	opt stack 0
  1193  000092                     ___wmul@multiplicand:
  1194                           	opt stack 0
  1195  000092                     ___awdiv@divisor:
  1196                           	opt stack 0
  1197  000092                     ___awmod@divisor:
  1198                           	opt stack 0
  1199  000092                     ___lwdiv@divisor:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x12
  1203  000092                     	ds	1
  1204  000093                     ??_read_colorsensor:
  1205  000093                     ??_I2C_ColorSens_Init:
  1206  000093                     ??_initLCD:
  1207  000093                     read_time@i:
  1208                           	opt stack 0
  1209  000093                     ___ftpack@exp:
  1210                           	opt stack 0
  1211  000093                     frexp@eptr:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x13
  1215  000093                     	ds	1
  1216  000094                     eeprom_writebyte@data:
  1217                           	opt stack 0
  1218  000094                     ___awdiv@counter:
  1219                           	opt stack 0
  1220  000094                     ___awmod@counter:
  1221                           	opt stack 0
  1222  000094                     ___ftpack@sign:
  1223                           	opt stack 0
  1224  000094                     ___wmul@product:
  1225                           	opt stack 0
  1226  000094                     ___lwdiv@quotient:
  1227                           	opt stack 0
  1228  000094                     ___lldiv@divisor:
  1229                           	opt stack 0
  1230                           
  1231                           ; 4 bytes @ 0x14
  1232  000094                     	ds	1
  1233  000095                     ??___ftpack:
  1234  000095                     ??_frexp:
  1235  000095                     ___awdiv@sign:
  1236                           	opt stack 0
  1237  000095                     ___awmod@sign:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x15
  1241  000095                     	ds	1
  1242  000096                     ___lwdiv@counter:
  1243                           	opt stack 0
  1244  000096                     ___awdiv@quotient:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0x16
  1248  000096                     	ds	1
  1249  000097                     ?___lwmod:
  1250                           	opt stack 0
  1251  000097                     ___lwmod@dividend:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x17
  1255  000097                     	ds	1
  1256  000098                     ?___ftdiv:
  1257                           	opt stack 0
  1258  000098                     ?___awtoft:
  1259                           	opt stack 0
  1260  000098                     ?___lltoft:
  1261                           	opt stack 0
  1262  000098                     ?___lwtoft:
  1263                           	opt stack 0
  1264  000098                     ___awtoft@c:
  1265                           	opt stack 0
  1266  000098                     ___lwtoft@c:
  1267                           	opt stack 0
  1268  000098                     ___ftdiv@f1:
  1269                           	opt stack 0
  1270  000098                     ___lldiv@quotient:
  1271                           	opt stack 0
  1272  000098                     ___lltoft@c:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0x18
  1276  000098                     	ds	1
  1277  000099                     ___lwmod@divisor:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x19
  1281  000099                     	ds	2
  1282  00009B                     ___awtoft@sign:
  1283                           	opt stack 0
  1284  00009B                     ___lwmod@counter:
  1285                           	opt stack 0
  1286  00009B                     ___ftdiv@f2:
  1287                           	opt stack 0
  1288                           
  1289                           ; 3 bytes @ 0x1B
  1290  00009B                     	ds	1
  1291  00009C                     ??___lltoft:
  1292  00009C                     ?_printf:
  1293                           	opt stack 0
  1294  00009C                     ?___ftmul:
  1295                           	opt stack 0
  1296  00009C                     ___lldiv@counter:
  1297                           	opt stack 0
  1298  00009C                     printf@f:
  1299                           	opt stack 0
  1300  00009C                     ___ftmul@f1:
  1301                           	opt stack 0
  1302                           
  1303                           ; 3 bytes @ 0x1C
  1304  00009C                     	ds	1
  1305  00009D                     I2C_Master_Init@c:
  1306                           	opt stack 0
  1307                           
  1308                           ; 4 bytes @ 0x1D
  1309  00009D                     	ds	1
  1310  00009E                     ??___ftdiv:
  1311                           
  1312                           ; 1 bytes @ 0x1E
  1313  00009E                     	ds	1
  1314  00009F                     ___ftmul@f2:
  1315                           	opt stack 0
  1316                           
  1317                           ; 3 bytes @ 0x1F
  1318  00009F                     	ds	1
  1319  0000A0                     ___lltoft@exp:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x20
  1323  0000A0                     	ds	1
  1324  0000A1                     ??_I2C_Master_Init:
  1325  0000A1                     ___ftdiv@cntr:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x21
  1329  0000A1                     	ds	1
  1330  0000A2                     ??___ftmul:
  1331  0000A2                     ___ftdiv@f3:
  1332                           	opt stack 0
  1333                           
  1334                           ; 3 bytes @ 0x22
  1335  0000A2                     	ds	2
  1336  0000A4                     ??_printf:
  1337                           
  1338                           ; 1 bytes @ 0x24
  1339  0000A4                     	ds	1
  1340  0000A5                     ___ftdiv@exp:
  1341                           	opt stack 0
  1342  0000A5                     ___ftmul@exp:
  1343                           	opt stack 0
  1344                           
  1345                           ; 1 bytes @ 0x25
  1346  0000A5                     	ds	1
  1347  0000A6                     ___ftdiv@sign:
  1348                           	opt stack 0
  1349  0000A6                     ___ftmul@f3_as_product:
  1350                           	opt stack 0
  1351                           
  1352                           ; 3 bytes @ 0x26
  1353  0000A6                     	ds	1
  1354  0000A7                     ___ftge@ff1:
  1355                           	opt stack 0
  1356                           
  1357                           ; 3 bytes @ 0x27
  1358  0000A7                     	ds	1
  1359  0000A8                     printf@idx:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x28
  1363  0000A8                     	ds	1
  1364  0000A9                     ___ftmul@cntr:
  1365                           	opt stack 0
  1366  0000A9                     printf@ap:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x29
  1370  0000A9                     	ds	1
  1371  0000AA                     ___ftmul@sign:
  1372                           	opt stack 0
  1373  0000AA                     ___ftge@ff2:
  1374                           	opt stack 0
  1375                           
  1376                           ; 3 bytes @ 0x2A
  1377  0000AA                     	ds	1
  1378  0000AB                     ?___ftadd:
  1379                           	opt stack 0
  1380  0000AB                     printf@prec:
  1381                           	opt stack 0
  1382  0000AB                     ___ftadd@f1:
  1383                           	opt stack 0
  1384                           
  1385                           ; 3 bytes @ 0x2B
  1386  0000AB                     	ds	1
  1387  0000AC                     printf@val:
  1388                           	opt stack 0
  1389                           
  1390                           ; 2 bytes @ 0x2C
  1391  0000AC                     	ds	1
  1392  0000AD                     ??___ftge:
  1393                           
  1394                           ; 1 bytes @ 0x2D
  1395  0000AD                     	ds	1
  1396  0000AE                     printf@flag:
  1397                           	opt stack 0
  1398  0000AE                     ___ftadd@f2:
  1399                           	opt stack 0
  1400                           
  1401                           ; 3 bytes @ 0x2E
  1402  0000AE                     	ds	1
  1403  0000AF                     printf@width:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x2F
  1407  0000AF                     	ds	2
  1408  0000B1                     ??___ftadd:
  1409  0000B1                     printf@c:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x31
  1413  0000B1                     	ds	1
  1414  0000B2                     date_time@i:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x32
  1418  0000B2                     	ds	2
  1419  0000B4                     ___ftadd@sign:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x34
  1423  0000B4                     	ds	1
  1424  0000B5                     ___ftadd@exp2:
  1425                           	opt stack 0
  1426                           
  1427                           ; 1 bytes @ 0x35
  1428  0000B5                     	ds	1
  1429  0000B6                     ___ftadd@exp1:
  1430                           	opt stack 0
  1431                           
  1432                           ; 1 bytes @ 0x36
  1433  0000B6                     	ds	1
  1434  0000B7                     ?___ftsub:
  1435                           	opt stack 0
  1436  0000B7                     ?_eval_poly:
  1437                           	opt stack 0
  1438  0000B7                     ?___fttol:
  1439                           	opt stack 0
  1440  0000B7                     ___ftsub@f1:
  1441                           	opt stack 0
  1442  0000B7                     ___fttol@f1:
  1443                           	opt stack 0
  1444  0000B7                     eval_poly@x:
  1445                           	opt stack 0
  1446                           
  1447                           ; 3 bytes @ 0x37
  1448  0000B7                     	ds	3
  1449  0000BA                     eval_poly@d:
  1450                           	opt stack 0
  1451  0000BA                     ___ftsub@f2:
  1452                           	opt stack 0
  1453                           
  1454                           ; 3 bytes @ 0x3A
  1455  0000BA                     	ds	1
  1456  0000BB                     ??___fttol:
  1457                           
  1458                           ; 1 bytes @ 0x3B
  1459  0000BB                     	ds	1
  1460  0000BC                     eval_poly@n:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x3C
  1464  0000BC                     	ds	1
  1465  0000BD                     
  1466                           ; 1 bytes @ 0x3D
  1467  0000BD                     	ds	1
  1468  0000BE                     ??_eval_poly:
  1469                           
  1470                           ; 1 bytes @ 0x3E
  1471  0000BE                     	ds	2
  1472  0000C0                     ___fttol@sign1:
  1473                           	opt stack 0
  1474  0000C0                     eval_poly@res:
  1475                           	opt stack 0
  1476                           
  1477                           ; 3 bytes @ 0x40
  1478  0000C0                     	ds	1
  1479  0000C1                     ___fttol@lval:
  1480                           	opt stack 0
  1481                           
  1482                           ; 4 bytes @ 0x41
  1483  0000C1                     	ds	2
  1484  0000C3                     ?_log:
  1485                           	opt stack 0
  1486  0000C3                     ?_ldexp:
  1487                           	opt stack 0
  1488  0000C3                     ldexp@value:
  1489                           	opt stack 0
  1490  0000C3                     log@x:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x43
  1494  0000C3                     	ds	2
  1495  0000C5                     ___fttol@exp1:
  1496                           	opt stack 0
  1497                           
  1498                           ; 1 bytes @ 0x45
  1499  0000C5                     	ds	1
  1500  0000C6                     ?___altoft:
  1501                           	opt stack 0
  1502  0000C6                     ldexp@newexp:
  1503                           	opt stack 0
  1504  0000C6                     log@exponent:
  1505                           	opt stack 0
  1506  0000C6                     ___altoft@c:
  1507                           	opt stack 0
  1508                           
  1509                           ; 4 bytes @ 0x46
  1510  0000C6                     	ds	2
  1511  0000C8                     ??_ldexp:
  1512                           
  1513                           ; 1 bytes @ 0x48
  1514  0000C8                     	ds	2
  1515  0000CA                     ??___altoft:
  1516                           
  1517                           ; 1 bytes @ 0x4A
  1518  0000CA                     	ds	4
  1519  0000CE                     ___altoft@exp:
  1520                           	opt stack 0
  1521                           
  1522                           ; 1 bytes @ 0x4E
  1523  0000CE                     	ds	1
  1524  0000CF                     ___altoft@sign:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x4F
  1528  0000CF                     	ds	1
  1529  0000D0                     ?_floor:
  1530                           	opt stack 0
  1531  0000D0                     floor@x:
  1532                           	opt stack 0
  1533                           
  1534                           ; 3 bytes @ 0x50
  1535  0000D0                     	ds	3
  1536  0000D3                     floor@i:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x53
  1540  0000D3                     	ds	3
  1541  0000D6                     floor@expon:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x56
  1545  0000D6                     	ds	2
  1546  0000D8                     ?_exp:
  1547                           	opt stack 0
  1548  0000D8                     exp@x:
  1549                           	opt stack 0
  1550                           
  1551                           ; 3 bytes @ 0x58
  1552  0000D8                     	ds	3
  1553  0000DB                     ?_dec_to_hex:
  1554                           	opt stack 0
  1555  0000DB                     dec_to_hex@num:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x5B
  1559  0000DB                     	ds	2
  1560  0000DD                     ??_operation:
  1561  0000DD                     
  1562                           ; 1 bytes @ 0x5D
  1563  0000DD                     	ds	2
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           fsr1l	equ	0xFE1
  1572                           
  1573                           	psect	cstackCOMRAM
  1574  000001                     __pcstackCOMRAM:
  1575                           	opt stack 0
  1576  000001                     ??i2_I2C_Master_Wait:
  1577  000001                     ??i2_isdigit:
  1578  000001                     ?i2___wmul:
  1579                           	opt stack 0
  1580  000001                     ?i2___awdiv:
  1581                           	opt stack 0
  1582  000001                     ?i2___lwdiv:
  1583                           	opt stack 0
  1584  000001                     ?i2___ftpack:
  1585                           	opt stack 0
  1586  000001                     ?i2___ftneg:
  1587                           	opt stack 0
  1588  000001                     ?i2_frexp:
  1589                           	opt stack 0
  1590  000001                     i2lcdNibble@temp:
  1591                           	opt stack 0
  1592  000001                     i2eeprom_readbyte@address:
  1593                           	opt stack 0
  1594  000001                     i2___wmul@multiplier:
  1595                           	opt stack 0
  1596  000001                     i2___awdiv@dividend:
  1597                           	opt stack 0
  1598  000001                     i2___lwdiv@dividend:
  1599                           	opt stack 0
  1600  000001                     i2___ftpack@arg:
  1601                           	opt stack 0
  1602  000001                     i2___ftge@ff1:
  1603                           	opt stack 0
  1604  000001                     i2___ftneg@f1:
  1605                           	opt stack 0
  1606  000001                     i2frexp@value:
  1607                           	opt stack 0
  1608                           
  1609                           ; 3 bytes @ 0x0
  1610  000001                     	ds	1
  1611  000002                     i2I2C_Master_Read@a:
  1612                           	opt stack 0
  1613  000002                     i2lcdNibble@data:
  1614                           	opt stack 0
  1615  000002                     i2_isdigit$965:
  1616                           	opt stack 0
  1617  000002                     i2I2C_Master_Write@d:
  1618                           	opt stack 0
  1619                           
  1620                           ; 2 bytes @ 0x1
  1621  000002                     	ds	1
  1622  000003                     i2I2C_Master_Read@temp:
  1623                           	opt stack 0
  1624  000003                     i2lcdInst@data:
  1625                           	opt stack 0
  1626  000003                     i2putch@data:
  1627                           	opt stack 0
  1628  000003                     i2isdigit@c:
  1629                           	opt stack 0
  1630  000003                     i2eeprom_writebyte@address:
  1631                           	opt stack 0
  1632  000003                     i2___wmul@multiplicand:
  1633                           	opt stack 0
  1634  000003                     i2___awdiv@divisor:
  1635                           	opt stack 0
  1636  000003                     i2___lwdiv@divisor:
  1637                           	opt stack 0
  1638                           
  1639                           ; 2 bytes @ 0x2
  1640  000003                     	ds	1
  1641  000004                     ??i2_read_colorsensor:
  1642  000004                     i2read_time@i:
  1643                           	opt stack 0
  1644  000004                     i2___ftpack@exp:
  1645                           	opt stack 0
  1646  000004                     i2frexp@eptr:
  1647                           	opt stack 0
  1648  000004                     i2___ftge@ff2:
  1649                           	opt stack 0
  1650                           
  1651                           ; 3 bytes @ 0x3
  1652  000004                     	ds	1
  1653  000005                     i2eeprom_writebyte@data:
  1654                           	opt stack 0
  1655  000005                     i2___awdiv@counter:
  1656                           	opt stack 0
  1657  000005                     i2___ftpack@sign:
  1658                           	opt stack 0
  1659  000005                     i2___wmul@product:
  1660                           	opt stack 0
  1661  000005                     i2___lwdiv@quotient:
  1662                           	opt stack 0
  1663                           
  1664                           ; 2 bytes @ 0x4
  1665  000005                     	ds	1
  1666  000006                     ??i2___ftpack:
  1667  000006                     ??i2_frexp:
  1668  000006                     i2___awdiv@sign:
  1669                           	opt stack 0
  1670                           
  1671                           ; 1 bytes @ 0x5
  1672  000006                     	ds	1
  1673  000007                     ??i2___ftge:
  1674  000007                     i2___lwdiv@counter:
  1675                           	opt stack 0
  1676  000007                     i2___awdiv@quotient:
  1677                           	opt stack 0
  1678                           
  1679                           ; 2 bytes @ 0x6
  1680  000007                     	ds	1
  1681  000008                     ?i2___lwmod:
  1682                           	opt stack 0
  1683  000008                     i2___lwmod@dividend:
  1684                           	opt stack 0
  1685                           
  1686                           ; 2 bytes @ 0x7
  1687  000008                     	ds	1
  1688  000009                     ?i2___awtoft:
  1689                           	opt stack 0
  1690  000009                     ?i2___ftdiv:
  1691                           	opt stack 0
  1692  000009                     ?i2___lltoft:
  1693                           	opt stack 0
  1694  000009                     i2___awtoft@c:
  1695                           	opt stack 0
  1696  000009                     i2___ftdiv@f1:
  1697                           	opt stack 0
  1698  000009                     i2___lltoft@c:
  1699                           	opt stack 0
  1700                           
  1701                           ; 4 bytes @ 0x8
  1702  000009                     	ds	1
  1703  00000A                     i2___lwmod@divisor:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x9
  1707  00000A                     	ds	2
  1708  00000C                     i2___awtoft@sign:
  1709                           	opt stack 0
  1710  00000C                     i2___lwmod@counter:
  1711                           	opt stack 0
  1712  00000C                     i2___ftdiv@f2:
  1713                           	opt stack 0
  1714                           
  1715                           ; 3 bytes @ 0xB
  1716  00000C                     	ds	1
  1717  00000D                     ??i2___lltoft:
  1718  00000D                     ?i2_printf:
  1719                           	opt stack 0
  1720  00000D                     ?i2___ftmul:
  1721                           	opt stack 0
  1722  00000D                     i2printf@f:
  1723                           	opt stack 0
  1724  00000D                     i2___ftmul@f1:
  1725                           	opt stack 0
  1726                           
  1727                           ; 3 bytes @ 0xC
  1728  00000D                     	ds	2
  1729  00000F                     ??i2___ftdiv:
  1730                           
  1731                           ; 1 bytes @ 0xE
  1732  00000F                     	ds	1
  1733  000010                     i2___ftmul@f2:
  1734                           	opt stack 0
  1735                           
  1736                           ; 3 bytes @ 0xF
  1737  000010                     	ds	1
  1738  000011                     i2___lltoft@exp:
  1739                           	opt stack 0
  1740                           
  1741                           ; 1 bytes @ 0x10
  1742  000011                     	ds	1
  1743  000012                     i2___ftdiv@cntr:
  1744                           	opt stack 0
  1745                           
  1746                           ; 1 bytes @ 0x11
  1747  000012                     	ds	1
  1748  000013                     ??i2_printf:
  1749  000013                     ??i2___ftmul:
  1750  000013                     i2___ftdiv@f3:
  1751                           	opt stack 0
  1752                           
  1753                           ; 3 bytes @ 0x12
  1754  000013                     	ds	3
  1755  000016                     i2___ftdiv@exp:
  1756                           	opt stack 0
  1757  000016                     i2___ftmul@exp:
  1758                           	opt stack 0
  1759                           
  1760                           ; 1 bytes @ 0x15
  1761  000016                     	ds	1
  1762  000017                     i2printf@idx:
  1763                           	opt stack 0
  1764  000017                     i2___ftdiv@sign:
  1765                           	opt stack 0
  1766  000017                     i2___ftmul@f3_as_product:
  1767                           	opt stack 0
  1768                           
  1769                           ; 3 bytes @ 0x16
  1770  000017                     	ds	1
  1771  000018                     i2printf@ap:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x17
  1775  000018                     	ds	2
  1776  00001A                     i2printf@prec:
  1777                           	opt stack 0
  1778  00001A                     i2___ftmul@cntr:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x19
  1782  00001A                     	ds	1
  1783  00001B                     i2___ftmul@sign:
  1784                           	opt stack 0
  1785  00001B                     i2printf@val:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x1A
  1789  00001B                     	ds	1
  1790  00001C                     ?i2___ftadd:
  1791                           	opt stack 0
  1792  00001C                     i2___ftadd@f1:
  1793                           	opt stack 0
  1794                           
  1795                           ; 3 bytes @ 0x1B
  1796  00001C                     	ds	1
  1797  00001D                     i2printf@flag:
  1798                           	opt stack 0
  1799                           
  1800                           ; 1 bytes @ 0x1C
  1801  00001D                     	ds	1
  1802  00001E                     i2printf@width:
  1803                           	opt stack 0
  1804                           
  1805                           ; 2 bytes @ 0x1D
  1806  00001E                     	ds	1
  1807  00001F                     i2___ftadd@f2:
  1808                           	opt stack 0
  1809                           
  1810                           ; 3 bytes @ 0x1E
  1811  00001F                     	ds	1
  1812  000020                     i2printf@c:
  1813                           	opt stack 0
  1814                           
  1815                           ; 1 bytes @ 0x1F
  1816  000020                     	ds	2
  1817  000022                     ??i2___ftadd:
  1818                           
  1819                           ; 1 bytes @ 0x21
  1820  000022                     	ds	3
  1821  000025                     i2___ftadd@sign:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0x24
  1825  000025                     	ds	1
  1826  000026                     i2___ftadd@exp2:
  1827                           	opt stack 0
  1828                           
  1829                           ; 1 bytes @ 0x25
  1830  000026                     	ds	1
  1831  000027                     i2___ftadd@exp1:
  1832                           	opt stack 0
  1833                           
  1834                           ; 1 bytes @ 0x26
  1835  000027                     	ds	1
  1836  000028                     ?i2___ftsub:
  1837                           	opt stack 0
  1838  000028                     ?i2_eval_poly:
  1839                           	opt stack 0
  1840  000028                     ?i2___fttol:
  1841                           	opt stack 0
  1842  000028                     i2___ftsub@f1:
  1843                           	opt stack 0
  1844  000028                     i2___fttol@f1:
  1845                           	opt stack 0
  1846  000028                     i2eval_poly@x:
  1847                           	opt stack 0
  1848                           
  1849                           ; 3 bytes @ 0x27
  1850  000028                     	ds	3
  1851  00002B                     i2eval_poly@d:
  1852                           	opt stack 0
  1853  00002B                     i2___ftsub@f2:
  1854                           	opt stack 0
  1855                           
  1856                           ; 3 bytes @ 0x2A
  1857  00002B                     	ds	1
  1858  00002C                     ??i2___fttol:
  1859                           
  1860                           ; 1 bytes @ 0x2B
  1861  00002C                     	ds	1
  1862  00002D                     i2eval_poly@n:
  1863                           	opt stack 0
  1864                           
  1865                           ; 2 bytes @ 0x2C
  1866  00002D                     	ds	1
  1867  00002E                     
  1868                           ; 1 bytes @ 0x2D
  1869  00002E                     	ds	1
  1870  00002F                     ??i2_eval_poly:
  1871                           
  1872                           ; 1 bytes @ 0x2E
  1873  00002F                     	ds	2
  1874  000031                     i2___fttol@sign1:
  1875                           	opt stack 0
  1876  000031                     i2eval_poly@res:
  1877                           	opt stack 0
  1878                           
  1879                           ; 3 bytes @ 0x30
  1880  000031                     	ds	1
  1881  000032                     i2___fttol@lval:
  1882                           	opt stack 0
  1883                           
  1884                           ; 4 bytes @ 0x31
  1885  000032                     	ds	2
  1886  000034                     ?i2_ldexp:
  1887                           	opt stack 0
  1888  000034                     ?i2_log:
  1889                           	opt stack 0
  1890  000034                     i2ldexp@value:
  1891                           	opt stack 0
  1892  000034                     i2log@x:
  1893                           	opt stack 0
  1894                           
  1895                           ; 3 bytes @ 0x33
  1896  000034                     	ds	2
  1897  000036                     i2___fttol@exp1:
  1898                           	opt stack 0
  1899                           
  1900                           ; 1 bytes @ 0x35
  1901  000036                     	ds	1
  1902  000037                     ?i2___altoft:
  1903                           	opt stack 0
  1904  000037                     i2ldexp@newexp:
  1905                           	opt stack 0
  1906  000037                     i2log@exponent:
  1907                           	opt stack 0
  1908  000037                     i2___altoft@c:
  1909                           	opt stack 0
  1910                           
  1911                           ; 4 bytes @ 0x36
  1912  000037                     	ds	2
  1913  000039                     ??i2_ldexp:
  1914                           
  1915                           ; 1 bytes @ 0x38
  1916  000039                     	ds	2
  1917  00003B                     ??i2___altoft:
  1918                           
  1919                           ; 1 bytes @ 0x3A
  1920  00003B                     	ds	4
  1921  00003F                     i2___altoft@exp:
  1922                           	opt stack 0
  1923                           
  1924                           ; 1 bytes @ 0x3E
  1925  00003F                     	ds	1
  1926  000040                     i2___altoft@sign:
  1927                           	opt stack 0
  1928                           
  1929                           ; 1 bytes @ 0x3F
  1930  000040                     	ds	1
  1931  000041                     ?i2_floor:
  1932                           	opt stack 0
  1933  000041                     i2floor@x:
  1934                           	opt stack 0
  1935                           
  1936                           ; 3 bytes @ 0x40
  1937  000041                     	ds	3
  1938  000044                     i2floor@expon:
  1939                           	opt stack 0
  1940                           
  1941                           ; 2 bytes @ 0x43
  1942  000044                     	ds	2
  1943  000046                     i2floor@i:
  1944                           	opt stack 0
  1945                           
  1946                           ; 3 bytes @ 0x45
  1947  000046                     	ds	3
  1948  000049                     ?i2_exp:
  1949                           	opt stack 0
  1950  000049                     i2exp@x:
  1951                           	opt stack 0
  1952                           
  1953                           ; 3 bytes @ 0x48
  1954  000049                     	ds	3
  1955  00004C                     i2_exp$1679:
  1956                           	opt stack 0
  1957                           
  1958                           ; 3 bytes @ 0x4B
  1959  00004C                     	ds	3
  1960  00004F                     i2exp@exponent:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x4E
  1964  00004F                     	ds	2
  1965  000051                     i2exp@sign:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x50
  1969  000051                     	ds	1
  1970  000052                     ?i2_pow:
  1971                           	opt stack 0
  1972  000052                     i2pow@x:
  1973                           	opt stack 0
  1974                           
  1975                           ; 3 bytes @ 0x51
  1976  000052                     	ds	3
  1977  000055                     i2pow@y:
  1978                           	opt stack 0
  1979                           
  1980                           ; 3 bytes @ 0x54
  1981  000055                     	ds	3
  1982  000058                     i2_pow$1677:
  1983                           	opt stack 0
  1984                           
  1985                           ; 3 bytes @ 0x57
  1986  000058                     	ds	3
  1987  00005B                     i2_pow$1678:
  1988                           	opt stack 0
  1989                           
  1990                           ; 3 bytes @ 0x5A
  1991  00005B                     	ds	3
  1992  00005E                     i2pow@sign:
  1993                           	opt stack 0
  1994                           
  1995                           ; 1 bytes @ 0x5D
  1996  00005E                     	ds	1
  1997  00005F                     i2pow@yi:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0x5E
  2001  00005F                     	ds	4
  2002  000063                     ?i2_dec_to_hex:
  2003                           	opt stack 0
  2004  000063                     i2dec_to_hex@num:
  2005                           	opt stack 0
  2006                           
  2007                           ; 2 bytes @ 0x62
  2008  000063                     	ds	2
  2009  000065                     i2_dec_to_hex$1675:
  2010                           	opt stack 0
  2011                           
  2012                           ; 3 bytes @ 0x64
  2013  000065                     	ds	3
  2014  000068                     i2_dec_to_hex$1676:
  2015                           	opt stack 0
  2016                           
  2017                           ; 3 bytes @ 0x67
  2018  000068                     	ds	3
  2019  00006B                     i2dec_to_hex@temp:
  2020                           	opt stack 0
  2021                           
  2022                           ; 2 bytes @ 0x6A
  2023  00006B                     	ds	2
  2024  00006D                     i2dec_to_hex@i:
  2025                           	opt stack 0
  2026                           
  2027                           ; 2 bytes @ 0x6C
  2028  00006D                     	ds	2
  2029  00006F                     i2dec_to_hex@hexnum:
  2030                           	opt stack 0
  2031                           
  2032                           ; 2 bytes @ 0x6E
  2033  00006F                     	ds	2
  2034  000071                     i2dec_to_hex@quotient:
  2035                           	opt stack 0
  2036                           
  2037                           ; 2 bytes @ 0x70
  2038  000071                     	ds	2
  2039  000073                     isr@i:
  2040                           	opt stack 0
  2041                           
  2042                           ; 1 bytes @ 0x72
  2043  000073                     	ds	1
  2044  000074                     _isr$1674:
  2045                           	opt stack 0
  2046                           
  2047                           ; 2 bytes @ 0x73
  2048  000074                     	ds	2
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postdec1	equ	0xFE5
  2056                           fsr1l	equ	0xFE1
  2057                           
  2058 ;;
  2059 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2060 ;;
  2061 ;; *************** function _main *****************
  2062 ;; Defined at:
  2063 ;;		line 18 in file "main.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:        2 bytes
  2082 ;; Hardware stack levels required when called:   14
  2083 ;; This function calls:
  2084 ;;		_I2C_ColorSens_Init
  2085 ;;		_I2C_Master_Init
  2086 ;;		_bottle_count
  2087 ;;		_bottle_count1
  2088 ;;		_bottle_count2
  2089 ;;		_bottle_count3
  2090 ;;		_bottle_count4
  2091 ;;		_bottle_time
  2092 ;;		_date_time
  2093 ;;		_eeprom_writebyte
  2094 ;;		_emergencystop
  2095 ;;		_initLCD
  2096 ;;		_operation
  2097 ;;		_operationend
  2098 ;;		_standby
  2099 ;; This function is called by:
  2100 ;;		Startup code after reset
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text0
  2105  001A24                     __ptext0:
  2106                           	opt stack 0
  2107  001A24                     _main:
  2108                           	opt stack 17
  2109                           
  2110                           ;main.c: 25: TRISA = 0b11111011;
  2111                           
  2112                           ;incstack = 0
  2113  001A24  0EFB               	movlw	251
  2114  001A26  6E92               	movwf	3986,c	;volatile
  2115                           
  2116                           ;main.c: 26: TRISB = 0xFF;
  2117  001A28  6893               	setf	3987,c	;volatile
  2118                           
  2119                           ;main.c: 27: TRISC = 0x00;
  2120  001A2A  0E00               	movlw	0
  2121  001A2C  6E94               	movwf	3988,c	;volatile
  2122                           
  2123                           ;main.c: 28: TRISD = 0x00;
  2124  001A2E  0E00               	movlw	0
  2125  001A30  6E95               	movwf	3989,c	;volatile
  2126                           
  2127                           ;main.c: 29: TRISE = 0x00;
  2128  001A32  0E00               	movlw	0
  2129  001A34  6E96               	movwf	3990,c	;volatile
  2130                           
  2131                           ;main.c: 31: LATA = 0x00;
  2132  001A36  0E00               	movlw	0
  2133  001A38  6E89               	movwf	3977,c	;volatile
  2134                           
  2135                           ;main.c: 32: LATB = 0x00;
  2136  001A3A  0E00               	movlw	0
  2137  001A3C  6E8A               	movwf	3978,c	;volatile
  2138                           
  2139                           ;main.c: 33: LATC = 0x00;
  2140  001A3E  0E00               	movlw	0
  2141  001A40  6E8B               	movwf	3979,c	;volatile
  2142                           
  2143                           ;main.c: 34: LATD = 0x00;
  2144  001A42  0E00               	movlw	0
  2145  001A44  6E8C               	movwf	3980,c	;volatile
  2146                           
  2147                           ;main.c: 35: LATE = 0x00;
  2148  001A46  0E00               	movlw	0
  2149  001A48  6E8D               	movwf	3981,c	;volatile
  2150                           
  2151                           ;main.c: 37: ADCON0 = 0x00;
  2152  001A4A  0E00               	movlw	0
  2153  001A4C  6EC2               	movwf	4034,c	;volatile
  2154                           
  2155                           ;main.c: 38: ADCON1 = 0xFF;
  2156  001A4E  68C1               	setf	4033,c	;volatile
  2157                           
  2158                           ;main.c: 41: GIE = 1;
  2159  001A50  8EF2               	bsf	intcon,7,c	;volatile
  2160                           
  2161                           ;main.c: 42: PEIE = 1;
  2162  001A52  8CF2               	bsf	intcon,6,c	;volatile
  2163                           
  2164                           ;main.c: 43: INT1IE = 1;
  2165  001A54  86F0               	bsf	intcon3,3,c	;volatile
  2166                           
  2167                           ;main.c: 44: INT0IE = 0;
  2168  001A56  98F2               	bcf	intcon,4,c	;volatile
  2169                           
  2170                           ;main.c: 45: INT2IE = 0;
  2171  001A58  98F0               	bcf	intcon3,4,c	;volatile
  2172                           
  2173                           ;main.c: 47: nRBPU = 0;
  2174  001A5A  9EF1               	bcf	intcon2,7,c	;volatile
  2175                           
  2176                           ;main.c: 49: initLCD();
  2177  001A5C  EC02  F028         	call	_initLCD	;wreg free
  2178                           
  2179                           ;main.c: 50: I2C_Master_Init(10000);
  2180  001A60  0E10               	movlw	16
  2181  001A62  0100               	movlb	0	; () banked
  2182  001A64  6F9D               	movwf	I2C_Master_Init@c& (0+255),b
  2183  001A66  0E27               	movlw	39
  2184  001A68  6F9E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  2185  001A6A  0E00               	movlw	0
  2186  001A6C  6F9F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  2187  001A6E  0E00               	movlw	0
  2188  001A70  6FA0               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  2189  001A72  EC52  F027         	call	_I2C_Master_Init	;wreg free
  2190                           
  2191                           ;main.c: 51: I2C_ColorSens_Init();
  2192  001A76  EC26  F01D         	call	_I2C_ColorSens_Init	;wreg free
  2193                           
  2194                           ;main.c: 54: TMR0 = 0;
  2195  001A7A  0E00               	movlw	0
  2196  001A7C  6ED7               	movwf	4055,c	;volatile
  2197  001A7E  0E00               	movlw	0
  2198  001A80  6ED6               	movwf	4054,c	;volatile
  2199                           
  2200                           ;main.c: 55: T08BIT = 0;
  2201  001A82  9CD5               	bcf	4053,6,c	;volatile
  2202                           
  2203                           ;main.c: 56: T0CS = 0;
  2204  001A84  9AD5               	bcf	4053,5,c	;volatile
  2205                           
  2206                           ;main.c: 57: PSA = 0;
  2207  001A86  96D5               	bcf	4053,3,c	;volatile
  2208                           
  2209                           ;main.c: 58: T0PS2 = 1;
  2210  001A88  84D5               	bsf	4053,2,c	;volatile
  2211                           
  2212                           ;main.c: 59: T0PS1 = 1;
  2213  001A8A  82D5               	bsf	4053,1,c	;volatile
  2214                           
  2215                           ;main.c: 60: T0PS0 = 1;
  2216  001A8C  80D5               	bsf	4053,0,c	;volatile
  2217                           
  2218                           ;main.c: 62: TMR1 = 0;
  2219  001A8E  0E00               	movlw	0
  2220  001A90  6ECF               	movwf	4047,c	;volatile
  2221  001A92  0E00               	movlw	0
  2222  001A94  6ECE               	movwf	4046,c	;volatile
  2223                           
  2224                           ;main.c: 63: servo0_flag = 0;
  2225  001A96  0E00               	movlw	0
  2226  001A98  6E7E               	movwf	_servo0_flag,c
  2227                           
  2228                           ;main.c: 64: servo0_timer = 1;
  2229  001A9A  0E00               	movlw	0
  2230  001A9C  0101               	movlb	1	; () banked
  2231  001A9E  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  2232  001AA0  0E01               	movlw	1
  2233  001AA2  6F43               	movwf	_servo0_timer& (0+255),b
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;main.c: 65: T1CON = 0b10000001;
  2237  001AA4  0E81               	movlw	129
  2238  001AA6  6ECD               	movwf	4045,c	;volatile
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;main.c: 66: TMR1ON = 0;
  2242  001AA8  90CD               	bcf	4045,0,c	;volatile
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;main.c: 67: TMR1CS = 0;
  2246  001AAA  92CD               	bcf	4045,1,c	;volatile
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;main.c: 68: T1CKPS1 = 0;
  2250  001AAC  9ACD               	bcf	4045,5,c	;volatile
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;main.c: 69: T1CKPS0 = 0;
  2254  001AAE  98CD               	bcf	4045,4,c	;volatile
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;main.c: 70: TMR1IE = 1;
  2258  001AB0  809D               	bsf	3997,0,c	;volatile
  2259                           
  2260                           ; BSR set to: 1
  2261                           ;main.c: 72: TMR3 = 0;
  2262  001AB2  0E00               	movlw	0
  2263  001AB4  6EB3               	movwf	4019,c	;volatile
  2264  001AB6  0E00               	movlw	0
  2265  001AB8  6EB2               	movwf	4018,c	;volatile
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;main.c: 73: servo1_flag = 0;
  2269  001ABA  0E00               	movlw	0
  2270  001ABC  0100               	movlb	0	; () banked
  2271  001ABE  6FEE               	movwf	_servo1_flag& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;main.c: 74: servo1_timer = 1;
  2275  001AC0  0E00               	movlw	0
  2276  001AC2  0101               	movlb	1	; () banked
  2277  001AC4  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  2278  001AC6  0E01               	movlw	1
  2279  001AC8  6F45               	movwf	_servo1_timer& (0+255),b
  2280                           
  2281                           ; BSR set to: 1
  2282                           ;main.c: 75: T3CON = 0b1000001;
  2283  001ACA  0E41               	movlw	65
  2284  001ACC  6EB1               	movwf	4017,c	;volatile
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;main.c: 76: TMR3ON = 0;
  2288  001ACE  90B1               	bcf	4017,0,c	;volatile
  2289                           
  2290                           ; BSR set to: 1
  2291                           ;main.c: 77: TMR3CS = 0;
  2292  001AD0  92B1               	bcf	4017,1,c	;volatile
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;main.c: 78: T3CKPS1 = 0;
  2296  001AD2  9AB1               	bcf	4017,5,c	;volatile
  2297                           
  2298                           ; BSR set to: 1
  2299                           ;main.c: 79: T3CKPS0 = 0;
  2300  001AD4  98B1               	bcf	4017,4,c	;volatile
  2301                           
  2302                           ; BSR set to: 1
  2303                           ;main.c: 80: TMR3IE = 1;
  2304  001AD6  82A0               	bsf	4000,1,c	;volatile
  2305                           
  2306                           ; BSR set to: 1
  2307                           ;main.c: 84: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
  2308  001AD8  0E00               	movlw	0
  2309  001ADA  0100               	movlb	0	; () banked
  2310  001ADC  6FEC               	movwf	(_i+1)& (0+255),b
  2311  001ADE  0E00               	movlw	0
  2312  001AE0  6FEB               	movwf	_i& (0+255),b
  2313  001AE2                     l8672:
  2314                           
  2315                           ; BSR set to: 0
  2316  001AE2  0100               	movlb	0	; () banked
  2317  001AE4  BFEC               	btfsc	(_i+1)& (0+255),7,b
  2318  001AE6  D008               	goto	l8676
  2319  001AE8  0100               	movlb	0	; () banked
  2320  001AEA  51EC               	movf	(_i+1)& (0+255),w,b
  2321  001AEC  E118               	bnz	l8682
  2322  001AEE  0E05               	movlw	5
  2323  001AF0  0100               	movlb	0	; () banked
  2324  001AF2  5DEB               	subwf	_i& (0+255),w,b
  2325  001AF4  B0D8               	btfsc	status,0,c
  2326  001AF6  D013               	goto	l8682
  2327  001AF8                     l8676:
  2328                           
  2329                           ; BSR set to: 0
  2330  001AF8  90D8               	bcf	status,0,c
  2331  001AFA  0100               	movlb	0	; () banked
  2332  001AFC  35EB               	rlcf	_i& (0+255),w,b
  2333  001AFE  6ED9               	movwf	fsr2l,c
  2334  001B00  0100               	movlb	0	; () banked
  2335  001B02  35EC               	rlcf	(_i+1)& (0+255),w,b
  2336  001B04  6EDA               	movwf	fsr2h,c
  2337  001B06  0E72               	movlw	low _bottle_count_disp
  2338  001B08  26D9               	addwf	fsr2l,f,c
  2339  001B0A  0E01               	movlw	high _bottle_count_disp
  2340  001B0C  22DA               	addwfc	fsr2h,f,c
  2341  001B0E  0EFF               	movlw	255
  2342  001B10  6EDE               	movwf	postinc2,c
  2343  001B12  0EFF               	movlw	255
  2344  001B14  6EDD               	movwf	postdec2,c
  2345                           
  2346                           ; BSR set to: 0
  2347  001B16  0100               	movlb	0	; () banked
  2348  001B18  4BEB               	infsnz	_i& (0+255),f,b
  2349  001B1A  2BEC               	incf	(_i+1)& (0+255),f,b
  2350  001B1C  D7E2               	goto	l8672
  2351  001B1E                     l8682:
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;main.c: 85: for(i=20;i<50;i++) eeprom_writebyte(i, 0);
  2355  001B1E  0E00               	movlw	0
  2356  001B20  0100               	movlb	0	; () banked
  2357  001B22  6FEC               	movwf	(_i+1)& (0+255),b
  2358  001B24  0E14               	movlw	20
  2359  001B26  6FEB               	movwf	_i& (0+255),b
  2360  001B28                     l8684:
  2361                           
  2362                           ; BSR set to: 0
  2363  001B28  0100               	movlb	0	; () banked
  2364  001B2A  BFEC               	btfsc	(_i+1)& (0+255),7,b
  2365  001B2C  D008               	goto	l8688
  2366  001B2E  0100               	movlb	0	; () banked
  2367  001B30  51EC               	movf	(_i+1)& (0+255),w,b
  2368  001B32  E112               	bnz	l8694
  2369  001B34  0E32               	movlw	50
  2370  001B36  0100               	movlb	0	; () banked
  2371  001B38  5DEB               	subwf	_i& (0+255),w,b
  2372  001B3A  B0D8               	btfsc	status,0,c
  2373  001B3C  D00D               	goto	l8694
  2374  001B3E                     l8688:
  2375                           
  2376                           ; BSR set to: 0
  2377  001B3E  C0EB  F092         	movff	_i,eeprom_writebyte@address
  2378  001B42  C0EC  F093         	movff	_i+1,eeprom_writebyte@address+1
  2379  001B46  0E00               	movlw	0
  2380  001B48  0100               	movlb	0	; () banked
  2381  001B4A  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  2382  001B4C  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  2383  001B50  0100               	movlb	0	; () banked
  2384  001B52  4BEB               	infsnz	_i& (0+255),f,b
  2385  001B54  2BEC               	incf	(_i+1)& (0+255),f,b
  2386  001B56  D7E8               	goto	l8684
  2387  001B58                     l8694:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 87: curr_state = STANDBY;
  2391  001B58  0E00               	movlw	0
  2392  001B5A  0100               	movlb	0	; () banked
  2393  001B5C  6FED               	movwf	_curr_state& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;main.c: 90: switch(curr_state){
  2397                           
  2398                           ;main.c: 89: while(1){
  2399  001B5E  D0A2               	goto	l8742
  2400  001B60                     l8696:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;main.c: 92: standby();
  2404  001B60  ECDA  F028         	call	_standby	;wreg free
  2405                           
  2406                           ;main.c: 93: _delay((unsigned long)((500)*(10000000/4000.0)));
  2407  001B64  0E07               	movlw	7
  2408  001B66  0101               	movlb	1	; () banked
  2409  001B68  6F71               	movwf	(??_main+1)& (0+255),b
  2410  001B6A  0E58               	movlw	88
  2411  001B6C  0101               	movlb	1	; () banked
  2412  001B6E  6F70               	movwf	??_main& (0+255),b
  2413  001B70  0E59               	movlw	89
  2414  001B72                     u8697:
  2415  001B72  2EE8               	decfsz	wreg,f,c
  2416  001B74  D7FE               	bra	u8697
  2417  001B76  2F70               	decfsz	??_main& (0+255),f,b
  2418  001B78  D7FC               	bra	u8697
  2419  001B7A  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2420  001B7C  D7FA               	bra	u8697
  2421  001B7E  D091               	goto	L8
  2422  001B80                     l8700:
  2423                           
  2424                           ;main.c: 96: emergencystop();
  2425  001B80  EC01  F02A         	call	_emergencystop	;wreg free
  2426                           
  2427                           ;main.c: 97: break;
  2428  001B84  D08F               	goto	l8742
  2429  001B86                     l8702:
  2430                           
  2431                           ;main.c: 99: operation();
  2432  001B86  EC6A  F005         	call	_operation	;wreg free
  2433                           
  2434                           ;main.c: 100: _delay((unsigned long)((2)*(10000000/4000.0)));
  2435  001B8A  0E07               	movlw	7
  2436  001B8C  0101               	movlb	1	; () banked
  2437  001B8E  6F70               	movwf	??_main& (0+255),b
  2438  001B90  0E7D               	movlw	125
  2439  001B92                     u8707:
  2440  001B92  2EE8               	decfsz	wreg,f,c
  2441  001B94  D7FE               	bra	u8707
  2442  001B96  2F70               	decfsz	??_main& (0+255),f,b
  2443  001B98  D7FC               	bra	u8707
  2444                           
  2445                           ;main.c: 101: _delay((unsigned long)((400)*(10000000/4000000.0)));
  2446  001B9A  0EC8               	movlw	200
  2447  001B9C                     u8717:
  2448  001B9C  D000               	nop2	
  2449  001B9E  2EE8               	decfsz	wreg,f,c
  2450  001BA0  D7FD               	bra	u8717
  2451                           
  2452                           ;main.c: 102: break;
  2453  001BA2  D080               	goto	l8742
  2454  001BA4                     l8708:
  2455                           
  2456                           ;main.c: 104: operationend();
  2457  001BA4  EC21  F02A         	call	_operationend	;wreg free
  2458                           
  2459                           ;main.c: 105: _delay((unsigned long)((500)*(10000000/4000.0)));
  2460  001BA8  0E07               	movlw	7
  2461  001BAA  0101               	movlb	1	; () banked
  2462  001BAC  6F71               	movwf	(??_main+1)& (0+255),b
  2463  001BAE  0E58               	movlw	88
  2464  001BB0  0101               	movlb	1	; () banked
  2465  001BB2  6F70               	movwf	??_main& (0+255),b
  2466  001BB4  0E59               	movlw	89
  2467  001BB6                     u8727:
  2468  001BB6  2EE8               	decfsz	wreg,f,c
  2469  001BB8  D7FE               	bra	u8727
  2470  001BBA  2F70               	decfsz	??_main& (0+255),f,b
  2471  001BBC  D7FC               	bra	u8727
  2472  001BBE  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2473  001BC0  D7FA               	bra	u8727
  2474  001BC2  D06F               	goto	L8
  2475  001BC4                     l8712:
  2476                           
  2477                           ;main.c: 108: date_time();
  2478  001BC4  EC56  F021         	call	_date_time	;wreg free
  2479                           
  2480                           ;main.c: 109: _delay((unsigned long)((300)*(10000000/4000.0)));
  2481  001BC8  0E04               	movlw	4
  2482  001BCA  0101               	movlb	1	; () banked
  2483  001BCC  6F71               	movwf	(??_main+1)& (0+255),b
  2484  001BCE  0ECF               	movlw	207
  2485  001BD0  0101               	movlb	1	; () banked
  2486  001BD2  6F70               	movwf	??_main& (0+255),b
  2487  001BD4  0E01               	movlw	1
  2488  001BD6                     u8737:
  2489  001BD6  2EE8               	decfsz	wreg,f,c
  2490  001BD8  D7FE               	bra	u8737
  2491  001BDA  2F70               	decfsz	??_main& (0+255),f,b
  2492  001BDC  D7FC               	bra	u8737
  2493  001BDE  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2494  001BE0  D7FA               	bra	u8737
  2495  001BE2  D05F               	goto	L8
  2496  001BE4                     l8716:
  2497                           
  2498                           ;main.c: 112: bottle_count();
  2499  001BE4  EC25  F01C         	call	_bottle_count	;wreg free
  2500                           
  2501                           ;main.c: 113: _delay((unsigned long)((300)*(10000000/4000.0)));
  2502  001BE8  0E04               	movlw	4
  2503  001BEA  0101               	movlb	1	; () banked
  2504  001BEC  6F71               	movwf	(??_main+1)& (0+255),b
  2505  001BEE  0ECF               	movlw	207
  2506  001BF0  0101               	movlb	1	; () banked
  2507  001BF2  6F70               	movwf	??_main& (0+255),b
  2508  001BF4  0E01               	movlw	1
  2509  001BF6                     u8747:
  2510  001BF6  2EE8               	decfsz	wreg,f,c
  2511  001BF8  D7FE               	bra	u8747
  2512  001BFA  2F70               	decfsz	??_main& (0+255),f,b
  2513  001BFC  D7FC               	bra	u8747
  2514  001BFE  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2515  001C00  D7FA               	bra	u8747
  2516  001C02  D04F               	goto	L8
  2517  001C04                     l8720:
  2518                           
  2519                           ;main.c: 116: bottle_count1();
  2520  001C04  ECA3  F01B         	call	_bottle_count1	;wreg free
  2521                           
  2522                           ;main.c: 117: _delay((unsigned long)((300)*(10000000/4000.0)));
  2523  001C08  0E04               	movlw	4
  2524  001C0A  0101               	movlb	1	; () banked
  2525  001C0C  6F71               	movwf	(??_main+1)& (0+255),b
  2526  001C0E  0ECF               	movlw	207
  2527  001C10  0101               	movlb	1	; () banked
  2528  001C12  6F70               	movwf	??_main& (0+255),b
  2529  001C14  0E01               	movlw	1
  2530  001C16                     u8757:
  2531  001C16  2EE8               	decfsz	wreg,f,c
  2532  001C18  D7FE               	bra	u8757
  2533  001C1A  2F70               	decfsz	??_main& (0+255),f,b
  2534  001C1C  D7FC               	bra	u8757
  2535  001C1E  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2536  001C20  D7FA               	bra	u8757
  2537  001C22  D03F               	goto	L8
  2538  001C24                     l8724:
  2539                           
  2540                           ;main.c: 120: bottle_count2();
  2541  001C24  EC21  F01B         	call	_bottle_count2	;wreg free
  2542                           
  2543                           ;main.c: 121: _delay((unsigned long)((300)*(10000000/4000.0)));
  2544  001C28  0E04               	movlw	4
  2545  001C2A  0101               	movlb	1	; () banked
  2546  001C2C  6F71               	movwf	(??_main+1)& (0+255),b
  2547  001C2E  0ECF               	movlw	207
  2548  001C30  0101               	movlb	1	; () banked
  2549  001C32  6F70               	movwf	??_main& (0+255),b
  2550  001C34  0E01               	movlw	1
  2551  001C36                     u8767:
  2552  001C36  2EE8               	decfsz	wreg,f,c
  2553  001C38  D7FE               	bra	u8767
  2554  001C3A  2F70               	decfsz	??_main& (0+255),f,b
  2555  001C3C  D7FC               	bra	u8767
  2556  001C3E  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2557  001C40  D7FA               	bra	u8767
  2558  001C42  D02F               	goto	L8
  2559  001C44                     l8728:
  2560                           
  2561                           ;main.c: 124: bottle_count3();
  2562  001C44  EC9F  F01A         	call	_bottle_count3	;wreg free
  2563                           
  2564                           ;main.c: 125: _delay((unsigned long)((300)*(10000000/4000.0)));
  2565  001C48  0E04               	movlw	4
  2566  001C4A  0101               	movlb	1	; () banked
  2567  001C4C  6F71               	movwf	(??_main+1)& (0+255),b
  2568  001C4E  0ECF               	movlw	207
  2569  001C50  0101               	movlb	1	; () banked
  2570  001C52  6F70               	movwf	??_main& (0+255),b
  2571  001C54  0E01               	movlw	1
  2572  001C56                     u8777:
  2573  001C56  2EE8               	decfsz	wreg,f,c
  2574  001C58  D7FE               	bra	u8777
  2575  001C5A  2F70               	decfsz	??_main& (0+255),f,b
  2576  001C5C  D7FC               	bra	u8777
  2577  001C5E  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2578  001C60  D7FA               	bra	u8777
  2579  001C62  D01F               	goto	L8
  2580  001C64                     l8732:
  2581                           
  2582                           ;main.c: 128: bottle_count4();
  2583  001C64  EC1D  F01A         	call	_bottle_count4	;wreg free
  2584                           
  2585                           ;main.c: 129: _delay((unsigned long)((300)*(10000000/4000.0)));
  2586  001C68  0E04               	movlw	4
  2587  001C6A  0101               	movlb	1	; () banked
  2588  001C6C  6F71               	movwf	(??_main+1)& (0+255),b
  2589  001C6E  0ECF               	movlw	207
  2590  001C70  0101               	movlb	1	; () banked
  2591  001C72  6F70               	movwf	??_main& (0+255),b
  2592  001C74  0E01               	movlw	1
  2593  001C76                     u8787:
  2594  001C76  2EE8               	decfsz	wreg,f,c
  2595  001C78  D7FE               	bra	u8787
  2596  001C7A  2F70               	decfsz	??_main& (0+255),f,b
  2597  001C7C  D7FC               	bra	u8787
  2598  001C7E  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2599  001C80  D7FA               	bra	u8787
  2600  001C82  D00F               	goto	L8
  2601  001C84                     l8736:
  2602                           
  2603                           ;main.c: 132: bottle_time();
  2604  001C84  EC13  F029         	call	_bottle_time	;wreg free
  2605                           
  2606                           ;main.c: 133: _delay((unsigned long)((300)*(10000000/4000.0)));
  2607  001C88  0E04               	movlw	4
  2608  001C8A  0101               	movlb	1	; () banked
  2609  001C8C  6F71               	movwf	(??_main+1)& (0+255),b
  2610  001C8E  0ECF               	movlw	207
  2611  001C90  0101               	movlb	1	; () banked
  2612  001C92  6F70               	movwf	??_main& (0+255),b
  2613  001C94  0E01               	movlw	1
  2614  001C96                     u8797:
  2615  001C96  2EE8               	decfsz	wreg,f,c
  2616  001C98  D7FE               	bra	u8797
  2617  001C9A  2F70               	decfsz	??_main& (0+255),f,b
  2618  001C9C  D7FC               	bra	u8797
  2619  001C9E  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2620  001CA0  D7FA               	bra	u8797
  2621  001CA2                     L8:
  2622  001CA2  D000               	nop2	
  2623  001CA4                     l8742:
  2624  001CA4  0100               	movlb	0	; () banked
  2625  001CA6  51ED               	movf	_curr_state& (0+255),w,b
  2626                           
  2627                           ; Switch size 1, requested type "space"
  2628                           ; Number of cases is 11, Range of values is 0 to 10
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           34    18 (average)
  2632                           ;	Chosen strategy is simple_byte
  2633  001CA8  0A00               	xorlw	0	; case 0
  2634  001CAA  B4D8               	btfsc	status,2,c
  2635  001CAC  D759               	goto	l8696
  2636  001CAE  0A01               	xorlw	1	; case 1
  2637  001CB0  B4D8               	btfsc	status,2,c
  2638  001CB2  D766               	goto	l8700
  2639  001CB4  0A03               	xorlw	3	; case 2
  2640  001CB6  B4D8               	btfsc	status,2,c
  2641  001CB8  D766               	goto	l8702
  2642  001CBA  0A01               	xorlw	1	; case 3
  2643  001CBC  B4D8               	btfsc	status,2,c
  2644  001CBE  D772               	goto	l8708
  2645  001CC0  0A07               	xorlw	7	; case 4
  2646  001CC2  B4D8               	btfsc	status,2,c
  2647  001CC4  D77F               	goto	l8712
  2648  001CC6  0A01               	xorlw	1	; case 5
  2649  001CC8  B4D8               	btfsc	status,2,c
  2650  001CCA  D78C               	goto	l8716
  2651  001CCC  0A03               	xorlw	3	; case 6
  2652  001CCE  B4D8               	btfsc	status,2,c
  2653  001CD0  D799               	goto	l8720
  2654  001CD2  0A01               	xorlw	1	; case 7
  2655  001CD4  B4D8               	btfsc	status,2,c
  2656  001CD6  D7A6               	goto	l8724
  2657  001CD8  0A0F               	xorlw	15	; case 8
  2658  001CDA  B4D8               	btfsc	status,2,c
  2659  001CDC  D7B3               	goto	l8728
  2660  001CDE  0A01               	xorlw	1	; case 9
  2661  001CE0  B4D8               	btfsc	status,2,c
  2662  001CE2  D7C0               	goto	l8732
  2663  001CE4  0A03               	xorlw	3	; case 10
  2664  001CE6  B4D8               	btfsc	status,2,c
  2665  001CE8  D7CD               	goto	l8736
  2666                           
  2667                           ; BSR set to: 0
  2668                           
  2669                           ; BSR set to: 0
  2670  001CEA  D7DC               	goto	l8742
  2671  001CEC                     __end_of_main:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           intcon	equ	0xFF2
  2678                           intcon2	equ	0xFF1
  2679                           intcon3	equ	0xFF0
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           postdec1	equ	0xFE5
  2683                           fsr1l	equ	0xFE1
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _standby *****************
  2691 ;; Defined at:
  2692 ;;		line 342 in file "main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:   10
  2713 ;; This function calls:
  2714 ;;		_lcdInst
  2715 ;;		_printf
  2716 ;;		_read_colorsensor
  2717 ;; This function is called by:
  2718 ;;		_main
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text1
  2723  0051B4                     __ptext1:
  2724                           	opt stack 0
  2725  0051B4                     _standby:
  2726                           	opt stack 20
  2727                           
  2728                           ;main.c: 343: lcdInst(0b10000000);
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;incstack = 0
  2732  0051B4  0E80               	movlw	128
  2733  0051B6  EC5F  F02A         	call	_lcdInst
  2734                           
  2735                           ;main.c: 344: printf("standby          ");
  2736  0051BA  0E17               	movlw	low STR_5
  2737  0051BC  0100               	movlb	0	; () banked
  2738  0051BE  6F9C               	movwf	printf@f& (0+255),b
  2739  0051C0  0EFF               	movlw	high STR_5
  2740  0051C2  0100               	movlb	0	; () banked
  2741  0051C4  6F9D               	movwf	(printf@f+1)& (0+255),b
  2742  0051C6  EC23  F008         	call	_printf	;wreg free
  2743                           
  2744                           ;main.c: 345: lcdInst(0b11000000);
  2745  0051CA  0EC0               	movlw	192
  2746  0051CC  EC5F  F02A         	call	_lcdInst
  2747                           
  2748                           ;main.c: 346: read_colorsensor();
  2749  0051D0  EC23  F01E         	call	_read_colorsensor	;wreg free
  2750                           
  2751                           ;main.c: 347: printf("%d      ", color[0]);
  2752  0051D4  0EEE               	movlw	low STR_6
  2753  0051D6  0100               	movlb	0	; () banked
  2754  0051D8  6F9C               	movwf	printf@f& (0+255),b
  2755  0051DA  0EFF               	movlw	high STR_6
  2756  0051DC  0100               	movlb	0	; () banked
  2757  0051DE  6F9D               	movwf	(printf@f+1)& (0+255),b
  2758  0051E0  C100  F09E         	movff	_color,?_printf+2
  2759  0051E4  C101  F09F         	movff	_color+1,?_printf+3
  2760  0051E8  EC23  F008         	call	_printf	;wreg free
  2761  0051EC  0012               	return	
  2762  0051EE                     __end_of_standby:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           intcon	equ	0xFF2
  2769                           intcon2	equ	0xFF1
  2770                           intcon3	equ	0xFF0
  2771                           postinc0	equ	0xFEE
  2772                           wreg	equ	0xFE8
  2773                           postdec1	equ	0xFE5
  2774                           fsr1l	equ	0xFE1
  2775                           postinc2	equ	0xFDE
  2776                           postdec2	equ	0xFDD
  2777                           fsr2h	equ	0xFDA
  2778                           fsr2l	equ	0xFD9
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _operationend *****************
  2782 ;; Defined at:
  2783 ;;		line 668 in file "main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:   10
  2804 ;; This function calls:
  2805 ;;		_lcdInst
  2806 ;;		_printf
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text2
  2813  005442                     __ptext2:
  2814                           	opt stack 0
  2815  005442                     _operationend:
  2816                           	opt stack 20
  2817                           
  2818                           ;main.c: 669: lcdInst(0b10000000);
  2819                           
  2820                           ;incstack = 0
  2821  005442  0E80               	movlw	128
  2822  005444  EC5F  F02A         	call	_lcdInst
  2823                           
  2824                           ;main.c: 670: printf("Operation Done!");
  2825  005448  0EB2               	movlw	low STR_46
  2826  00544A  0100               	movlb	0	; () banked
  2827  00544C  6F9C               	movwf	printf@f& (0+255),b
  2828  00544E  0EFF               	movlw	high STR_46
  2829  005450  0100               	movlb	0	; () banked
  2830  005452  6F9D               	movwf	(printf@f+1)& (0+255),b
  2831  005454  EC23  F008         	call	_printf	;wreg free
  2832  005458  0012               	return	
  2833  00545A                     __end_of_operationend:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           intcon	equ	0xFF2
  2840                           intcon2	equ	0xFF1
  2841                           intcon3	equ	0xFF0
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _operation *****************
  2853 ;; Defined at:
  2854 ;;		line 574 in file "main.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:   13
  2875 ;; This function calls:
  2876 ;;		___ftdiv
  2877 ;;		___ftge
  2878 ;;		___lwtoft
  2879 ;;		___wmul
  2880 ;;		_dec_to_hex
  2881 ;;		_lcdInst
  2882 ;;		_read_colorsensor
  2883 ;;		_read_time
  2884 ;;		_savedata
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text3
  2891  000AD4                     __ptext3:
  2892                           	opt stack 0
  2893  000AD4                     _operation:
  2894                           	opt stack 17
  2895                           
  2896                           ;main.c: 575: if(bottle_count_array[0] > 9){
  2897                           
  2898                           ;incstack = 0
  2899  000AD4  0100               	movlb	0	; () banked
  2900  000AD6  BFE0               	btfsc	(_bottle_count_array+1)& (0+255),7,b
  2901  000AD8  D0A3               	goto	l518
  2902  000ADA  0100               	movlb	0	; () banked
  2903  000ADC  51E0               	movf	(_bottle_count_array+1)& (0+255),w,b
  2904  000ADE  E105               	bnz	u8330
  2905  000AE0  0E0A               	movlw	10
  2906  000AE2  0100               	movlb	0	; () banked
  2907  000AE4  5DDF               	subwf	_bottle_count_array& (0+255),w,b
  2908  000AE6  A0D8               	btfss	status,0,c
  2909  000AE8  D09B               	goto	l518
  2910  000AEA                     u8330:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;main.c: 576: _delay((unsigned long)((1000)*(10000000/4000.0)));
  2914  000AEA  0E0D               	movlw	13
  2915  000AEC  0100               	movlb	0	; () banked
  2916  000AEE  6FDE               	movwf	(??_operation+1)& (0+255),b
  2917  000AF0  0EAF               	movlw	175
  2918  000AF2  0100               	movlb	0	; () banked
  2919  000AF4  6FDD               	movwf	??_operation& (0+255),b
  2920  000AF6  0EB6               	movlw	182
  2921  000AF8                     u8807:
  2922  000AF8  2EE8               	decfsz	wreg,f,c
  2923  000AFA  D7FE               	bra	u8807
  2924  000AFC  2FDD               	decfsz	??_operation& (0+255),f,b
  2925  000AFE  D7FC               	bra	u8807
  2926  000B00  2FDE               	decfsz	(??_operation+1)& (0+255),f,b
  2927  000B02  D7FA               	bra	u8807
  2928  000B04  F000               	nop	
  2929                           
  2930                           ;main.c: 577: LATAbits.LATA2 = 0;
  2931  000B06  9489               	bcf	3977,2,c	;volatile
  2932                           
  2933                           ;main.c: 578: TMR0IE = 0;
  2934  000B08  9AF2               	bcf	intcon,5,c	;volatile
  2935                           
  2936                           ;main.c: 579: TMR0ON = 0;
  2937  000B0A  9ED5               	bcf	4053,7,c	;volatile
  2938                           
  2939                           ;main.c: 580: TMR1ON = 0;
  2940  000B0C  90CD               	bcf	4045,0,c	;volatile
  2941                           
  2942                           ;main.c: 581: TMR3ON = 0;
  2943  000B0E  90B1               	bcf	4017,0,c	;volatile
  2944                           
  2945                           ;main.c: 583: read_time();
  2946  000B10  EC82  F026         	call	_read_time	;wreg free
  2947                           
  2948                           ;main.c: 584: end_time[1] = time[1];
  2949  000B14  C111  F077         	movff	_time+1,_end_time+1
  2950                           
  2951                           ;main.c: 585: end_time[0] = time[0];
  2952  000B18  C110  F076         	movff	_time,_end_time
  2953                           
  2954                           ;main.c: 586: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
  2955  000B1C  C07B  F0DB         	movff	_start_time+1,dec_to_hex@num
  2956  000B20  0100               	movlb	0	; () banked
  2957  000B22  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  2958  000B24  EC0D  F019         	call	_dec_to_hex	;wreg free
  2959  000B28  C0DB  F16E         	movff	?_dec_to_hex,_operation$1412
  2960  000B2C  C0DC  F16F         	movff	?_dec_to_hex+1,_operation$1412+1
  2961                           
  2962                           ;main.c: 586: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
  2963  000B30  C16E  F090         	movff	_operation$1412,___wmul@multiplier
  2964  000B34  C16F  F091         	movff	_operation$1412+1,___wmul@multiplier+1
  2965  000B38  0E00               	movlw	0
  2966  000B3A  0100               	movlb	0	; () banked
  2967  000B3C  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2968  000B3E  0E3C               	movlw	60
  2969  000B40  6F92               	movwf	___wmul@multiplicand& (0+255),b
  2970  000B42  EC2E  F029         	call	___wmul	;wreg free
  2971  000B46  C090  F0DD         	movff	?___wmul,??_operation
  2972  000B4A  C091  F0DE         	movff	?___wmul+1,??_operation+1
  2973  000B4E  C07A  F0DB         	movff	_start_time,dec_to_hex@num
  2974  000B52  0100               	movlb	0	; () banked
  2975  000B54  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  2976  000B56  EC0D  F019         	call	_dec_to_hex	;wreg free
  2977  000B5A  0100               	movlb	0	; () banked
  2978  000B5C  51DB               	movf	?_dec_to_hex& (0+255),w,b
  2979  000B5E  0100               	movlb	0	; () banked
  2980  000B60  25DD               	addwf	??_operation& (0+255),w,b
  2981  000B62  0101               	movlb	1	; () banked
  2982  000B64  6F47               	movwf	_stime& (0+255),b
  2983  000B66  0100               	movlb	0	; () banked
  2984  000B68  51DC               	movf	(?_dec_to_hex+1)& (0+255),w,b
  2985  000B6A  0100               	movlb	0	; () banked
  2986  000B6C  21DE               	addwfc	(??_operation+1)& (0+255),w,b
  2987  000B6E  0101               	movlb	1	; () banked
  2988  000B70  6F48               	movwf	(_stime+1)& (0+255),b
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;main.c: 587: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
  2992  000B72  C077  F0DB         	movff	_end_time+1,dec_to_hex@num
  2993  000B76  0100               	movlb	0	; () banked
  2994  000B78  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  2995  000B7A  EC0D  F019         	call	_dec_to_hex	;wreg free
  2996  000B7E  C0DB  F16E         	movff	?_dec_to_hex,_operation$1412
  2997  000B82  C0DC  F16F         	movff	?_dec_to_hex+1,_operation$1412+1
  2998                           
  2999                           ;main.c: 587: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
  3000  000B86  C16E  F090         	movff	_operation$1412,___wmul@multiplier
  3001  000B8A  C16F  F091         	movff	_operation$1412+1,___wmul@multiplier+1
  3002  000B8E  0E00               	movlw	0
  3003  000B90  0100               	movlb	0	; () banked
  3004  000B92  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3005  000B94  0E3C               	movlw	60
  3006  000B96  6F92               	movwf	___wmul@multiplicand& (0+255),b
  3007  000B98  EC2E  F029         	call	___wmul	;wreg free
  3008  000B9C  C090  F0DD         	movff	?___wmul,??_operation
  3009  000BA0  C091  F0DE         	movff	?___wmul+1,??_operation+1
  3010  000BA4  C076  F0DB         	movff	_end_time,dec_to_hex@num
  3011  000BA8  0100               	movlb	0	; () banked
  3012  000BAA  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  3013  000BAC  EC0D  F019         	call	_dec_to_hex	;wreg free
  3014  000BB0  0100               	movlb	0	; () banked
  3015  000BB2  51DB               	movf	?_dec_to_hex& (0+255),w,b
  3016  000BB4  0100               	movlb	0	; () banked
  3017  000BB6  25DD               	addwf	??_operation& (0+255),w,b
  3018  000BB8  0101               	movlb	1	; () banked
  3019  000BBA  6F31               	movwf	_etime& (0+255),b
  3020  000BBC  0100               	movlb	0	; () banked
  3021  000BBE  51DC               	movf	(?_dec_to_hex+1)& (0+255),w,b
  3022  000BC0  0100               	movlb	0	; () banked
  3023  000BC2  21DE               	addwfc	(??_operation+1)& (0+255),w,b
  3024  000BC4  0101               	movlb	1	; () banked
  3025  000BC6  6F32               	movwf	(_etime+1)& (0+255),b
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;main.c: 588: curr_state = OPERATIONEND;
  3029  000BC8  0E03               	movlw	3
  3030  000BCA  0100               	movlb	0	; () banked
  3031  000BCC  6FED               	movwf	_curr_state& (0+255),b
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;main.c: 589: lcdInst(0b00000001);
  3035  000BCE  0E01               	movlw	1
  3036  000BD0  EC5F  F02A         	call	_lcdInst
  3037                           
  3038                           ;main.c: 590: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
  3039  000BD4  0E00               	movlw	0
  3040  000BD6  0100               	movlb	0	; () banked
  3041  000BD8  6FEC               	movwf	(_i+1)& (0+255),b
  3042  000BDA  0E00               	movlw	0
  3043  000BDC  6FEB               	movwf	_i& (0+255),b
  3044  000BDE                     l8270:
  3045                           
  3046                           ; BSR set to: 0
  3047  000BDE  0100               	movlb	0	; () banked
  3048  000BE0  BFEC               	btfsc	(_i+1)& (0+255),7,b
  3049  000BE2  D008               	goto	l8274
  3050  000BE4  0100               	movlb	0	; () banked
  3051  000BE6  51EC               	movf	(_i+1)& (0+255),w,b
  3052  000BE8  E118               	bnz	l8280
  3053  000BEA  0E05               	movlw	5
  3054  000BEC  0100               	movlb	0	; () banked
  3055  000BEE  5DEB               	subwf	_i& (0+255),w,b
  3056  000BF0  B0D8               	btfsc	status,0,c
  3057  000BF2  D013               	goto	l8280
  3058  000BF4                     l8274:
  3059                           
  3060                           ; BSR set to: 0
  3061  000BF4  90D8               	bcf	status,0,c
  3062  000BF6  0100               	movlb	0	; () banked
  3063  000BF8  35EB               	rlcf	_i& (0+255),w,b
  3064  000BFA  6ED9               	movwf	fsr2l,c
  3065  000BFC  0100               	movlb	0	; () banked
  3066  000BFE  35EC               	rlcf	(_i+1)& (0+255),w,b
  3067  000C00  6EDA               	movwf	fsr2h,c
  3068  000C02  0E72               	movlw	low _bottle_count_disp
  3069  000C04  26D9               	addwf	fsr2l,f,c
  3070  000C06  0E01               	movlw	high _bottle_count_disp
  3071  000C08  22DA               	addwfc	fsr2h,f,c
  3072  000C0A  0EFF               	movlw	255
  3073  000C0C  6EDE               	movwf	postinc2,c
  3074  000C0E  0EFF               	movlw	255
  3075  000C10  6EDD               	movwf	postdec2,c
  3076                           
  3077                           ; BSR set to: 0
  3078  000C12  0100               	movlb	0	; () banked
  3079  000C14  4BEB               	infsnz	_i& (0+255),f,b
  3080  000C16  2BEC               	incf	(_i+1)& (0+255),f,b
  3081  000C18  D7E2               	goto	l8270
  3082  000C1A                     l8280:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;main.c: 591: savedata();
  3086  000C1A  ECA4  F00B         	call	_savedata	;wreg free
  3087                           
  3088                           ;main.c: 592: return;
  3089  000C1E  0012               	return	
  3090  000C20                     l518:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;main.c: 593: }
  3094                           ;main.c: 594: colorprev[0] = color[0];
  3095  000C20  C100  F108         	movff	_color,_colorprev
  3096  000C24  C101  F109         	movff	_color+1,_colorprev+1
  3097                           
  3098                           ;main.c: 595: colorprev[1] = color[1];
  3099  000C28  C102  F10A         	movff	_color+2,_colorprev+2
  3100  000C2C  C103  F10B         	movff	_color+3,_colorprev+3
  3101                           
  3102                           ;main.c: 596: colorprev[2] = color[2];
  3103  000C30  C104  F10C         	movff	_color+4,_colorprev+4
  3104  000C34  C105  F10D         	movff	_color+5,_colorprev+5
  3105                           
  3106                           ;main.c: 597: colorprev[3] = color[3];
  3107  000C38  C106  F10E         	movff	_color+6,_colorprev+6
  3108  000C3C  C107  F10F         	movff	_color+7,_colorprev+7
  3109                           
  3110                           ;main.c: 599: GIE = 0;
  3111  000C40  9EF2               	bcf	intcon,7,c	;volatile
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;main.c: 600: read_colorsensor();
  3115  000C42  EC23  F01E         	call	_read_colorsensor	;wreg free
  3116                           
  3117                           ;main.c: 601: if(color[0]>15){
  3118  000C46  0101               	movlb	1	; () banked
  3119  000C48  5101               	movf	(_color+1)& (0+255),w,b
  3120  000C4A  E105               	bnz	u8360
  3121  000C4C  0E10               	movlw	16
  3122  000C4E  0101               	movlb	1	; () banked
  3123  000C50  5D00               	subwf	_color& (0+255),w,b
  3124  000C52  A0D8               	btfss	status,0,c
  3125  000C54  D15A               	goto	l8336
  3126  000C56                     u8360:
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;main.c: 602: flag_bottle = 1;
  3130  000C56  0E00               	movlw	0
  3131  000C58  0101               	movlb	1	; () banked
  3132  000C5A  6F34               	movwf	(_flag_bottle+1)& (0+255),b
  3133  000C5C  0E01               	movlw	1
  3134  000C5E  6F33               	movwf	_flag_bottle& (0+255),b
  3135                           
  3136                           ; BSR set to: 1
  3137                           ;main.c: 603: flag_picbug += 1;
  3138  000C60  0100               	movlb	0	; () banked
  3139  000C62  4BE9               	infsnz	_flag_picbug& (0+255),f,b
  3140  000C64  2BEA               	incf	(_flag_picbug+1)& (0+255),f,b
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;main.c: 604: if(color[3]>color[1] && !flag_top_read) flag_eskaC += 1;
  3144  000C66  0101               	movlb	1	; () banked
  3145  000C68  5106               	movf	(_color+6)& (0+255),w,b
  3146  000C6A  0101               	movlb	1	; () banked
  3147  000C6C  5D02               	subwf	(_color+2)& (0+255),w,b
  3148  000C6E  0101               	movlb	1	; () banked
  3149  000C70  5107               	movf	(_color+7)& (0+255),w,b
  3150  000C72  0101               	movlb	1	; () banked
  3151  000C74  5903               	subwfb	(_color+3)& (0+255),w,b
  3152  000C76  B0D8               	btfsc	status,0,c
  3153  000C78  D009               	goto	l8298
  3154                           
  3155                           ; BSR set to: 1
  3156  000C7A  0101               	movlb	1	; () banked
  3157  000C7C  5139               	movf	_flag_top_read& (0+255),w,b
  3158  000C7E  0101               	movlb	1	; () banked
  3159  000C80  113A               	iorwf	(_flag_top_read+1)& (0+255),w,b
  3160  000C82  A4D8               	btfss	status,2,c
  3161  000C84  D003               	goto	l8298
  3162                           
  3163                           ; BSR set to: 1
  3164  000C86  0101               	movlb	1	; () banked
  3165  000C88  4B37               	infsnz	_flag_eskaC& (0+255),f,b
  3166  000C8A  2B38               	incf	(_flag_eskaC+1)& (0+255),f,b
  3167  000C8C                     l8298:
  3168                           
  3169                           ; BSR set to: 1
  3170                           ;main.c: 605: if(color[1]>130 || color[2]>130)flag_yopNC = 1;
  3171  000C8C  0101               	movlb	1	; () banked
  3172  000C8E  5103               	movf	(_color+3)& (0+255),w,b
  3173  000C90  E10D               	bnz	l8302
  3174  000C92  0E83               	movlw	131
  3175  000C94  0101               	movlb	1	; () banked
  3176  000C96  5D02               	subwf	(_color+2)& (0+255),w,b
  3177  000C98  B0D8               	btfsc	status,0,c
  3178  000C9A  D008               	goto	l8302
  3179                           
  3180                           ; BSR set to: 1
  3181  000C9C  0101               	movlb	1	; () banked
  3182  000C9E  5105               	movf	(_color+5)& (0+255),w,b
  3183  000CA0  E105               	bnz	l8302
  3184  000CA2  0E83               	movlw	131
  3185  000CA4  0101               	movlb	1	; () banked
  3186  000CA6  5D04               	subwf	(_color+4)& (0+255),w,b
  3187  000CA8  A0D8               	btfss	status,0,c
  3188  000CAA  D005               	goto	l8304
  3189  000CAC                     l8302:
  3190                           
  3191                           ; BSR set to: 1
  3192  000CAC  0E00               	movlw	0
  3193  000CAE  0101               	movlb	1	; () banked
  3194  000CB0  6F3C               	movwf	(_flag_yopNC+1)& (0+255),b
  3195  000CB2  0E01               	movlw	1
  3196  000CB4  6F3B               	movwf	_flag_yopNC& (0+255),b
  3197  000CB6                     l8304:
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;main.c: 606: if(color[0]>30){
  3201  000CB6  0101               	movlb	1	; () banked
  3202  000CB8  5101               	movf	(_color+1)& (0+255),w,b
  3203  000CBA  E105               	bnz	u8410
  3204  000CBC  0E1F               	movlw	31
  3205  000CBE  0101               	movlb	1	; () banked
  3206  000CC0  5D00               	subwf	_color& (0+255),w,b
  3207  000CC2  A0D8               	btfss	status,0,c
  3208  000CC4  D08F               	goto	l8320
  3209  000CC6                     u8410:
  3210                           
  3211                           ; BSR set to: 1
  3212                           ;main.c: 607: if(!flag_top_read){
  3213  000CC6  0101               	movlb	1	; () banked
  3214  000CC8  5139               	movf	_flag_top_read& (0+255),w,b
  3215  000CCA  0101               	movlb	1	; () banked
  3216  000CCC  113A               	iorwf	(_flag_top_read+1)& (0+255),w,b
  3217  000CCE  A4D8               	btfss	status,2,c
  3218  000CD0  D084               	goto	l528
  3219                           
  3220                           ; BSR set to: 1
  3221                           ;main.c: 608: r = (float) color[1];
  3222  000CD2  C102  F098         	movff	_color+2,___lwtoft@c
  3223  000CD6  C103  F099         	movff	_color+3,___lwtoft@c+1
  3224  000CDA  EC78  F029         	call	___lwtoft	;wreg free
  3225  000CDE  C098  F125         	movff	?___lwtoft,_r
  3226  000CE2  C099  F126         	movff	?___lwtoft+1,_r+1
  3227  000CE6  C09A  F127         	movff	?___lwtoft+2,_r+2
  3228                           
  3229                           ;main.c: 609: b = (float) color[3];
  3230  000CEA  C106  F098         	movff	_color+6,___lwtoft@c
  3231  000CEE  C107  F099         	movff	_color+7,___lwtoft@c+1
  3232  000CF2  EC78  F029         	call	___lwtoft	;wreg free
  3233  000CF6  C098  F11F         	movff	?___lwtoft,_b
  3234  000CFA  C099  F120         	movff	?___lwtoft+1,_b+1
  3235  000CFE  C09A  F121         	movff	?___lwtoft+2,_b+2
  3236                           
  3237                           ;main.c: 612: if(r/b > 2 && r>16) bottle_read_top = 1;
  3238  000D02  0E00               	movlw	0
  3239  000D04  0100               	movlb	0	; () banked
  3240  000D06  6FA7               	movwf	___ftge@ff1& (0+255),b
  3241  000D08  0E00               	movlw	0
  3242  000D0A  0100               	movlb	0	; () banked
  3243  000D0C  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3244  000D0E  0E40               	movlw	64
  3245  000D10  0100               	movlb	0	; () banked
  3246  000D12  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3247  000D14  C11F  F09B         	movff	_b,___ftdiv@f2
  3248  000D18  C120  F09C         	movff	_b+1,___ftdiv@f2+1
  3249  000D1C  C121  F09D         	movff	_b+2,___ftdiv@f2+2
  3250  000D20  C125  F098         	movff	_r,___ftdiv@f1
  3251  000D24  C126  F099         	movff	_r+1,___ftdiv@f1+1
  3252  000D28  C127  F09A         	movff	_r+2,___ftdiv@f1+2
  3253  000D2C  ECAA  F016         	call	___ftdiv	;wreg free
  3254  000D30  C098  F0AA         	movff	?___ftdiv,___ftge@ff2
  3255  000D34  C099  F0AB         	movff	?___ftdiv+1,___ftge@ff2+1
  3256  000D38  C09A  F0AC         	movff	?___ftdiv+2,___ftge@ff2+2
  3257  000D3C  EC28  F022         	call	___ftge	;wreg free
  3258  000D40  0100               	movlb	0	; () banked
  3259  000D42  B0D8               	btfsc	status,0,c
  3260  000D44  D019               	goto	l8314
  3261                           
  3262                           ; BSR set to: 0
  3263  000D46  0E00               	movlw	0
  3264  000D48  0100               	movlb	0	; () banked
  3265  000D4A  6FA7               	movwf	___ftge@ff1& (0+255),b
  3266  000D4C  0E80               	movlw	128
  3267  000D4E  0100               	movlb	0	; () banked
  3268  000D50  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3269  000D52  0E41               	movlw	65
  3270  000D54  0100               	movlb	0	; () banked
  3271  000D56  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3272  000D58  C125  F0AA         	movff	_r,___ftge@ff2
  3273  000D5C  C126  F0AB         	movff	_r+1,___ftge@ff2+1
  3274  000D60  C127  F0AC         	movff	_r+2,___ftge@ff2+2
  3275  000D64  EC28  F022         	call	___ftge	;wreg free
  3276  000D68  0100               	movlb	0	; () banked
  3277  000D6A  B0D8               	btfsc	status,0,c
  3278  000D6C  D005               	goto	l8314
  3279                           
  3280                           ; BSR set to: 0
  3281  000D6E  0E00               	movlw	0
  3282  000D70  0101               	movlb	1	; () banked
  3283  000D72  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3284  000D74  0E01               	movlw	1
  3285  000D76  D02B               	goto	L10
  3286  000D78                     l8314:
  3287                           
  3288                           ;main.c: 613: else if(r/b < 0.75) bottle_read_top = 2;
  3289  000D78  C11F  F09B         	movff	_b,___ftdiv@f2
  3290  000D7C  C120  F09C         	movff	_b+1,___ftdiv@f2+1
  3291  000D80  C121  F09D         	movff	_b+2,___ftdiv@f2+2
  3292  000D84  C125  F098         	movff	_r,___ftdiv@f1
  3293  000D88  C126  F099         	movff	_r+1,___ftdiv@f1+1
  3294  000D8C  C127  F09A         	movff	_r+2,___ftdiv@f1+2
  3295  000D90  ECAA  F016         	call	___ftdiv	;wreg free
  3296  000D94  C098  F0A7         	movff	?___ftdiv,___ftge@ff1
  3297  000D98  C099  F0A8         	movff	?___ftdiv+1,___ftge@ff1+1
  3298  000D9C  C09A  F0A9         	movff	?___ftdiv+2,___ftge@ff1+2
  3299  000DA0  0E00               	movlw	0
  3300  000DA2  0100               	movlb	0	; () banked
  3301  000DA4  6FAA               	movwf	___ftge@ff2& (0+255),b
  3302  000DA6  0E40               	movlw	64
  3303  000DA8  0100               	movlb	0	; () banked
  3304  000DAA  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  3305  000DAC  0E3F               	movlw	63
  3306  000DAE  0100               	movlb	0	; () banked
  3307  000DB0  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  3308  000DB2  EC28  F022         	call	___ftge	;wreg free
  3309  000DB6  0100               	movlb	0	; () banked
  3310  000DB8  B0D8               	btfsc	status,0,c
  3311  000DBA  D005               	goto	l8318
  3312                           
  3313                           ; BSR set to: 0
  3314  000DBC  0E00               	movlw	0
  3315  000DBE  0101               	movlb	1	; () banked
  3316  000DC0  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3317  000DC2  0E02               	movlw	2
  3318  000DC4  D004               	goto	L10
  3319  000DC6                     l8318:
  3320                           
  3321                           ;main.c: 614: else bottle_read_top = 0;
  3322  000DC6  0E00               	movlw	0
  3323  000DC8  0101               	movlb	1	; () banked
  3324  000DCA  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3325  000DCC  0E00               	movlw	0
  3326  000DCE                     L10:
  3327  000DCE  6F2D               	movwf	_bottle_read_top& (0+255),b
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;main.c: 615: flag_top_read = 1;
  3331                           
  3332                           ; BSR set to: 1
  3333  000DD0  0E00               	movlw	0
  3334  000DD2  0101               	movlb	1	; () banked
  3335  000DD4  6F3A               	movwf	(_flag_top_read+1)& (0+255),b
  3336  000DD6  0E01               	movlw	1
  3337  000DD8  6F39               	movwf	_flag_top_read& (0+255),b
  3338  000DDA                     l528:
  3339                           
  3340                           ; BSR set to: 1
  3341                           ;main.c: 616: }
  3342                           ;main.c: 617: flag_bottle_high = 1;
  3343  000DDA  0E00               	movlw	0
  3344  000DDC  0101               	movlb	1	; () banked
  3345  000DDE  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3346  000DE0  0E01               	movlw	1
  3347  000DE2  D091               	goto	L11
  3348  000DE4                     l8320:
  3349                           
  3350                           ; BSR set to: 1
  3351                           ;main.c: 619: else if(color[0]<30){
  3352  000DE4  0101               	movlb	1	; () banked
  3353  000DE6  5101               	movf	(_color+1)& (0+255),w,b
  3354  000DE8  E104               	bnz	u8461
  3355  000DEA  0E1E               	movlw	30
  3356  000DEC  0101               	movlb	1	; () banked
  3357  000DEE  5D00               	subwf	_color& (0+255),w,b
  3358  000DF0  B0D8               	btfsc	status,0,c
  3359  000DF2                     u8461:
  3360  000DF2  D127               	goto	l8390
  3361                           
  3362                           ; BSR set to: 1
  3363                           ;main.c: 620: if(flag_bottle_high){
  3364  000DF4  0101               	movlb	1	; () banked
  3365  000DF6  5135               	movf	_flag_bottle_high& (0+255),w,b
  3366  000DF8  0101               	movlb	1	; () banked
  3367  000DFA  1136               	iorwf	(_flag_bottle_high+1)& (0+255),w,b
  3368  000DFC  B4D8               	btfsc	status,2,c
  3369  000DFE  D121               	goto	l8390
  3370                           
  3371                           ; BSR set to: 1
  3372                           ;main.c: 621: r_p = (float) colorprev[1];
  3373  000E00  C10A  F098         	movff	_colorprev+2,___lwtoft@c
  3374  000E04  C10B  F099         	movff	_colorprev+3,___lwtoft@c+1
  3375  000E08  EC78  F029         	call	___lwtoft	;wreg free
  3376  000E0C  C098  F128         	movff	?___lwtoft,_r_p
  3377  000E10  C099  F129         	movff	?___lwtoft+1,_r_p+1
  3378  000E14  C09A  F12A         	movff	?___lwtoft+2,_r_p+2
  3379                           
  3380                           ;main.c: 622: b_p = (float) colorprev[3];
  3381  000E18  C10E  F098         	movff	_colorprev+6,___lwtoft@c
  3382  000E1C  C10F  F099         	movff	_colorprev+7,___lwtoft@c+1
  3383  000E20  EC78  F029         	call	___lwtoft	;wreg free
  3384  000E24  C098  F122         	movff	?___lwtoft,_b_p
  3385  000E28  C099  F123         	movff	?___lwtoft+1,_b_p+1
  3386  000E2C  C09A  F124         	movff	?___lwtoft+2,_b_p+2
  3387                           
  3388                           ;main.c: 623: if(r_p/b_p > 3.2 && r_p>18) bottle_read_bot = 1;
  3389  000E30  0ECD               	movlw	205
  3390  000E32  0100               	movlb	0	; () banked
  3391  000E34  6FA7               	movwf	___ftge@ff1& (0+255),b
  3392  000E36  0E4C               	movlw	76
  3393  000E38  0100               	movlb	0	; () banked
  3394  000E3A  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3395  000E3C  0E40               	movlw	64
  3396  000E3E  0100               	movlb	0	; () banked
  3397  000E40  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3398  000E42  C122  F09B         	movff	_b_p,___ftdiv@f2
  3399  000E46  C123  F09C         	movff	_b_p+1,___ftdiv@f2+1
  3400  000E4A  C124  F09D         	movff	_b_p+2,___ftdiv@f2+2
  3401  000E4E  C128  F098         	movff	_r_p,___ftdiv@f1
  3402  000E52  C129  F099         	movff	_r_p+1,___ftdiv@f1+1
  3403  000E56  C12A  F09A         	movff	_r_p+2,___ftdiv@f1+2
  3404  000E5A  ECAA  F016         	call	___ftdiv	;wreg free
  3405  000E5E  C098  F0AA         	movff	?___ftdiv,___ftge@ff2
  3406  000E62  C099  F0AB         	movff	?___ftdiv+1,___ftge@ff2+1
  3407  000E66  C09A  F0AC         	movff	?___ftdiv+2,___ftge@ff2+2
  3408  000E6A  EC28  F022         	call	___ftge	;wreg free
  3409  000E6E  0100               	movlb	0	; () banked
  3410  000E70  B0D8               	btfsc	status,0,c
  3411  000E72  D019               	goto	l8330
  3412                           
  3413                           ; BSR set to: 0
  3414  000E74  0E00               	movlw	0
  3415  000E76  0100               	movlb	0	; () banked
  3416  000E78  6FA7               	movwf	___ftge@ff1& (0+255),b
  3417  000E7A  0E90               	movlw	144
  3418  000E7C  0100               	movlb	0	; () banked
  3419  000E7E  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3420  000E80  0E41               	movlw	65
  3421  000E82  0100               	movlb	0	; () banked
  3422  000E84  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3423  000E86  C128  F0AA         	movff	_r_p,___ftge@ff2
  3424  000E8A  C129  F0AB         	movff	_r_p+1,___ftge@ff2+1
  3425  000E8E  C12A  F0AC         	movff	_r_p+2,___ftge@ff2+2
  3426  000E92  EC28  F022         	call	___ftge	;wreg free
  3427  000E96  0100               	movlb	0	; () banked
  3428  000E98  B0D8               	btfsc	status,0,c
  3429  000E9A  D005               	goto	l8330
  3430                           
  3431                           ; BSR set to: 0
  3432  000E9C  0E00               	movlw	0
  3433  000E9E  0101               	movlb	1	; () banked
  3434  000EA0  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3435  000EA2  0E01               	movlw	1
  3436  000EA4  D02B               	goto	L13
  3437  000EA6                     l8330:
  3438                           
  3439                           ;main.c: 624: else if(r_p/b_p < 0.75) bottle_read_bot = 2;
  3440  000EA6  C122  F09B         	movff	_b_p,___ftdiv@f2
  3441  000EAA  C123  F09C         	movff	_b_p+1,___ftdiv@f2+1
  3442  000EAE  C124  F09D         	movff	_b_p+2,___ftdiv@f2+2
  3443  000EB2  C128  F098         	movff	_r_p,___ftdiv@f1
  3444  000EB6  C129  F099         	movff	_r_p+1,___ftdiv@f1+1
  3445  000EBA  C12A  F09A         	movff	_r_p+2,___ftdiv@f1+2
  3446  000EBE  ECAA  F016         	call	___ftdiv	;wreg free
  3447  000EC2  C098  F0A7         	movff	?___ftdiv,___ftge@ff1
  3448  000EC6  C099  F0A8         	movff	?___ftdiv+1,___ftge@ff1+1
  3449  000ECA  C09A  F0A9         	movff	?___ftdiv+2,___ftge@ff1+2
  3450  000ECE  0E00               	movlw	0
  3451  000ED0  0100               	movlb	0	; () banked
  3452  000ED2  6FAA               	movwf	___ftge@ff2& (0+255),b
  3453  000ED4  0E40               	movlw	64
  3454  000ED6  0100               	movlb	0	; () banked
  3455  000ED8  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  3456  000EDA  0E3F               	movlw	63
  3457  000EDC  0100               	movlb	0	; () banked
  3458  000EDE  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  3459  000EE0  EC28  F022         	call	___ftge	;wreg free
  3460  000EE4  0100               	movlb	0	; () banked
  3461  000EE6  B0D8               	btfsc	status,0,c
  3462  000EE8  D005               	goto	l8334
  3463                           
  3464                           ; BSR set to: 0
  3465  000EEA  0E00               	movlw	0
  3466  000EEC  0101               	movlb	1	; () banked
  3467  000EEE  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3468  000EF0  0E02               	movlw	2
  3469  000EF2  D004               	goto	L13
  3470  000EF4                     l8334:
  3471                           
  3472                           ;main.c: 625: else bottle_read_bot = 0;
  3473  000EF4  0E00               	movlw	0
  3474  000EF6  0101               	movlb	1	; () banked
  3475  000EF8  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3476  000EFA  0E00               	movlw	0
  3477  000EFC                     L13:
  3478  000EFC  6F2B               	movwf	_bottle_read_bot& (0+255),b
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;main.c: 626: flag_bottle_high = 0;
  3482                           
  3483                           ; BSR set to: 1
  3484  000EFE  0E00               	movlw	0
  3485  000F00  0101               	movlb	1	; () banked
  3486  000F02  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3487  000F04  0E00               	movlw	0
  3488  000F06                     L11:
  3489  000F06  6F35               	movwf	_flag_bottle_high& (0+255),b
  3490                           
  3491                           ; BSR set to: 1
  3492                           ;main.c: 627: }
  3493                           ;main.c: 628: }
  3494                           ;main.c: 629: }
  3495                           
  3496                           ; BSR set to: 1
  3497                           
  3498                           ; BSR set to: 1
  3499  000F08  D09C               	goto	l8390
  3500  000F0A                     l8336:
  3501                           
  3502                           ; BSR set to: 1
  3503                           ;main.c: 630: else if(flag_bottle && flag_picbug > 22){
  3504  000F0A  0101               	movlb	1	; () banked
  3505  000F0C  5133               	movf	_flag_bottle& (0+255),w,b
  3506  000F0E  0101               	movlb	1	; () banked
  3507  000F10  1134               	iorwf	(_flag_bottle+1)& (0+255),w,b
  3508  000F12  B4D8               	btfsc	status,2,c
  3509  000F14  D07D               	goto	l8384
  3510                           
  3511                           ; BSR set to: 1
  3512  000F16  0100               	movlb	0	; () banked
  3513  000F18  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3514  000F1A  D07A               	goto	l8384
  3515  000F1C  0100               	movlb	0	; () banked
  3516  000F1E  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3517  000F20  E105               	bnz	u8520
  3518  000F22  0E17               	movlw	23
  3519  000F24  0100               	movlb	0	; () banked
  3520  000F26  5DE9               	subwf	_flag_picbug& (0+255),w,b
  3521  000F28  A0D8               	btfss	status,0,c
  3522  000F2A  D072               	goto	l8384
  3523  000F2C                     u8520:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;main.c: 631: flag_picbug = 0;
  3527  000F2C  0E00               	movlw	0
  3528  000F2E  0100               	movlb	0	; () banked
  3529  000F30  6FEA               	movwf	(_flag_picbug+1)& (0+255),b
  3530  000F32  0E00               	movlw	0
  3531  000F34  6FE9               	movwf	_flag_picbug& (0+255),b
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;main.c: 632: bottle_count_array[0] += 1;
  3535  000F36  0100               	movlb	0	; () banked
  3536  000F38  4BDF               	infsnz	_bottle_count_array& (0+255),f,b
  3537  000F3A  2BE0               	incf	(_bottle_count_array+1)& (0+255),f,b
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;main.c: 633: TMR0 = 0;
  3541  000F3C  0E00               	movlw	0
  3542  000F3E  6ED7               	movwf	4055,c	;volatile
  3543  000F40  0E00               	movlw	0
  3544  000F42  6ED6               	movwf	4054,c	;volatile
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;main.c: 634: if(bottle_read_top == 2 || bottle_read_bot == 2 || flag_eskaC>1){
  3548  000F44  0E02               	movlw	2
  3549  000F46  0101               	movlb	1	; () banked
  3550  000F48  192D               	xorwf	_bottle_read_top& (0+255),w,b
  3551  000F4A  0101               	movlb	1	; () banked
  3552  000F4C  112E               	iorwf	(_bottle_read_top+1)& (0+255),w,b
  3553  000F4E  B4D8               	btfsc	status,2,c
  3554  000F50  D012               	goto	l8352
  3555                           
  3556                           ; BSR set to: 1
  3557  000F52  0E02               	movlw	2
  3558  000F54  0101               	movlb	1	; () banked
  3559  000F56  192B               	xorwf	_bottle_read_bot& (0+255),w,b
  3560  000F58  0101               	movlb	1	; () banked
  3561  000F5A  112C               	iorwf	(_bottle_read_bot+1)& (0+255),w,b
  3562  000F5C  B4D8               	btfsc	status,2,c
  3563  000F5E  D00B               	goto	l8352
  3564                           
  3565                           ; BSR set to: 1
  3566  000F60  0101               	movlb	1	; () banked
  3567  000F62  BF38               	btfsc	(_flag_eskaC+1)& (0+255),7,b
  3568  000F64  D010               	goto	l8356
  3569  000F66  0101               	movlb	1	; () banked
  3570  000F68  5138               	movf	(_flag_eskaC+1)& (0+255),w,b
  3571  000F6A  E105               	bnz	l8352
  3572  000F6C  0E02               	movlw	2
  3573  000F6E  0101               	movlb	1	; () banked
  3574  000F70  5D37               	subwf	_flag_eskaC& (0+255),w,b
  3575  000F72  A0D8               	btfss	status,0,c
  3576  000F74  D008               	goto	l8356
  3577  000F76                     l8352:
  3578                           
  3579                           ; BSR set to: 1
  3580                           ;main.c: 635: bottle_count_array[3] += 1;
  3581  000F76  0100               	movlb	0	; () banked
  3582  000F78  4BE5               	infsnz	(_bottle_count_array+6)& (0+255),f,b
  3583  000F7A  2BE6               	incf	(_bottle_count_array+7)& (0+255),f,b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;main.c: 636: servo1_timer = 1;
  3587  000F7C  0E00               	movlw	0
  3588  000F7E  0101               	movlb	1	; () banked
  3589  000F80  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  3590  000F82  0E01               	movlw	1
  3591  000F84  D02A               	goto	L14
  3592  000F86                     l8356:
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;main.c: 638: else if(bottle_read_top == 1 || bottle_read_bot == 1){
  3596  000F86  0101               	movlb	1	; () banked
  3597  000F88  052D               	decf	_bottle_read_top& (0+255),w,b
  3598  000F8A  0101               	movlb	1	; () banked
  3599  000F8C  112E               	iorwf	(_bottle_read_top+1)& (0+255),w,b
  3600  000F8E  B4D8               	btfsc	status,2,c
  3601  000F90  D006               	goto	l8360
  3602                           
  3603                           ; BSR set to: 1
  3604  000F92  0101               	movlb	1	; () banked
  3605  000F94  052B               	decf	_bottle_read_bot& (0+255),w,b
  3606  000F96  0101               	movlb	1	; () banked
  3607  000F98  112C               	iorwf	(_bottle_read_bot+1)& (0+255),w,b
  3608  000F9A  A4D8               	btfss	status,2,c
  3609  000F9C  D008               	goto	l8364
  3610  000F9E                     l8360:
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;main.c: 639: bottle_count_array[1] += 1;
  3614  000F9E  0100               	movlb	0	; () banked
  3615  000FA0  4BE1               	infsnz	(_bottle_count_array+2)& (0+255),f,b
  3616  000FA2  2BE2               	incf	(_bottle_count_array+3)& (0+255),f,b
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;main.c: 640: servo0_timer = 1;
  3620  000FA4  0E00               	movlw	0
  3621  000FA6  0101               	movlb	1	; () banked
  3622  000FA8  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  3623  000FAA  0E01               	movlw	1
  3624  000FAC  D00D               	goto	L15
  3625  000FAE                     l8364:
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;main.c: 642: else if(flag_yopNC){
  3629  000FAE  0101               	movlb	1	; () banked
  3630  000FB0  513B               	movf	_flag_yopNC& (0+255),w,b
  3631  000FB2  0101               	movlb	1	; () banked
  3632  000FB4  113C               	iorwf	(_flag_yopNC+1)& (0+255),w,b
  3633  000FB6  B4D8               	btfsc	status,2,c
  3634  000FB8  D009               	goto	l8370
  3635                           
  3636                           ; BSR set to: 1
  3637                           ;main.c: 643: bottle_count_array[2] += 1;
  3638  000FBA  0100               	movlb	0	; () banked
  3639  000FBC  4BE3               	infsnz	(_bottle_count_array+4)& (0+255),f,b
  3640  000FBE  2BE4               	incf	(_bottle_count_array+5)& (0+255),f,b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 644: servo0_timer = 0;
  3644  000FC0  0E00               	movlw	0
  3645  000FC2  0101               	movlb	1	; () banked
  3646  000FC4  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  3647  000FC6  0E00               	movlw	0
  3648  000FC8                     L15:
  3649  000FC8  6F43               	movwf	_servo0_timer& (0+255),b
  3650                           
  3651                           ;main.c: 645: }
  3652  000FCA  D008               	goto	l8374
  3653  000FCC                     l8370:
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;main.c: 646: else{
  3657                           ;main.c: 647: bottle_count_array[4] += 1;
  3658  000FCC  0100               	movlb	0	; () banked
  3659  000FCE  4BE7               	infsnz	(_bottle_count_array+8)& (0+255),f,b
  3660  000FD0  2BE8               	incf	(_bottle_count_array+9)& (0+255),f,b
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;main.c: 648: servo1_timer = 0;
  3664  000FD2  0E00               	movlw	0
  3665  000FD4  0101               	movlb	1	; () banked
  3666  000FD6  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  3667  000FD8  0E00               	movlw	0
  3668  000FDA                     L14:
  3669  000FDA  6F45               	movwf	_servo1_timer& (0+255),b
  3670  000FDC                     l8374:
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;main.c: 649: }
  3674                           ;main.c: 650: flag_bottle = 0;
  3675  000FDC  0E00               	movlw	0
  3676  000FDE  0101               	movlb	1	; () banked
  3677  000FE0  6F34               	movwf	(_flag_bottle+1)& (0+255),b
  3678  000FE2  0E00               	movlw	0
  3679  000FE4  6F33               	movwf	_flag_bottle& (0+255),b
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;main.c: 651: flag_bottle_high = 0;
  3683  000FE6  0E00               	movlw	0
  3684  000FE8  0101               	movlb	1	; () banked
  3685  000FEA  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3686  000FEC  0E00               	movlw	0
  3687  000FEE  6F35               	movwf	_flag_bottle_high& (0+255),b
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;main.c: 652: flag_top_read = 0;
  3691  000FF0  0E00               	movlw	0
  3692  000FF2  0101               	movlb	1	; () banked
  3693  000FF4  6F3A               	movwf	(_flag_top_read+1)& (0+255),b
  3694  000FF6  0E00               	movlw	0
  3695  000FF8  6F39               	movwf	_flag_top_read& (0+255),b
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;main.c: 653: flag_yopNC = 0;
  3699  000FFA  0E00               	movlw	0
  3700  000FFC  0101               	movlb	1	; () banked
  3701  000FFE  6F3C               	movwf	(_flag_yopNC+1)& (0+255),b
  3702  001000  0E00               	movlw	0
  3703  001002  6F3B               	movwf	_flag_yopNC& (0+255),b
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;main.c: 657: flag_eskaC = 0;
  3707  001004  0E00               	movlw	0
  3708  001006  0101               	movlb	1	; () banked
  3709  001008  6F38               	movwf	(_flag_eskaC+1)& (0+255),b
  3710  00100A  0E00               	movlw	0
  3711  00100C  6F37               	movwf	_flag_eskaC& (0+255),b
  3712                           
  3713                           ;main.c: 662: }
  3714  00100E  D019               	goto	l8390
  3715  001010                     l8384:
  3716                           
  3717                           ;main.c: 663: else if(flag_picbug < 3 && flag_picbug > 0) flag_picbug -= 1;
  3718  001010  0100               	movlb	0	; () banked
  3719  001012  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3720  001014  D008               	goto	l8386
  3721  001016  0100               	movlb	0	; () banked
  3722  001018  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3723  00101A  E113               	bnz	l8390
  3724  00101C  0E03               	movlw	3
  3725  00101E  0100               	movlb	0	; () banked
  3726  001020  5DE9               	subwf	_flag_picbug& (0+255),w,b
  3727  001022  B0D8               	btfsc	status,0,c
  3728  001024  D00E               	goto	l8390
  3729  001026                     l8386:
  3730                           
  3731                           ; BSR set to: 0
  3732  001026  0100               	movlb	0	; () banked
  3733  001028  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3734  00102A  D00B               	goto	l8390
  3735  00102C  0100               	movlb	0	; () banked
  3736  00102E  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3737  001030  E104               	bnz	u8600
  3738  001032  0100               	movlb	0	; () banked
  3739  001034  05E9               	decf	_flag_picbug& (0+255),w,b
  3740  001036  A0D8               	btfss	status,0,c
  3741  001038  D004               	goto	l8390
  3742  00103A                     u8600:
  3743                           
  3744                           ; BSR set to: 0
  3745  00103A  0100               	movlb	0	; () banked
  3746  00103C  07E9               	decf	_flag_picbug& (0+255),f,b
  3747  00103E  A0D8               	btfss	status,0,c
  3748  001040  07EA               	decf	(_flag_picbug+1)& (0+255),f,b
  3749  001042                     l8390:
  3750                           
  3751                           ;main.c: 664: GIE = 1;
  3752  001042  8EF2               	bsf	intcon,7,c	;volatile
  3753  001044  0012               	return	
  3754  001046                     __end_of_operation:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           tblptrh	equ	0xFF7
  3758                           tblptrl	equ	0xFF6
  3759                           tablat	equ	0xFF5
  3760                           intcon	equ	0xFF2
  3761                           intcon2	equ	0xFF1
  3762                           intcon3	equ	0xFF0
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postdec1	equ	0xFE5
  3766                           fsr1l	equ	0xFE1
  3767                           postinc2	equ	0xFDE
  3768                           postdec2	equ	0xFDD
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8
  3772                           
  3773 ;; *************** function _savedata *****************
  3774 ;; Defined at:
  3775 ;;		line 787 in file "main.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:        0 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    8
  3796 ;; This function calls:
  3797 ;;		_eeprom_readbyte
  3798 ;;		_eeprom_writebyte
  3799 ;; This function is called by:
  3800 ;;		_operation
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text4
  3805  001748                     __ptext4:
  3806                           	opt stack 0
  3807  001748                     _savedata:
  3808                           	opt stack 21
  3809                           
  3810                           ;main.c: 794: eeprom_writebyte(44, eeprom_readbyte(39));
  3811                           
  3812                           ;incstack = 0
  3813  001748  0E00               	movlw	0
  3814  00174A  0100               	movlb	0	; () banked
  3815  00174C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3816  00174E  0E2C               	movlw	44
  3817  001750  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3818  001752  0E00               	movlw	0
  3819  001754  0100               	movlb	0	; () banked
  3820  001756  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3821  001758  0E27               	movlw	39
  3822  00175A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3823  00175C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3824  001760  0100               	movlb	0	; () banked
  3825  001762  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3826  001764  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3827                           
  3828                           ;main.c: 795: eeprom_writebyte(43, eeprom_readbyte(38));
  3829  001768  0E00               	movlw	0
  3830  00176A  0100               	movlb	0	; () banked
  3831  00176C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3832  00176E  0E2B               	movlw	43
  3833  001770  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3834  001772  0E00               	movlw	0
  3835  001774  0100               	movlb	0	; () banked
  3836  001776  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3837  001778  0E26               	movlw	38
  3838  00177A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3839  00177C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3840  001780  0100               	movlb	0	; () banked
  3841  001782  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3842  001784  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3843                           
  3844                           ;main.c: 796: eeprom_writebyte(42, eeprom_readbyte(37));
  3845  001788  0E00               	movlw	0
  3846  00178A  0100               	movlb	0	; () banked
  3847  00178C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3848  00178E  0E2A               	movlw	42
  3849  001790  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3850  001792  0E00               	movlw	0
  3851  001794  0100               	movlb	0	; () banked
  3852  001796  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3853  001798  0E25               	movlw	37
  3854  00179A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3855  00179C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3856  0017A0  0100               	movlb	0	; () banked
  3857  0017A2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3858  0017A4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3859                           
  3860                           ;main.c: 797: eeprom_writebyte(41, eeprom_readbyte(36));
  3861  0017A8  0E00               	movlw	0
  3862  0017AA  0100               	movlb	0	; () banked
  3863  0017AC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3864  0017AE  0E29               	movlw	41
  3865  0017B0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3866  0017B2  0E00               	movlw	0
  3867  0017B4  0100               	movlb	0	; () banked
  3868  0017B6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3869  0017B8  0E24               	movlw	36
  3870  0017BA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3871  0017BC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3872  0017C0  0100               	movlb	0	; () banked
  3873  0017C2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3874  0017C4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3875                           
  3876                           ;main.c: 798: eeprom_writebyte(40, eeprom_readbyte(35));
  3877  0017C8  0E00               	movlw	0
  3878  0017CA  0100               	movlb	0	; () banked
  3879  0017CC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3880  0017CE  0E28               	movlw	40
  3881  0017D0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3882  0017D2  0E00               	movlw	0
  3883  0017D4  0100               	movlb	0	; () banked
  3884  0017D6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3885  0017D8  0E23               	movlw	35
  3886  0017DA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3887  0017DC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3888  0017E0  0100               	movlb	0	; () banked
  3889  0017E2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3890  0017E4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3891                           
  3892                           ;main.c: 800: eeprom_writebyte(39, eeprom_readbyte(34));
  3893  0017E8  0E00               	movlw	0
  3894  0017EA  0100               	movlb	0	; () banked
  3895  0017EC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3896  0017EE  0E27               	movlw	39
  3897  0017F0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3898  0017F2  0E00               	movlw	0
  3899  0017F4  0100               	movlb	0	; () banked
  3900  0017F6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3901  0017F8  0E22               	movlw	34
  3902  0017FA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3903  0017FC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3904  001800  0100               	movlb	0	; () banked
  3905  001802  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3906  001804  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3907                           
  3908                           ;main.c: 801: eeprom_writebyte(38, eeprom_readbyte(33));
  3909  001808  0E00               	movlw	0
  3910  00180A  0100               	movlb	0	; () banked
  3911  00180C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3912  00180E  0E26               	movlw	38
  3913  001810  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3914  001812  0E00               	movlw	0
  3915  001814  0100               	movlb	0	; () banked
  3916  001816  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3917  001818  0E21               	movlw	33
  3918  00181A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3919  00181C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3920  001820  0100               	movlb	0	; () banked
  3921  001822  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3922  001824  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3923                           
  3924                           ;main.c: 802: eeprom_writebyte(37, eeprom_readbyte(32));
  3925  001828  0E00               	movlw	0
  3926  00182A  0100               	movlb	0	; () banked
  3927  00182C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3928  00182E  0E25               	movlw	37
  3929  001830  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3930  001832  0E00               	movlw	0
  3931  001834  0100               	movlb	0	; () banked
  3932  001836  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3933  001838  0E20               	movlw	32
  3934  00183A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3935  00183C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3936  001840  0100               	movlb	0	; () banked
  3937  001842  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3938  001844  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3939                           
  3940                           ;main.c: 803: eeprom_writebyte(36, eeprom_readbyte(31));
  3941  001848  0E00               	movlw	0
  3942  00184A  0100               	movlb	0	; () banked
  3943  00184C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3944  00184E  0E24               	movlw	36
  3945  001850  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3946  001852  0E00               	movlw	0
  3947  001854  0100               	movlb	0	; () banked
  3948  001856  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3949  001858  0E1F               	movlw	31
  3950  00185A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3951  00185C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3952  001860  0100               	movlb	0	; () banked
  3953  001862  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3954  001864  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3955                           
  3956                           ;main.c: 804: eeprom_writebyte(35, eeprom_readbyte(30));
  3957  001868  0E00               	movlw	0
  3958  00186A  0100               	movlb	0	; () banked
  3959  00186C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3960  00186E  0E23               	movlw	35
  3961  001870  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3962  001872  0E00               	movlw	0
  3963  001874  0100               	movlb	0	; () banked
  3964  001876  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3965  001878  0E1E               	movlw	30
  3966  00187A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3967  00187C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3968  001880  0100               	movlb	0	; () banked
  3969  001882  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3970  001884  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3971                           
  3972                           ;main.c: 806: eeprom_writebyte(34, eeprom_readbyte(29));
  3973  001888  0E00               	movlw	0
  3974  00188A  0100               	movlb	0	; () banked
  3975  00188C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3976  00188E  0E22               	movlw	34
  3977  001890  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3978  001892  0E00               	movlw	0
  3979  001894  0100               	movlb	0	; () banked
  3980  001896  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3981  001898  0E1D               	movlw	29
  3982  00189A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3983  00189C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  3984  0018A0  0100               	movlb	0	; () banked
  3985  0018A2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3986  0018A4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  3987                           
  3988                           ;main.c: 807: eeprom_writebyte(33, eeprom_readbyte(28));
  3989  0018A8  0E00               	movlw	0
  3990  0018AA  0100               	movlb	0	; () banked
  3991  0018AC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3992  0018AE  0E21               	movlw	33
  3993  0018B0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3994  0018B2  0E00               	movlw	0
  3995  0018B4  0100               	movlb	0	; () banked
  3996  0018B6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3997  0018B8  0E1C               	movlw	28
  3998  0018BA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3999  0018BC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4000  0018C0  0100               	movlb	0	; () banked
  4001  0018C2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4002  0018C4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4003                           
  4004                           ;main.c: 808: eeprom_writebyte(32, eeprom_readbyte(27));
  4005  0018C8  0E00               	movlw	0
  4006  0018CA  0100               	movlb	0	; () banked
  4007  0018CC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4008  0018CE  0E20               	movlw	32
  4009  0018D0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4010  0018D2  0E00               	movlw	0
  4011  0018D4  0100               	movlb	0	; () banked
  4012  0018D6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4013  0018D8  0E1B               	movlw	27
  4014  0018DA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4015  0018DC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4016  0018E0  0100               	movlb	0	; () banked
  4017  0018E2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4018  0018E4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4019                           
  4020                           ;main.c: 809: eeprom_writebyte(31, eeprom_readbyte(26));
  4021  0018E8  0E00               	movlw	0
  4022  0018EA  0100               	movlb	0	; () banked
  4023  0018EC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4024  0018EE  0E1F               	movlw	31
  4025  0018F0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4026  0018F2  0E00               	movlw	0
  4027  0018F4  0100               	movlb	0	; () banked
  4028  0018F6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4029  0018F8  0E1A               	movlw	26
  4030  0018FA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4031  0018FC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4032  001900  0100               	movlb	0	; () banked
  4033  001902  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4034  001904  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4035                           
  4036                           ;main.c: 810: eeprom_writebyte(30, eeprom_readbyte(25));
  4037  001908  0E00               	movlw	0
  4038  00190A  0100               	movlb	0	; () banked
  4039  00190C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4040  00190E  0E1E               	movlw	30
  4041  001910  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4042  001912  0E00               	movlw	0
  4043  001914  0100               	movlb	0	; () banked
  4044  001916  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4045  001918  0E19               	movlw	25
  4046  00191A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4047  00191C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4048  001920  0100               	movlb	0	; () banked
  4049  001922  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4050  001924  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4051                           
  4052                           ;main.c: 812: eeprom_writebyte(29, eeprom_readbyte(34));
  4053  001928  0E00               	movlw	0
  4054  00192A  0100               	movlb	0	; () banked
  4055  00192C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4056  00192E  0E1D               	movlw	29
  4057  001930  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4058  001932  0E00               	movlw	0
  4059  001934  0100               	movlb	0	; () banked
  4060  001936  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4061  001938  0E22               	movlw	34
  4062  00193A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4063  00193C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4064  001940  0100               	movlb	0	; () banked
  4065  001942  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4066  001944  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4067                           
  4068                           ;main.c: 813: eeprom_writebyte(28, eeprom_readbyte(23));
  4069  001948  0E00               	movlw	0
  4070  00194A  0100               	movlb	0	; () banked
  4071  00194C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4072  00194E  0E1C               	movlw	28
  4073  001950  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4074  001952  0E00               	movlw	0
  4075  001954  0100               	movlb	0	; () banked
  4076  001956  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4077  001958  0E17               	movlw	23
  4078  00195A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4079  00195C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4080  001960  0100               	movlb	0	; () banked
  4081  001962  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4082  001964  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4083                           
  4084                           ;main.c: 814: eeprom_writebyte(27, eeprom_readbyte(22));
  4085  001968  0E00               	movlw	0
  4086  00196A  0100               	movlb	0	; () banked
  4087  00196C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4088  00196E  0E1B               	movlw	27
  4089  001970  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4090  001972  0E00               	movlw	0
  4091  001974  0100               	movlb	0	; () banked
  4092  001976  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4093  001978  0E16               	movlw	22
  4094  00197A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4095  00197C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4096  001980  0100               	movlb	0	; () banked
  4097  001982  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4098  001984  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4099                           
  4100                           ;main.c: 815: eeprom_writebyte(26, eeprom_readbyte(21));
  4101  001988  0E00               	movlw	0
  4102  00198A  0100               	movlb	0	; () banked
  4103  00198C  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4104  00198E  0E1A               	movlw	26
  4105  001990  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4106  001992  0E00               	movlw	0
  4107  001994  0100               	movlb	0	; () banked
  4108  001996  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4109  001998  0E15               	movlw	21
  4110  00199A  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4111  00199C  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4112  0019A0  0100               	movlb	0	; () banked
  4113  0019A2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4114  0019A4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4115                           
  4116                           ;main.c: 816: eeprom_writebyte(25, eeprom_readbyte(20));
  4117  0019A8  0E00               	movlw	0
  4118  0019AA  0100               	movlb	0	; () banked
  4119  0019AC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4120  0019AE  0E19               	movlw	25
  4121  0019B0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4122  0019B2  0E00               	movlw	0
  4123  0019B4  0100               	movlb	0	; () banked
  4124  0019B6  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4125  0019B8  0E14               	movlw	20
  4126  0019BA  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4127  0019BC  EC2D  F02A         	call	_eeprom_readbyte	;wreg free
  4128  0019C0  0100               	movlb	0	; () banked
  4129  0019C2  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4130  0019C4  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4131                           
  4132                           ;main.c: 818: eeprom_writebyte(24, bottle_count_array[4]);
  4133  0019C8  0E00               	movlw	0
  4134  0019CA  0100               	movlb	0	; () banked
  4135  0019CC  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4136  0019CE  0E18               	movlw	24
  4137  0019D0  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4138  0019D2  C0E7  F094         	movff	_bottle_count_array+8,eeprom_writebyte@data
  4139  0019D6  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4140                           
  4141                           ;main.c: 819: eeprom_writebyte(23, bottle_count_array[3]);
  4142  0019DA  0E00               	movlw	0
  4143  0019DC  0100               	movlb	0	; () banked
  4144  0019DE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4145  0019E0  0E17               	movlw	23
  4146  0019E2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4147  0019E4  C0E5  F094         	movff	_bottle_count_array+6,eeprom_writebyte@data
  4148  0019E8  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4149                           
  4150                           ;main.c: 820: eeprom_writebyte(22, bottle_count_array[2]);
  4151  0019EC  0E00               	movlw	0
  4152  0019EE  0100               	movlb	0	; () banked
  4153  0019F0  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4154  0019F2  0E16               	movlw	22
  4155  0019F4  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4156  0019F6  C0E3  F094         	movff	_bottle_count_array+4,eeprom_writebyte@data
  4157  0019FA  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4158                           
  4159                           ;main.c: 821: eeprom_writebyte(21, bottle_count_array[1]);
  4160  0019FE  0E00               	movlw	0
  4161  001A00  0100               	movlb	0	; () banked
  4162  001A02  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4163  001A04  0E15               	movlw	21
  4164  001A06  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4165  001A08  C0E1  F094         	movff	_bottle_count_array+2,eeprom_writebyte@data
  4166  001A0C  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4167                           
  4168                           ;main.c: 822: eeprom_writebyte(20, bottle_count_array[0]);
  4169  001A10  0E00               	movlw	0
  4170  001A12  0100               	movlb	0	; () banked
  4171  001A14  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4172  001A16  0E14               	movlw	20
  4173  001A18  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4174  001A1A  C0DF  F094         	movff	_bottle_count_array,eeprom_writebyte@data
  4175  001A1E  ECA2  F029         	call	_eeprom_writebyte	;wreg free
  4176  001A22  0012               	return		;funcret
  4177  001A24                     __end_of_savedata:
  4178                           	opt stack 0
  4179                           tblptru	equ	0xFF8
  4180                           tblptrh	equ	0xFF7
  4181                           tblptrl	equ	0xFF6
  4182                           tablat	equ	0xFF5
  4183                           intcon	equ	0xFF2
  4184                           intcon2	equ	0xFF1
  4185                           intcon3	equ	0xFF0
  4186                           postinc0	equ	0xFEE
  4187                           wreg	equ	0xFE8
  4188                           postdec1	equ	0xFE5
  4189                           fsr1l	equ	0xFE1
  4190                           postinc2	equ	0xFDE
  4191                           postdec2	equ	0xFDD
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _eeprom_writebyte *****************
  4197 ;; Defined at:
  4198 ;;		line 761 in file "main.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  address         2   18[BANK0 ] unsigned int 
  4201 ;;  data            1   20[BANK0 ] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4213 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;Total ram usage:        3 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    7
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;;		_savedata
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text5
  4229  005344                     __ptext5:
  4230                           	opt stack 0
  4231  005344                     _eeprom_writebyte:
  4232                           	opt stack 21
  4233                           
  4234                           ;main.c: 763: EEADRH = (uint8_t)(address >> 8);
  4235                           
  4236                           ;incstack = 0
  4237  005344  0100               	movlb	0	; () banked
  4238  005346  5193               	movf	(eeprom_writebyte@address+1)& (0+255),w,b
  4239  005348  6EAA               	movwf	4010,c	;volatile
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;main.c: 764: EEADR = (uint8_t)address;
  4243  00534A  C092  FFA9         	movff	eeprom_writebyte@address,4009	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 766: EEDATA = data;
  4247  00534E  C094  FFA8         	movff	eeprom_writebyte@data,4008	;volatile
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;main.c: 767: EECON1bits.EEPGD = 0;
  4251  005352  9EA6               	bcf	4006,7,c	;volatile
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;main.c: 768: EECON1bits.CFGS = 0;
  4255  005354  9CA6               	bcf	4006,6,c	;volatile
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 769: EECON1bits.WREN = 1;
  4259  005356  84A6               	bsf	4006,2,c	;volatile
  4260                           
  4261                           ;main.c: 773: EECON2 = 0x55;
  4262  005358  0E55               	movlw	85
  4263  00535A  6EA7               	movwf	4007,c	;volatile
  4264                           
  4265                           ;main.c: 774: EECON2 = 0xAA;
  4266  00535C  0EAA               	movlw	170
  4267  00535E  6EA7               	movwf	4007,c	;volatile
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;main.c: 775: EECON1bits.WR = 1;
  4271  005360  82A6               	bsf	4006,1,c	;volatile
  4272  005362                     l596:
  4273  005362  A8A1               	btfss	4001,4,c	;volatile
  4274  005364  D7FE               	goto	l596
  4275                           
  4276                           ;main.c: 781: }
  4277                           ;main.c: 783: PIR2bits.EEIF = 0;
  4278  005366  98A1               	bcf	4001,4,c	;volatile
  4279                           
  4280                           ;main.c: 784: EECON1bits.WREN = 0;
  4281  005368  94A6               	bcf	4006,2,c	;volatile
  4282  00536A  0012               	return		;funcret
  4283  00536C                     __end_of_eeprom_writebyte:
  4284                           	opt stack 0
  4285                           tblptru	equ	0xFF8
  4286                           tblptrh	equ	0xFF7
  4287                           tblptrl	equ	0xFF6
  4288                           tablat	equ	0xFF5
  4289                           intcon	equ	0xFF2
  4290                           intcon2	equ	0xFF1
  4291                           intcon3	equ	0xFF0
  4292                           postinc0	equ	0xFEE
  4293                           wreg	equ	0xFE8
  4294                           postdec1	equ	0xFE5
  4295                           fsr1l	equ	0xFE1
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _eeprom_readbyte *****************
  4303 ;; Defined at:
  4304 ;;		line 744 in file "main.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  address         2   16[BANK0 ] unsigned int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      unsigned char 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    7
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_savedata
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text6
  4333  00545A                     __ptext6:
  4334                           	opt stack 0
  4335  00545A                     _eeprom_readbyte:
  4336                           	opt stack 21
  4337                           
  4338                           ;main.c: 747: EEADRH = (uint8_t)(address >> 8);
  4339                           
  4340                           ;incstack = 0
  4341  00545A  0100               	movlb	0	; () banked
  4342  00545C  5191               	movf	(eeprom_readbyte@address+1)& (0+255),w,b
  4343  00545E  6EAA               	movwf	4010,c	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;main.c: 748: EEADR = (uint8_t)address;
  4347  005460  C090  FFA9         	movff	eeprom_readbyte@address,4009	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;main.c: 750: EECON1bits.EEPGD = 0;
  4351  005464  9EA6               	bcf	4006,7,c	;volatile
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;main.c: 751: EECON1bits.CFGS = 0;
  4355  005466  9CA6               	bcf	4006,6,c	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;main.c: 752: EECON1bits.RD = 1;
  4359  005468  80A6               	bsf	4006,0,c	;volatile
  4360  00546A                     l590:
  4361  00546A  B0A6               	btfsc	4006,0,c	;volatile
  4362  00546C  D7FE               	goto	l590
  4363                           
  4364                           ;main.c: 758: return EEDATA;
  4365  00546E  50A8               	movf	4008,w,c	;volatile
  4366  005470  0012               	return	
  4367  005472                     __end_of_eeprom_readbyte:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           intcon	equ	0xFF2
  4374                           intcon2	equ	0xFF1
  4375                           intcon3	equ	0xFF0
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           postdec1	equ	0xFE5
  4379                           fsr1l	equ	0xFE1
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _read_time *****************
  4387 ;; Defined at:
  4388 ;;		line 398 in file "main.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  i               1   19[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    9
  4409 ;; This function calls:
  4410 ;;		_I2C_Master_Read
  4411 ;;		_I2C_Master_Start
  4412 ;;		_I2C_Master_Stop
  4413 ;;		_I2C_Master_Write
  4414 ;; This function is called by:
  4415 ;;		_operation
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text7
  4420  004D04                     __ptext7:
  4421                           	opt stack 0
  4422  004D04                     _read_time:
  4423                           	opt stack 20
  4424                           
  4425                           ;main.c: 400: I2C_Master_Start();
  4426                           
  4427                           ;incstack = 0
  4428  004D04  EC86  F02A         	call	_I2C_Master_Start	;wreg free
  4429                           
  4430                           ;main.c: 401: I2C_Master_Write(0b11010000);
  4431  004D08  0E00               	movlw	0
  4432  004D0A  0100               	movlb	0	; () banked
  4433  004D0C  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4434  004D0E  0ED0               	movlw	208
  4435  004D10  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4436  004D12  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  4437                           
  4438                           ;main.c: 402: I2C_Master_Write(0x00);
  4439  004D16  0E00               	movlw	0
  4440  004D18  0100               	movlb	0	; () banked
  4441  004D1A  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4442  004D1C  0E00               	movlw	0
  4443  004D1E  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4444  004D20  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  4445                           
  4446                           ;main.c: 403: I2C_Master_Stop();
  4447  004D24  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
  4448                           
  4449                           ;main.c: 406: I2C_Master_Start();
  4450  004D28  EC86  F02A         	call	_I2C_Master_Start	;wreg free
  4451                           
  4452                           ;main.c: 407: I2C_Master_Write(0b11010001);
  4453  004D2C  0E00               	movlw	0
  4454  004D2E  0100               	movlb	0	; () banked
  4455  004D30  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4456  004D32  0ED1               	movlw	209
  4457  004D34  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4458  004D36  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  4459                           
  4460                           ;main.c: 408: for(unsigned char i=0;i<0x06;i++){
  4461  004D3A  0E00               	movlw	0
  4462  004D3C  0100               	movlb	0	; () banked
  4463  004D3E  6F93               	movwf	read_time@i& (0+255),b
  4464  004D40                     l7974:
  4465                           
  4466                           ; BSR set to: 0
  4467  004D40  0E05               	movlw	5
  4468  004D42  0100               	movlb	0	; () banked
  4469  004D44  6593               	cpfsgt	read_time@i& (0+255),b
  4470  004D46  D001               	goto	l7978
  4471  004D48  D010               	goto	l7984
  4472  004D4A                     l7978:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;main.c: 409: time[i] = I2C_Master_Read(1);
  4476  004D4A  0100               	movlb	0	; () banked
  4477  004D4C  5193               	movf	read_time@i& (0+255),w,b
  4478  004D4E  0D01               	mullw	1
  4479  004D50  0E10               	movlw	low _time
  4480  004D52  24F3               	addwf	prodl,w,c
  4481  004D54  6ED9               	movwf	fsr2l,c
  4482  004D56  0E01               	movlw	high _time
  4483  004D58  20F4               	addwfc	prodh,w,c
  4484  004D5A  6EDA               	movwf	fsr2h,c
  4485  004D5C  0E01               	movlw	1
  4486  004D5E  EC61  F029         	call	_I2C_Master_Read
  4487  004D62  6EDF               	movwf	indf2,c
  4488  004D64  0100               	movlb	0	; () banked
  4489  004D66  2B93               	incf	read_time@i& (0+255),f,b
  4490  004D68  D7EB               	goto	l7974
  4491  004D6A                     l7984:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;main.c: 410: }
  4495                           ;main.c: 411: time[6] = I2C_Master_Read(0);
  4496  004D6A  0E00               	movlw	0
  4497  004D6C  EC61  F029         	call	_I2C_Master_Read
  4498  004D70  0101               	movlb	1	; () banked
  4499  004D72  6F16               	movwf	(_time+6)& (0+255),b
  4500                           
  4501                           ;main.c: 412: I2C_Master_Stop();
  4502  004D74  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
  4503  004D78  0012               	return	
  4504  004D7A                     __end_of_read_time:
  4505                           	opt stack 0
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           intcon	equ	0xFF2
  4513                           intcon2	equ	0xFF1
  4514                           intcon3	equ	0xFF0
  4515                           postinc0	equ	0xFEE
  4516                           wreg	equ	0xFE8
  4517                           postdec1	equ	0xFE5
  4518                           fsr1l	equ	0xFE1
  4519                           indf2	equ	0xFDF
  4520                           postinc2	equ	0xFDE
  4521                           postdec2	equ	0xFDD
  4522                           fsr2h	equ	0xFDA
  4523                           fsr2l	equ	0xFD9
  4524                           status	equ	0xFD8
  4525                           
  4526 ;; *************** function _read_colorsensor *****************
  4527 ;; Defined at:
  4528 ;;		line 706 in file "main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    9
  4549 ;; This function calls:
  4550 ;;		_I2C_Master_Read
  4551 ;;		_I2C_Master_Start
  4552 ;;		_I2C_Master_Stop
  4553 ;;		_I2C_Master_Write
  4554 ;; This function is called by:
  4555 ;;		_standby
  4556 ;;		_operation
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text8
  4561  003C46                     __ptext8:
  4562                           	opt stack 0
  4563  003C46                     _read_colorsensor:
  4564                           	opt stack 20
  4565                           
  4566                           ;main.c: 725: I2C_Master_Start();
  4567                           
  4568                           ;incstack = 0
  4569  003C46  EC86  F02A         	call	_I2C_Master_Start	;wreg free
  4570                           
  4571                           ;main.c: 726: I2C_Master_Write(0b01010011);
  4572  003C4A  0E00               	movlw	0
  4573  003C4C  0100               	movlb	0	; () banked
  4574  003C4E  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4575  003C50  0E53               	movlw	83
  4576  003C52  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4577  003C54  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  4578                           
  4579                           ;main.c: 727: color_low[0] = I2C_Master_Read(1);
  4580  003C58  0E01               	movlw	1
  4581  003C5A  EC61  F029         	call	_I2C_Master_Read
  4582  003C5E  0101               	movlb	1	; () banked
  4583  003C60  6F1B               	movwf	_color_low& (0+255),b
  4584                           
  4585                           ;main.c: 728: color_high[0] = I2C_Master_Read(1);
  4586  003C62  0E01               	movlw	1
  4587  003C64  EC61  F029         	call	_I2C_Master_Read
  4588  003C68  0101               	movlb	1	; () banked
  4589  003C6A  6F17               	movwf	_color_high& (0+255),b
  4590                           
  4591                           ;main.c: 729: color_low[1] = I2C_Master_Read(1);
  4592  003C6C  0E01               	movlw	1
  4593  003C6E  EC61  F029         	call	_I2C_Master_Read
  4594  003C72  0101               	movlb	1	; () banked
  4595  003C74  6F1C               	movwf	(_color_low+1)& (0+255),b
  4596                           
  4597                           ;main.c: 730: color_high[1] = I2C_Master_Read(1);
  4598  003C76  0E01               	movlw	1
  4599  003C78  EC61  F029         	call	_I2C_Master_Read
  4600  003C7C  0101               	movlb	1	; () banked
  4601  003C7E  6F18               	movwf	(_color_high+1)& (0+255),b
  4602                           
  4603                           ;main.c: 731: color_low[2] = I2C_Master_Read(1);
  4604  003C80  0E01               	movlw	1
  4605  003C82  EC61  F029         	call	_I2C_Master_Read
  4606  003C86  0101               	movlb	1	; () banked
  4607  003C88  6F1D               	movwf	(_color_low+2)& (0+255),b
  4608                           
  4609                           ;main.c: 732: color_high[2] = I2C_Master_Read(1);
  4610  003C8A  0E01               	movlw	1
  4611  003C8C  EC61  F029         	call	_I2C_Master_Read
  4612  003C90  0101               	movlb	1	; () banked
  4613  003C92  6F19               	movwf	(_color_high+2)& (0+255),b
  4614                           
  4615                           ;main.c: 733: color_low[3] = I2C_Master_Read(1);
  4616  003C94  0E01               	movlw	1
  4617  003C96  EC61  F029         	call	_I2C_Master_Read
  4618  003C9A  0101               	movlb	1	; () banked
  4619  003C9C  6F1E               	movwf	(_color_low+3)& (0+255),b
  4620                           
  4621                           ;main.c: 734: color_high[3] = I2C_Master_Read(0);
  4622  003C9E  0E00               	movlw	0
  4623  003CA0  EC61  F029         	call	_I2C_Master_Read
  4624  003CA4  0101               	movlb	1	; () banked
  4625  003CA6  6F1A               	movwf	(_color_high+3)& (0+255),b
  4626                           
  4627                           ;main.c: 735: I2C_Master_Stop();
  4628  003CA8  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
  4629                           
  4630                           ;main.c: 736: color[0] = (color_high[0] << 8)|(color_low[0]);
  4631  003CAC  0101               	movlb	1	; () banked
  4632  003CAE  511B               	movf	_color_low& (0+255),w,b
  4633  003CB0  C117  F093         	movff	_color_high,??_read_colorsensor
  4634  003CB4  0100               	movlb	0	; () banked
  4635  003CB6  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4636  003CB8  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4637  003CBC  0100               	movlb	0	; () banked
  4638  003CBE  6B93               	clrf	??_read_colorsensor& (0+255),b
  4639  003CC0  0100               	movlb	0	; () banked
  4640  003CC2  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4641  003CC4  0101               	movlb	1	; () banked
  4642  003CC6  6F00               	movwf	_color& (0+255),b
  4643  003CC8  0100               	movlb	0	; () banked
  4644  003CCA  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4645  003CCC  0101               	movlb	1	; () banked
  4646  003CCE  6F01               	movwf	(_color+1)& (0+255),b
  4647                           
  4648                           ; BSR set to: 1
  4649                           ;main.c: 737: color[1] = (color_high[1] << 8)|(color_low[1]);
  4650  003CD0  0101               	movlb	1	; () banked
  4651  003CD2  511C               	movf	(_color_low+1)& (0+255),w,b
  4652  003CD4  C118  F093         	movff	_color_high+1,??_read_colorsensor
  4653  003CD8  0100               	movlb	0	; () banked
  4654  003CDA  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4655  003CDC  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4656  003CE0  0100               	movlb	0	; () banked
  4657  003CE2  6B93               	clrf	??_read_colorsensor& (0+255),b
  4658  003CE4  0100               	movlb	0	; () banked
  4659  003CE6  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4660  003CE8  0101               	movlb	1	; () banked
  4661  003CEA  6F02               	movwf	(_color+2)& (0+255),b
  4662  003CEC  0100               	movlb	0	; () banked
  4663  003CEE  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4664  003CF0  0101               	movlb	1	; () banked
  4665  003CF2  6F03               	movwf	(_color+3)& (0+255),b
  4666                           
  4667                           ; BSR set to: 1
  4668                           ;main.c: 738: color[2] = (color_high[2] << 8)|(color_low[2]);
  4669  003CF4  0101               	movlb	1	; () banked
  4670  003CF6  511D               	movf	(_color_low+2)& (0+255),w,b
  4671  003CF8  C119  F093         	movff	_color_high+2,??_read_colorsensor
  4672  003CFC  0100               	movlb	0	; () banked
  4673  003CFE  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4674  003D00  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4675  003D04  0100               	movlb	0	; () banked
  4676  003D06  6B93               	clrf	??_read_colorsensor& (0+255),b
  4677  003D08  0100               	movlb	0	; () banked
  4678  003D0A  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4679  003D0C  0101               	movlb	1	; () banked
  4680  003D0E  6F04               	movwf	(_color+4)& (0+255),b
  4681  003D10  0100               	movlb	0	; () banked
  4682  003D12  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4683  003D14  0101               	movlb	1	; () banked
  4684  003D16  6F05               	movwf	(_color+5)& (0+255),b
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;main.c: 739: color[3] = (color_high[3] << 8)|(color_low[3]);
  4688  003D18  0101               	movlb	1	; () banked
  4689  003D1A  511E               	movf	(_color_low+3)& (0+255),w,b
  4690  003D1C  C11A  F093         	movff	_color_high+3,??_read_colorsensor
  4691  003D20  0100               	movlb	0	; () banked
  4692  003D22  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4693  003D24  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4694  003D28  0100               	movlb	0	; () banked
  4695  003D2A  6B93               	clrf	??_read_colorsensor& (0+255),b
  4696  003D2C  0100               	movlb	0	; () banked
  4697  003D2E  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4698  003D30  0101               	movlb	1	; () banked
  4699  003D32  6F06               	movwf	(_color+6)& (0+255),b
  4700  003D34  0100               	movlb	0	; () banked
  4701  003D36  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4702  003D38  0101               	movlb	1	; () banked
  4703  003D3A  6F07               	movwf	(_color+7)& (0+255),b
  4704  003D3C  0012               	return	
  4705  003D3E                     __end_of_read_colorsensor:
  4706                           	opt stack 0
  4707                           tblptru	equ	0xFF8
  4708                           tblptrh	equ	0xFF7
  4709                           tblptrl	equ	0xFF6
  4710                           tablat	equ	0xFF5
  4711                           prodh	equ	0xFF4
  4712                           prodl	equ	0xFF3
  4713                           intcon	equ	0xFF2
  4714                           intcon2	equ	0xFF1
  4715                           intcon3	equ	0xFF0
  4716                           postinc0	equ	0xFEE
  4717                           wreg	equ	0xFE8
  4718                           postdec1	equ	0xFE5
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           postinc2	equ	0xFDE
  4722                           postdec2	equ	0xFDD
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _dec_to_hex *****************
  4728 ;; Defined at:
  4729 ;;		line 361 in file "main.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  num             2   91[BANK0 ] int 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  quotient        2   35[BANK1 ] int 
  4734 ;;  hexnum          2   33[BANK1 ] int 
  4735 ;;  i               2   31[BANK1 ] int 
  4736 ;;  temp            2   29[BANK1 ] int 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2   91[BANK0 ] int 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:       16 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:   12
  4753 ;; This function calls:
  4754 ;;		___awdiv
  4755 ;;		___awtoft
  4756 ;;		___ftadd
  4757 ;;		___ftmul
  4758 ;;		___fttol
  4759 ;;		_pow
  4760 ;; This function is called by:
  4761 ;;		_operation
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text9
  4766  00321A                     __ptext9:
  4767                           	opt stack 0
  4768  00321A                     _dec_to_hex:
  4769                           	opt stack 17
  4770                           
  4771                           ;main.c: 362: int i = 0, quotient = num, temp, hexnum = 0;
  4772                           
  4773                           ; BSR set to: 1
  4774                           ;incstack = 0
  4775  00321A  0E00               	movlw	0
  4776  00321C  0101               	movlb	1	; () banked
  4777  00321E  6F69               	movwf	(dec_to_hex@i+1)& (0+255),b
  4778  003220  0E00               	movlw	0
  4779  003222  6F68               	movwf	dec_to_hex@i& (0+255),b
  4780                           
  4781                           ; BSR set to: 1
  4782  003224  C0DB  F16C         	movff	dec_to_hex@num,dec_to_hex@quotient
  4783  003228  C0DC  F16D         	movff	dec_to_hex@num+1,dec_to_hex@quotient+1
  4784  00322C  0E00               	movlw	0
  4785  00322E  0101               	movlb	1	; () banked
  4786  003230  6F6B               	movwf	(dec_to_hex@hexnum+1)& (0+255),b
  4787  003232  0E00               	movlw	0
  4788  003234  6F6A               	movwf	dec_to_hex@hexnum& (0+255),b
  4789                           
  4790                           ;main.c: 364: while (quotient != 0) {
  4791  003236  D070               	goto	l8138
  4792  003238                     l8126:
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;main.c: 365: temp = quotient % 16;
  4796  003238  0E0F               	movlw	15
  4797  00323A  0101               	movlb	1	; () banked
  4798  00323C  156C               	andwf	dec_to_hex@quotient& (0+255),w,b
  4799  00323E  0101               	movlb	1	; () banked
  4800  003240  6F66               	movwf	dec_to_hex@temp& (0+255),b
  4801  003242  0101               	movlb	1	; () banked
  4802  003244  6B67               	clrf	(dec_to_hex@temp+1)& (0+255),b
  4803                           
  4804                           ; BSR set to: 1
  4805                           ;main.c: 366: hexnum += temp*pow(10,i);
  4806  003246  C168  F098         	movff	dec_to_hex@i,___awtoft@c
  4807  00324A  C169  F099         	movff	dec_to_hex@i+1,___awtoft@c+1
  4808  00324E  EC77  F028         	call	___awtoft	;wreg free
  4809  003252  C098  F160         	movff	?___awtoft,_dec_to_hex$1410
  4810  003256  C099  F161         	movff	?___awtoft+1,_dec_to_hex$1410+1
  4811  00325A  C09A  F162         	movff	?___awtoft+2,_dec_to_hex$1410+2
  4812                           
  4813                           ;main.c: 366: hexnum += temp*pow(10,i);
  4814  00325E  C160  F152         	movff	_dec_to_hex$1410,pow@y
  4815  003262  C161  F153         	movff	_dec_to_hex$1410+1,pow@y+1
  4816  003266  C162  F154         	movff	_dec_to_hex$1410+2,pow@y+2
  4817  00326A  0E00               	movlw	0
  4818  00326C  0101               	movlb	1	; () banked
  4819  00326E  6F4F               	movwf	pow@x& (0+255),b
  4820  003270  0E20               	movlw	32
  4821  003272  0101               	movlb	1	; () banked
  4822  003274  6F50               	movwf	(pow@x+1)& (0+255),b
  4823  003276  0E41               	movlw	65
  4824  003278  0101               	movlb	1	; () banked
  4825  00327A  6F51               	movwf	(pow@x+2)& (0+255),b
  4826  00327C  ECE8  F012         	call	_pow	;wreg free
  4827  003280  C14F  F163         	movff	?_pow,_dec_to_hex$1411
  4828  003284  C150  F164         	movff	?_pow+1,_dec_to_hex$1411+1
  4829  003288  C151  F165         	movff	?_pow+2,_dec_to_hex$1411+2
  4830                           
  4831                           ;main.c: 366: hexnum += temp*pow(10,i);
  4832  00328C  C163  F09F         	movff	_dec_to_hex$1411,___ftmul@f2
  4833  003290  C164  F0A0         	movff	_dec_to_hex$1411+1,___ftmul@f2+1
  4834  003294  C165  F0A1         	movff	_dec_to_hex$1411+2,___ftmul@f2+2
  4835  003298  C166  F098         	movff	dec_to_hex@temp,___awtoft@c
  4836  00329C  C167  F099         	movff	dec_to_hex@temp+1,___awtoft@c+1
  4837  0032A0  EC77  F028         	call	___awtoft	;wreg free
  4838  0032A4  C098  F09C         	movff	?___awtoft,___ftmul@f1
  4839  0032A8  C099  F09D         	movff	?___awtoft+1,___ftmul@f1+1
  4840  0032AC  C09A  F09E         	movff	?___awtoft+2,___ftmul@f1+2
  4841  0032B0  EC53  F015         	call	___ftmul	;wreg free
  4842  0032B4  C09C  F0AE         	movff	?___ftmul,___ftadd@f2
  4843  0032B8  C09D  F0AF         	movff	?___ftmul+1,___ftadd@f2+1
  4844  0032BC  C09E  F0B0         	movff	?___ftmul+2,___ftadd@f2+2
  4845  0032C0  C16A  F098         	movff	dec_to_hex@hexnum,___awtoft@c
  4846  0032C4  C16B  F099         	movff	dec_to_hex@hexnum+1,___awtoft@c+1
  4847  0032C8  EC77  F028         	call	___awtoft	;wreg free
  4848  0032CC  C098  F0AB         	movff	?___awtoft,___ftadd@f1
  4849  0032D0  C099  F0AC         	movff	?___awtoft+1,___ftadd@f1+1
  4850  0032D4  C09A  F0AD         	movff	?___awtoft+2,___ftadd@f1+2
  4851  0032D8  EC76  F00E         	call	___ftadd	;wreg free
  4852  0032DC  C0AB  F0B7         	movff	?___ftadd,___fttol@f1
  4853  0032E0  C0AC  F0B8         	movff	?___ftadd+1,___fttol@f1+1
  4854  0032E4  C0AD  F0B9         	movff	?___ftadd+2,___fttol@f1+2
  4855  0032E8  EC50  F017         	call	___fttol	;wreg free
  4856  0032EC  C0B7  F16A         	movff	?___fttol,dec_to_hex@hexnum
  4857  0032F0  C0B8  F16B         	movff	?___fttol+1,dec_to_hex@hexnum+1
  4858                           
  4859                           ;main.c: 367: quotient = quotient / 16;
  4860  0032F4  C16C  F090         	movff	dec_to_hex@quotient,___awdiv@dividend
  4861  0032F8  C16D  F091         	movff	dec_to_hex@quotient+1,___awdiv@dividend+1
  4862  0032FC  0E00               	movlw	0
  4863  0032FE  0100               	movlb	0	; () banked
  4864  003300  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  4865  003302  0E10               	movlw	16
  4866  003304  6F92               	movwf	___awdiv@divisor& (0+255),b
  4867  003306  ECEF  F022         	call	___awdiv	;wreg free
  4868  00330A  C090  F16C         	movff	?___awdiv,dec_to_hex@quotient
  4869  00330E  C091  F16D         	movff	?___awdiv+1,dec_to_hex@quotient+1
  4870                           
  4871                           ;main.c: 368: i += 1;
  4872  003312  0101               	movlb	1	; () banked
  4873  003314  4B68               	infsnz	dec_to_hex@i& (0+255),f,b
  4874  003316  2B69               	incf	(dec_to_hex@i+1)& (0+255),f,b
  4875  003318                     l8138:
  4876                           
  4877                           ; BSR set to: 1
  4878  003318  0101               	movlb	1	; () banked
  4879  00331A  516C               	movf	dec_to_hex@quotient& (0+255),w,b
  4880  00331C  0101               	movlb	1	; () banked
  4881  00331E  116D               	iorwf	(dec_to_hex@quotient+1)& (0+255),w,b
  4882  003320  A4D8               	btfss	status,2,c
  4883  003322  D78A               	goto	l8126
  4884                           
  4885                           ; BSR set to: 1
  4886                           ;main.c: 369: }
  4887                           ;main.c: 370: return hexnum;
  4888  003324  C16A  F0DB         	movff	dec_to_hex@hexnum,?_dec_to_hex
  4889  003328  C16B  F0DC         	movff	dec_to_hex@hexnum+1,?_dec_to_hex+1
  4890                           
  4891                           ; BSR set to: 1
  4892  00332C  0012               	return		;funcret
  4893  00332E                     __end_of_dec_to_hex:
  4894                           	opt stack 0
  4895                           tblptru	equ	0xFF8
  4896                           tblptrh	equ	0xFF7
  4897                           tblptrl	equ	0xFF6
  4898                           tablat	equ	0xFF5
  4899                           prodh	equ	0xFF4
  4900                           prodl	equ	0xFF3
  4901                           intcon	equ	0xFF2
  4902                           intcon2	equ	0xFF1
  4903                           intcon3	equ	0xFF0
  4904                           postinc0	equ	0xFEE
  4905                           wreg	equ	0xFE8
  4906                           postdec1	equ	0xFE5
  4907                           fsr1l	equ	0xFE1
  4908                           indf2	equ	0xFDF
  4909                           postinc2	equ	0xFDE
  4910                           postdec2	equ	0xFDD
  4911                           fsr2h	equ	0xFDA
  4912                           fsr2l	equ	0xFD9
  4913                           status	equ	0xFD8
  4914                           
  4915 ;; *************** function _pow *****************
  4916 ;; Defined at:
  4917 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\pow.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  x               3    6[BANK1 ] int 
  4920 ;;  y               3    9[BANK1 ] int 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  yi              4   19[BANK1 ] unsigned long 
  4923 ;;  sign            1   18[BANK1 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  3    6[BANK1 ] unsigned char 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4933 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;Total ram usage:       17 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:   11
  4940 ;; This function calls:
  4941 ;;		___ftge
  4942 ;;		___ftmul
  4943 ;;		___ftneg
  4944 ;;		___fttol
  4945 ;;		___lltoft
  4946 ;;		_exp
  4947 ;;		_log
  4948 ;; This function is called by:
  4949 ;;		_dec_to_hex
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text10
  4954  0025D0                     __ptext10:
  4955                           	opt stack 0
  4956  0025D0                     _pow:
  4957                           	opt stack 17
  4958                           
  4959                           ; BSR set to: 1
  4960                           ;incstack = 0
  4961  0025D0  0E00               	movlw	0
  4962  0025D2  0101               	movlb	1	; () banked
  4963  0025D4  6F5B               	movwf	pow@sign& (0+255),b
  4964                           
  4965                           ; BSR set to: 1
  4966  0025D6  0101               	movlb	1	; () banked
  4967  0025D8  514F               	movf	pow@x& (0+255),w,b
  4968  0025DA  0101               	movlb	1	; () banked
  4969  0025DC  1150               	iorwf	(pow@x+1)& (0+255),w,b
  4970  0025DE  0101               	movlb	1	; () banked
  4971  0025E0  1151               	iorwf	(pow@x+2)& (0+255),w,b
  4972  0025E2  A4D8               	btfss	status,2,c
  4973  0025E4  D023               	goto	l7892
  4974                           
  4975                           ; BSR set to: 1
  4976  0025E6  0E00               	movlw	0
  4977  0025E8  0100               	movlb	0	; () banked
  4978  0025EA  6FA7               	movwf	___ftge@ff1& (0+255),b
  4979  0025EC  0E00               	movlw	0
  4980  0025EE  0100               	movlb	0	; () banked
  4981  0025F0  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  4982  0025F2  0E00               	movlw	0
  4983  0025F4  0100               	movlb	0	; () banked
  4984  0025F6  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  4985  0025F8  C152  F0AA         	movff	pow@y,___ftge@ff2
  4986  0025FC  C153  F0AB         	movff	pow@y+1,___ftge@ff2+1
  4987  002600  C154  F0AC         	movff	pow@y+2,___ftge@ff2+2
  4988  002604  EC28  F022         	call	___ftge	;wreg free
  4989  002608  0100               	movlb	0	; () banked
  4990  00260A  A0D8               	btfss	status,0,c
  4991  00260C  D005               	goto	l1114
  4992                           
  4993                           ; BSR set to: 0
  4994  00260E  0E00               	movlw	0
  4995  002610  0101               	movlb	1	; () banked
  4996  002612  6F30               	movwf	(_errno+1)& (0+255),b
  4997  002614  0E21               	movlw	33
  4998  002616  6F2F               	movwf	_errno& (0+255),b
  4999  002618                     l1114:
  5000  002618  0E00               	movlw	0
  5001  00261A  0101               	movlb	1	; () banked
  5002  00261C  6F4F               	movwf	?_pow& (0+255),b
  5003  00261E  0E00               	movlw	0
  5004  002620  0101               	movlb	1	; () banked
  5005  002622  6F50               	movwf	(?_pow+1)& (0+255),b
  5006  002624  0E00               	movlw	0
  5007  002626  0101               	movlb	1	; () banked
  5008  002628  6F51               	movwf	(?_pow+2)& (0+255),b
  5009                           
  5010                           ; BSR set to: 1
  5011  00262A  0012               	return	
  5012  00262C                     l7892:
  5013                           
  5014                           ; BSR set to: 1
  5015  00262C  0101               	movlb	1	; () banked
  5016  00262E  5152               	movf	pow@y& (0+255),w,b
  5017  002630  0101               	movlb	1	; () banked
  5018  002632  1153               	iorwf	(pow@y+1)& (0+255),w,b
  5019  002634  0101               	movlb	1	; () banked
  5020  002636  1154               	iorwf	(pow@y+2)& (0+255),w,b
  5021  002638  A4D8               	btfss	status,2,c
  5022  00263A  D00A               	goto	l7898
  5023                           
  5024                           ; BSR set to: 1
  5025  00263C  0E00               	movlw	0
  5026  00263E  0101               	movlb	1	; () banked
  5027  002640  6F4F               	movwf	?_pow& (0+255),b
  5028  002642  0E80               	movlw	128
  5029  002644  0101               	movlb	1	; () banked
  5030  002646  6F50               	movwf	(?_pow+1)& (0+255),b
  5031  002648  0E3F               	movlw	63
  5032  00264A  0101               	movlb	1	; () banked
  5033  00264C  6F51               	movwf	(?_pow+2)& (0+255),b
  5034                           
  5035                           ; BSR set to: 1
  5036  00264E  0012               	return	
  5037  002650                     l7898:
  5038                           
  5039                           ; BSR set to: 1
  5040  002650  0101               	movlb	1	; () banked
  5041  002652  AF51               	btfss	(pow@x+2)& (0+255),7,b
  5042  002654  D04C               	goto	l7910
  5043                           
  5044                           ; BSR set to: 1
  5045  002656  C152  F0B7         	movff	pow@y,___fttol@f1
  5046  00265A  C153  F0B8         	movff	pow@y+1,___fttol@f1+1
  5047  00265E  C154  F0B9         	movff	pow@y+2,___fttol@f1+2
  5048  002662  EC50  F017         	call	___fttol	;wreg free
  5049  002666  C0B7  F15C         	movff	?___fttol,pow@yi
  5050  00266A  C0B8  F15D         	movff	?___fttol+1,pow@yi+1
  5051  00266E  C0B9  F15E         	movff	?___fttol+2,pow@yi+2
  5052  002672  C0BA  F15F         	movff	?___fttol+3,pow@yi+3
  5053  002676  C15C  F098         	movff	pow@yi,___lltoft@c
  5054  00267A  C15D  F099         	movff	pow@yi+1,___lltoft@c+1
  5055  00267E  C15E  F09A         	movff	pow@yi+2,___lltoft@c+2
  5056  002682  C15F  F09B         	movff	pow@yi+3,___lltoft@c+3
  5057  002686  ECCC  F025         	call	___lltoft	;wreg free
  5058  00268A  0101               	movlb	1	; () banked
  5059  00268C  5152               	movf	pow@y& (0+255),w,b
  5060  00268E  0100               	movlb	0	; () banked
  5061  002690  1998               	xorwf	?___lltoft& (0+255),w,b
  5062  002692  E10B               	bnz	u7990
  5063  002694  0101               	movlb	1	; () banked
  5064  002696  5153               	movf	(pow@y+1)& (0+255),w,b
  5065  002698  0100               	movlb	0	; () banked
  5066  00269A  1999               	xorwf	(?___lltoft+1)& (0+255),w,b
  5067  00269C  E106               	bnz	u7990
  5068  00269E  0101               	movlb	1	; () banked
  5069  0026A0  5154               	movf	(pow@y+2)& (0+255),w,b
  5070  0026A2  0100               	movlb	0	; () banked
  5071  0026A4  199A               	xorwf	(?___lltoft+2)& (0+255),w,b
  5072  0026A6  B4D8               	btfsc	status,2,c
  5073  0026A8  D00F               	goto	l7906
  5074  0026AA                     u7990:
  5075                           
  5076                           ; BSR set to: 0
  5077  0026AA  0E00               	movlw	0
  5078  0026AC  0101               	movlb	1	; () banked
  5079  0026AE  6F30               	movwf	(_errno+1)& (0+255),b
  5080  0026B0  0E21               	movlw	33
  5081  0026B2  6F2F               	movwf	_errno& (0+255),b
  5082  0026B4  0E00               	movlw	0
  5083  0026B6  0101               	movlb	1	; () banked
  5084  0026B8  6F4F               	movwf	?_pow& (0+255),b
  5085  0026BA  0E00               	movlw	0
  5086  0026BC  0101               	movlb	1	; () banked
  5087  0026BE  6F50               	movwf	(?_pow+1)& (0+255),b
  5088  0026C0  0E00               	movlw	0
  5089  0026C2  0101               	movlb	1	; () banked
  5090  0026C4  6F51               	movwf	(?_pow+2)& (0+255),b
  5091                           
  5092                           ; BSR set to: 1
  5093  0026C6  0012               	return	
  5094  0026C8                     l7906:
  5095  0026C8  0101               	movlb	1	; () banked
  5096  0026CA  515C               	movf	pow@yi& (0+255),w,b
  5097  0026CC  0B01               	andlw	1
  5098  0026CE  0101               	movlb	1	; () banked
  5099  0026D0  6F5B               	movwf	pow@sign& (0+255),b
  5100                           
  5101                           ; BSR set to: 1
  5102  0026D2  C14F  F090         	movff	pow@x,___ftneg@f1
  5103  0026D6  C150  F091         	movff	pow@x+1,___ftneg@f1+1
  5104  0026DA  C151  F092         	movff	pow@x+2,___ftneg@f1+2
  5105  0026DE  EC49  F029         	call	___ftneg	;wreg free
  5106  0026E2  C090  F14F         	movff	?___ftneg,pow@x
  5107  0026E6  C091  F150         	movff	?___ftneg+1,pow@x+1
  5108  0026EA  C092  F151         	movff	?___ftneg+2,pow@x+2
  5109  0026EE                     l7910:
  5110  0026EE  C14F  F0C3         	movff	pow@x,log@x
  5111  0026F2  C150  F0C4         	movff	pow@x+1,log@x+1
  5112  0026F6  C151  F0C5         	movff	pow@x+2,log@x+2
  5113  0026FA  EC02  F016         	call	_log	;wreg free
  5114  0026FE  C0C3  F155         	movff	?_log,_pow$1413
  5115  002702  C0C4  F156         	movff	?_log+1,_pow$1413+1
  5116  002706  C0C5  F157         	movff	?_log+2,_pow$1413+2
  5117  00270A  C155  F09C         	movff	_pow$1413,___ftmul@f1
  5118  00270E  C156  F09D         	movff	_pow$1413+1,___ftmul@f1+1
  5119  002712  C157  F09E         	movff	_pow$1413+2,___ftmul@f1+2
  5120  002716  C152  F09F         	movff	pow@y,___ftmul@f2
  5121  00271A  C153  F0A0         	movff	pow@y+1,___ftmul@f2+1
  5122  00271E  C154  F0A1         	movff	pow@y+2,___ftmul@f2+2
  5123  002722  EC53  F015         	call	___ftmul	;wreg free
  5124  002726  C09C  F158         	movff	?___ftmul,_pow$1414
  5125  00272A  C09D  F159         	movff	?___ftmul+1,_pow$1414+1
  5126  00272E  C09E  F15A         	movff	?___ftmul+2,_pow$1414+2
  5127  002732  C158  F0D8         	movff	_pow$1414,exp@x
  5128  002736  C159  F0D9         	movff	_pow$1414+1,exp@x+1
  5129  00273A  C15A  F0DA         	movff	_pow$1414+2,exp@x+2
  5130  00273E  ECD7  F010         	call	_exp	;wreg free
  5131  002742  C0D8  F14F         	movff	?_exp,pow@x
  5132  002746  C0D9  F150         	movff	?_exp+1,pow@x+1
  5133  00274A  C0DA  F151         	movff	?_exp+2,pow@x+2
  5134  00274E  0101               	movlb	1	; () banked
  5135  002750  515B               	movf	pow@sign& (0+255),w,b
  5136  002752  0101               	movlb	1	; () banked
  5137  002754  B4D8               	btfsc	status,2,c
  5138  002756  D00F               	goto	l1119
  5139                           
  5140                           ; BSR set to: 1
  5141  002758  C14F  F090         	movff	pow@x,___ftneg@f1
  5142  00275C  C150  F091         	movff	pow@x+1,___ftneg@f1+1
  5143  002760  C151  F092         	movff	pow@x+2,___ftneg@f1+2
  5144  002764  EC49  F029         	call	___ftneg	;wreg free
  5145  002768  C090  F14F         	movff	?___ftneg,?_pow
  5146  00276C  C091  F150         	movff	?___ftneg+1,?_pow+1
  5147  002770  C092  F151         	movff	?___ftneg+2,?_pow+2
  5148  002774  0012               	return	
  5149  002776                     l1119:
  5150                           
  5151                           ; BSR set to: 1
  5152  002776  C14F  F14F         	movff	pow@x,?_pow
  5153  00277A  C150  F150         	movff	pow@x+1,?_pow+1
  5154  00277E  C151  F151         	movff	pow@x+2,?_pow+2
  5155  002782  0012               	return		;funcret
  5156  002784                     __end_of_pow:
  5157                           	opt stack 0
  5158                           tblptru	equ	0xFF8
  5159                           tblptrh	equ	0xFF7
  5160                           tblptrl	equ	0xFF6
  5161                           tablat	equ	0xFF5
  5162                           prodh	equ	0xFF4
  5163                           prodl	equ	0xFF3
  5164                           intcon	equ	0xFF2
  5165                           intcon2	equ	0xFF1
  5166                           intcon3	equ	0xFF0
  5167                           postinc0	equ	0xFEE
  5168                           wreg	equ	0xFE8
  5169                           postdec1	equ	0xFE5
  5170                           fsr1l	equ	0xFE1
  5171                           indf2	equ	0xFDF
  5172                           postinc2	equ	0xFDE
  5173                           postdec2	equ	0xFDD
  5174                           fsr2h	equ	0xFDA
  5175                           fsr2l	equ	0xFD9
  5176                           status	equ	0xFD8
  5177                           
  5178 ;; *************** function _log *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\log.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  x               3   67[BANK0 ] unsigned char 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  exponent        2   70[BANK0 ] int 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  3   67[BANK0 ] int 
  5187 ;; Registers used:
  5188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5194 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;Total ram usage:        5 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   10
  5201 ;; This function calls:
  5202 ;;		___awtoft
  5203 ;;		___ftadd
  5204 ;;		___ftmul
  5205 ;;		_eval_poly
  5206 ;;		_frexp
  5207 ;; This function is called by:
  5208 ;;		_pow
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text11
  5213  002C04                     __ptext11:
  5214                           	opt stack 0
  5215  002C04                     _log:
  5216                           	opt stack 17
  5217                           
  5218                           ;incstack = 0
  5219  002C04  0100               	movlb	0	; () banked
  5220  002C06  AFC5               	btfss	(log@x+2)& (0+255),7,b
  5221  002C08  D00F               	goto	l7764
  5222                           
  5223                           ; BSR set to: 0
  5224  002C0A  0E00               	movlw	0
  5225  002C0C  0101               	movlb	1	; () banked
  5226  002C0E  6F30               	movwf	(_errno+1)& (0+255),b
  5227  002C10  0E21               	movlw	33
  5228  002C12  6F2F               	movwf	_errno& (0+255),b
  5229  002C14  0E00               	movlw	0
  5230  002C16  0100               	movlb	0	; () banked
  5231  002C18  6FC3               	movwf	?_log& (0+255),b
  5232  002C1A  0E00               	movlw	0
  5233  002C1C  0100               	movlb	0	; () banked
  5234  002C1E  6FC4               	movwf	(?_log+1)& (0+255),b
  5235  002C20  0E00               	movlw	0
  5236  002C22  0100               	movlb	0	; () banked
  5237  002C24  6FC5               	movwf	(?_log+2)& (0+255),b
  5238                           
  5239                           ; BSR set to: 0
  5240  002C26  0012               	return	
  5241  002C28                     l7764:
  5242                           
  5243                           ; BSR set to: 0
  5244  002C28  0100               	movlb	0	; () banked
  5245  002C2A  51C3               	movf	log@x& (0+255),w,b
  5246  002C2C  0100               	movlb	0	; () banked
  5247  002C2E  11C4               	iorwf	(log@x+1)& (0+255),w,b
  5248  002C30  0100               	movlb	0	; () banked
  5249  002C32  11C5               	iorwf	(log@x+2)& (0+255),w,b
  5250  002C34  A4D8               	btfss	status,2,c
  5251  002C36  D00F               	goto	l7770
  5252                           
  5253                           ; BSR set to: 0
  5254  002C38  0E00               	movlw	0
  5255  002C3A  0101               	movlb	1	; () banked
  5256  002C3C  6F30               	movwf	(_errno+1)& (0+255),b
  5257  002C3E  0E22               	movlw	34
  5258  002C40  6F2F               	movwf	_errno& (0+255),b
  5259  002C42  0E00               	movlw	0
  5260  002C44  0100               	movlb	0	; () banked
  5261  002C46  6FC3               	movwf	?_log& (0+255),b
  5262  002C48  0E00               	movlw	0
  5263  002C4A  0100               	movlb	0	; () banked
  5264  002C4C  6FC4               	movwf	(?_log+1)& (0+255),b
  5265  002C4E  0E00               	movlw	0
  5266  002C50  0100               	movlb	0	; () banked
  5267  002C52  6FC5               	movwf	(?_log+2)& (0+255),b
  5268                           
  5269                           ; BSR set to: 0
  5270  002C54  0012               	return	
  5271  002C56                     l7770:
  5272                           
  5273                           ; BSR set to: 0
  5274  002C56  0E00               	movlw	0
  5275  002C58  0100               	movlb	0	; () banked
  5276  002C5A  6F9F               	movwf	___ftmul@f2& (0+255),b
  5277  002C5C  0E00               	movlw	0
  5278  002C5E  0100               	movlb	0	; () banked
  5279  002C60  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5280  002C62  0E40               	movlw	64
  5281  002C64  0100               	movlb	0	; () banked
  5282  002C66  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5283  002C68  0EC6               	movlw	low log@exponent
  5284  002C6A  0100               	movlb	0	; () banked
  5285  002C6C  6F93               	movwf	frexp@eptr& (0+255),b
  5286  002C6E  0E00               	movlw	high log@exponent
  5287  002C70  0100               	movlb	0	; () banked
  5288  002C72  6F94               	movwf	(frexp@eptr+1)& (0+255),b
  5289  002C74  C0C3  F090         	movff	log@x,frexp@value
  5290  002C78  C0C4  F091         	movff	log@x+1,frexp@value+1
  5291  002C7C  C0C5  F092         	movff	log@x+2,frexp@value+2
  5292  002C80  ECAC  F023         	call	_frexp	;wreg free
  5293  002C84  C090  F09C         	movff	?_frexp,___ftmul@f1
  5294  002C88  C091  F09D         	movff	?_frexp+1,___ftmul@f1+1
  5295  002C8C  C092  F09E         	movff	?_frexp+2,___ftmul@f1+2
  5296  002C90  EC53  F015         	call	___ftmul	;wreg free
  5297  002C94  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  5298  002C98  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  5299  002C9C  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  5300  002CA0  0E00               	movlw	0
  5301  002CA2  0100               	movlb	0	; () banked
  5302  002CA4  6FAE               	movwf	___ftadd@f2& (0+255),b
  5303  002CA6  0E80               	movlw	128
  5304  002CA8  0100               	movlb	0	; () banked
  5305  002CAA  6FAF               	movwf	(___ftadd@f2+1)& (0+255),b
  5306  002CAC  0EBF               	movlw	191
  5307  002CAE  0100               	movlb	0	; () banked
  5308  002CB0  6FB0               	movwf	(___ftadd@f2+2)& (0+255),b
  5309  002CB2  EC76  F00E         	call	___ftadd	;wreg free
  5310  002CB6  C0AB  F0C3         	movff	?___ftadd,log@x
  5311  002CBA  C0AC  F0C4         	movff	?___ftadd+1,log@x+1
  5312  002CBE  C0AD  F0C5         	movff	?___ftadd+2,log@x+2
  5313  002CC2  0100               	movlb	0	; () banked
  5314  002CC4  07C6               	decf	log@exponent& (0+255),f,b
  5315  002CC6  A0D8               	btfss	status,0,c
  5316  002CC8  07C7               	decf	(log@exponent+1)& (0+255),f,b
  5317                           
  5318                           ; BSR set to: 0
  5319  002CCA  C0C3  F0B7         	movff	log@x,eval_poly@x
  5320  002CCE  C0C4  F0B8         	movff	log@x+1,eval_poly@x+1
  5321  002CD2  C0C5  F0B9         	movff	log@x+2,eval_poly@x+2
  5322  002CD6  0E3B               	movlw	low log@coeff
  5323  002CD8  0100               	movlb	0	; () banked
  5324  002CDA  6FBA               	movwf	eval_poly@d& (0+255),b
  5325  002CDC  0EFE               	movlw	high log@coeff
  5326  002CDE  0100               	movlb	0	; () banked
  5327  002CE0  6FBB               	movwf	(eval_poly@d+1)& (0+255),b
  5328  002CE2  0E00               	movlw	0
  5329  002CE4  0100               	movlb	0	; () banked
  5330  002CE6  6FBD               	movwf	(eval_poly@n+1)& (0+255),b
  5331  002CE8  0E08               	movlw	8
  5332  002CEA  6FBC               	movwf	eval_poly@n& (0+255),b
  5333  002CEC  EC93  F01F         	call	_eval_poly	;wreg free
  5334  002CF0  C0B7  F0C3         	movff	?_eval_poly,log@x
  5335  002CF4  C0B8  F0C4         	movff	?_eval_poly+1,log@x+1
  5336  002CF8  C0B9  F0C5         	movff	?_eval_poly+2,log@x+2
  5337  002CFC  0E72               	movlw	114
  5338  002CFE  0100               	movlb	0	; () banked
  5339  002D00  6F9F               	movwf	___ftmul@f2& (0+255),b
  5340  002D02  0E31               	movlw	49
  5341  002D04  0100               	movlb	0	; () banked
  5342  002D06  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5343  002D08  0E3F               	movlw	63
  5344  002D0A  0100               	movlb	0	; () banked
  5345  002D0C  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5346  002D0E  C0C6  F098         	movff	log@exponent,___awtoft@c
  5347  002D12  C0C7  F099         	movff	log@exponent+1,___awtoft@c+1
  5348  002D16  EC77  F028         	call	___awtoft	;wreg free
  5349  002D1A  C098  F09C         	movff	?___awtoft,___ftmul@f1
  5350  002D1E  C099  F09D         	movff	?___awtoft+1,___ftmul@f1+1
  5351  002D22  C09A  F09E         	movff	?___awtoft+2,___ftmul@f1+2
  5352  002D26  EC53  F015         	call	___ftmul	;wreg free
  5353  002D2A  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  5354  002D2E  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  5355  002D32  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  5356  002D36  C0C3  F0AE         	movff	log@x,___ftadd@f2
  5357  002D3A  C0C4  F0AF         	movff	log@x+1,___ftadd@f2+1
  5358  002D3E  C0C5  F0B0         	movff	log@x+2,___ftadd@f2+2
  5359  002D42  EC76  F00E         	call	___ftadd	;wreg free
  5360  002D46  C0AB  F0C3         	movff	?___ftadd,?_log
  5361  002D4A  C0AC  F0C4         	movff	?___ftadd+1,?_log+1
  5362  002D4E  C0AD  F0C5         	movff	?___ftadd+2,?_log+2
  5363  002D52  0012               	return	
  5364  002D54                     __end_of_log:
  5365                           	opt stack 0
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           intcon2	equ	0xFF1
  5374                           intcon3	equ	0xFF0
  5375                           postinc0	equ	0xFEE
  5376                           wreg	equ	0xFE8
  5377                           postdec1	equ	0xFE5
  5378                           fsr1l	equ	0xFE1
  5379                           indf2	equ	0xFDF
  5380                           postinc2	equ	0xFDE
  5381                           postdec2	equ	0xFDD
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function _exp *****************
  5387 ;; Defined at:
  5388 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\exp.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  x               3   88[BANK0 ] int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  exponent        2    3[BANK1 ] int 
  5393 ;;  sign            1    5[BANK1 ] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  3   88[BANK0 ] unsigned char 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5403 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;Total ram usage:        9 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:   10
  5410 ;; This function calls:
  5411 ;;		___awtoft
  5412 ;;		___ftdiv
  5413 ;;		___ftge
  5414 ;;		___ftmul
  5415 ;;		___ftneg
  5416 ;;		___ftsub
  5417 ;;		___fttol
  5418 ;;		_eval_poly
  5419 ;;		_floor
  5420 ;;		_ldexp
  5421 ;; This function is called by:
  5422 ;;		_pow
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           	psect	text12
  5427  0021AE                     __ptext12:
  5428                           	opt stack 0
  5429  0021AE                     _exp:
  5430                           	opt stack 17
  5431                           
  5432                           ;incstack = 0
  5433  0021AE  0100               	movlb	0	; () banked
  5434  0021B0  51D8               	movf	exp@x& (0+255),w,b
  5435  0021B2  0100               	movlb	0	; () banked
  5436  0021B4  11D9               	iorwf	(exp@x+1)& (0+255),w,b
  5437  0021B6  0100               	movlb	0	; () banked
  5438  0021B8  11DA               	iorwf	(exp@x+2)& (0+255),w,b
  5439  0021BA  A4D8               	btfss	status,2,c
  5440  0021BC  D00A               	goto	l7786
  5441                           
  5442                           ; BSR set to: 0
  5443  0021BE  0E00               	movlw	0
  5444  0021C0  0100               	movlb	0	; () banked
  5445  0021C2  6FD8               	movwf	?_exp& (0+255),b
  5446  0021C4  0E80               	movlw	128
  5447  0021C6  0100               	movlb	0	; () banked
  5448  0021C8  6FD9               	movwf	(?_exp+1)& (0+255),b
  5449  0021CA  0E3F               	movlw	63
  5450  0021CC  0100               	movlb	0	; () banked
  5451  0021CE  6FDA               	movwf	(?_exp+2)& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454  0021D0  0012               	return	
  5455  0021D2                     l7786:
  5456                           
  5457                           ; BSR set to: 0
  5458  0021D2  0E72               	movlw	114
  5459  0021D4  0100               	movlb	0	; () banked
  5460  0021D6  6FA7               	movwf	___ftge@ff1& (0+255),b
  5461  0021D8  0E31               	movlw	49
  5462  0021DA  0100               	movlb	0	; () banked
  5463  0021DC  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  5464  0021DE  0E44               	movlw	68
  5465  0021E0  0100               	movlb	0	; () banked
  5466  0021E2  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  5467  0021E4  C0D8  F0AA         	movff	exp@x,___ftge@ff2
  5468  0021E8  C0D9  F0AB         	movff	exp@x+1,___ftge@ff2+1
  5469  0021EC  C0DA  F0AC         	movff	exp@x+2,___ftge@ff2+2
  5470  0021F0  EC28  F022         	call	___ftge	;wreg free
  5471  0021F4  0100               	movlb	0	; () banked
  5472  0021F6  B0D8               	btfsc	status,0,c
  5473  0021F8  D00F               	goto	l7792
  5474                           
  5475                           ; BSR set to: 0
  5476  0021FA  0E00               	movlw	0
  5477  0021FC  0101               	movlb	1	; () banked
  5478  0021FE  6F30               	movwf	(_errno+1)& (0+255),b
  5479  002200  0E22               	movlw	34
  5480  002202  6F2F               	movwf	_errno& (0+255),b
  5481  002204  0EFF               	movlw	255
  5482  002206  0100               	movlb	0	; () banked
  5483  002208  6FD8               	movwf	?_exp& (0+255),b
  5484  00220A  0E7F               	movlw	127
  5485  00220C  0100               	movlb	0	; () banked
  5486  00220E  6FD9               	movwf	(?_exp+1)& (0+255),b
  5487  002210  0E7F               	movlw	127
  5488  002212  0100               	movlb	0	; () banked
  5489  002214  6FDA               	movwf	(?_exp+2)& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492  002216  0012               	return	
  5493  002218                     l7792:
  5494                           
  5495                           ; BSR set to: 0
  5496  002218  C0D8  F0A7         	movff	exp@x,___ftge@ff1
  5497  00221C  C0D9  F0A8         	movff	exp@x+1,___ftge@ff1+1
  5498  002220  C0DA  F0A9         	movff	exp@x+2,___ftge@ff1+2
  5499  002224  0E49               	movlw	73
  5500  002226  0100               	movlb	0	; () banked
  5501  002228  6FAA               	movwf	___ftge@ff2& (0+255),b
  5502  00222A  0E3A               	movlw	58
  5503  00222C  0100               	movlb	0	; () banked
  5504  00222E  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  5505  002230  0EC4               	movlw	196
  5506  002232  0100               	movlb	0	; () banked
  5507  002234  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  5508  002236  EC28  F022         	call	___ftge	;wreg free
  5509  00223A  0100               	movlb	0	; () banked
  5510  00223C  B0D8               	btfsc	status,0,c
  5511  00223E  D00F               	goto	l7798
  5512                           
  5513                           ; BSR set to: 0
  5514  002240  0E00               	movlw	0
  5515  002242  0101               	movlb	1	; () banked
  5516  002244  6F30               	movwf	(_errno+1)& (0+255),b
  5517  002246  0E22               	movlw	34
  5518  002248  6F2F               	movwf	_errno& (0+255),b
  5519  00224A  0E00               	movlw	0
  5520  00224C  0100               	movlb	0	; () banked
  5521  00224E  6FD8               	movwf	?_exp& (0+255),b
  5522  002250  0E00               	movlw	0
  5523  002252  0100               	movlb	0	; () banked
  5524  002254  6FD9               	movwf	(?_exp+1)& (0+255),b
  5525  002256  0E00               	movlw	0
  5526  002258  0100               	movlb	0	; () banked
  5527  00225A  6FDA               	movwf	(?_exp+2)& (0+255),b
  5528                           
  5529                           ; BSR set to: 0
  5530  00225C  0012               	return	
  5531  00225E                     l7798:
  5532                           
  5533                           ; BSR set to: 0
  5534  00225E  0100               	movlb	0	; () banked
  5535  002260  AFDA               	btfss	(exp@x+2)& (0+255),7,b
  5536  002262  D002               	goto	u7860
  5537  002264  0E01               	movlw	1
  5538  002266  D001               	goto	u7870
  5539  002268                     u7860:
  5540  002268  0E00               	movlw	0
  5541  00226A                     u7870:
  5542  00226A  0101               	movlb	1	; () banked
  5543  00226C  6F4E               	movwf	exp@sign& (0+255),b
  5544                           
  5545                           ; BSR set to: 1
  5546  00226E  0101               	movlb	1	; () banked
  5547  002270  514E               	movf	exp@sign& (0+255),w,b
  5548  002272  0101               	movlb	1	; () banked
  5549  002274  B4D8               	btfsc	status,2,c
  5550  002276  D00E               	goto	l1277
  5551                           
  5552                           ; BSR set to: 1
  5553  002278  C0D8  F090         	movff	exp@x,___ftneg@f1
  5554  00227C  C0D9  F091         	movff	exp@x+1,___ftneg@f1+1
  5555  002280  C0DA  F092         	movff	exp@x+2,___ftneg@f1+2
  5556  002284  EC49  F029         	call	___ftneg	;wreg free
  5557  002288  C090  F0D8         	movff	?___ftneg,exp@x
  5558  00228C  C091  F0D9         	movff	?___ftneg+1,exp@x+1
  5559  002290  C092  F0DA         	movff	?___ftneg+2,exp@x+2
  5560  002294                     l1277:
  5561  002294  C0D8  F09C         	movff	exp@x,___ftmul@f1
  5562  002298  C0D9  F09D         	movff	exp@x+1,___ftmul@f1+1
  5563  00229C  C0DA  F09E         	movff	exp@x+2,___ftmul@f1+2
  5564  0022A0  0EAA               	movlw	170
  5565  0022A2  0100               	movlb	0	; () banked
  5566  0022A4  6F9F               	movwf	___ftmul@f2& (0+255),b
  5567  0022A6  0EB8               	movlw	184
  5568  0022A8  0100               	movlb	0	; () banked
  5569  0022AA  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5570  0022AC  0E3F               	movlw	63
  5571  0022AE  0100               	movlb	0	; () banked
  5572  0022B0  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5573  0022B2  EC53  F015         	call	___ftmul	;wreg free
  5574  0022B6  C09C  F0D8         	movff	?___ftmul,exp@x
  5575  0022BA  C09D  F0D9         	movff	?___ftmul+1,exp@x+1
  5576  0022BE  C09E  F0DA         	movff	?___ftmul+2,exp@x+2
  5577  0022C2  C0D8  F0D0         	movff	exp@x,floor@x
  5578  0022C6  C0D9  F0D1         	movff	exp@x+1,floor@x+1
  5579  0022CA  C0DA  F0D2         	movff	exp@x+2,floor@x+2
  5580  0022CE  ECA7  F01C         	call	_floor	;wreg free
  5581  0022D2  C0D0  F149         	movff	?_floor,_exp$1415
  5582  0022D6  C0D1  F14A         	movff	?_floor+1,_exp$1415+1
  5583  0022DA  C0D2  F14B         	movff	?_floor+2,_exp$1415+2
  5584  0022DE  C149  F0B7         	movff	_exp$1415,___fttol@f1
  5585  0022E2  C14A  F0B8         	movff	_exp$1415+1,___fttol@f1+1
  5586  0022E6  C14B  F0B9         	movff	_exp$1415+2,___fttol@f1+2
  5587  0022EA  EC50  F017         	call	___fttol	;wreg free
  5588  0022EE  C0B7  F14C         	movff	?___fttol,exp@exponent
  5589  0022F2  C0B8  F14D         	movff	?___fttol+1,exp@exponent+1
  5590  0022F6  C0D8  F0B7         	movff	exp@x,___ftsub@f1
  5591  0022FA  C0D9  F0B8         	movff	exp@x+1,___ftsub@f1+1
  5592  0022FE  C0DA  F0B9         	movff	exp@x+2,___ftsub@f1+2
  5593  002302  C14C  F098         	movff	exp@exponent,___awtoft@c
  5594  002306  C14D  F099         	movff	exp@exponent+1,___awtoft@c+1
  5595  00230A  EC77  F028         	call	___awtoft	;wreg free
  5596  00230E  C098  F0BA         	movff	?___awtoft,___ftsub@f2
  5597  002312  C099  F0BB         	movff	?___awtoft+1,___ftsub@f2+1
  5598  002316  C09A  F0BC         	movff	?___awtoft+2,___ftsub@f2+2
  5599  00231A  EC51  F028         	call	___ftsub	;wreg free
  5600  00231E  C0B7  F0D8         	movff	?___ftsub,exp@x
  5601  002322  C0B8  F0D9         	movff	?___ftsub+1,exp@x+1
  5602  002326  C0B9  F0DA         	movff	?___ftsub+2,exp@x+2
  5603  00232A  C0D8  F0B7         	movff	exp@x,eval_poly@x
  5604  00232E  C0D9  F0B8         	movff	exp@x+1,eval_poly@x+1
  5605  002332  C0DA  F0B9         	movff	exp@x+2,eval_poly@x+2
  5606  002336  0E1D               	movlw	low exp@coeff
  5607  002338  0100               	movlb	0	; () banked
  5608  00233A  6FBA               	movwf	eval_poly@d& (0+255),b
  5609  00233C  0EFE               	movlw	high exp@coeff
  5610  00233E  0100               	movlb	0	; () banked
  5611  002340  6FBB               	movwf	(eval_poly@d+1)& (0+255),b
  5612  002342  0E00               	movlw	0
  5613  002344  0100               	movlb	0	; () banked
  5614  002346  6FBD               	movwf	(eval_poly@n+1)& (0+255),b
  5615  002348  0E09               	movlw	9
  5616  00234A  6FBC               	movwf	eval_poly@n& (0+255),b
  5617  00234C  EC93  F01F         	call	_eval_poly	;wreg free
  5618  002350  C0B7  F0C3         	movff	?_eval_poly,ldexp@value
  5619  002354  C0B8  F0C4         	movff	?_eval_poly+1,ldexp@value+1
  5620  002358  C0B9  F0C5         	movff	?_eval_poly+2,ldexp@value+2
  5621  00235C  C14C  F0C6         	movff	exp@exponent,ldexp@newexp
  5622  002360  C14D  F0C7         	movff	exp@exponent+1,ldexp@newexp+1
  5623  002364  EC81  F018         	call	_ldexp	;wreg free
  5624  002368  C0C3  F0D8         	movff	?_ldexp,exp@x
  5625  00236C  C0C4  F0D9         	movff	?_ldexp+1,exp@x+1
  5626  002370  C0C5  F0DA         	movff	?_ldexp+2,exp@x+2
  5627  002374  0101               	movlb	1	; () banked
  5628  002376  514E               	movf	exp@sign& (0+255),w,b
  5629  002378  0101               	movlb	1	; () banked
  5630  00237A  B4D8               	btfsc	status,2,c
  5631  00237C  D02E               	goto	l1278
  5632                           
  5633                           ; BSR set to: 1
  5634  00237E  0100               	movlb	0	; () banked
  5635  002380  29D8               	incf	exp@x& (0+255),w,b
  5636  002382  E113               	bnz	l7820
  5637  002384  0E7F               	movlw	127
  5638  002386  0100               	movlb	0	; () banked
  5639  002388  19D9               	xorwf	(exp@x+1)& (0+255),w,b
  5640  00238A  E10F               	bnz	l7820
  5641  00238C  0E7F               	movlw	127
  5642  00238E  0100               	movlb	0	; () banked
  5643  002390  19DA               	xorwf	(exp@x+2)& (0+255),w,b
  5644  002392  A4D8               	btfss	status,2,c
  5645  002394  D00A               	goto	l7820
  5646                           
  5647                           ; BSR set to: 0
  5648  002396  0E00               	movlw	0
  5649  002398  0100               	movlb	0	; () banked
  5650  00239A  6FD8               	movwf	?_exp& (0+255),b
  5651  00239C  0E00               	movlw	0
  5652  00239E  0100               	movlb	0	; () banked
  5653  0023A0  6FD9               	movwf	(?_exp+1)& (0+255),b
  5654  0023A2  0E00               	movlw	0
  5655  0023A4  0100               	movlb	0	; () banked
  5656  0023A6  6FDA               	movwf	(?_exp+2)& (0+255),b
  5657                           
  5658                           ; BSR set to: 0
  5659  0023A8  0012               	return	
  5660  0023AA                     l7820:
  5661                           
  5662                           ; BSR set to: 0
  5663  0023AA  0E00               	movlw	0
  5664  0023AC  0100               	movlb	0	; () banked
  5665  0023AE  6F98               	movwf	___ftdiv@f1& (0+255),b
  5666  0023B0  0E80               	movlw	128
  5667  0023B2  0100               	movlb	0	; () banked
  5668  0023B4  6F99               	movwf	(___ftdiv@f1+1)& (0+255),b
  5669  0023B6  0E3F               	movlw	63
  5670  0023B8  0100               	movlb	0	; () banked
  5671  0023BA  6F9A               	movwf	(___ftdiv@f1+2)& (0+255),b
  5672  0023BC  C0D8  F09B         	movff	exp@x,___ftdiv@f2
  5673  0023C0  C0D9  F09C         	movff	exp@x+1,___ftdiv@f2+1
  5674  0023C4  C0DA  F09D         	movff	exp@x+2,___ftdiv@f2+2
  5675  0023C8  ECAA  F016         	call	___ftdiv	;wreg free
  5676  0023CC  C098  F0D8         	movff	?___ftdiv,?_exp
  5677  0023D0  C099  F0D9         	movff	?___ftdiv+1,?_exp+1
  5678  0023D4  C09A  F0DA         	movff	?___ftdiv+2,?_exp+2
  5679  0023D8  0012               	return	
  5680  0023DA                     l1278:
  5681                           
  5682                           ; BSR set to: 1
  5683  0023DA  C0D8  F0D8         	movff	exp@x,?_exp
  5684  0023DE  C0D9  F0D9         	movff	exp@x+1,?_exp+1
  5685  0023E2  C0DA  F0DA         	movff	exp@x+2,?_exp+2
  5686  0023E6  0012               	return		;funcret
  5687  0023E8                     __end_of_exp:
  5688                           	opt stack 0
  5689                           tblptru	equ	0xFF8
  5690                           tblptrh	equ	0xFF7
  5691                           tblptrl	equ	0xFF6
  5692                           tablat	equ	0xFF5
  5693                           prodh	equ	0xFF4
  5694                           prodl	equ	0xFF3
  5695                           intcon	equ	0xFF2
  5696                           intcon2	equ	0xFF1
  5697                           intcon3	equ	0xFF0
  5698                           postinc0	equ	0xFEE
  5699                           wreg	equ	0xFE8
  5700                           postdec1	equ	0xFE5
  5701                           fsr1l	equ	0xFE1
  5702                           indf2	equ	0xFDF
  5703                           postinc2	equ	0xFDE
  5704                           postdec2	equ	0xFDD
  5705                           fsr2h	equ	0xFDA
  5706                           fsr2l	equ	0xFD9
  5707                           status	equ	0xFD8
  5708                           
  5709 ;; *************** function _ldexp *****************
  5710 ;; Defined at:
  5711 ;;		line 277 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  value           3   67[BANK0 ] unsigned char 
  5714 ;;  newexp          2   70[BANK0 ] int 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;                  3   67[BANK0 ] int 
  5719 ;; Registers used:
  5720 ;;		wreg, status,2, status,0
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;Total ram usage:        7 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    7
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_exp
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text13
  5741  003102                     __ptext13:
  5742                           	opt stack 0
  5743  003102                     _ldexp:
  5744                           	opt stack 19
  5745                           
  5746                           ;incstack = 0
  5747  003102  0100               	movlb	0	; () banked
  5748  003104  51C3               	movf	ldexp@value& (0+255),w,b
  5749  003106  0100               	movlb	0	; () banked
  5750  003108  11C4               	iorwf	(ldexp@value+1)& (0+255),w,b
  5751  00310A  0100               	movlb	0	; () banked
  5752  00310C  11C5               	iorwf	(ldexp@value+2)& (0+255),w,b
  5753  00310E  A4D8               	btfss	status,2,c
  5754  003110  D00A               	goto	l7696
  5755                           
  5756                           ; BSR set to: 0
  5757  003112  0E00               	movlw	0
  5758  003114  0100               	movlb	0	; () banked
  5759  003116  6FC3               	movwf	?_ldexp& (0+255),b
  5760  003118  0E00               	movlw	0
  5761  00311A  0100               	movlb	0	; () banked
  5762  00311C  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5763  00311E  0E00               	movlw	0
  5764  003120  0100               	movlb	0	; () banked
  5765  003122  6FC5               	movwf	(?_ldexp+2)& (0+255),b
  5766                           
  5767                           ; BSR set to: 0
  5768  003124  0012               	return	
  5769  003126                     l7696:
  5770                           
  5771                           ; BSR set to: 0
  5772  003126  0100               	movlb	0	; () banked
  5773  003128  51C5               	movf	(ldexp@value+2)& (0+255),w,b
  5774  00312A  0B7F               	andlw	127
  5775  00312C  0100               	movlb	0	; () banked
  5776  00312E  6FC8               	movwf	??_ldexp& (0+255),b
  5777  003130  6BC9               	clrf	(??_ldexp+1)& (0+255),b
  5778  003132  90D8               	bcf	status,0,c
  5779  003134  0100               	movlb	0	; () banked
  5780  003136  37C8               	rlcf	??_ldexp& (0+255),f,b
  5781  003138  37C9               	rlcf	(??_ldexp+1)& (0+255),f,b
  5782  00313A  0100               	movlb	0	; () banked
  5783  00313C  51C8               	movf	??_ldexp& (0+255),w,b
  5784  00313E  0100               	movlb	0	; () banked
  5785  003140  27C6               	addwf	ldexp@newexp& (0+255),f,b
  5786  003142  0100               	movlb	0	; () banked
  5787  003144  51C9               	movf	(??_ldexp+1)& (0+255),w,b
  5788  003146  0100               	movlb	0	; () banked
  5789  003148  23C7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5790  00314A  0100               	movlb	0	; () banked
  5791  00314C  AFC4               	btfss	(ldexp@value+1)& (0+255),7,b
  5792  00314E  D004               	goto	u7740
  5793  003150  0100               	movlb	0	; () banked
  5794  003152  6BC8               	clrf	??_ldexp& (0+255),b
  5795  003154  2BC8               	incf	??_ldexp& (0+255),f,b
  5796  003156  D002               	goto	u7748
  5797  003158                     u7740:
  5798  003158  0100               	movlb	0	; () banked
  5799  00315A  6BC8               	clrf	??_ldexp& (0+255),b
  5800  00315C                     u7748:
  5801  00315C  0100               	movlb	0	; () banked
  5802  00315E  51C8               	movf	??_ldexp& (0+255),w,b
  5803  003160  0100               	movlb	0	; () banked
  5804  003162  27C6               	addwf	ldexp@newexp& (0+255),f,b
  5805  003164  0E00               	movlw	0
  5806  003166  23C7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5807  003168  0100               	movlb	0	; () banked
  5808  00316A  AFC7               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5809  00316C  D00F               	goto	l7704
  5810                           
  5811                           ; BSR set to: 0
  5812  00316E  0E00               	movlw	0
  5813  003170  0101               	movlb	1	; () banked
  5814  003172  6F30               	movwf	(_errno+1)& (0+255),b
  5815  003174  0E22               	movlw	34
  5816  003176  6F2F               	movwf	_errno& (0+255),b
  5817  003178  0E00               	movlw	0
  5818  00317A  0100               	movlb	0	; () banked
  5819  00317C  6FC3               	movwf	?_ldexp& (0+255),b
  5820  00317E  0E00               	movlw	0
  5821  003180  0100               	movlb	0	; () banked
  5822  003182  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5823  003184  0E00               	movlw	0
  5824  003186                     L16:
  5825  003186  0100               	movlb	0	; () banked
  5826  003188  6FC5               	movwf	(?_ldexp+2)& (0+255),b
  5827                           
  5828                           ; BSR set to: 0
  5829  00318A  0012               	return	
  5830  00318C                     l7704:
  5831                           
  5832                           ; BSR set to: 0
  5833  00318C  0100               	movlb	0	; () banked
  5834  00318E  BFC7               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5835  003190  D01C               	goto	l7720
  5836  003192  0100               	movlb	0	; () banked
  5837  003194  05C7               	decf	(ldexp@newexp+1)& (0+255),w,b
  5838  003196  A0D8               	btfss	status,0,c
  5839  003198  D018               	goto	l7720
  5840                           
  5841                           ; BSR set to: 0
  5842  00319A  0E00               	movlw	0
  5843  00319C  0101               	movlb	1	; () banked
  5844  00319E  6F30               	movwf	(_errno+1)& (0+255),b
  5845  0031A0  0E22               	movlw	34
  5846  0031A2  6F2F               	movwf	_errno& (0+255),b
  5847                           
  5848                           ; BSR set to: 1
  5849  0031A4  0100               	movlb	0	; () banked
  5850  0031A6  AFC5               	btfss	(ldexp@value+2)& (0+255),7,b
  5851  0031A8  D008               	goto	l7716
  5852                           
  5853                           ; BSR set to: 0
  5854  0031AA  0EFF               	movlw	255
  5855  0031AC  0100               	movlb	0	; () banked
  5856  0031AE  6FC3               	movwf	?_ldexp& (0+255),b
  5857  0031B0  0E7F               	movlw	127
  5858  0031B2  0100               	movlb	0	; () banked
  5859  0031B4  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5860  0031B6  0EFF               	movlw	255
  5861  0031B8  D7E6               	goto	L16
  5862  0031BA                     l7716:
  5863                           
  5864                           ; BSR set to: 0
  5865  0031BA  0EFF               	movlw	255
  5866  0031BC  0100               	movlb	0	; () banked
  5867  0031BE  6FC3               	movwf	?_ldexp& (0+255),b
  5868  0031C0  0E7F               	movlw	127
  5869  0031C2  0100               	movlb	0	; () banked
  5870  0031C4  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5871  0031C6  0E7F               	movlw	127
  5872  0031C8  D7DE               	goto	L16
  5873  0031CA                     l7720:
  5874                           
  5875                           ; BSR set to: 0
  5876  0031CA  0100               	movlb	0	; () banked
  5877  0031CC  35C7               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5878  0031CE  31C7               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5879  0031D0  0100               	movlb	0	; () banked
  5880  0031D2  6FC9               	movwf	(??_ldexp+1)& (0+255),b
  5881  0031D4  0100               	movlb	0	; () banked
  5882  0031D6  31C6               	rrcf	ldexp@newexp& (0+255),w,b
  5883  0031D8  0100               	movlb	0	; () banked
  5884  0031DA  6FC8               	movwf	??_ldexp& (0+255),b
  5885  0031DC  0100               	movlb	0	; () banked
  5886  0031DE  51C5               	movf	(ldexp@value+2)& (0+255),w,b
  5887  0031E0  0100               	movlb	0	; () banked
  5888  0031E2  19C8               	xorwf	??_ldexp& (0+255),w,b
  5889  0031E4  0B80               	andlw	-128
  5890  0031E6  19C8               	xorwf	??_ldexp& (0+255),w,b
  5891  0031E8  0100               	movlb	0	; () banked
  5892  0031EA  6FC5               	movwf	(ldexp@value+2)& (0+255),b
  5893  0031EC  C0C6  F0C8         	movff	ldexp@newexp,??_ldexp
  5894  0031F0  0E01               	movlw	1
  5895  0031F2  0100               	movlb	0	; () banked
  5896  0031F4  17C8               	andwf	??_ldexp& (0+255),f,b
  5897  0031F6  0100               	movlb	0	; () banked
  5898  0031F8  33C8               	rrcf	??_ldexp& (0+255),f,b
  5899  0031FA  33C8               	rrcf	??_ldexp& (0+255),f,b
  5900  0031FC  0100               	movlb	0	; () banked
  5901  0031FE  51C4               	movf	(ldexp@value+1)& (0+255),w,b
  5902  003200  0100               	movlb	0	; () banked
  5903  003202  19C8               	xorwf	??_ldexp& (0+255),w,b
  5904  003204  0B7F               	andlw	-129
  5905  003206  19C8               	xorwf	??_ldexp& (0+255),w,b
  5906  003208  0100               	movlb	0	; () banked
  5907  00320A  6FC4               	movwf	(ldexp@value+1)& (0+255),b
  5908                           
  5909                           ; BSR set to: 0
  5910                           
  5911                           ; BSR set to: 0
  5912                           
  5913                           ; BSR set to: 0
  5914  00320C  C0C3  F0C3         	movff	ldexp@value,?_ldexp
  5915  003210  C0C4  F0C4         	movff	ldexp@value+1,?_ldexp+1
  5916  003214  C0C5  F0C5         	movff	ldexp@value+2,?_ldexp+2
  5917  003218  0012               	return	
  5918  00321A                     __end_of_ldexp:
  5919                           	opt stack 0
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           intcon	equ	0xFF2
  5927                           intcon2	equ	0xFF1
  5928                           intcon3	equ	0xFF0
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1l	equ	0xFE1
  5933                           indf2	equ	0xFDF
  5934                           postinc2	equ	0xFDE
  5935                           postdec2	equ	0xFDD
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function _floor *****************
  5941 ;; Defined at:
  5942 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\floor.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  x               3   80[BANK0 ] int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  i               3   83[BANK0 ] int 
  5947 ;;  expon           2   86[BANK0 ] int 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  3   80[BANK0 ] int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        8 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    9
  5964 ;; This function calls:
  5965 ;;		___altoft
  5966 ;;		___ftadd
  5967 ;;		___ftge
  5968 ;;		___fttol
  5969 ;;		_frexp
  5970 ;; This function is called by:
  5971 ;;		_exp
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text14
  5976  00394E                     __ptext14:
  5977                           	opt stack 0
  5978  00394E                     _floor:
  5979                           	opt stack 17
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  00394E  C0D0  F090         	movff	floor@x,frexp@value
  5984  003952  C0D1  F091         	movff	floor@x+1,frexp@value+1
  5985  003956  C0D2  F092         	movff	floor@x+2,frexp@value+2
  5986  00395A  0ED6               	movlw	low floor@expon
  5987  00395C  0100               	movlb	0	; () banked
  5988  00395E  6F93               	movwf	frexp@eptr& (0+255),b
  5989  003960  0E00               	movlw	high floor@expon
  5990  003962  0100               	movlb	0	; () banked
  5991  003964  6F94               	movwf	(frexp@eptr+1)& (0+255),b
  5992  003966  ECAC  F023         	call	_frexp	;wreg free
  5993  00396A  0100               	movlb	0	; () banked
  5994  00396C  AFD7               	btfss	(floor@expon+1)& (0+255),7,b
  5995  00396E  D017               	goto	l7674
  5996                           
  5997                           ; BSR set to: 0
  5998  003970  0100               	movlb	0	; () banked
  5999  003972  AFD2               	btfss	(floor@x+2)& (0+255),7,b
  6000  003974  D00A               	goto	l7670
  6001                           
  6002                           ; BSR set to: 0
  6003  003976  0E00               	movlw	0
  6004  003978  0100               	movlb	0	; () banked
  6005  00397A  6FD0               	movwf	?_floor& (0+255),b
  6006  00397C  0E80               	movlw	128
  6007  00397E  0100               	movlb	0	; () banked
  6008  003980  6FD1               	movwf	(?_floor+1)& (0+255),b
  6009  003982  0EBF               	movlw	191
  6010  003984  0100               	movlb	0	; () banked
  6011  003986  6FD2               	movwf	(?_floor+2)& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014  003988  0012               	return	
  6015  00398A                     l7670:
  6016                           
  6017                           ; BSR set to: 0
  6018  00398A  0E00               	movlw	0
  6019  00398C  0100               	movlb	0	; () banked
  6020  00398E  6FD0               	movwf	?_floor& (0+255),b
  6021  003990  0E00               	movlw	0
  6022  003992  0100               	movlb	0	; () banked
  6023  003994  6FD1               	movwf	(?_floor+1)& (0+255),b
  6024  003996  0E00               	movlw	0
  6025  003998  0100               	movlb	0	; () banked
  6026  00399A  6FD2               	movwf	(?_floor+2)& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029  00399C  0012               	return	
  6030  00399E                     l7674:
  6031                           
  6032                           ; BSR set to: 0
  6033  00399E  0100               	movlb	0	; () banked
  6034  0039A0  51D7               	movf	(floor@expon+1)& (0+255),w,b
  6035  0039A2  E105               	bnz	u7700
  6036  0039A4  0E15               	movlw	21
  6037  0039A6  0100               	movlb	0	; () banked
  6038  0039A8  5DD6               	subwf	floor@expon& (0+255),w,b
  6039  0039AA  A0D8               	btfss	status,0,c
  6040  0039AC  D007               	goto	l7678
  6041  0039AE                     u7700:
  6042                           
  6043                           ; BSR set to: 0
  6044  0039AE  C0D0  F0D0         	movff	floor@x,?_floor
  6045  0039B2  C0D1  F0D1         	movff	floor@x+1,?_floor+1
  6046  0039B6  C0D2  F0D2         	movff	floor@x+2,?_floor+2
  6047  0039BA  0012               	return	
  6048  0039BC                     l7678:
  6049                           
  6050                           ; BSR set to: 0
  6051  0039BC  C0D0  F0B7         	movff	floor@x,___fttol@f1
  6052  0039C0  C0D1  F0B8         	movff	floor@x+1,___fttol@f1+1
  6053  0039C4  C0D2  F0B9         	movff	floor@x+2,___fttol@f1+2
  6054  0039C8  EC50  F017         	call	___fttol	;wreg free
  6055  0039CC  C0B7  F0C6         	movff	?___fttol,___altoft@c
  6056  0039D0  C0B8  F0C7         	movff	?___fttol+1,___altoft@c+1
  6057  0039D4  C0B9  F0C8         	movff	?___fttol+2,___altoft@c+2
  6058  0039D8  C0BA  F0C9         	movff	?___fttol+3,___altoft@c+3
  6059  0039DC  ECAB  F024         	call	___altoft	;wreg free
  6060  0039E0  C0C6  F0D3         	movff	?___altoft,floor@i
  6061  0039E4  C0C7  F0D4         	movff	?___altoft+1,floor@i+1
  6062  0039E8  C0C8  F0D5         	movff	?___altoft+2,floor@i+2
  6063  0039EC  C0D0  F0A7         	movff	floor@x,___ftge@ff1
  6064  0039F0  C0D1  F0A8         	movff	floor@x+1,___ftge@ff1+1
  6065  0039F4  C0D2  F0A9         	movff	floor@x+2,___ftge@ff1+2
  6066  0039F8  C0D3  F0AA         	movff	floor@i,___ftge@ff2
  6067  0039FC  C0D4  F0AB         	movff	floor@i+1,___ftge@ff2+1
  6068  003A00  C0D5  F0AC         	movff	floor@i+2,___ftge@ff2+2
  6069  003A04  EC28  F022         	call	___ftge	;wreg free
  6070  003A08  0100               	movlb	0	; () banked
  6071  003A0A  B0D8               	btfsc	status,0,c
  6072  003A0C  D018               	goto	l1288
  6073                           
  6074                           ; BSR set to: 0
  6075  003A0E  C0D3  F0AB         	movff	floor@i,___ftadd@f1
  6076  003A12  C0D4  F0AC         	movff	floor@i+1,___ftadd@f1+1
  6077  003A16  C0D5  F0AD         	movff	floor@i+2,___ftadd@f1+2
  6078  003A1A  0E00               	movlw	0
  6079  003A1C  0100               	movlb	0	; () banked
  6080  003A1E  6FAE               	movwf	___ftadd@f2& (0+255),b
  6081  003A20  0E80               	movlw	128
  6082  003A22  0100               	movlb	0	; () banked
  6083  003A24  6FAF               	movwf	(___ftadd@f2+1)& (0+255),b
  6084  003A26  0EBF               	movlw	191
  6085  003A28  0100               	movlb	0	; () banked
  6086  003A2A  6FB0               	movwf	(___ftadd@f2+2)& (0+255),b
  6087  003A2C  EC76  F00E         	call	___ftadd	;wreg free
  6088  003A30  C0AB  F0D0         	movff	?___ftadd,?_floor
  6089  003A34  C0AC  F0D1         	movff	?___ftadd+1,?_floor+1
  6090  003A38  C0AD  F0D2         	movff	?___ftadd+2,?_floor+2
  6091  003A3C  0012               	return	
  6092  003A3E                     l1288:
  6093                           
  6094                           ; BSR set to: 0
  6095  003A3E  C0D3  F0D0         	movff	floor@i,?_floor
  6096  003A42  C0D4  F0D1         	movff	floor@i+1,?_floor+1
  6097  003A46  C0D5  F0D2         	movff	floor@i+2,?_floor+2
  6098  003A4A  0012               	return		;funcret
  6099  003A4C                     __end_of_floor:
  6100                           	opt stack 0
  6101                           tblptru	equ	0xFF8
  6102                           tblptrh	equ	0xFF7
  6103                           tblptrl	equ	0xFF6
  6104                           tablat	equ	0xFF5
  6105                           prodh	equ	0xFF4
  6106                           prodl	equ	0xFF3
  6107                           intcon	equ	0xFF2
  6108                           intcon2	equ	0xFF1
  6109                           intcon3	equ	0xFF0
  6110                           postinc0	equ	0xFEE
  6111                           wreg	equ	0xFE8
  6112                           postdec1	equ	0xFE5
  6113                           fsr1l	equ	0xFE1
  6114                           indf2	equ	0xFDF
  6115                           postinc2	equ	0xFDE
  6116                           postdec2	equ	0xFDD
  6117                           fsr2h	equ	0xFDA
  6118                           fsr2l	equ	0xFD9
  6119                           status	equ	0xFD8
  6120                           
  6121 ;; *************** function _frexp *****************
  6122 ;; Defined at:
  6123 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  value           3   16[BANK0 ] int 
  6126 ;;  eptr            2   19[BANK0 ] PTR int 
  6127 ;;		 -> log@exponent(2), floor@expon(2), 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  3   16[BANK0 ] PTR int 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6139 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;Total ram usage:        7 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    7
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_floor
  6150 ;;		_log
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text15
  6155  004758                     __ptext15:
  6156                           	opt stack 0
  6157  004758                     _frexp:
  6158                           	opt stack 19
  6159                           
  6160                           ;incstack = 0
  6161  004758  0100               	movlb	0	; () banked
  6162  00475A  5190               	movf	frexp@value& (0+255),w,b
  6163  00475C  0100               	movlb	0	; () banked
  6164  00475E  1191               	iorwf	(frexp@value+1)& (0+255),w,b
  6165  004760  0100               	movlb	0	; () banked
  6166  004762  1192               	iorwf	(frexp@value+2)& (0+255),w,b
  6167  004764  A4D8               	btfss	status,2,c
  6168  004766  D012               	goto	l7578
  6169                           
  6170                           ; BSR set to: 0
  6171  004768  C093  FFD9         	movff	frexp@eptr,fsr2l
  6172  00476C  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6173  004770  0E00               	movlw	0
  6174  004772  6EDE               	movwf	postinc2,c
  6175  004774  0E00               	movlw	0
  6176  004776  6EDD               	movwf	postdec2,c
  6177                           
  6178                           ; BSR set to: 0
  6179  004778  0E00               	movlw	0
  6180  00477A  0100               	movlb	0	; () banked
  6181  00477C  6F90               	movwf	?_frexp& (0+255),b
  6182  00477E  0E00               	movlw	0
  6183  004780  0100               	movlb	0	; () banked
  6184  004782  6F91               	movwf	(?_frexp+1)& (0+255),b
  6185  004784  0E00               	movlw	0
  6186  004786  0100               	movlb	0	; () banked
  6187  004788  6F92               	movwf	(?_frexp+2)& (0+255),b
  6188                           
  6189                           ; BSR set to: 0
  6190  00478A  0012               	return	
  6191  00478C                     l7578:
  6192                           
  6193                           ; BSR set to: 0
  6194  00478C  0100               	movlb	0	; () banked
  6195  00478E  5192               	movf	(frexp@value+2)& (0+255),w,b
  6196  004790  0B7F               	andlw	127
  6197  004792  0100               	movlb	0	; () banked
  6198  004794  6F95               	movwf	??_frexp& (0+255),b
  6199  004796  6B96               	clrf	(??_frexp+1)& (0+255),b
  6200  004798  90D8               	bcf	status,0,c
  6201  00479A  0100               	movlb	0	; () banked
  6202  00479C  3795               	rlcf	??_frexp& (0+255),f,b
  6203  00479E  3796               	rlcf	(??_frexp+1)& (0+255),f,b
  6204  0047A0  C093  FFD9         	movff	frexp@eptr,fsr2l
  6205  0047A4  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6206  0047A8  C095  FFDE         	movff	??_frexp,postinc2
  6207  0047AC  C096  FFDD         	movff	??_frexp+1,postdec2
  6208  0047B0  0100               	movlb	0	; () banked
  6209  0047B2  AF91               	btfss	(frexp@value+1)& (0+255),7,b
  6210  0047B4  D004               	goto	u7590
  6211  0047B6  0100               	movlb	0	; () banked
  6212  0047B8  6B95               	clrf	??_frexp& (0+255),b
  6213  0047BA  2B95               	incf	??_frexp& (0+255),f,b
  6214  0047BC  D002               	goto	u7598
  6215  0047BE                     u7590:
  6216  0047BE  0100               	movlb	0	; () banked
  6217  0047C0  6B95               	clrf	??_frexp& (0+255),b
  6218  0047C2                     u7598:
  6219  0047C2  0100               	movlb	0	; () banked
  6220  0047C4  5195               	movf	??_frexp& (0+255),w,b
  6221  0047C6  C093  FFD9         	movff	frexp@eptr,fsr2l
  6222  0047CA  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6223  0047CE  12DE               	iorwf	postinc2,f,c
  6224  0047D0  0E00               	movlw	0
  6225  0047D2  12DD               	iorwf	postdec2,f,c
  6226                           
  6227                           ; BSR set to: 0
  6228  0047D4  C093  FFD9         	movff	frexp@eptr,fsr2l
  6229  0047D8  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6230  0047DC  0E82               	movlw	130
  6231  0047DE  26DE               	addwf	postinc2,f,c
  6232  0047E0  0EFF               	movlw	255
  6233  0047E2  22DD               	addwfc	postdec2,f,c
  6234                           
  6235                           ; BSR set to: 0
  6236  0047E4  0100               	movlb	0	; () banked
  6237  0047E6  8192               	bsf	(frexp@value+2)& (0+255),0,b
  6238  0047E8  8392               	bsf	(frexp@value+2)& (0+255),1,b
  6239  0047EA  8592               	bsf	(frexp@value+2)& (0+255),2,b
  6240  0047EC  8792               	bsf	(frexp@value+2)& (0+255),3,b
  6241  0047EE  8992               	bsf	(frexp@value+2)& (0+255),4,b
  6242  0047F0  8B92               	bsf	(frexp@value+2)& (0+255),5,b
  6243  0047F2  9D92               	bcf	(frexp@value+2)& (0+255),6,b
  6244                           
  6245                           ; BSR set to: 0
  6246  0047F4  0100               	movlb	0	; () banked
  6247  0047F6  9F91               	bcf	(frexp@value+1)& (0+255),7,b
  6248                           
  6249                           ; BSR set to: 0
  6250  0047F8  C090  F090         	movff	frexp@value,?_frexp
  6251  0047FC  C091  F091         	movff	frexp@value+1,?_frexp+1
  6252  004800  C092  F092         	movff	frexp@value+2,?_frexp+2
  6253  004804  0012               	return	
  6254  004806                     __end_of_frexp:
  6255                           	opt stack 0
  6256                           tblptru	equ	0xFF8
  6257                           tblptrh	equ	0xFF7
  6258                           tblptrl	equ	0xFF6
  6259                           tablat	equ	0xFF5
  6260                           prodh	equ	0xFF4
  6261                           prodl	equ	0xFF3
  6262                           intcon	equ	0xFF2
  6263                           intcon2	equ	0xFF1
  6264                           intcon3	equ	0xFF0
  6265                           postinc0	equ	0xFEE
  6266                           wreg	equ	0xFE8
  6267                           postdec1	equ	0xFE5
  6268                           fsr1l	equ	0xFE1
  6269                           indf2	equ	0xFDF
  6270                           postinc2	equ	0xFDE
  6271                           postdec2	equ	0xFDD
  6272                           fsr2h	equ	0xFDA
  6273                           fsr2l	equ	0xFD9
  6274                           status	equ	0xFD8
  6275                           
  6276 ;; *************** function ___fttol *****************
  6277 ;; Defined at:
  6278 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  f1              3   55[BANK0 ] float 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;  lval            4   65[BANK0 ] unsigned long 
  6283 ;;  exp1            1   69[BANK0 ] unsigned char 
  6284 ;;  sign1           1   64[BANK0 ] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  4   55[BANK0 ] long 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6295 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;Total ram usage:       15 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    7
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_dec_to_hex
  6305 ;;		_pow
  6306 ;;		_exp
  6307 ;;		_floor
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text16
  6312  002EA0                     __ptext16:
  6313                           	opt stack 0
  6314  002EA0                     ___fttol:
  6315                           	opt stack 18
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;incstack = 0
  6319  002EA0  C0B9  F0BB         	movff	___fttol@f1+2,??___fttol
  6320  002EA4  0100               	movlb	0	; () banked
  6321  002EA6  6BBC               	clrf	(??___fttol+1)& (0+255),b
  6322  002EA8  6BBD               	clrf	(??___fttol+2)& (0+255),b
  6323  002EAA  0100               	movlb	0	; () banked
  6324  002EAC  35B8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6325  002EAE  0100               	movlb	0	; () banked
  6326  002EB0  37BB               	rlcf	??___fttol& (0+255),f,b
  6327  002EB2  E301               	bnc	u7501
  6328  002EB4  81BC               	bsf	(??___fttol+1)& (0+255),0,b
  6329  002EB6                     u7501:
  6330  002EB6  0100               	movlb	0	; () banked
  6331  002EB8  51BB               	movf	??___fttol& (0+255),w,b
  6332  002EBA  0100               	movlb	0	; () banked
  6333  002EBC  6FC5               	movwf	___fttol@exp1& (0+255),b
  6334  002EBE  0100               	movlb	0	; () banked
  6335  002EC0  51C5               	movf	___fttol@exp1& (0+255),w,b
  6336  002EC2  A4D8               	btfss	status,2,c
  6337  002EC4  D00A               	goto	l7530
  6338                           
  6339                           ; BSR set to: 0
  6340  002EC6  0E00               	movlw	0
  6341  002EC8  0100               	movlb	0	; () banked
  6342  002ECA  6FB7               	movwf	?___fttol& (0+255),b
  6343  002ECC  0E00               	movlw	0
  6344  002ECE  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6345  002ED0  0E00               	movlw	0
  6346  002ED2  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6347  002ED4  0E00               	movlw	0
  6348  002ED6  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6349                           
  6350                           ; BSR set to: 0
  6351  002ED8  0012               	return	
  6352  002EDA                     l7530:
  6353                           
  6354                           ; BSR set to: 0
  6355  002EDA  0E17               	movlw	23
  6356  002EDC  0100               	movlb	0	; () banked
  6357  002EDE  6FBB               	movwf	??___fttol& (0+255),b
  6358  002EE0  C0B7  F0BC         	movff	___fttol@f1,??___fttol+1
  6359  002EE4  C0B8  F0BD         	movff	___fttol@f1+1,??___fttol+2
  6360  002EE8  C0B9  F0BE         	movff	___fttol@f1+2,??___fttol+3
  6361  002EEC  0100               	movlb	0	; () banked
  6362  002EEE  29BB               	incf	??___fttol& (0+255),w,b
  6363  002EF0  0100               	movlb	0	; () banked
  6364  002EF2  6FBF               	movwf	(??___fttol+4)& (0+255),b
  6365  002EF4  D005               	goto	u7520
  6366  002EF6                     u7525:
  6367  002EF6  0100               	movlb	0	; () banked
  6368  002EF8  90D8               	bcf	status,0,c
  6369  002EFA  33BE               	rrcf	(??___fttol+3)& (0+255),f,b
  6370  002EFC  33BD               	rrcf	(??___fttol+2)& (0+255),f,b
  6371  002EFE  33BC               	rrcf	(??___fttol+1)& (0+255),f,b
  6372  002F00                     u7520:
  6373  002F00  0100               	movlb	0	; () banked
  6374  002F02  2FBF               	decfsz	(??___fttol+4)& (0+255),f,b
  6375  002F04  D7F8               	goto	u7525
  6376  002F06  0100               	movlb	0	; () banked
  6377  002F08  51BC               	movf	(??___fttol+1)& (0+255),w,b
  6378  002F0A  0100               	movlb	0	; () banked
  6379  002F0C  6FC0               	movwf	___fttol@sign1& (0+255),b
  6380                           
  6381                           ; BSR set to: 0
  6382  002F0E  0100               	movlb	0	; () banked
  6383  002F10  8FB8               	bsf	(___fttol@f1+1)& (0+255),7,b
  6384                           
  6385                           ; BSR set to: 0
  6386  002F12  0EFF               	movlw	255
  6387  002F14  0100               	movlb	0	; () banked
  6388  002F16  17B7               	andwf	___fttol@f1& (0+255),f,b
  6389  002F18  0EFF               	movlw	255
  6390  002F1A  0100               	movlb	0	; () banked
  6391  002F1C  17B8               	andwf	(___fttol@f1+1)& (0+255),f,b
  6392  002F1E  0E00               	movlw	0
  6393  002F20  0100               	movlb	0	; () banked
  6394  002F22  17B9               	andwf	(___fttol@f1+2)& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 0
  6397  002F24  0100               	movlb	0	; () banked
  6398  002F26  51B7               	movf	___fttol@f1& (0+255),w,b
  6399  002F28  0100               	movlb	0	; () banked
  6400  002F2A  6FC1               	movwf	___fttol@lval& (0+255),b
  6401  002F2C  0100               	movlb	0	; () banked
  6402  002F2E  51B8               	movf	(___fttol@f1+1)& (0+255),w,b
  6403  002F30  0100               	movlb	0	; () banked
  6404  002F32  6FC2               	movwf	(___fttol@lval+1)& (0+255),b
  6405  002F34  0100               	movlb	0	; () banked
  6406  002F36  51B9               	movf	(___fttol@f1+2)& (0+255),w,b
  6407  002F38  0100               	movlb	0	; () banked
  6408  002F3A  6FC3               	movwf	(___fttol@lval+2)& (0+255),b
  6409  002F3C  0100               	movlb	0	; () banked
  6410  002F3E  6BC4               	clrf	(___fttol@lval+3)& (0+255),b
  6411                           
  6412                           ; BSR set to: 0
  6413  002F40  0E8E               	movlw	142
  6414  002F42  0100               	movlb	0	; () banked
  6415  002F44  5FC5               	subwf	___fttol@exp1& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  002F46  0100               	movlb	0	; () banked
  6419  002F48  AFC5               	btfss	___fttol@exp1& (0+255),7,b
  6420  002F4A  D01A               	goto	l7552
  6421                           
  6422                           ; BSR set to: 0
  6423  002F4C  0100               	movlb	0	; () banked
  6424  002F4E  51C5               	movf	___fttol@exp1& (0+255),w,b
  6425  002F50  0A80               	xorlw	128
  6426  002F52  0F8F               	addlw	143
  6427  002F54  B0D8               	btfsc	status,0,c
  6428  002F56  D00A               	goto	l7548
  6429                           
  6430                           ; BSR set to: 0
  6431  002F58  0E00               	movlw	0
  6432  002F5A  0100               	movlb	0	; () banked
  6433  002F5C  6FB7               	movwf	?___fttol& (0+255),b
  6434  002F5E  0E00               	movlw	0
  6435  002F60  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6436  002F62  0E00               	movlw	0
  6437  002F64  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6438  002F66  0E00               	movlw	0
  6439  002F68  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6440                           
  6441                           ; BSR set to: 0
  6442  002F6A  0012               	return	
  6443  002F6C                     l7548:
  6444                           
  6445                           ; BSR set to: 0
  6446  002F6C  0100               	movlb	0	; () banked
  6447  002F6E  90D8               	bcf	status,0,c
  6448  002F70  33C4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6449  002F72  33C3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6450  002F74  33C2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6451  002F76  33C1               	rrcf	___fttol@lval& (0+255),f,b
  6452                           
  6453                           ; BSR set to: 0
  6454  002F78  0100               	movlb	0	; () banked
  6455  002F7A  3FC5               	incfsz	___fttol@exp1& (0+255),f,b
  6456  002F7C  D7F7               	goto	l7548
  6457                           
  6458                           ; BSR set to: 0
  6459  002F7E  D01B               	goto	l7562
  6460  002F80                     l7552:
  6461                           
  6462                           ; BSR set to: 0
  6463  002F80  0E17               	movlw	23
  6464  002F82  0100               	movlb	0	; () banked
  6465  002F84  65C5               	cpfsgt	___fttol@exp1& (0+255),b
  6466  002F86  D012               	goto	l7560
  6467                           
  6468                           ; BSR set to: 0
  6469  002F88  0E00               	movlw	0
  6470  002F8A  0100               	movlb	0	; () banked
  6471  002F8C  6FB7               	movwf	?___fttol& (0+255),b
  6472  002F8E  0E00               	movlw	0
  6473  002F90  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6474  002F92  0E00               	movlw	0
  6475  002F94  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6476  002F96  0E00               	movlw	0
  6477  002F98  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6478                           
  6479                           ; BSR set to: 0
  6480  002F9A  0012               	return	
  6481  002F9C                     l7558:
  6482                           
  6483                           ; BSR set to: 0
  6484  002F9C  0100               	movlb	0	; () banked
  6485  002F9E  90D8               	bcf	status,0,c
  6486  002FA0  37C1               	rlcf	___fttol@lval& (0+255),f,b
  6487  002FA2  37C2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6488  002FA4  37C3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6489  002FA6  37C4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6490  002FA8  0100               	movlb	0	; () banked
  6491  002FAA  07C5               	decf	___fttol@exp1& (0+255),f,b
  6492  002FAC                     l7560:
  6493                           
  6494                           ; BSR set to: 0
  6495  002FAC  0100               	movlb	0	; () banked
  6496  002FAE  51C5               	movf	___fttol@exp1& (0+255),w,b
  6497  002FB0  0100               	movlb	0	; () banked
  6498  002FB2  A4D8               	btfss	status,2,c
  6499  002FB4  D7F3               	goto	l7558
  6500  002FB6                     l7562:
  6501                           
  6502                           ; BSR set to: 0
  6503  002FB6  0100               	movlb	0	; () banked
  6504  002FB8  51C0               	movf	___fttol@sign1& (0+255),w,b
  6505  002FBA  0100               	movlb	0	; () banked
  6506  002FBC  B4D8               	btfsc	status,2,c
  6507  002FBE  D009               	goto	l7566
  6508                           
  6509                           ; BSR set to: 0
  6510  002FC0  0100               	movlb	0	; () banked
  6511  002FC2  1FC4               	comf	(___fttol@lval+3)& (0+255),f,b
  6512  002FC4  1FC3               	comf	(___fttol@lval+2)& (0+255),f,b
  6513  002FC6  1FC2               	comf	(___fttol@lval+1)& (0+255),f,b
  6514  002FC8  6DC1               	negf	___fttol@lval& (0+255),b
  6515  002FCA  0E00               	movlw	0
  6516  002FCC  23C2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6517  002FCE  23C3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6518  002FD0  23C4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6519  002FD2                     l7566:
  6520                           
  6521                           ; BSR set to: 0
  6522  002FD2  C0C1  F0B7         	movff	___fttol@lval,?___fttol
  6523  002FD6  C0C2  F0B8         	movff	___fttol@lval+1,?___fttol+1
  6524  002FDA  C0C3  F0B9         	movff	___fttol@lval+2,?___fttol+2
  6525  002FDE  C0C4  F0BA         	movff	___fttol@lval+3,?___fttol+3
  6526  002FE2  0012               	return	
  6527  002FE4                     __end_of___fttol:
  6528                           	opt stack 0
  6529                           tblptru	equ	0xFF8
  6530                           tblptrh	equ	0xFF7
  6531                           tblptrl	equ	0xFF6
  6532                           tablat	equ	0xFF5
  6533                           prodh	equ	0xFF4
  6534                           prodl	equ	0xFF3
  6535                           intcon	equ	0xFF2
  6536                           intcon2	equ	0xFF1
  6537                           intcon3	equ	0xFF0
  6538                           postinc0	equ	0xFEE
  6539                           wreg	equ	0xFE8
  6540                           postdec1	equ	0xFE5
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function ___ftge *****************
  6550 ;; Defined at:
  6551 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  ff1             3   39[BANK0 ] float 
  6554 ;;  ff2             3   42[BANK0 ] float 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;		None               void
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6566 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6568 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;Total ram usage:        9 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    7
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_operation
  6577 ;;		_pow
  6578 ;;		_exp
  6579 ;;		_floor
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text17
  6584  004450                     __ptext17:
  6585                           	opt stack 0
  6586  004450                     ___ftge:
  6587                           	opt stack 18
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;incstack = 0
  6591  004450  0100               	movlb	0	; () banked
  6592  004452  AFA9               	btfss	(___ftge@ff1+2)& (0+255),7,b
  6593  004454  D01D               	goto	l7510
  6594                           
  6595                           ; BSR set to: 0
  6596  004456  C0A7  F0AD         	movff	___ftge@ff1,??___ftge
  6597  00445A  C0A8  F0AE         	movff	___ftge@ff1+1,??___ftge+1
  6598  00445E  C0A9  F0AF         	movff	___ftge@ff1+2,??___ftge+2
  6599  004462  0100               	movlb	0	; () banked
  6600  004464  1FAD               	comf	??___ftge& (0+255),f,b
  6601  004466  1FAE               	comf	(??___ftge+1)& (0+255),f,b
  6602  004468  1FAF               	comf	(??___ftge+2)& (0+255),f,b
  6603  00446A  2BAD               	incf	??___ftge& (0+255),f,b
  6604  00446C  0E00               	movlw	0
  6605  00446E  23AE               	addwfc	(??___ftge+1)& (0+255),f,b
  6606  004470  23AF               	addwfc	(??___ftge+2)& (0+255),f,b
  6607  004472  0E00               	movlw	0
  6608  004474  0100               	movlb	0	; () banked
  6609  004476  25AD               	addwf	??___ftge& (0+255),w,b
  6610  004478  0100               	movlb	0	; () banked
  6611  00447A  6FA7               	movwf	___ftge@ff1& (0+255),b
  6612  00447C  0E00               	movlw	0
  6613  00447E  0100               	movlb	0	; () banked
  6614  004480  21AE               	addwfc	(??___ftge+1)& (0+255),w,b
  6615  004482  0100               	movlb	0	; () banked
  6616  004484  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  6617  004486  0E80               	movlw	128
  6618  004488  0100               	movlb	0	; () banked
  6619  00448A  21AF               	addwfc	(??___ftge+2)& (0+255),w,b
  6620  00448C  0100               	movlb	0	; () banked
  6621  00448E  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  6622  004490                     l7510:
  6623                           
  6624                           ; BSR set to: 0
  6625  004490  0100               	movlb	0	; () banked
  6626  004492  AFAC               	btfss	(___ftge@ff2+2)& (0+255),7,b
  6627  004494  D01D               	goto	l7514
  6628                           
  6629                           ; BSR set to: 0
  6630  004496  C0AA  F0AD         	movff	___ftge@ff2,??___ftge
  6631  00449A  C0AB  F0AE         	movff	___ftge@ff2+1,??___ftge+1
  6632  00449E  C0AC  F0AF         	movff	___ftge@ff2+2,??___ftge+2
  6633  0044A2  0100               	movlb	0	; () banked
  6634  0044A4  1FAD               	comf	??___ftge& (0+255),f,b
  6635  0044A6  1FAE               	comf	(??___ftge+1)& (0+255),f,b
  6636  0044A8  1FAF               	comf	(??___ftge+2)& (0+255),f,b
  6637  0044AA  2BAD               	incf	??___ftge& (0+255),f,b
  6638  0044AC  0E00               	movlw	0
  6639  0044AE  23AE               	addwfc	(??___ftge+1)& (0+255),f,b
  6640  0044B0  23AF               	addwfc	(??___ftge+2)& (0+255),f,b
  6641  0044B2  0E00               	movlw	0
  6642  0044B4  0100               	movlb	0	; () banked
  6643  0044B6  25AD               	addwf	??___ftge& (0+255),w,b
  6644  0044B8  0100               	movlb	0	; () banked
  6645  0044BA  6FAA               	movwf	___ftge@ff2& (0+255),b
  6646  0044BC  0E00               	movlw	0
  6647  0044BE  0100               	movlb	0	; () banked
  6648  0044C0  21AE               	addwfc	(??___ftge+1)& (0+255),w,b
  6649  0044C2  0100               	movlb	0	; () banked
  6650  0044C4  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  6651  0044C6  0E80               	movlw	128
  6652  0044C8  0100               	movlb	0	; () banked
  6653  0044CA  21AF               	addwfc	(??___ftge+2)& (0+255),w,b
  6654  0044CC  0100               	movlb	0	; () banked
  6655  0044CE  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  6656  0044D0                     l7514:
  6657                           
  6658                           ; BSR set to: 0
  6659  0044D0  0E00               	movlw	0
  6660  0044D2  0100               	movlb	0	; () banked
  6661  0044D4  1BA7               	xorwf	___ftge@ff1& (0+255),f,b
  6662  0044D6  0E00               	movlw	0
  6663  0044D8  0100               	movlb	0	; () banked
  6664  0044DA  1BA8               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  6665  0044DC  0E80               	movlw	128
  6666  0044DE  0100               	movlb	0	; () banked
  6667  0044E0  1BA9               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  6668                           
  6669                           ; BSR set to: 0
  6670  0044E2  0E00               	movlw	0
  6671  0044E4  0100               	movlb	0	; () banked
  6672  0044E6  1BAA               	xorwf	___ftge@ff2& (0+255),f,b
  6673  0044E8  0E00               	movlw	0
  6674  0044EA  0100               	movlb	0	; () banked
  6675  0044EC  1BAB               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  6676  0044EE  0E80               	movlw	128
  6677  0044F0  0100               	movlb	0	; () banked
  6678  0044F2  1BAC               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  6679  0044F4  0100               	movlb	0	; () banked
  6680  0044F6  51AA               	movf	___ftge@ff2& (0+255),w,b
  6681  0044F8  0100               	movlb	0	; () banked
  6682  0044FA  5DA7               	subwf	___ftge@ff1& (0+255),w,b
  6683  0044FC  0100               	movlb	0	; () banked
  6684  0044FE  51AB               	movf	(___ftge@ff2+1)& (0+255),w,b
  6685  004500  0100               	movlb	0	; () banked
  6686  004502  59A8               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  6687  004504  0100               	movlb	0	; () banked
  6688  004506  51AC               	movf	(___ftge@ff2+2)& (0+255),w,b
  6689  004508  0100               	movlb	0	; () banked
  6690  00450A  59A9               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  6691  00450C  B0D8               	btfsc	status,0,c
  6692  00450E  D002               	goto	l7520
  6693                           
  6694                           ; BSR set to: 0
  6695  004510  90D8               	bcf	status,0,c
  6696  004512  0012               	return	
  6697  004514                     l7520:
  6698                           
  6699                           ; BSR set to: 0
  6700  004514  80D8               	bsf	status,0,c
  6701                           
  6702                           ; BSR set to: 0
  6703  004516  0012               	return	
  6704  004518                     __end_of___ftge:
  6705                           	opt stack 0
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           intcon2	equ	0xFF1
  6714                           intcon3	equ	0xFF0
  6715                           postinc0	equ	0xFEE
  6716                           wreg	equ	0xFE8
  6717                           postdec1	equ	0xFE5
  6718                           fsr1l	equ	0xFE1
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function ___altoft *****************
  6727 ;; Defined at:
  6728 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  c               4   70[BANK0 ] long 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  sign            1   79[BANK0 ] unsigned char 
  6733 ;;  exp             1   78[BANK0 ] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  3   70[BANK0 ] float 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;Total ram usage:       10 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    8
  6750 ;; This function calls:
  6751 ;;		___ftpack
  6752 ;; This function is called by:
  6753 ;;		_floor
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text18
  6758  004956                     __ptext18:
  6759                           	opt stack 0
  6760  004956                     ___altoft:
  6761                           	opt stack 17
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;incstack = 0
  6765  004956  0E00               	movlw	0
  6766  004958  0100               	movlb	0	; () banked
  6767  00495A  6FCF               	movwf	___altoft@sign& (0+255),b
  6768  00495C  0E8E               	movlw	142
  6769  00495E  0100               	movlb	0	; () banked
  6770  004960  6FCE               	movwf	___altoft@exp& (0+255),b
  6771                           
  6772                           ; BSR set to: 0
  6773  004962  0100               	movlb	0	; () banked
  6774  004964  AFC9               	btfss	(___altoft@c+3)& (0+255),7,b
  6775  004966  D015               	goto	l7382
  6776                           
  6777                           ; BSR set to: 0
  6778  004968  0100               	movlb	0	; () banked
  6779  00496A  1FC9               	comf	(___altoft@c+3)& (0+255),f,b
  6780  00496C  1FC8               	comf	(___altoft@c+2)& (0+255),f,b
  6781  00496E  1FC7               	comf	(___altoft@c+1)& (0+255),f,b
  6782  004970  6DC6               	negf	___altoft@c& (0+255),b
  6783  004972  0E00               	movlw	0
  6784  004974  23C7               	addwfc	(___altoft@c+1)& (0+255),f,b
  6785  004976  23C8               	addwfc	(___altoft@c+2)& (0+255),f,b
  6786  004978  23C9               	addwfc	(___altoft@c+3)& (0+255),f,b
  6787                           
  6788                           ; BSR set to: 0
  6789  00497A  0E01               	movlw	1
  6790  00497C  0100               	movlb	0	; () banked
  6791  00497E  6FCF               	movwf	___altoft@sign& (0+255),b
  6792                           
  6793                           ; BSR set to: 0
  6794  004980  D008               	goto	l7382
  6795  004982                     l7380:
  6796                           
  6797                           ; BSR set to: 0
  6798  004982  0100               	movlb	0	; () banked
  6799  004984  90D8               	bcf	status,0,c
  6800  004986  33C9               	rrcf	(___altoft@c+3)& (0+255),f,b
  6801  004988  33C8               	rrcf	(___altoft@c+2)& (0+255),f,b
  6802  00498A  33C7               	rrcf	(___altoft@c+1)& (0+255),f,b
  6803  00498C  33C6               	rrcf	___altoft@c& (0+255),f,b
  6804  00498E  0100               	movlb	0	; () banked
  6805  004990  2BCE               	incf	___altoft@exp& (0+255),f,b
  6806  004992                     l7382:
  6807                           
  6808                           ; BSR set to: 0
  6809  004992  0E00               	movlw	0
  6810  004994  0100               	movlb	0	; () banked
  6811  004996  15C6               	andwf	___altoft@c& (0+255),w,b
  6812  004998  0100               	movlb	0	; () banked
  6813  00499A  6FCA               	movwf	??___altoft& (0+255),b
  6814  00499C  0E00               	movlw	0
  6815  00499E  0100               	movlb	0	; () banked
  6816  0049A0  15C7               	andwf	(___altoft@c+1)& (0+255),w,b
  6817  0049A2  0100               	movlb	0	; () banked
  6818  0049A4  6FCB               	movwf	(??___altoft+1)& (0+255),b
  6819  0049A6  0E00               	movlw	0
  6820  0049A8  0100               	movlb	0	; () banked
  6821  0049AA  15C8               	andwf	(___altoft@c+2)& (0+255),w,b
  6822  0049AC  0100               	movlb	0	; () banked
  6823  0049AE  6FCC               	movwf	(??___altoft+2)& (0+255),b
  6824  0049B0  0EFF               	movlw	255
  6825  0049B2  0100               	movlb	0	; () banked
  6826  0049B4  15C9               	andwf	(___altoft@c+3)& (0+255),w,b
  6827  0049B6  0100               	movlb	0	; () banked
  6828  0049B8  6FCD               	movwf	(??___altoft+3)& (0+255),b
  6829  0049BA  0100               	movlb	0	; () banked
  6830  0049BC  51CA               	movf	??___altoft& (0+255),w,b
  6831  0049BE  0100               	movlb	0	; () banked
  6832  0049C0  11CB               	iorwf	(??___altoft+1)& (0+255),w,b
  6833  0049C2  0100               	movlb	0	; () banked
  6834  0049C4  11CC               	iorwf	(??___altoft+2)& (0+255),w,b
  6835  0049C6  0100               	movlb	0	; () banked
  6836  0049C8  11CD               	iorwf	(??___altoft+3)& (0+255),w,b
  6837  0049CA  A4D8               	btfss	status,2,c
  6838  0049CC  D7DA               	goto	l7380
  6839                           
  6840                           ; BSR set to: 0
  6841                           
  6842                           ; BSR set to: 0
  6843  0049CE  C0C6  F090         	movff	___altoft@c,___ftpack@arg
  6844  0049D2  C0C7  F091         	movff	___altoft@c+1,___ftpack@arg+1
  6845  0049D6  C0C8  F092         	movff	___altoft@c+2,___ftpack@arg+2
  6846  0049DA  C0CE  F093         	movff	___altoft@exp,___ftpack@exp
  6847  0049DE  C0CF  F094         	movff	___altoft@sign,___ftpack@sign
  6848  0049E2  EC97  F019         	call	___ftpack	;wreg free
  6849  0049E6  C090  F0C6         	movff	?___ftpack,?___altoft
  6850  0049EA  C091  F0C7         	movff	?___ftpack+1,?___altoft+1
  6851  0049EE  C092  F0C8         	movff	?___ftpack+2,?___altoft+2
  6852  0049F2  0012               	return	
  6853  0049F4                     __end_of___altoft:
  6854                           	opt stack 0
  6855                           tblptru	equ	0xFF8
  6856                           tblptrh	equ	0xFF7
  6857                           tblptrl	equ	0xFF6
  6858                           tablat	equ	0xFF5
  6859                           prodh	equ	0xFF4
  6860                           prodl	equ	0xFF3
  6861                           intcon	equ	0xFF2
  6862                           intcon2	equ	0xFF1
  6863                           intcon3	equ	0xFF0
  6864                           postinc0	equ	0xFEE
  6865                           wreg	equ	0xFE8
  6866                           postdec1	equ	0xFE5
  6867                           fsr1l	equ	0xFE1
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8
  6874                           
  6875 ;; *************** function _eval_poly *****************
  6876 ;; Defined at:
  6877 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\evalpoly.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  x               3   55[BANK0 ] float 
  6880 ;;  d               2   58[BANK0 ] PTR const 
  6881 ;;		 -> log@coeff(27), exp@coeff(30), 
  6882 ;;  n               2   60[BANK0 ] int 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  res             3   64[BANK0 ] int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  3   55[BANK0 ] int 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6894 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;Total ram usage:       12 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    9
  6901 ;; This function calls:
  6902 ;;		___ftadd
  6903 ;;		___ftmul
  6904 ;;		___wmul
  6905 ;; This function is called by:
  6906 ;;		_exp
  6907 ;;		_log
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text19
  6912  003F26                     __ptext19:
  6913                           	opt stack 0
  6914  003F26                     _eval_poly:
  6915                           	opt stack 17
  6916                           
  6917                           ;incstack = 0
  6918  003F26  C0BC  F090         	movff	eval_poly@n,___wmul@multiplier
  6919  003F2A  C0BD  F091         	movff	eval_poly@n+1,___wmul@multiplier+1
  6920  003F2E  0E00               	movlw	0
  6921  003F30  0100               	movlb	0	; () banked
  6922  003F32  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6923  003F34  0E03               	movlw	3
  6924  003F36  6F92               	movwf	___wmul@multiplicand& (0+255),b
  6925  003F38  EC2E  F029         	call	___wmul	;wreg free
  6926  003F3C  C0BA  F0BE         	movff	eval_poly@d,??_eval_poly
  6927  003F40  C0BB  F0BF         	movff	eval_poly@d+1,??_eval_poly+1
  6928  003F44  0100               	movlb	0	; () banked
  6929  003F46  5190               	movf	?___wmul& (0+255),w,b
  6930  003F48  0100               	movlb	0	; () banked
  6931  003F4A  27BE               	addwf	??_eval_poly& (0+255),f,b
  6932  003F4C  0100               	movlb	0	; () banked
  6933  003F4E  5191               	movf	(?___wmul+1)& (0+255),w,b
  6934  003F50  0100               	movlb	0	; () banked
  6935  003F52  23BF               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6936  003F54  C0BE  FFF6         	movff	??_eval_poly,tblptrl
  6937  003F58  C0BF  FFF7         	movff	??_eval_poly+1,tblptrh
  6938  003F5C                     	if	0	;tblptru may be non-zero
  6939  003F5C                     	endif
  6940  003F5C                     	if	0	;tblptru may be non-zero
  6941  003F5C                     	endif
  6942  003F5C  0009               	tblrd		*+
  6943  003F5E  CFF5 F0C0          	movff	tablat,eval_poly@res
  6944  003F62  0009               	tblrd		*+
  6945  003F64  CFF5 F0C1          	movff	tablat,eval_poly@res+1
  6946  003F68  000A               	tblrd		*-
  6947  003F6A  CFF5 F0C2          	movff	tablat,eval_poly@res+2
  6948  003F6E  D044               	goto	l7688
  6949  003F70                     l7686:
  6950                           
  6951                           ; BSR set to: 0
  6952  003F70  C0C0  F09F         	movff	eval_poly@res,___ftmul@f2
  6953  003F74  C0C1  F0A0         	movff	eval_poly@res+1,___ftmul@f2+1
  6954  003F78  C0C2  F0A1         	movff	eval_poly@res+2,___ftmul@f2+2
  6955  003F7C  C0B7  F09C         	movff	eval_poly@x,___ftmul@f1
  6956  003F80  C0B8  F09D         	movff	eval_poly@x+1,___ftmul@f1+1
  6957  003F84  C0B9  F09E         	movff	eval_poly@x+2,___ftmul@f1+2
  6958  003F88  EC53  F015         	call	___ftmul	;wreg free
  6959  003F8C  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  6960  003F90  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  6961  003F94  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  6962  003F98  0E00               	movlw	0
  6963  003F9A  0100               	movlb	0	; () banked
  6964  003F9C  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6965  003F9E  0E03               	movlw	3
  6966  003FA0  6F92               	movwf	___wmul@multiplicand& (0+255),b
  6967  003FA2  0100               	movlb	0	; () banked
  6968  003FA4  07BC               	decf	eval_poly@n& (0+255),f,b
  6969  003FA6  A0D8               	btfss	status,0,c
  6970  003FA8  07BD               	decf	(eval_poly@n+1)& (0+255),f,b
  6971  003FAA  C0BC  F090         	movff	eval_poly@n,___wmul@multiplier
  6972  003FAE  C0BD  F091         	movff	eval_poly@n+1,___wmul@multiplier+1
  6973  003FB2  EC2E  F029         	call	___wmul	;wreg free
  6974  003FB6  C0BA  F0BE         	movff	eval_poly@d,??_eval_poly
  6975  003FBA  C0BB  F0BF         	movff	eval_poly@d+1,??_eval_poly+1
  6976  003FBE  0100               	movlb	0	; () banked
  6977  003FC0  5190               	movf	?___wmul& (0+255),w,b
  6978  003FC2  0100               	movlb	0	; () banked
  6979  003FC4  27BE               	addwf	??_eval_poly& (0+255),f,b
  6980  003FC6  0100               	movlb	0	; () banked
  6981  003FC8  5191               	movf	(?___wmul+1)& (0+255),w,b
  6982  003FCA  0100               	movlb	0	; () banked
  6983  003FCC  23BF               	addwfc	(??_eval_poly+1)& (0+255),f,b
  6984  003FCE  C0BE  FFF6         	movff	??_eval_poly,tblptrl
  6985  003FD2  C0BF  FFF7         	movff	??_eval_poly+1,tblptrh
  6986  003FD6                     	if	0	;tblptru may be non-zero
  6987  003FD6                     	endif
  6988  003FD6                     	if	0	;tblptru may be non-zero
  6989  003FD6                     	endif
  6990  003FD6  0009               	tblrd		*+
  6991  003FD8  CFF5 F0AE          	movff	tablat,___ftadd@f2
  6992  003FDC  0009               	tblrd		*+
  6993  003FDE  CFF5 F0AF          	movff	tablat,___ftadd@f2+1
  6994  003FE2  000A               	tblrd		*-
  6995  003FE4  CFF5 F0B0          	movff	tablat,___ftadd@f2+2
  6996  003FE8  EC76  F00E         	call	___ftadd	;wreg free
  6997  003FEC  C0AB  F0C0         	movff	?___ftadd,eval_poly@res
  6998  003FF0  C0AC  F0C1         	movff	?___ftadd+1,eval_poly@res+1
  6999  003FF4  C0AD  F0C2         	movff	?___ftadd+2,eval_poly@res+2
  7000  003FF8                     l7688:
  7001  003FF8  0100               	movlb	0	; () banked
  7002  003FFA  51BC               	movf	eval_poly@n& (0+255),w,b
  7003  003FFC  0100               	movlb	0	; () banked
  7004  003FFE  11BD               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7005  004000  A4D8               	btfss	status,2,c
  7006  004002  D7B6               	goto	l7686
  7007                           
  7008                           ; BSR set to: 0
  7009  004004  C0C0  F0B7         	movff	eval_poly@res,?_eval_poly
  7010  004008  C0C1  F0B8         	movff	eval_poly@res+1,?_eval_poly+1
  7011  00400C  C0C2  F0B9         	movff	eval_poly@res+2,?_eval_poly+2
  7012                           
  7013                           ; BSR set to: 0
  7014  004010  0012               	return		;funcret
  7015  004012                     __end_of_eval_poly:
  7016                           	opt stack 0
  7017                           tblptru	equ	0xFF8
  7018                           tblptrh	equ	0xFF7
  7019                           tblptrl	equ	0xFF6
  7020                           tablat	equ	0xFF5
  7021                           prodh	equ	0xFF4
  7022                           prodl	equ	0xFF3
  7023                           intcon	equ	0xFF2
  7024                           intcon2	equ	0xFF1
  7025                           intcon3	equ	0xFF0
  7026                           postinc0	equ	0xFEE
  7027                           wreg	equ	0xFE8
  7028                           postdec1	equ	0xFE5
  7029                           fsr1l	equ	0xFE1
  7030                           indf2	equ	0xFDF
  7031                           postinc2	equ	0xFDE
  7032                           postdec2	equ	0xFDD
  7033                           fsr2h	equ	0xFDA
  7034                           fsr2l	equ	0xFD9
  7035                           status	equ	0xFD8
  7036                           
  7037 ;; *************** function ___ftmul *****************
  7038 ;; Defined at:
  7039 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  f1              3   28[BANK0 ] float 
  7042 ;;  f2              3   31[BANK0 ] float 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  7045 ;;  sign            1   42[BANK0 ] unsigned char 
  7046 ;;  cntr            1   41[BANK0 ] unsigned char 
  7047 ;;  exp             1   37[BANK0 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  3   28[BANK0 ] float 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:       15 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    8
  7064 ;; This function calls:
  7065 ;;		___ftpack
  7066 ;; This function is called by:
  7067 ;;		_dec_to_hex
  7068 ;;		_pow
  7069 ;;		_exp
  7070 ;;		_log
  7071 ;;		_eval_poly
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text20
  7076  002AA6                     __ptext20:
  7077                           	opt stack 0
  7078  002AA6                     ___ftmul:
  7079                           	opt stack 17
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;incstack = 0
  7083  002AA6  C09E  F0A2         	movff	___ftmul@f1+2,??___ftmul
  7084  002AAA  0100               	movlb	0	; () banked
  7085  002AAC  6BA3               	clrf	(??___ftmul+1)& (0+255),b
  7086  002AAE  6BA4               	clrf	(??___ftmul+2)& (0+255),b
  7087  002AB0  0100               	movlb	0	; () banked
  7088  002AB2  359D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7089  002AB4  0100               	movlb	0	; () banked
  7090  002AB6  37A2               	rlcf	??___ftmul& (0+255),f,b
  7091  002AB8  E301               	bnc	u7411
  7092  002ABA  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
  7093  002ABC                     u7411:
  7094  002ABC  0100               	movlb	0	; () banked
  7095  002ABE  51A2               	movf	??___ftmul& (0+255),w,b
  7096  002AC0  0100               	movlb	0	; () banked
  7097  002AC2  6FA5               	movwf	___ftmul@exp& (0+255),b
  7098  002AC4  0100               	movlb	0	; () banked
  7099  002AC6  51A5               	movf	___ftmul@exp& (0+255),w,b
  7100  002AC8  A4D8               	btfss	status,2,c
  7101  002ACA  D00A               	goto	l7464
  7102                           
  7103                           ; BSR set to: 0
  7104  002ACC  0E00               	movlw	0
  7105  002ACE  0100               	movlb	0	; () banked
  7106  002AD0  6F9C               	movwf	?___ftmul& (0+255),b
  7107  002AD2  0E00               	movlw	0
  7108  002AD4  0100               	movlb	0	; () banked
  7109  002AD6  6F9D               	movwf	(?___ftmul+1)& (0+255),b
  7110  002AD8  0E00               	movlw	0
  7111  002ADA  0100               	movlb	0	; () banked
  7112  002ADC  6F9E               	movwf	(?___ftmul+2)& (0+255),b
  7113                           
  7114                           ; BSR set to: 0
  7115  002ADE  0012               	return	
  7116  002AE0                     l7464:
  7117                           
  7118                           ; BSR set to: 0
  7119  002AE0  C0A1  F0A2         	movff	___ftmul@f2+2,??___ftmul
  7120  002AE4  0100               	movlb	0	; () banked
  7121  002AE6  6BA3               	clrf	(??___ftmul+1)& (0+255),b
  7122  002AE8  6BA4               	clrf	(??___ftmul+2)& (0+255),b
  7123  002AEA  0100               	movlb	0	; () banked
  7124  002AEC  35A0               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7125  002AEE  0100               	movlb	0	; () banked
  7126  002AF0  37A2               	rlcf	??___ftmul& (0+255),f,b
  7127  002AF2  E301               	bnc	u7431
  7128  002AF4  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
  7129  002AF6                     u7431:
  7130  002AF6  0100               	movlb	0	; () banked
  7131  002AF8  51A2               	movf	??___ftmul& (0+255),w,b
  7132  002AFA  0100               	movlb	0	; () banked
  7133  002AFC  6FAA               	movwf	___ftmul@sign& (0+255),b
  7134  002AFE  0100               	movlb	0	; () banked
  7135  002B00  51AA               	movf	___ftmul@sign& (0+255),w,b
  7136  002B02  A4D8               	btfss	status,2,c
  7137  002B04  D00A               	goto	l7470
  7138                           
  7139                           ; BSR set to: 0
  7140  002B06  0E00               	movlw	0
  7141  002B08  0100               	movlb	0	; () banked
  7142  002B0A  6F9C               	movwf	?___ftmul& (0+255),b
  7143  002B0C  0E00               	movlw	0
  7144  002B0E  0100               	movlb	0	; () banked
  7145  002B10  6F9D               	movwf	(?___ftmul+1)& (0+255),b
  7146  002B12  0E00               	movlw	0
  7147  002B14  0100               	movlb	0	; () banked
  7148  002B16  6F9E               	movwf	(?___ftmul+2)& (0+255),b
  7149                           
  7150                           ; BSR set to: 0
  7151  002B18  0012               	return	
  7152  002B1A                     l7470:
  7153                           
  7154                           ; BSR set to: 0
  7155  002B1A  0100               	movlb	0	; () banked
  7156  002B1C  51AA               	movf	___ftmul@sign& (0+255),w,b
  7157  002B1E  0F7B               	addlw	123
  7158  002B20  0100               	movlb	0	; () banked
  7159  002B22  27A5               	addwf	___ftmul@exp& (0+255),f,b
  7160                           
  7161                           ; BSR set to: 0
  7162  002B24  C09E  F0AA         	movff	___ftmul@f1+2,___ftmul@sign
  7163  002B28  0100               	movlb	0	; () banked
  7164  002B2A  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7165  002B2C  0100               	movlb	0	; () banked
  7166  002B2E  1BAA               	xorwf	___ftmul@sign& (0+255),f,b
  7167  002B30  0E80               	movlw	128
  7168  002B32  0100               	movlb	0	; () banked
  7169  002B34  17AA               	andwf	___ftmul@sign& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172  002B36  0100               	movlb	0	; () banked
  7173  002B38  8F9D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7174                           
  7175                           ; BSR set to: 0
  7176  002B3A  0100               	movlb	0	; () banked
  7177  002B3C  8FA0               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7178                           
  7179                           ; BSR set to: 0
  7180  002B3E  0EFF               	movlw	255
  7181  002B40  0100               	movlb	0	; () banked
  7182  002B42  179F               	andwf	___ftmul@f2& (0+255),f,b
  7183  002B44  0EFF               	movlw	255
  7184  002B46  0100               	movlb	0	; () banked
  7185  002B48  17A0               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7186  002B4A  0E00               	movlw	0
  7187  002B4C  0100               	movlb	0	; () banked
  7188  002B4E  17A1               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7189                           
  7190                           ; BSR set to: 0
  7191  002B50  0E00               	movlw	0
  7192  002B52  0100               	movlb	0	; () banked
  7193  002B54  6FA6               	movwf	___ftmul@f3_as_product& (0+255),b
  7194  002B56  0E00               	movlw	0
  7195  002B58  0100               	movlb	0	; () banked
  7196  002B5A  6FA7               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7197  002B5C  0E00               	movlw	0
  7198  002B5E  0100               	movlb	0	; () banked
  7199  002B60  6FA8               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7200                           
  7201                           ; BSR set to: 0
  7202  002B62  0E07               	movlw	7
  7203  002B64  0100               	movlb	0	; () banked
  7204  002B66  6FA9               	movwf	___ftmul@cntr& (0+255),b
  7205  002B68                     l7484:
  7206                           
  7207                           ; BSR set to: 0
  7208  002B68  0100               	movlb	0	; () banked
  7209  002B6A  A19C               	btfss	___ftmul@f1& (0+255),0,b
  7210  002B6C  D00C               	goto	l7488
  7211                           
  7212                           ; BSR set to: 0
  7213  002B6E  0100               	movlb	0	; () banked
  7214  002B70  519F               	movf	___ftmul@f2& (0+255),w,b
  7215  002B72  0100               	movlb	0	; () banked
  7216  002B74  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7217  002B76  0100               	movlb	0	; () banked
  7218  002B78  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
  7219  002B7A  0100               	movlb	0	; () banked
  7220  002B7C  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7221  002B7E  0100               	movlb	0	; () banked
  7222  002B80  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7223  002B82  0100               	movlb	0	; () banked
  7224  002B84  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7225  002B86                     l7488:
  7226                           
  7227                           ; BSR set to: 0
  7228  002B86  0100               	movlb	0	; () banked
  7229  002B88  90D8               	bcf	status,0,c
  7230  002B8A  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7231  002B8C  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7232  002B8E  339C               	rrcf	___ftmul@f1& (0+255),f,b
  7233  002B90  0100               	movlb	0	; () banked
  7234  002B92  90D8               	bcf	status,0,c
  7235  002B94  379F               	rlcf	___ftmul@f2& (0+255),f,b
  7236  002B96  37A0               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7237  002B98  37A1               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7238                           
  7239                           ; BSR set to: 0
  7240  002B9A  0100               	movlb	0	; () banked
  7241  002B9C  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
  7242  002B9E  D7E4               	goto	l7484
  7243                           
  7244                           ; BSR set to: 0
  7245                           
  7246                           ; BSR set to: 0
  7247  002BA0  0E09               	movlw	9
  7248  002BA2  0100               	movlb	0	; () banked
  7249  002BA4  6FA9               	movwf	___ftmul@cntr& (0+255),b
  7250  002BA6                     l7494:
  7251                           
  7252                           ; BSR set to: 0
  7253  002BA6  0100               	movlb	0	; () banked
  7254  002BA8  A19C               	btfss	___ftmul@f1& (0+255),0,b
  7255  002BAA  D00C               	goto	l7498
  7256                           
  7257                           ; BSR set to: 0
  7258  002BAC  0100               	movlb	0	; () banked
  7259  002BAE  519F               	movf	___ftmul@f2& (0+255),w,b
  7260  002BB0  0100               	movlb	0	; () banked
  7261  002BB2  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7262  002BB4  0100               	movlb	0	; () banked
  7263  002BB6  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
  7264  002BB8  0100               	movlb	0	; () banked
  7265  002BBA  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7266  002BBC  0100               	movlb	0	; () banked
  7267  002BBE  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7268  002BC0  0100               	movlb	0	; () banked
  7269  002BC2  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7270  002BC4                     l7498:
  7271                           
  7272                           ; BSR set to: 0
  7273  002BC4  0100               	movlb	0	; () banked
  7274  002BC6  90D8               	bcf	status,0,c
  7275  002BC8  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7276  002BCA  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7277  002BCC  339C               	rrcf	___ftmul@f1& (0+255),f,b
  7278  002BCE  0100               	movlb	0	; () banked
  7279  002BD0  90D8               	bcf	status,0,c
  7280  002BD2  33A8               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7281  002BD4  33A7               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7282  002BD6  33A6               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7283                           
  7284                           ; BSR set to: 0
  7285  002BD8  0100               	movlb	0	; () banked
  7286  002BDA  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
  7287  002BDC  D7E4               	goto	l7494
  7288                           
  7289                           ; BSR set to: 0
  7290                           
  7291                           ; BSR set to: 0
  7292  002BDE  C0A6  F090         	movff	___ftmul@f3_as_product,___ftpack@arg
  7293  002BE2  C0A7  F091         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7294  002BE6  C0A8  F092         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7295  002BEA  C0A5  F093         	movff	___ftmul@exp,___ftpack@exp
  7296  002BEE  C0AA  F094         	movff	___ftmul@sign,___ftpack@sign
  7297  002BF2  EC97  F019         	call	___ftpack	;wreg free
  7298  002BF6  C090  F09C         	movff	?___ftpack,?___ftmul
  7299  002BFA  C091  F09D         	movff	?___ftpack+1,?___ftmul+1
  7300  002BFE  C092  F09E         	movff	?___ftpack+2,?___ftmul+2
  7301  002C02  0012               	return	
  7302  002C04                     __end_of___ftmul:
  7303                           	opt stack 0
  7304                           tblptru	equ	0xFF8
  7305                           tblptrh	equ	0xFF7
  7306                           tblptrl	equ	0xFF6
  7307                           tablat	equ	0xFF5
  7308                           prodh	equ	0xFF4
  7309                           prodl	equ	0xFF3
  7310                           intcon	equ	0xFF2
  7311                           intcon2	equ	0xFF1
  7312                           intcon3	equ	0xFF0
  7313                           postinc0	equ	0xFEE
  7314                           wreg	equ	0xFE8
  7315                           postdec1	equ	0xFE5
  7316                           fsr1l	equ	0xFE1
  7317                           indf2	equ	0xFDF
  7318                           postinc2	equ	0xFDE
  7319                           postdec2	equ	0xFDD
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324 ;; *************** function ___ftsub *****************
  7325 ;; Defined at:
  7326 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  f1              3   55[BANK0 ] float 
  7329 ;;  f2              3   58[BANK0 ] float 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  3   55[BANK0 ] float 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7341 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;Total ram usage:        6 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    9
  7348 ;; This function calls:
  7349 ;;		___ftadd
  7350 ;; This function is called by:
  7351 ;;		_exp
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text21
  7356  0050A2                     __ptext21:
  7357                           	opt stack 0
  7358  0050A2                     ___ftsub:
  7359                           	opt stack 17
  7360                           
  7361                           ;incstack = 0
  7362  0050A2  0100               	movlb	0	; () banked
  7363  0050A4  51BA               	movf	___ftsub@f2& (0+255),w,b
  7364  0050A6  0100               	movlb	0	; () banked
  7365  0050A8  11BB               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7366  0050AA  0100               	movlb	0	; () banked
  7367  0050AC  11BC               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7368  0050AE  B4D8               	btfsc	status,2,c
  7369  0050B0  D009               	goto	l7640
  7370                           
  7371                           ; BSR set to: 0
  7372  0050B2  0E00               	movlw	0
  7373  0050B4  0100               	movlb	0	; () banked
  7374  0050B6  1BBA               	xorwf	___ftsub@f2& (0+255),f,b
  7375  0050B8  0E00               	movlw	0
  7376  0050BA  0100               	movlb	0	; () banked
  7377  0050BC  1BBB               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7378  0050BE  0E80               	movlw	128
  7379  0050C0  0100               	movlb	0	; () banked
  7380  0050C2  1BBC               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7381  0050C4                     l7640:
  7382                           
  7383                           ; BSR set to: 0
  7384  0050C4  C0B7  F0AB         	movff	___ftsub@f1,___ftadd@f1
  7385  0050C8  C0B8  F0AC         	movff	___ftsub@f1+1,___ftadd@f1+1
  7386  0050CC  C0B9  F0AD         	movff	___ftsub@f1+2,___ftadd@f1+2
  7387  0050D0  C0BA  F0AE         	movff	___ftsub@f2,___ftadd@f2
  7388  0050D4  C0BB  F0AF         	movff	___ftsub@f2+1,___ftadd@f2+1
  7389  0050D8  C0BC  F0B0         	movff	___ftsub@f2+2,___ftadd@f2+2
  7390  0050DC  EC76  F00E         	call	___ftadd	;wreg free
  7391  0050E0  C0AB  F0B7         	movff	?___ftadd,?___ftsub
  7392  0050E4  C0AC  F0B8         	movff	?___ftadd+1,?___ftsub+1
  7393  0050E8  C0AD  F0B9         	movff	?___ftadd+2,?___ftsub+2
  7394  0050EC  0012               	return	
  7395  0050EE                     __end_of___ftsub:
  7396                           	opt stack 0
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           intcon	equ	0xFF2
  7404                           intcon2	equ	0xFF1
  7405                           intcon3	equ	0xFF0
  7406                           postinc0	equ	0xFEE
  7407                           wreg	equ	0xFE8
  7408                           postdec1	equ	0xFE5
  7409                           fsr1l	equ	0xFE1
  7410                           indf2	equ	0xFDF
  7411                           postinc2	equ	0xFDE
  7412                           postdec2	equ	0xFDD
  7413                           fsr2h	equ	0xFDA
  7414                           fsr2l	equ	0xFD9
  7415                           status	equ	0xFD8
  7416                           
  7417 ;; *************** function ___ftadd *****************
  7418 ;; Defined at:
  7419 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  f1              3   43[BANK0 ] float 
  7422 ;;  f2              3   46[BANK0 ] float 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  exp1            1   54[BANK0 ] unsigned char 
  7425 ;;  exp2            1   53[BANK0 ] unsigned char 
  7426 ;;  sign            1   52[BANK0 ] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  3   43[BANK0 ] float 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7436 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;Total ram usage:       12 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    8
  7443 ;; This function calls:
  7444 ;;		___ftpack
  7445 ;; This function is called by:
  7446 ;;		_dec_to_hex
  7447 ;;		___ftsub
  7448 ;;		_floor
  7449 ;;		_log
  7450 ;;		_eval_poly
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text22
  7455  001CEC                     __ptext22:
  7456                           	opt stack 0
  7457  001CEC                     ___ftadd:
  7458                           	opt stack 17
  7459                           
  7460                           ;incstack = 0
  7461  001CEC  C0AD  F0B1         	movff	___ftadd@f1+2,??___ftadd
  7462  001CF0  0100               	movlb	0	; () banked
  7463  001CF2  6BB2               	clrf	(??___ftadd+1)& (0+255),b
  7464  001CF4  6BB3               	clrf	(??___ftadd+2)& (0+255),b
  7465  001CF6  0100               	movlb	0	; () banked
  7466  001CF8  35AC               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7467  001CFA  0100               	movlb	0	; () banked
  7468  001CFC  37B1               	rlcf	??___ftadd& (0+255),f,b
  7469  001CFE  E301               	bnc	u7201
  7470  001D00  81B2               	bsf	(??___ftadd+1)& (0+255),0,b
  7471  001D02                     u7201:
  7472  001D02  0100               	movlb	0	; () banked
  7473  001D04  51B1               	movf	??___ftadd& (0+255),w,b
  7474  001D06  0100               	movlb	0	; () banked
  7475  001D08  6FB6               	movwf	___ftadd@exp1& (0+255),b
  7476  001D0A  C0B0  F0B1         	movff	___ftadd@f2+2,??___ftadd
  7477  001D0E  0100               	movlb	0	; () banked
  7478  001D10  6BB2               	clrf	(??___ftadd+1)& (0+255),b
  7479  001D12  6BB3               	clrf	(??___ftadd+2)& (0+255),b
  7480  001D14  0100               	movlb	0	; () banked
  7481  001D16  35AF               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7482  001D18  0100               	movlb	0	; () banked
  7483  001D1A  37B1               	rlcf	??___ftadd& (0+255),f,b
  7484  001D1C  E301               	bnc	u7211
  7485  001D1E  81B2               	bsf	(??___ftadd+1)& (0+255),0,b
  7486  001D20                     u7211:
  7487  001D20  0100               	movlb	0	; () banked
  7488  001D22  51B1               	movf	??___ftadd& (0+255),w,b
  7489  001D24  0100               	movlb	0	; () banked
  7490  001D26  6FB5               	movwf	___ftadd@exp2& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493  001D28  0100               	movlb	0	; () banked
  7494  001D2A  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7495  001D2C  0100               	movlb	0	; () banked
  7496  001D2E  B4D8               	btfsc	status,2,c
  7497  001D30  D011               	goto	l922
  7498                           
  7499                           ; BSR set to: 0
  7500  001D32  0100               	movlb	0	; () banked
  7501  001D34  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7502  001D36  0100               	movlb	0	; () banked
  7503  001D38  5DB6               	subwf	___ftadd@exp1& (0+255),w,b
  7504  001D3A  B0D8               	btfsc	status,0,c
  7505  001D3C  D012               	goto	l7396
  7506                           
  7507                           ; BSR set to: 0
  7508  001D3E  0100               	movlb	0	; () banked
  7509  001D40  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7510  001D42  0800               	sublw	0
  7511  001D44  0100               	movlb	0	; () banked
  7512  001D46  25B5               	addwf	___ftadd@exp2& (0+255),w,b
  7513  001D48  0100               	movlb	0	; () banked
  7514  001D4A  6FB1               	movwf	??___ftadd& (0+255),b
  7515  001D4C  0E18               	movlw	24
  7516  001D4E  0100               	movlb	0	; () banked
  7517  001D50  65B1               	cpfsgt	??___ftadd& (0+255),b
  7518  001D52  D007               	goto	l7396
  7519  001D54                     l922:
  7520                           
  7521                           ; BSR set to: 0
  7522  001D54  C0AE  F0AB         	movff	___ftadd@f2,?___ftadd
  7523  001D58  C0AF  F0AC         	movff	___ftadd@f2+1,?___ftadd+1
  7524  001D5C  C0B0  F0AD         	movff	___ftadd@f2+2,?___ftadd+2
  7525  001D60  0012               	return	
  7526  001D62                     l7396:
  7527                           
  7528                           ; BSR set to: 0
  7529  001D62  0100               	movlb	0	; () banked
  7530  001D64  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7531  001D66  0100               	movlb	0	; () banked
  7532  001D68  B4D8               	btfsc	status,2,c
  7533  001D6A  D011               	goto	l926
  7534                           
  7535                           ; BSR set to: 0
  7536  001D6C  0100               	movlb	0	; () banked
  7537  001D6E  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7538  001D70  0100               	movlb	0	; () banked
  7539  001D72  5DB5               	subwf	___ftadd@exp2& (0+255),w,b
  7540  001D74  B0D8               	btfsc	status,0,c
  7541  001D76  D012               	goto	l7402
  7542                           
  7543                           ; BSR set to: 0
  7544  001D78  0100               	movlb	0	; () banked
  7545  001D7A  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7546  001D7C  0800               	sublw	0
  7547  001D7E  0100               	movlb	0	; () banked
  7548  001D80  25B6               	addwf	___ftadd@exp1& (0+255),w,b
  7549  001D82  0100               	movlb	0	; () banked
  7550  001D84  6FB1               	movwf	??___ftadd& (0+255),b
  7551  001D86  0E18               	movlw	24
  7552  001D88  0100               	movlb	0	; () banked
  7553  001D8A  65B1               	cpfsgt	??___ftadd& (0+255),b
  7554  001D8C  D007               	goto	l7402
  7555  001D8E                     l926:
  7556                           
  7557                           ; BSR set to: 0
  7558  001D8E  C0AB  F0AB         	movff	___ftadd@f1,?___ftadd
  7559  001D92  C0AC  F0AC         	movff	___ftadd@f1+1,?___ftadd+1
  7560  001D96  C0AD  F0AD         	movff	___ftadd@f1+2,?___ftadd+2
  7561  001D9A  0012               	return	
  7562  001D9C                     l7402:
  7563                           
  7564                           ; BSR set to: 0
  7565  001D9C  0E06               	movlw	6
  7566  001D9E  0100               	movlb	0	; () banked
  7567  001DA0  6FB4               	movwf	___ftadd@sign& (0+255),b
  7568                           
  7569                           ; BSR set to: 0
  7570  001DA2  0100               	movlb	0	; () banked
  7571  001DA4  AFAD               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7572  001DA6  D002               	goto	l7408
  7573                           
  7574                           ; BSR set to: 0
  7575  001DA8  0100               	movlb	0	; () banked
  7576  001DAA  8FB4               	bsf	___ftadd@sign& (0+255),7,b
  7577  001DAC                     l7408:
  7578                           
  7579                           ; BSR set to: 0
  7580  001DAC  0100               	movlb	0	; () banked
  7581  001DAE  AFB0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7582  001DB0  D002               	goto	l928
  7583                           
  7584                           ; BSR set to: 0
  7585  001DB2  0100               	movlb	0	; () banked
  7586  001DB4  8DB4               	bsf	___ftadd@sign& (0+255),6,b
  7587  001DB6                     l928:
  7588                           
  7589                           ; BSR set to: 0
  7590  001DB6  0100               	movlb	0	; () banked
  7591  001DB8  8FAC               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7592                           
  7593                           ; BSR set to: 0
  7594  001DBA  0EFF               	movlw	255
  7595  001DBC  0100               	movlb	0	; () banked
  7596  001DBE  17AB               	andwf	___ftadd@f1& (0+255),f,b
  7597  001DC0  0EFF               	movlw	255
  7598  001DC2  0100               	movlb	0	; () banked
  7599  001DC4  17AC               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7600  001DC6  0E00               	movlw	0
  7601  001DC8  0100               	movlb	0	; () banked
  7602  001DCA  17AD               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7603  001DCC  0100               	movlb	0	; () banked
  7604  001DCE  8FAF               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7605                           
  7606                           ; BSR set to: 0
  7607  001DD0  0EFF               	movlw	255
  7608  001DD2  0100               	movlb	0	; () banked
  7609  001DD4  17AE               	andwf	___ftadd@f2& (0+255),f,b
  7610  001DD6  0EFF               	movlw	255
  7611  001DD8  0100               	movlb	0	; () banked
  7612  001DDA  17AF               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7613  001DDC  0E00               	movlw	0
  7614  001DDE  0100               	movlb	0	; () banked
  7615  001DE0  17B0               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7616                           
  7617                           ; BSR set to: 0
  7618  001DE2  0100               	movlb	0	; () banked
  7619  001DE4  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7620  001DE6  0100               	movlb	0	; () banked
  7621  001DE8  5DB6               	subwf	___ftadd@exp1& (0+255),w,b
  7622  001DEA  B0D8               	btfsc	status,0,c
  7623  001DEC  D025               	goto	l7428
  7624  001DEE                     l7418:
  7625                           
  7626                           ; BSR set to: 0
  7627  001DEE  0100               	movlb	0	; () banked
  7628  001DF0  90D8               	bcf	status,0,c
  7629  001DF2  37AE               	rlcf	___ftadd@f2& (0+255),f,b
  7630  001DF4  37AF               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7631  001DF6  37B0               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7632  001DF8  0100               	movlb	0	; () banked
  7633  001DFA  07B5               	decf	___ftadd@exp2& (0+255),f,b
  7634                           
  7635                           ; BSR set to: 0
  7636  001DFC  0100               	movlb	0	; () banked
  7637  001DFE  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7638  001E00  0100               	movlb	0	; () banked
  7639  001E02  19B5               	xorwf	___ftadd@exp2& (0+255),w,b
  7640  001E04  B4D8               	btfsc	status,2,c
  7641  001E06  D011               	goto	l7426
  7642                           
  7643                           ; BSR set to: 0
  7644  001E08  0100               	movlb	0	; () banked
  7645  001E0A  07B4               	decf	___ftadd@sign& (0+255),f,b
  7646  001E0C  C0B4  F0B1         	movff	___ftadd@sign,??___ftadd
  7647  001E10  0E07               	movlw	7
  7648  001E12  0100               	movlb	0	; () banked
  7649  001E14  17B1               	andwf	??___ftadd& (0+255),f,b
  7650  001E16  B4D8               	btfsc	status,2,c
  7651  001E18  D008               	goto	l7426
  7652  001E1A  D7E9               	goto	l7418
  7653  001E1C                     l7424:
  7654                           
  7655                           ; BSR set to: 0
  7656  001E1C  0100               	movlb	0	; () banked
  7657  001E1E  90D8               	bcf	status,0,c
  7658  001E20  33AD               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7659  001E22  33AC               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7660  001E24  33AB               	rrcf	___ftadd@f1& (0+255),f,b
  7661  001E26  0100               	movlb	0	; () banked
  7662  001E28  2BB6               	incf	___ftadd@exp1& (0+255),f,b
  7663  001E2A                     l7426:
  7664                           
  7665                           ; BSR set to: 0
  7666  001E2A  0100               	movlb	0	; () banked
  7667  001E2C  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7668  001E2E  0100               	movlb	0	; () banked
  7669  001E30  19B6               	xorwf	___ftadd@exp1& (0+255),w,b
  7670  001E32  B4D8               	btfsc	status,2,c
  7671  001E34  D02B               	goto	l937
  7672  001E36  D7F2               	goto	l7424
  7673  001E38                     l7428:
  7674                           
  7675                           ; BSR set to: 0
  7676  001E38  0100               	movlb	0	; () banked
  7677  001E3A  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7678  001E3C  0100               	movlb	0	; () banked
  7679  001E3E  5DB5               	subwf	___ftadd@exp2& (0+255),w,b
  7680  001E40  B0D8               	btfsc	status,0,c
  7681  001E42  D024               	goto	l937
  7682  001E44                     l7430:
  7683                           
  7684                           ; BSR set to: 0
  7685  001E44  0100               	movlb	0	; () banked
  7686  001E46  90D8               	bcf	status,0,c
  7687  001E48  37AB               	rlcf	___ftadd@f1& (0+255),f,b
  7688  001E4A  37AC               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7689  001E4C  37AD               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7690  001E4E  0100               	movlb	0	; () banked
  7691  001E50  07B6               	decf	___ftadd@exp1& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  001E52  0100               	movlb	0	; () banked
  7695  001E54  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7696  001E56  0100               	movlb	0	; () banked
  7697  001E58  19B5               	xorwf	___ftadd@exp2& (0+255),w,b
  7698  001E5A  B4D8               	btfsc	status,2,c
  7699  001E5C  D011               	goto	l7438
  7700                           
  7701                           ; BSR set to: 0
  7702  001E5E  0100               	movlb	0	; () banked
  7703  001E60  07B4               	decf	___ftadd@sign& (0+255),f,b
  7704  001E62  C0B4  F0B1         	movff	___ftadd@sign,??___ftadd
  7705  001E66  0E07               	movlw	7
  7706  001E68  0100               	movlb	0	; () banked
  7707  001E6A  17B1               	andwf	??___ftadd& (0+255),f,b
  7708  001E6C  B4D8               	btfsc	status,2,c
  7709  001E6E  D008               	goto	l7438
  7710  001E70  D7E9               	goto	l7430
  7711  001E72                     l7436:
  7712                           
  7713                           ; BSR set to: 0
  7714  001E72  0100               	movlb	0	; () banked
  7715  001E74  90D8               	bcf	status,0,c
  7716  001E76  33B0               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7717  001E78  33AF               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7718  001E7A  33AE               	rrcf	___ftadd@f2& (0+255),f,b
  7719  001E7C  0100               	movlb	0	; () banked
  7720  001E7E  2BB5               	incf	___ftadd@exp2& (0+255),f,b
  7721  001E80                     l7438:
  7722                           
  7723                           ; BSR set to: 0
  7724  001E80  0100               	movlb	0	; () banked
  7725  001E82  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7726  001E84  0100               	movlb	0	; () banked
  7727  001E86  19B6               	xorwf	___ftadd@exp1& (0+255),w,b
  7728  001E88  A4D8               	btfss	status,2,c
  7729  001E8A  D7F3               	goto	l7436
  7730  001E8C                     l937:
  7731                           
  7732                           ; BSR set to: 0
  7733  001E8C  0100               	movlb	0	; () banked
  7734  001E8E  AFB4               	btfss	___ftadd@sign& (0+255),7,b
  7735  001E90  D012               	goto	l946
  7736                           
  7737                           ; BSR set to: 0
  7738  001E92  0EFF               	movlw	255
  7739  001E94  0100               	movlb	0	; () banked
  7740  001E96  1BAB               	xorwf	___ftadd@f1& (0+255),f,b
  7741  001E98  0EFF               	movlw	255
  7742  001E9A  0100               	movlb	0	; () banked
  7743  001E9C  1BAC               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7744  001E9E  0EFF               	movlw	255
  7745  001EA0  0100               	movlb	0	; () banked
  7746  001EA2  1BAD               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7747  001EA4  0E01               	movlw	1
  7748  001EA6  0100               	movlb	0	; () banked
  7749  001EA8  27AB               	addwf	___ftadd@f1& (0+255),f,b
  7750  001EAA  0E00               	movlw	0
  7751  001EAC  0100               	movlb	0	; () banked
  7752  001EAE  23AC               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7753  001EB0  0E00               	movlw	0
  7754  001EB2  0100               	movlb	0	; () banked
  7755  001EB4  23AD               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7756  001EB6                     l946:
  7757                           
  7758                           ; BSR set to: 0
  7759  001EB6  0100               	movlb	0	; () banked
  7760  001EB8  ADB4               	btfss	___ftadd@sign& (0+255),6,b
  7761  001EBA  D012               	goto	l7444
  7762                           
  7763                           ; BSR set to: 0
  7764  001EBC  0EFF               	movlw	255
  7765  001EBE  0100               	movlb	0	; () banked
  7766  001EC0  1BAE               	xorwf	___ftadd@f2& (0+255),f,b
  7767  001EC2  0EFF               	movlw	255
  7768  001EC4  0100               	movlb	0	; () banked
  7769  001EC6  1BAF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7770  001EC8  0EFF               	movlw	255
  7771  001ECA  0100               	movlb	0	; () banked
  7772  001ECC  1BB0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7773  001ECE  0E01               	movlw	1
  7774  001ED0  0100               	movlb	0	; () banked
  7775  001ED2  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7776  001ED4  0E00               	movlw	0
  7777  001ED6  0100               	movlb	0	; () banked
  7778  001ED8  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7779  001EDA  0E00               	movlw	0
  7780  001EDC  0100               	movlb	0	; () banked
  7781  001EDE  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7782  001EE0                     l7444:
  7783                           
  7784                           ; BSR set to: 0
  7785  001EE0  0E00               	movlw	0
  7786  001EE2  0100               	movlb	0	; () banked
  7787  001EE4  6FB4               	movwf	___ftadd@sign& (0+255),b
  7788                           
  7789                           ; BSR set to: 0
  7790  001EE6  0100               	movlb	0	; () banked
  7791  001EE8  51AB               	movf	___ftadd@f1& (0+255),w,b
  7792  001EEA  0100               	movlb	0	; () banked
  7793  001EEC  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7794  001EEE  0100               	movlb	0	; () banked
  7795  001EF0  51AC               	movf	(___ftadd@f1+1)& (0+255),w,b
  7796  001EF2  0100               	movlb	0	; () banked
  7797  001EF4  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7798  001EF6  0100               	movlb	0	; () banked
  7799  001EF8  51AD               	movf	(___ftadd@f1+2)& (0+255),w,b
  7800  001EFA  0100               	movlb	0	; () banked
  7801  001EFC  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7802                           
  7803                           ; BSR set to: 0
  7804  001EFE  0100               	movlb	0	; () banked
  7805  001F00  AFB0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7806  001F02  D015               	goto	l7454
  7807                           
  7808                           ; BSR set to: 0
  7809  001F04  0EFF               	movlw	255
  7810  001F06  0100               	movlb	0	; () banked
  7811  001F08  1BAE               	xorwf	___ftadd@f2& (0+255),f,b
  7812  001F0A  0EFF               	movlw	255
  7813  001F0C  0100               	movlb	0	; () banked
  7814  001F0E  1BAF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7815  001F10  0EFF               	movlw	255
  7816  001F12  0100               	movlb	0	; () banked
  7817  001F14  1BB0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7818  001F16  0E01               	movlw	1
  7819  001F18  0100               	movlb	0	; () banked
  7820  001F1A  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7821  001F1C  0E00               	movlw	0
  7822  001F1E  0100               	movlb	0	; () banked
  7823  001F20  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7824  001F22  0E00               	movlw	0
  7825  001F24  0100               	movlb	0	; () banked
  7826  001F26  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 0
  7829  001F28  0E01               	movlw	1
  7830  001F2A  0100               	movlb	0	; () banked
  7831  001F2C  6FB4               	movwf	___ftadd@sign& (0+255),b
  7832  001F2E                     l7454:
  7833                           
  7834                           ; BSR set to: 0
  7835  001F2E  C0AE  F090         	movff	___ftadd@f2,___ftpack@arg
  7836  001F32  C0AF  F091         	movff	___ftadd@f2+1,___ftpack@arg+1
  7837  001F36  C0B0  F092         	movff	___ftadd@f2+2,___ftpack@arg+2
  7838  001F3A  C0B6  F093         	movff	___ftadd@exp1,___ftpack@exp
  7839  001F3E  C0B4  F094         	movff	___ftadd@sign,___ftpack@sign
  7840  001F42  EC97  F019         	call	___ftpack	;wreg free
  7841  001F46  C090  F0AB         	movff	?___ftpack,?___ftadd
  7842  001F4A  C091  F0AC         	movff	?___ftpack+1,?___ftadd+1
  7843  001F4E  C092  F0AD         	movff	?___ftpack+2,?___ftadd+2
  7844  001F52  0012               	return	
  7845  001F54                     __end_of___ftadd:
  7846                           	opt stack 0
  7847                           tblptru	equ	0xFF8
  7848                           tblptrh	equ	0xFF7
  7849                           tblptrl	equ	0xFF6
  7850                           tablat	equ	0xFF5
  7851                           prodh	equ	0xFF4
  7852                           prodl	equ	0xFF3
  7853                           intcon	equ	0xFF2
  7854                           intcon2	equ	0xFF1
  7855                           intcon3	equ	0xFF0
  7856                           postinc0	equ	0xFEE
  7857                           wreg	equ	0xFE8
  7858                           postdec1	equ	0xFE5
  7859                           fsr1l	equ	0xFE1
  7860                           indf2	equ	0xFDF
  7861                           postinc2	equ	0xFDE
  7862                           postdec2	equ	0xFDD
  7863                           fsr2h	equ	0xFDA
  7864                           fsr2l	equ	0xFD9
  7865                           status	equ	0xFD8
  7866                           
  7867 ;; *************** function ___ftneg *****************
  7868 ;; Defined at:
  7869 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  f1              3   16[BANK0 ] float 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  3   16[BANK0 ] float 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7883 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;Total ram usage:        3 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    7
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_pow
  7894 ;;		_exp
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text23
  7899  005292                     __ptext23:
  7900                           	opt stack 0
  7901  005292                     ___ftneg:
  7902                           	opt stack 19
  7903                           
  7904                           ;incstack = 0
  7905  005292  0100               	movlb	0	; () banked
  7906  005294  5190               	movf	___ftneg@f1& (0+255),w,b
  7907  005296  0100               	movlb	0	; () banked
  7908  005298  1191               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7909  00529A  0100               	movlb	0	; () banked
  7910  00529C  1192               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  7911  00529E  B4D8               	btfsc	status,2,c
  7912  0052A0  D009               	goto	l979
  7913                           
  7914                           ; BSR set to: 0
  7915  0052A2  0E00               	movlw	0
  7916  0052A4  0100               	movlb	0	; () banked
  7917  0052A6  1B90               	xorwf	___ftneg@f1& (0+255),f,b
  7918  0052A8  0E00               	movlw	0
  7919  0052AA  0100               	movlb	0	; () banked
  7920  0052AC  1B91               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7921  0052AE  0E80               	movlw	128
  7922  0052B0  0100               	movlb	0	; () banked
  7923  0052B2  1B92               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7924  0052B4                     l979:
  7925                           
  7926                           ; BSR set to: 0
  7927  0052B4  C090  F090         	movff	___ftneg@f1,?___ftneg
  7928  0052B8  C091  F091         	movff	___ftneg@f1+1,?___ftneg+1
  7929  0052BC  C092  F092         	movff	___ftneg@f1+2,?___ftneg+2
  7930                           
  7931                           ; BSR set to: 0
  7932  0052C0  0012               	return		;funcret
  7933  0052C2                     __end_of___ftneg:
  7934                           	opt stack 0
  7935                           tblptru	equ	0xFF8
  7936                           tblptrh	equ	0xFF7
  7937                           tblptrl	equ	0xFF6
  7938                           tablat	equ	0xFF5
  7939                           prodh	equ	0xFF4
  7940                           prodl	equ	0xFF3
  7941                           intcon	equ	0xFF2
  7942                           intcon2	equ	0xFF1
  7943                           intcon3	equ	0xFF0
  7944                           postinc0	equ	0xFEE
  7945                           wreg	equ	0xFE8
  7946                           postdec1	equ	0xFE5
  7947                           fsr1l	equ	0xFE1
  7948                           indf2	equ	0xFDF
  7949                           postinc2	equ	0xFDE
  7950                           postdec2	equ	0xFDD
  7951                           fsr2h	equ	0xFDA
  7952                           fsr2l	equ	0xFD9
  7953                           status	equ	0xFD8
  7954                           
  7955 ;; *************** function ___ftdiv *****************
  7956 ;; Defined at:
  7957 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;  f1              3   24[BANK0 ] float 
  7960 ;;  f2              3   27[BANK0 ] float 
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;  f3              3   34[BANK0 ] float 
  7963 ;;  sign            1   38[BANK0 ] unsigned char 
  7964 ;;  exp             1   37[BANK0 ] unsigned char 
  7965 ;;  cntr            1   33[BANK0 ] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  3   24[BANK0 ] float 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7975 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;Total ram usage:       15 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    8
  7982 ;; This function calls:
  7983 ;;		___ftpack
  7984 ;; This function is called by:
  7985 ;;		_operation
  7986 ;;		_exp
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text24
  7991  002D54                     __ptext24:
  7992                           	opt stack 0
  7993  002D54                     ___ftdiv:
  7994                           	opt stack 18
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;incstack = 0
  7998  002D54  C09A  F09E         	movff	___ftdiv@f1+2,??___ftdiv
  7999  002D58  0100               	movlb	0	; () banked
  8000  002D5A  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  8001  002D5C  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  8002  002D5E  0100               	movlb	0	; () banked
  8003  002D60  3599               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8004  002D62  0100               	movlb	0	; () banked
  8005  002D64  379E               	rlcf	??___ftdiv& (0+255),f,b
  8006  002D66  E301               	bnc	u7601
  8007  002D68  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8008  002D6A                     u7601:
  8009  002D6A  0100               	movlb	0	; () banked
  8010  002D6C  519E               	movf	??___ftdiv& (0+255),w,b
  8011  002D6E  0100               	movlb	0	; () banked
  8012  002D70  6FA5               	movwf	___ftdiv@exp& (0+255),b
  8013  002D72  0100               	movlb	0	; () banked
  8014  002D74  51A5               	movf	___ftdiv@exp& (0+255),w,b
  8015  002D76  A4D8               	btfss	status,2,c
  8016  002D78  D00A               	goto	l7596
  8017                           
  8018                           ; BSR set to: 0
  8019  002D7A  0E00               	movlw	0
  8020  002D7C  0100               	movlb	0	; () banked
  8021  002D7E  6F98               	movwf	?___ftdiv& (0+255),b
  8022  002D80  0E00               	movlw	0
  8023  002D82  0100               	movlb	0	; () banked
  8024  002D84  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  8025  002D86  0E00               	movlw	0
  8026  002D88  0100               	movlb	0	; () banked
  8027  002D8A  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  8028                           
  8029                           ; BSR set to: 0
  8030  002D8C  0012               	return	
  8031  002D8E                     l7596:
  8032                           
  8033                           ; BSR set to: 0
  8034  002D8E  C09D  F09E         	movff	___ftdiv@f2+2,??___ftdiv
  8035  002D92  0100               	movlb	0	; () banked
  8036  002D94  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  8037  002D96  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  8038  002D98  0100               	movlb	0	; () banked
  8039  002D9A  359C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8040  002D9C  0100               	movlb	0	; () banked
  8041  002D9E  379E               	rlcf	??___ftdiv& (0+255),f,b
  8042  002DA0  E301               	bnc	u7621
  8043  002DA2  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8044  002DA4                     u7621:
  8045  002DA4  0100               	movlb	0	; () banked
  8046  002DA6  519E               	movf	??___ftdiv& (0+255),w,b
  8047  002DA8  0100               	movlb	0	; () banked
  8048  002DAA  6FA6               	movwf	___ftdiv@sign& (0+255),b
  8049  002DAC  0100               	movlb	0	; () banked
  8050  002DAE  51A6               	movf	___ftdiv@sign& (0+255),w,b
  8051  002DB0  A4D8               	btfss	status,2,c
  8052  002DB2  D00A               	goto	l7602
  8053                           
  8054                           ; BSR set to: 0
  8055  002DB4  0E00               	movlw	0
  8056  002DB6  0100               	movlb	0	; () banked
  8057  002DB8  6F98               	movwf	?___ftdiv& (0+255),b
  8058  002DBA  0E00               	movlw	0
  8059  002DBC  0100               	movlb	0	; () banked
  8060  002DBE  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  8061  002DC0  0E00               	movlw	0
  8062  002DC2  0100               	movlb	0	; () banked
  8063  002DC4  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  8064                           
  8065                           ; BSR set to: 0
  8066  002DC6  0012               	return	
  8067  002DC8                     l7602:
  8068                           
  8069                           ; BSR set to: 0
  8070  002DC8  0E00               	movlw	0
  8071  002DCA  0100               	movlb	0	; () banked
  8072  002DCC  6FA2               	movwf	___ftdiv@f3& (0+255),b
  8073  002DCE  0E00               	movlw	0
  8074  002DD0  0100               	movlb	0	; () banked
  8075  002DD2  6FA3               	movwf	(___ftdiv@f3+1)& (0+255),b
  8076  002DD4  0E00               	movlw	0
  8077  002DD6  0100               	movlb	0	; () banked
  8078  002DD8  6FA4               	movwf	(___ftdiv@f3+2)& (0+255),b
  8079                           
  8080                           ; BSR set to: 0
  8081  002DDA  0100               	movlb	0	; () banked
  8082  002DDC  51A6               	movf	___ftdiv@sign& (0+255),w,b
  8083  002DDE  0F89               	addlw	137
  8084  002DE0  0100               	movlb	0	; () banked
  8085  002DE2  5FA5               	subwf	___ftdiv@exp& (0+255),f,b
  8086                           
  8087                           ; BSR set to: 0
  8088  002DE4  C09A  F0A6         	movff	___ftdiv@f1+2,___ftdiv@sign
  8089                           
  8090                           ; BSR set to: 0
  8091  002DE8  0100               	movlb	0	; () banked
  8092  002DEA  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8093  002DEC  0100               	movlb	0	; () banked
  8094  002DEE  1BA6               	xorwf	___ftdiv@sign& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097  002DF0  0E80               	movlw	128
  8098  002DF2  0100               	movlb	0	; () banked
  8099  002DF4  17A6               	andwf	___ftdiv@sign& (0+255),f,b
  8100                           
  8101                           ; BSR set to: 0
  8102  002DF6  0100               	movlb	0	; () banked
  8103  002DF8  8F99               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8104                           
  8105                           ; BSR set to: 0
  8106  002DFA  0EFF               	movlw	255
  8107  002DFC  0100               	movlb	0	; () banked
  8108  002DFE  1798               	andwf	___ftdiv@f1& (0+255),f,b
  8109  002E00  0EFF               	movlw	255
  8110  002E02  0100               	movlb	0	; () banked
  8111  002E04  1799               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8112  002E06  0E00               	movlw	0
  8113  002E08  0100               	movlb	0	; () banked
  8114  002E0A  179A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8115                           
  8116                           ; BSR set to: 0
  8117  002E0C  0100               	movlb	0	; () banked
  8118  002E0E  8F9C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8119                           
  8120                           ; BSR set to: 0
  8121  002E10  0EFF               	movlw	255
  8122  002E12  0100               	movlb	0	; () banked
  8123  002E14  179B               	andwf	___ftdiv@f2& (0+255),f,b
  8124  002E16  0EFF               	movlw	255
  8125  002E18  0100               	movlb	0	; () banked
  8126  002E1A  179C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8127  002E1C  0E00               	movlw	0
  8128  002E1E  0100               	movlb	0	; () banked
  8129  002E20  179D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8130                           
  8131                           ; BSR set to: 0
  8132  002E22  0E18               	movlw	24
  8133  002E24  0100               	movlb	0	; () banked
  8134  002E26  6FA1               	movwf	___ftdiv@cntr& (0+255),b
  8135  002E28                     l7622:
  8136                           
  8137                           ; BSR set to: 0
  8138  002E28  0100               	movlb	0	; () banked
  8139  002E2A  90D8               	bcf	status,0,c
  8140  002E2C  37A2               	rlcf	___ftdiv@f3& (0+255),f,b
  8141  002E2E  37A3               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8142  002E30  37A4               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8143                           
  8144                           ; BSR set to: 0
  8145  002E32  0100               	movlb	0	; () banked
  8146  002E34  519B               	movf	___ftdiv@f2& (0+255),w,b
  8147  002E36  0100               	movlb	0	; () banked
  8148  002E38  5D98               	subwf	___ftdiv@f1& (0+255),w,b
  8149  002E3A  0100               	movlb	0	; () banked
  8150  002E3C  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8151  002E3E  0100               	movlb	0	; () banked
  8152  002E40  5999               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8153  002E42  0100               	movlb	0	; () banked
  8154  002E44  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8155  002E46  0100               	movlb	0	; () banked
  8156  002E48  599A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8157  002E4A  A0D8               	btfss	status,0,c
  8158  002E4C  D00E               	goto	l957
  8159                           
  8160                           ; BSR set to: 0
  8161  002E4E  0100               	movlb	0	; () banked
  8162  002E50  519B               	movf	___ftdiv@f2& (0+255),w,b
  8163  002E52  0100               	movlb	0	; () banked
  8164  002E54  5F98               	subwf	___ftdiv@f1& (0+255),f,b
  8165  002E56  0100               	movlb	0	; () banked
  8166  002E58  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8167  002E5A  0100               	movlb	0	; () banked
  8168  002E5C  5B99               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8169  002E5E  0100               	movlb	0	; () banked
  8170  002E60  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8171  002E62  0100               	movlb	0	; () banked
  8172  002E64  5B9A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8173                           
  8174                           ; BSR set to: 0
  8175  002E66  0100               	movlb	0	; () banked
  8176  002E68  81A2               	bsf	___ftdiv@f3& (0+255),0,b
  8177  002E6A                     l957:
  8178                           
  8179                           ; BSR set to: 0
  8180  002E6A  0100               	movlb	0	; () banked
  8181  002E6C  90D8               	bcf	status,0,c
  8182  002E6E  3798               	rlcf	___ftdiv@f1& (0+255),f,b
  8183  002E70  3799               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8184  002E72  379A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8185                           
  8186                           ; BSR set to: 0
  8187  002E74  0100               	movlb	0	; () banked
  8188  002E76  2FA1               	decfsz	___ftdiv@cntr& (0+255),f,b
  8189  002E78  D7D7               	goto	l7622
  8190                           
  8191                           ; BSR set to: 0
  8192                           
  8193                           ; BSR set to: 0
  8194  002E7A  C0A2  F090         	movff	___ftdiv@f3,___ftpack@arg
  8195  002E7E  C0A3  F091         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8196  002E82  C0A4  F092         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8197  002E86  C0A5  F093         	movff	___ftdiv@exp,___ftpack@exp
  8198  002E8A  C0A6  F094         	movff	___ftdiv@sign,___ftpack@sign
  8199  002E8E  EC97  F019         	call	___ftpack	;wreg free
  8200  002E92  C090  F098         	movff	?___ftpack,?___ftdiv
  8201  002E96  C091  F099         	movff	?___ftpack+1,?___ftdiv+1
  8202  002E9A  C092  F09A         	movff	?___ftpack+2,?___ftdiv+2
  8203  002E9E  0012               	return	
  8204  002EA0                     __end_of___ftdiv:
  8205                           	opt stack 0
  8206                           tblptru	equ	0xFF8
  8207                           tblptrh	equ	0xFF7
  8208                           tblptrl	equ	0xFF6
  8209                           tablat	equ	0xFF5
  8210                           prodh	equ	0xFF4
  8211                           prodl	equ	0xFF3
  8212                           intcon	equ	0xFF2
  8213                           intcon2	equ	0xFF1
  8214                           intcon3	equ	0xFF0
  8215                           postinc0	equ	0xFEE
  8216                           wreg	equ	0xFE8
  8217                           postdec1	equ	0xFE5
  8218                           fsr1l	equ	0xFE1
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           postdec2	equ	0xFDD
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function ___awtoft *****************
  8227 ;; Defined at:
  8228 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  c               2   24[BANK0 ] int 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  sign            1   27[BANK0 ] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  3   24[BANK0 ] float 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8242 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;Total ram usage:        4 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    8
  8249 ;; This function calls:
  8250 ;;		___ftpack
  8251 ;; This function is called by:
  8252 ;;		_dec_to_hex
  8253 ;;		_exp
  8254 ;;		_log
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text25
  8259  0050EE                     __ptext25:
  8260                           	opt stack 0
  8261  0050EE                     ___awtoft:
  8262                           	opt stack 18
  8263                           
  8264                           ;incstack = 0
  8265  0050EE  0E00               	movlw	0
  8266  0050F0  0100               	movlb	0	; () banked
  8267  0050F2  6F9B               	movwf	___awtoft@sign& (0+255),b
  8268                           
  8269                           ; BSR set to: 0
  8270  0050F4  0100               	movlb	0	; () banked
  8271  0050F6  AF99               	btfss	(___awtoft@c+1)& (0+255),7,b
  8272  0050F8  D008               	goto	l7652
  8273                           
  8274                           ; BSR set to: 0
  8275  0050FA  0100               	movlb	0	; () banked
  8276  0050FC  6D98               	negf	___awtoft@c& (0+255),b
  8277  0050FE  1F99               	comf	(___awtoft@c+1)& (0+255),f,b
  8278  005100  B0D8               	btfsc	status,0,c
  8279  005102  2B99               	incf	(___awtoft@c+1)& (0+255),f,b
  8280                           
  8281                           ; BSR set to: 0
  8282  005104  0E01               	movlw	1
  8283  005106  0100               	movlb	0	; () banked
  8284  005108  6F9B               	movwf	___awtoft@sign& (0+255),b
  8285  00510A                     l7652:
  8286                           
  8287                           ; BSR set to: 0
  8288  00510A  C098  F090         	movff	___awtoft@c,___ftpack@arg
  8289  00510E  C099  F091         	movff	___awtoft@c+1,___ftpack@arg+1
  8290  005112  0100               	movlb	0	; () banked
  8291  005114  6B92               	clrf	(___ftpack@arg+2)& (0+255),b
  8292  005116  0E8E               	movlw	142
  8293  005118  0100               	movlb	0	; () banked
  8294  00511A  6F93               	movwf	___ftpack@exp& (0+255),b
  8295  00511C  C09B  F094         	movff	___awtoft@sign,___ftpack@sign
  8296  005120  EC97  F019         	call	___ftpack	;wreg free
  8297  005124  C090  F098         	movff	?___ftpack,?___awtoft
  8298  005128  C091  F099         	movff	?___ftpack+1,?___awtoft+1
  8299  00512C  C092  F09A         	movff	?___ftpack+2,?___awtoft+2
  8300  005130  0012               	return	
  8301  005132                     __end_of___awtoft:
  8302                           	opt stack 0
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           prodh	equ	0xFF4
  8308                           prodl	equ	0xFF3
  8309                           intcon	equ	0xFF2
  8310                           intcon2	equ	0xFF1
  8311                           intcon3	equ	0xFF0
  8312                           postinc0	equ	0xFEE
  8313                           wreg	equ	0xFE8
  8314                           postdec1	equ	0xFE5
  8315                           fsr1l	equ	0xFE1
  8316                           indf2	equ	0xFDF
  8317                           postinc2	equ	0xFDE
  8318                           postdec2	equ	0xFDD
  8319                           fsr2h	equ	0xFDA
  8320                           fsr2l	equ	0xFD9
  8321                           status	equ	0xFD8
  8322                           
  8323 ;; *************** function ___lltoft *****************
  8324 ;; Defined at:
  8325 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  c               4   24[BANK0 ] unsigned long 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  exp             1   32[BANK0 ] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  3   24[BANK0 ] float 
  8332 ;; Registers used:
  8333 ;;		wreg, status,2, status,0, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;Total ram usage:        9 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    8
  8346 ;; This function calls:
  8347 ;;		___ftpack
  8348 ;; This function is called by:
  8349 ;;		_pow
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text26
  8354  004B98                     __ptext26:
  8355                           	opt stack 0
  8356  004B98                     ___lltoft:
  8357                           	opt stack 19
  8358                           
  8359                           ;incstack = 0
  8360  004B98  0E8E               	movlw	142
  8361  004B9A  0100               	movlb	0	; () banked
  8362  004B9C  6FA0               	movwf	___lltoft@exp& (0+255),b
  8363  004B9E  D008               	goto	l7752
  8364  004BA0                     l7750:
  8365                           
  8366                           ; BSR set to: 0
  8367  004BA0  0100               	movlb	0	; () banked
  8368  004BA2  90D8               	bcf	status,0,c
  8369  004BA4  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8370  004BA6  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8371  004BA8  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8372  004BAA  3398               	rrcf	___lltoft@c& (0+255),f,b
  8373  004BAC  0100               	movlb	0	; () banked
  8374  004BAE  2BA0               	incf	___lltoft@exp& (0+255),f,b
  8375  004BB0                     l7752:
  8376                           
  8377                           ; BSR set to: 0
  8378  004BB0  0E00               	movlw	0
  8379  004BB2  0100               	movlb	0	; () banked
  8380  004BB4  1598               	andwf	___lltoft@c& (0+255),w,b
  8381  004BB6  0100               	movlb	0	; () banked
  8382  004BB8  6F9C               	movwf	??___lltoft& (0+255),b
  8383  004BBA  0E00               	movlw	0
  8384  004BBC  0100               	movlb	0	; () banked
  8385  004BBE  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
  8386  004BC0  0100               	movlb	0	; () banked
  8387  004BC2  6F9D               	movwf	(??___lltoft+1)& (0+255),b
  8388  004BC4  0E00               	movlw	0
  8389  004BC6  0100               	movlb	0	; () banked
  8390  004BC8  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
  8391  004BCA  0100               	movlb	0	; () banked
  8392  004BCC  6F9E               	movwf	(??___lltoft+2)& (0+255),b
  8393  004BCE  0EFF               	movlw	255
  8394  004BD0  0100               	movlb	0	; () banked
  8395  004BD2  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
  8396  004BD4  0100               	movlb	0	; () banked
  8397  004BD6  6F9F               	movwf	(??___lltoft+3)& (0+255),b
  8398  004BD8  0100               	movlb	0	; () banked
  8399  004BDA  519C               	movf	??___lltoft& (0+255),w,b
  8400  004BDC  0100               	movlb	0	; () banked
  8401  004BDE  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
  8402  004BE0  0100               	movlb	0	; () banked
  8403  004BE2  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
  8404  004BE4  0100               	movlb	0	; () banked
  8405  004BE6  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
  8406  004BE8  A4D8               	btfss	status,2,c
  8407  004BEA  D7DA               	goto	l7750
  8408                           
  8409                           ; BSR set to: 0
  8410                           
  8411                           ; BSR set to: 0
  8412  004BEC  C098  F090         	movff	___lltoft@c,___ftpack@arg
  8413  004BF0  C099  F091         	movff	___lltoft@c+1,___ftpack@arg+1
  8414  004BF4  C09A  F092         	movff	___lltoft@c+2,___ftpack@arg+2
  8415  004BF8  C0A0  F093         	movff	___lltoft@exp,___ftpack@exp
  8416  004BFC  0E00               	movlw	0
  8417  004BFE  0100               	movlb	0	; () banked
  8418  004C00  6F94               	movwf	___ftpack@sign& (0+255),b
  8419  004C02  EC97  F019         	call	___ftpack	;wreg free
  8420  004C06  C090  F098         	movff	?___ftpack,?___lltoft
  8421  004C0A  C091  F099         	movff	?___ftpack+1,?___lltoft+1
  8422  004C0E  C092  F09A         	movff	?___ftpack+2,?___lltoft+2
  8423  004C12  0012               	return	
  8424  004C14                     __end_of___lltoft:
  8425                           	opt stack 0
  8426                           tblptru	equ	0xFF8
  8427                           tblptrh	equ	0xFF7
  8428                           tblptrl	equ	0xFF6
  8429                           tablat	equ	0xFF5
  8430                           prodh	equ	0xFF4
  8431                           prodl	equ	0xFF3
  8432                           intcon	equ	0xFF2
  8433                           intcon2	equ	0xFF1
  8434                           intcon3	equ	0xFF0
  8435                           postinc0	equ	0xFEE
  8436                           wreg	equ	0xFE8
  8437                           postdec1	equ	0xFE5
  8438                           fsr1l	equ	0xFE1
  8439                           indf2	equ	0xFDF
  8440                           postinc2	equ	0xFDE
  8441                           postdec2	equ	0xFDD
  8442                           fsr2h	equ	0xFDA
  8443                           fsr2l	equ	0xFD9
  8444                           status	equ	0xFD8
  8445                           
  8446 ;; *************** function ___awdiv *****************
  8447 ;; Defined at:
  8448 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  dividend        2   16[BANK0 ] int 
  8451 ;;  divisor         2   18[BANK0 ] int 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  quotient        2   22[BANK0 ] int 
  8454 ;;  sign            1   21[BANK0 ] unsigned char 
  8455 ;;  counter         1   20[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  2   16[BANK0 ] int 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:        8 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    7
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_dec_to_hex
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text27
  8480  0045DE                     __ptext27:
  8481                           	opt stack 0
  8482  0045DE                     ___awdiv:
  8483                           	opt stack 21
  8484                           
  8485                           ;incstack = 0
  8486  0045DE  0E00               	movlw	0
  8487  0045E0  0100               	movlb	0	; () banked
  8488  0045E2  6F95               	movwf	___awdiv@sign& (0+255),b
  8489                           
  8490                           ; BSR set to: 0
  8491  0045E4  0100               	movlb	0	; () banked
  8492  0045E6  AF93               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8493  0045E8  D008               	goto	l7930
  8494                           
  8495                           ; BSR set to: 0
  8496  0045EA  0100               	movlb	0	; () banked
  8497  0045EC  6D92               	negf	___awdiv@divisor& (0+255),b
  8498  0045EE  1F93               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8499  0045F0  B0D8               	btfsc	status,0,c
  8500  0045F2  2B93               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8501                           
  8502                           ; BSR set to: 0
  8503  0045F4  0E01               	movlw	1
  8504  0045F6  0100               	movlb	0	; () banked
  8505  0045F8  6F95               	movwf	___awdiv@sign& (0+255),b
  8506  0045FA                     l7930:
  8507                           
  8508                           ; BSR set to: 0
  8509  0045FA  0100               	movlb	0	; () banked
  8510  0045FC  AF91               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8511  0045FE  D008               	goto	l7936
  8512                           
  8513                           ; BSR set to: 0
  8514  004600  0100               	movlb	0	; () banked
  8515  004602  6D90               	negf	___awdiv@dividend& (0+255),b
  8516  004604  1F91               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8517  004606  B0D8               	btfsc	status,0,c
  8518  004608  2B91               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8519                           
  8520                           ; BSR set to: 0
  8521  00460A  0E01               	movlw	1
  8522  00460C  0100               	movlb	0	; () banked
  8523  00460E  1B95               	xorwf	___awdiv@sign& (0+255),f,b
  8524  004610                     l7936:
  8525                           
  8526                           ; BSR set to: 0
  8527  004610  0E00               	movlw	0
  8528  004612  0100               	movlb	0	; () banked
  8529  004614  6F97               	movwf	(___awdiv@quotient+1)& (0+255),b
  8530  004616  0E00               	movlw	0
  8531  004618  6F96               	movwf	___awdiv@quotient& (0+255),b
  8532                           
  8533                           ; BSR set to: 0
  8534  00461A  0100               	movlb	0	; () banked
  8535  00461C  5192               	movf	___awdiv@divisor& (0+255),w,b
  8536  00461E  0100               	movlb	0	; () banked
  8537  004620  1193               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8538  004622  B4D8               	btfsc	status,2,c
  8539  004624  D02C               	goto	l7958
  8540                           
  8541                           ; BSR set to: 0
  8542  004626  0E01               	movlw	1
  8543  004628  0100               	movlb	0	; () banked
  8544  00462A  6F94               	movwf	___awdiv@counter& (0+255),b
  8545  00462C  D006               	goto	l7944
  8546  00462E                     l7942:
  8547                           
  8548                           ; BSR set to: 0
  8549  00462E  0100               	movlb	0	; () banked
  8550  004630  90D8               	bcf	status,0,c
  8551  004632  3792               	rlcf	___awdiv@divisor& (0+255),f,b
  8552  004634  3793               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8553  004636  0100               	movlb	0	; () banked
  8554  004638  2B94               	incf	___awdiv@counter& (0+255),f,b
  8555  00463A                     l7944:
  8556                           
  8557                           ; BSR set to: 0
  8558  00463A  0100               	movlb	0	; () banked
  8559  00463C  AF93               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8560  00463E  D7F7               	goto	l7942
  8561  004640                     l7946:
  8562                           
  8563                           ; BSR set to: 0
  8564  004640  0100               	movlb	0	; () banked
  8565  004642  90D8               	bcf	status,0,c
  8566  004644  3796               	rlcf	___awdiv@quotient& (0+255),f,b
  8567  004646  3797               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8568                           
  8569                           ; BSR set to: 0
  8570  004648  0100               	movlb	0	; () banked
  8571  00464A  5192               	movf	___awdiv@divisor& (0+255),w,b
  8572  00464C  0100               	movlb	0	; () banked
  8573  00464E  5D90               	subwf	___awdiv@dividend& (0+255),w,b
  8574  004650  0100               	movlb	0	; () banked
  8575  004652  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8576  004654  0100               	movlb	0	; () banked
  8577  004656  5991               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8578  004658  A0D8               	btfss	status,0,c
  8579  00465A  D00A               	goto	l7954
  8580                           
  8581                           ; BSR set to: 0
  8582  00465C  0100               	movlb	0	; () banked
  8583  00465E  5192               	movf	___awdiv@divisor& (0+255),w,b
  8584  004660  0100               	movlb	0	; () banked
  8585  004662  5F90               	subwf	___awdiv@dividend& (0+255),f,b
  8586  004664  0100               	movlb	0	; () banked
  8587  004666  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8588  004668  0100               	movlb	0	; () banked
  8589  00466A  5B91               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8590                           
  8591                           ; BSR set to: 0
  8592  00466C  0100               	movlb	0	; () banked
  8593  00466E  8196               	bsf	___awdiv@quotient& (0+255),0,b
  8594  004670                     l7954:
  8595                           
  8596                           ; BSR set to: 0
  8597  004670  0100               	movlb	0	; () banked
  8598  004672  90D8               	bcf	status,0,c
  8599  004674  3393               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8600  004676  3392               	rrcf	___awdiv@divisor& (0+255),f,b
  8601                           
  8602                           ; BSR set to: 0
  8603  004678  0100               	movlb	0	; () banked
  8604  00467A  2F94               	decfsz	___awdiv@counter& (0+255),f,b
  8605  00467C  D7E1               	goto	l7946
  8606  00467E                     l7958:
  8607                           
  8608                           ; BSR set to: 0
  8609  00467E  0100               	movlb	0	; () banked
  8610  004680  5195               	movf	___awdiv@sign& (0+255),w,b
  8611  004682  0100               	movlb	0	; () banked
  8612  004684  B4D8               	btfsc	status,2,c
  8613  004686  D005               	goto	l7962
  8614                           
  8615                           ; BSR set to: 0
  8616  004688  0100               	movlb	0	; () banked
  8617  00468A  6D96               	negf	___awdiv@quotient& (0+255),b
  8618  00468C  1F97               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8619  00468E  B0D8               	btfsc	status,0,c
  8620  004690  2B97               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8621  004692                     l7962:
  8622                           
  8623                           ; BSR set to: 0
  8624  004692  C096  F090         	movff	___awdiv@quotient,?___awdiv
  8625  004696  C097  F091         	movff	___awdiv@quotient+1,?___awdiv+1
  8626  00469A  0012               	return	
  8627  00469C                     __end_of___awdiv:
  8628                           	opt stack 0
  8629                           tblptru	equ	0xFF8
  8630                           tblptrh	equ	0xFF7
  8631                           tblptrl	equ	0xFF6
  8632                           tablat	equ	0xFF5
  8633                           prodh	equ	0xFF4
  8634                           prodl	equ	0xFF3
  8635                           intcon	equ	0xFF2
  8636                           intcon2	equ	0xFF1
  8637                           intcon3	equ	0xFF0
  8638                           postinc0	equ	0xFEE
  8639                           wreg	equ	0xFE8
  8640                           postdec1	equ	0xFE5
  8641                           fsr1l	equ	0xFE1
  8642                           indf2	equ	0xFDF
  8643                           postinc2	equ	0xFDE
  8644                           postdec2	equ	0xFDD
  8645                           fsr2h	equ	0xFDA
  8646                           fsr2l	equ	0xFD9
  8647                           status	equ	0xFD8
  8648                           
  8649 ;; *************** function ___lwtoft *****************
  8650 ;; Defined at:
  8651 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  c               2   24[BANK0 ] unsigned int 
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  3   24[BANK0 ] float 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8665 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8669 ;;Total ram usage:        3 bytes
  8670 ;; Hardware stack levels used:    1
  8671 ;; Hardware stack levels required when called:    8
  8672 ;; This function calls:
  8673 ;;		___ftpack
  8674 ;; This function is called by:
  8675 ;;		_operation
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text28
  8680  0052F0                     __ptext28:
  8681                           	opt stack 0
  8682  0052F0                     ___lwtoft:
  8683                           	opt stack 21
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;incstack = 0
  8687  0052F0  C098  F090         	movff	___lwtoft@c,___ftpack@arg
  8688  0052F4  C099  F091         	movff	___lwtoft@c+1,___ftpack@arg+1
  8689  0052F8  0100               	movlb	0	; () banked
  8690  0052FA  6B92               	clrf	(___ftpack@arg+2)& (0+255),b
  8691  0052FC  0E8E               	movlw	142
  8692  0052FE  0100               	movlb	0	; () banked
  8693  005300  6F93               	movwf	___ftpack@exp& (0+255),b
  8694  005302  0E00               	movlw	0
  8695  005304  0100               	movlb	0	; () banked
  8696  005306  6F94               	movwf	___ftpack@sign& (0+255),b
  8697  005308  EC97  F019         	call	___ftpack	;wreg free
  8698  00530C  C090  F098         	movff	?___ftpack,?___lwtoft
  8699  005310  C091  F099         	movff	?___ftpack+1,?___lwtoft+1
  8700  005314  C092  F09A         	movff	?___ftpack+2,?___lwtoft+2
  8701  005318  0012               	return	
  8702  00531A                     __end_of___lwtoft:
  8703                           	opt stack 0
  8704                           tblptru	equ	0xFF8
  8705                           tblptrh	equ	0xFF7
  8706                           tblptrl	equ	0xFF6
  8707                           tablat	equ	0xFF5
  8708                           prodh	equ	0xFF4
  8709                           prodl	equ	0xFF3
  8710                           intcon	equ	0xFF2
  8711                           intcon2	equ	0xFF1
  8712                           intcon3	equ	0xFF0
  8713                           postinc0	equ	0xFEE
  8714                           wreg	equ	0xFE8
  8715                           postdec1	equ	0xFE5
  8716                           fsr1l	equ	0xFE1
  8717                           indf2	equ	0xFDF
  8718                           postinc2	equ	0xFDE
  8719                           postdec2	equ	0xFDD
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function ___ftpack *****************
  8725 ;; Defined at:
  8726 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  arg             3   16[BANK0 ] unsigned um
  8729 ;;  exp             1   19[BANK0 ] unsigned char 
  8730 ;;  sign            1   20[BANK0 ] unsigned char 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;		None
  8733 ;; Return value:  Size  Location     Type
  8734 ;;                  3   16[BANK0 ] float 
  8735 ;; Registers used:
  8736 ;;		wreg, status,2, status,0
  8737 ;; Tracked objects:
  8738 ;;		On entry : 0/0
  8739 ;;		On exit  : 0/0
  8740 ;;		Unchanged: 0/0
  8741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8742 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;Total ram usage:        8 bytes
  8747 ;; Hardware stack levels used:    1
  8748 ;; Hardware stack levels required when called:    7
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		___altoft
  8753 ;;		___awtoft
  8754 ;;		___ftadd
  8755 ;;		___ftdiv
  8756 ;;		___ftmul
  8757 ;;		___lltoft
  8758 ;;		___lwtoft
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text29
  8763  00332E                     __ptext29:
  8764                           	opt stack 0
  8765  00332E                     ___ftpack:
  8766                           	opt stack 17
  8767                           
  8768                           ;incstack = 0
  8769  00332E  0100               	movlb	0	; () banked
  8770  003330  5193               	movf	___ftpack@exp& (0+255),w,b
  8771  003332  0100               	movlb	0	; () banked
  8772  003334  B4D8               	btfsc	status,2,c
  8773  003336  D008               	goto	l7334
  8774                           
  8775                           ; BSR set to: 0
  8776  003338  0100               	movlb	0	; () banked
  8777  00333A  5190               	movf	___ftpack@arg& (0+255),w,b
  8778  00333C  0100               	movlb	0	; () banked
  8779  00333E  1191               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8780  003340  0100               	movlb	0	; () banked
  8781  003342  1192               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8782  003344  A4D8               	btfss	status,2,c
  8783  003346  D011               	goto	l7340
  8784  003348                     l7334:
  8785                           
  8786                           ; BSR set to: 0
  8787  003348  0E00               	movlw	0
  8788  00334A  0100               	movlb	0	; () banked
  8789  00334C  6F90               	movwf	?___ftpack& (0+255),b
  8790  00334E  0E00               	movlw	0
  8791  003350  0100               	movlb	0	; () banked
  8792  003352  6F91               	movwf	(?___ftpack+1)& (0+255),b
  8793  003354  0E00               	movlw	0
  8794  003356  0100               	movlb	0	; () banked
  8795  003358  6F92               	movwf	(?___ftpack+2)& (0+255),b
  8796                           
  8797                           ; BSR set to: 0
  8798  00335A  0012               	return	
  8799  00335C                     l7338:
  8800                           
  8801                           ; BSR set to: 0
  8802  00335C  0100               	movlb	0	; () banked
  8803  00335E  2B93               	incf	___ftpack@exp& (0+255),f,b
  8804  003360  0100               	movlb	0	; () banked
  8805  003362  90D8               	bcf	status,0,c
  8806  003364  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8807  003366  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8808  003368  3390               	rrcf	___ftpack@arg& (0+255),f,b
  8809  00336A                     l7340:
  8810                           
  8811                           ; BSR set to: 0
  8812  00336A  0E00               	movlw	0
  8813  00336C  0100               	movlb	0	; () banked
  8814  00336E  1590               	andwf	___ftpack@arg& (0+255),w,b
  8815  003370  0100               	movlb	0	; () banked
  8816  003372  6F95               	movwf	??___ftpack& (0+255),b
  8817  003374  0E00               	movlw	0
  8818  003376  0100               	movlb	0	; () banked
  8819  003378  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8820  00337A  0100               	movlb	0	; () banked
  8821  00337C  6F96               	movwf	(??___ftpack+1)& (0+255),b
  8822  00337E  0EFE               	movlw	254
  8823  003380  0100               	movlb	0	; () banked
  8824  003382  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8825  003384  0100               	movlb	0	; () banked
  8826  003386  6F97               	movwf	(??___ftpack+2)& (0+255),b
  8827  003388  0100               	movlb	0	; () banked
  8828  00338A  5195               	movf	??___ftpack& (0+255),w,b
  8829  00338C  0100               	movlb	0	; () banked
  8830  00338E  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  8831  003390  0100               	movlb	0	; () banked
  8832  003392  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  8833  003394  B4D8               	btfsc	status,2,c
  8834  003396  D011               	goto	l7346
  8835  003398  D7E1               	goto	l7338
  8836  00339A                     l7342:
  8837                           
  8838                           ; BSR set to: 0
  8839  00339A  0100               	movlb	0	; () banked
  8840  00339C  2B93               	incf	___ftpack@exp& (0+255),f,b
  8841                           
  8842                           ; BSR set to: 0
  8843  00339E  0E01               	movlw	1
  8844  0033A0  0100               	movlb	0	; () banked
  8845  0033A2  2790               	addwf	___ftpack@arg& (0+255),f,b
  8846  0033A4  0E00               	movlw	0
  8847  0033A6  0100               	movlb	0	; () banked
  8848  0033A8  2391               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8849  0033AA  0E00               	movlw	0
  8850  0033AC  0100               	movlb	0	; () banked
  8851  0033AE  2392               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8852  0033B0  0100               	movlb	0	; () banked
  8853  0033B2  90D8               	bcf	status,0,c
  8854  0033B4  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8855  0033B6  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8856  0033B8  3390               	rrcf	___ftpack@arg& (0+255),f,b
  8857  0033BA                     l7346:
  8858                           
  8859                           ; BSR set to: 0
  8860  0033BA  0E00               	movlw	0
  8861  0033BC  0100               	movlb	0	; () banked
  8862  0033BE  1590               	andwf	___ftpack@arg& (0+255),w,b
  8863  0033C0  0100               	movlb	0	; () banked
  8864  0033C2  6F95               	movwf	??___ftpack& (0+255),b
  8865  0033C4  0E00               	movlw	0
  8866  0033C6  0100               	movlb	0	; () banked
  8867  0033C8  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8868  0033CA  0100               	movlb	0	; () banked
  8869  0033CC  6F96               	movwf	(??___ftpack+1)& (0+255),b
  8870  0033CE  0EFF               	movlw	255
  8871  0033D0  0100               	movlb	0	; () banked
  8872  0033D2  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8873  0033D4  0100               	movlb	0	; () banked
  8874  0033D6  6F97               	movwf	(??___ftpack+2)& (0+255),b
  8875  0033D8  0100               	movlb	0	; () banked
  8876  0033DA  5195               	movf	??___ftpack& (0+255),w,b
  8877  0033DC  0100               	movlb	0	; () banked
  8878  0033DE  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  8879  0033E0  0100               	movlb	0	; () banked
  8880  0033E2  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  8881  0033E4  B4D8               	btfsc	status,2,c
  8882  0033E6  D008               	goto	l7350
  8883  0033E8  D7D8               	goto	l7342
  8884  0033EA                     l7348:
  8885                           
  8886                           ; BSR set to: 0
  8887  0033EA  0100               	movlb	0	; () banked
  8888  0033EC  0793               	decf	___ftpack@exp& (0+255),f,b
  8889  0033EE  0100               	movlb	0	; () banked
  8890  0033F0  90D8               	bcf	status,0,c
  8891  0033F2  3790               	rlcf	___ftpack@arg& (0+255),f,b
  8892  0033F4  3791               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8893  0033F6  3792               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8894  0033F8                     l7350:
  8895                           
  8896                           ; BSR set to: 0
  8897  0033F8  0100               	movlb	0	; () banked
  8898  0033FA  BF91               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8899  0033FC  D004               	goto	l899
  8900                           
  8901                           ; BSR set to: 0
  8902  0033FE  0E02               	movlw	2
  8903  003400  0100               	movlb	0	; () banked
  8904  003402  6193               	cpfslt	___ftpack@exp& (0+255),b
  8905  003404  D7F2               	goto	l7348
  8906  003406                     l899:
  8907                           
  8908                           ; BSR set to: 0
  8909  003406  0100               	movlb	0	; () banked
  8910  003408  B193               	btfsc	___ftpack@exp& (0+255),0,b
  8911  00340A  D002               	goto	l7356
  8912                           
  8913                           ; BSR set to: 0
  8914  00340C  0100               	movlb	0	; () banked
  8915  00340E  9F91               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8916  003410                     l7356:
  8917                           
  8918                           ; BSR set to: 0
  8919  003410  0100               	movlb	0	; () banked
  8920  003412  90D8               	bcf	status,0,c
  8921  003414  3393               	rrcf	___ftpack@exp& (0+255),f,b
  8922  003416  0100               	movlb	0	; () banked
  8923  003418  5193               	movf	___ftpack@exp& (0+255),w,b
  8924  00341A  0100               	movlb	0	; () banked
  8925  00341C  1392               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8926                           
  8927                           ; BSR set to: 0
  8928  00341E  0100               	movlb	0	; () banked
  8929  003420  5194               	movf	___ftpack@sign& (0+255),w,b
  8930  003422  0100               	movlb	0	; () banked
  8931  003424  B4D8               	btfsc	status,2,c
  8932  003426  D002               	goto	l7362
  8933                           
  8934                           ; BSR set to: 0
  8935  003428  0100               	movlb	0	; () banked
  8936  00342A  8F92               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8937  00342C                     l7362:
  8938                           
  8939                           ; BSR set to: 0
  8940  00342C  C090  F090         	movff	___ftpack@arg,?___ftpack
  8941  003430  C091  F091         	movff	___ftpack@arg+1,?___ftpack+1
  8942  003434  C092  F092         	movff	___ftpack@arg+2,?___ftpack+2
  8943  003438  0012               	return	
  8944  00343A                     __end_of___ftpack:
  8945                           	opt stack 0
  8946                           tblptru	equ	0xFF8
  8947                           tblptrh	equ	0xFF7
  8948                           tblptrl	equ	0xFF6
  8949                           tablat	equ	0xFF5
  8950                           prodh	equ	0xFF4
  8951                           prodl	equ	0xFF3
  8952                           intcon	equ	0xFF2
  8953                           intcon2	equ	0xFF1
  8954                           intcon3	equ	0xFF0
  8955                           postinc0	equ	0xFEE
  8956                           wreg	equ	0xFE8
  8957                           postdec1	equ	0xFE5
  8958                           fsr1l	equ	0xFE1
  8959                           indf2	equ	0xFDF
  8960                           postinc2	equ	0xFDE
  8961                           postdec2	equ	0xFDD
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function _initLCD *****************
  8967 ;; Defined at:
  8968 ;;		line 14 in file "lcd.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2, status,0, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;Total ram usage:        1 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    9
  8989 ;; This function calls:
  8990 ;;		_lcdInst
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           	psect	text30
  8997  005004                     __ptext30:
  8998                           	opt stack 0
  8999  005004                     _initLCD:
  9000                           	opt stack 21
  9001                           
  9002                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;incstack = 0
  9006  005004  0E31               	movlw	49
  9007  005006  0100               	movlb	0	; () banked
  9008  005008  6F93               	movwf	??_initLCD& (0+255),b
  9009  00500A  0EB2               	movlw	178
  9010  00500C                     u8817:
  9011  00500C  2EE8               	decfsz	wreg,f,c
  9012  00500E  D7FE               	bra	u8817
  9013  005010  2F93               	decfsz	??_initLCD& (0+255),f,b
  9014  005012  D7FC               	bra	u8817
  9015  005014  F000               	nop	
  9016                           
  9017                           ;lcd.c: 16: lcdInst(0b00110011);
  9018  005016  0E33               	movlw	51
  9019  005018  EC5F  F02A         	call	_lcdInst
  9020                           
  9021                           ;lcd.c: 17: lcdInst(0b00110011);
  9022  00501C  0E33               	movlw	51
  9023  00501E  EC5F  F02A         	call	_lcdInst
  9024                           
  9025                           ;lcd.c: 18: lcdInst(0b00110010);
  9026  005022  0E32               	movlw	50
  9027  005024  EC5F  F02A         	call	_lcdInst
  9028                           
  9029                           ;lcd.c: 19: lcdInst(0b00101000);
  9030  005028  0E28               	movlw	40
  9031  00502A  EC5F  F02A         	call	_lcdInst
  9032                           
  9033                           ;lcd.c: 20: lcdInst(0b00001111);
  9034  00502E  0E0F               	movlw	15
  9035  005030  EC5F  F02A         	call	_lcdInst
  9036                           
  9037                           ;lcd.c: 21: lcdInst(0b00000110);
  9038  005034  0E06               	movlw	6
  9039  005036  EC5F  F02A         	call	_lcdInst
  9040                           
  9041                           ;lcd.c: 22: lcdInst(0b00000001);
  9042  00503A  0E01               	movlw	1
  9043  00503C  EC5F  F02A         	call	_lcdInst
  9044                           
  9045                           ;lcd.c: 23: _delay((unsigned long)((15)*(10000000/4000.0)));
  9046  005040  0E31               	movlw	49
  9047  005042  0100               	movlb	0	; () banked
  9048  005044  6F93               	movwf	??_initLCD& (0+255),b
  9049  005046  0EB2               	movlw	178
  9050  005048                     u8827:
  9051  005048  2EE8               	decfsz	wreg,f,c
  9052  00504A  D7FE               	bra	u8827
  9053  00504C  2F93               	decfsz	??_initLCD& (0+255),f,b
  9054  00504E  D7FC               	bra	u8827
  9055  005050  F000               	nop	
  9056  005052  0012               	return		;funcret
  9057  005054                     __end_of_initLCD:
  9058                           	opt stack 0
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           intcon2	equ	0xFF1
  9067                           intcon3	equ	0xFF0
  9068                           postinc0	equ	0xFEE
  9069                           wreg	equ	0xFE8
  9070                           postdec1	equ	0xFE5
  9071                           fsr1l	equ	0xFE1
  9072                           indf2	equ	0xFDF
  9073                           postinc2	equ	0xFDE
  9074                           postdec2	equ	0xFDD
  9075                           fsr2h	equ	0xFDA
  9076                           fsr2l	equ	0xFD9
  9077                           status	equ	0xFD8
  9078                           
  9079 ;; *************** function _emergencystop *****************
  9080 ;; Defined at:
  9081 ;;		line 674 in file "main.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;                  1    wreg      void 
  9088 ;; Registers used:
  9089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; Hardware stack levels required when called:   10
  9102 ;; This function calls:
  9103 ;;		_lcdInst
  9104 ;;		_printf
  9105 ;; This function is called by:
  9106 ;;		_main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text31
  9111  005402                     __ptext31:
  9112                           	opt stack 0
  9113  005402                     _emergencystop:
  9114                           	opt stack 20
  9115                           
  9116                           ;main.c: 675: (INTCONbits.GIE = 0);
  9117                           
  9118                           ;incstack = 0
  9119  005402  9EF2               	bcf	intcon,7,c	;volatile
  9120                           
  9121                           ;main.c: 676: PORTAbits.RA2 = 0;
  9122  005404  9480               	bcf	3968,2,c	;volatile
  9123                           
  9124                           ;main.c: 677: lcdInst(0b00000001);
  9125  005406  0E01               	movlw	1
  9126  005408  EC5F  F02A         	call	_lcdInst
  9127                           
  9128                           ;main.c: 678: lcdInst(0b10000000);
  9129  00540C  0E80               	movlw	128
  9130  00540E  EC5F  F02A         	call	_lcdInst
  9131                           
  9132                           ;main.c: 679: printf("EMERGENCY STOP");
  9133  005412  0ED2               	movlw	low STR_47
  9134  005414  0100               	movlb	0	; () banked
  9135  005416  6F9C               	movwf	printf@f& (0+255),b
  9136  005418  0EFF               	movlw	high STR_47
  9137  00541A  0100               	movlb	0	; () banked
  9138  00541C  6F9D               	movwf	(printf@f+1)& (0+255),b
  9139  00541E  EC23  F008         	call	_printf	;wreg free
  9140  005422                     l559:
  9141  005422  D7FF               	goto	l559
  9142  005424                     __end_of_emergencystop:
  9143                           	opt stack 0
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           intcon2	equ	0xFF1
  9152                           intcon3	equ	0xFF0
  9153                           postinc0	equ	0xFEE
  9154                           wreg	equ	0xFE8
  9155                           postdec1	equ	0xFE5
  9156                           fsr1l	equ	0xFE1
  9157                           indf2	equ	0xFDF
  9158                           postinc2	equ	0xFDE
  9159                           postdec2	equ	0xFDD
  9160                           fsr2h	equ	0xFDA
  9161                           fsr2l	equ	0xFD9
  9162                           status	equ	0xFD8
  9163                           
  9164 ;; *************** function _date_time *****************
  9165 ;; Defined at:
  9166 ;;		line 373 in file "main.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  i               1   50[BANK0 ] unsigned char 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;Total ram usage:        1 bytes
  9185 ;; Hardware stack levels used:    1
  9186 ;; Hardware stack levels required when called:   10
  9187 ;; This function calls:
  9188 ;;		_I2C_Master_Read
  9189 ;;		_I2C_Master_Start
  9190 ;;		_I2C_Master_Stop
  9191 ;;		_I2C_Master_Write
  9192 ;;		_lcdInst
  9193 ;;		_printf
  9194 ;; This function is called by:
  9195 ;;		_main
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text32
  9200  0042AC                     __ptext32:
  9201                           	opt stack 0
  9202  0042AC                     _date_time:
  9203                           	opt stack 20
  9204                           
  9205                           ;main.c: 375: I2C_Master_Start();
  9206                           
  9207                           ;incstack = 0
  9208  0042AC  EC86  F02A         	call	_I2C_Master_Start	;wreg free
  9209                           
  9210                           ;main.c: 376: I2C_Master_Write(0b11010000);
  9211  0042B0  0E00               	movlw	0
  9212  0042B2  0100               	movlb	0	; () banked
  9213  0042B4  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9214  0042B6  0ED0               	movlw	208
  9215  0042B8  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9216  0042BA  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  9217                           
  9218                           ;main.c: 377: I2C_Master_Write(0x00);
  9219  0042BE  0E00               	movlw	0
  9220  0042C0  0100               	movlb	0	; () banked
  9221  0042C2  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9222  0042C4  0E00               	movlw	0
  9223  0042C6  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9224  0042C8  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  9225                           
  9226                           ;main.c: 378: I2C_Master_Stop();
  9227  0042CC  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
  9228                           
  9229                           ;main.c: 381: I2C_Master_Start();
  9230  0042D0  EC86  F02A         	call	_I2C_Master_Start	;wreg free
  9231                           
  9232                           ;main.c: 382: I2C_Master_Write(0b11010001);
  9233  0042D4  0E00               	movlw	0
  9234  0042D6  0100               	movlb	0	; () banked
  9235  0042D8  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9236  0042DA  0ED1               	movlw	209
  9237  0042DC  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9238  0042DE  EC78  F02A         	call	_I2C_Master_Write	;wreg free
  9239                           
  9240                           ;main.c: 383: for(unsigned char i=0;i<0x06;i++){
  9241  0042E2  0E00               	movlw	0
  9242  0042E4  0100               	movlb	0	; () banked
  9243  0042E6  6FB2               	movwf	date_time@i& (0+255),b
  9244  0042E8                     l8404:
  9245                           
  9246                           ; BSR set to: 0
  9247  0042E8  0E05               	movlw	5
  9248  0042EA  0100               	movlb	0	; () banked
  9249  0042EC  65B2               	cpfsgt	date_time@i& (0+255),b
  9250  0042EE  D001               	goto	l8408
  9251  0042F0  D010               	goto	l8414
  9252  0042F2                     l8408:
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;main.c: 384: time[i] = I2C_Master_Read(1);
  9256  0042F2  0100               	movlb	0	; () banked
  9257  0042F4  51B2               	movf	date_time@i& (0+255),w,b
  9258  0042F6  0D01               	mullw	1
  9259  0042F8  0E10               	movlw	low _time
  9260  0042FA  24F3               	addwf	prodl,w,c
  9261  0042FC  6ED9               	movwf	fsr2l,c
  9262  0042FE  0E01               	movlw	high _time
  9263  004300  20F4               	addwfc	prodh,w,c
  9264  004302  6EDA               	movwf	fsr2h,c
  9265  004304  0E01               	movlw	1
  9266  004306  EC61  F029         	call	_I2C_Master_Read
  9267  00430A  6EDF               	movwf	indf2,c
  9268  00430C  0100               	movlb	0	; () banked
  9269  00430E  2BB2               	incf	date_time@i& (0+255),f,b
  9270  004310  D7EB               	goto	l8404
  9271  004312                     l8414:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;main.c: 385: }
  9275                           ;main.c: 386: time[6] = I2C_Master_Read(0);
  9276  004312  0E00               	movlw	0
  9277  004314  EC61  F029         	call	_I2C_Master_Read
  9278  004318  0101               	movlb	1	; () banked
  9279  00431A  6F16               	movwf	(_time+6)& (0+255),b
  9280                           
  9281                           ;main.c: 387: I2C_Master_Stop();
  9282  00431C  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
  9283                           
  9284                           ;main.c: 390: lcdInst(0b10000000);
  9285  004320  0E80               	movlw	128
  9286  004322  EC5F  F02A         	call	_lcdInst
  9287                           
  9288                           ;main.c: 391: printf("Date: %02x/%02x/%02x  ", time[5],time[4],time[6]);
  9289  004326  0E9D               	movlw	low STR_7
  9290  004328  0100               	movlb	0	; () banked
  9291  00432A  6F9C               	movwf	printf@f& (0+255),b
  9292  00432C  0EFE               	movlw	high STR_7
  9293  00432E  0100               	movlb	0	; () banked
  9294  004330  6F9D               	movwf	(printf@f+1)& (0+255),b
  9295  004332  C115  F09E         	movff	_time+5,?_printf+2
  9296  004336  0100               	movlb	0	; () banked
  9297  004338  6B9F               	clrf	(?_printf+3)& (0+255),b
  9298  00433A  C114  F0A0         	movff	_time+4,?_printf+4
  9299  00433E  0100               	movlb	0	; () banked
  9300  004340  6BA1               	clrf	(?_printf+5)& (0+255),b
  9301  004342  C116  F0A2         	movff	_time+6,?_printf+6
  9302  004346  0100               	movlb	0	; () banked
  9303  004348  6BA3               	clrf	(?_printf+7)& (0+255),b
  9304  00434A  EC23  F008         	call	_printf	;wreg free
  9305                           
  9306                           ;main.c: 392: lcdInst(0b11000000);
  9307  00434E  0EC0               	movlw	192
  9308  004350  EC5F  F02A         	call	_lcdInst
  9309                           
  9310                           ;main.c: 393: printf("Time: %02x:%02x:%02x  ", time[2],time[1],time[0]);
  9311  004354  0EB4               	movlw	low STR_8
  9312  004356  0100               	movlb	0	; () banked
  9313  004358  6F9C               	movwf	printf@f& (0+255),b
  9314  00435A  0EFE               	movlw	high STR_8
  9315  00435C  0100               	movlb	0	; () banked
  9316  00435E  6F9D               	movwf	(printf@f+1)& (0+255),b
  9317  004360  C112  F09E         	movff	_time+2,?_printf+2
  9318  004364  0100               	movlb	0	; () banked
  9319  004366  6B9F               	clrf	(?_printf+3)& (0+255),b
  9320  004368  C111  F0A0         	movff	_time+1,?_printf+4
  9321  00436C  0100               	movlb	0	; () banked
  9322  00436E  6BA1               	clrf	(?_printf+5)& (0+255),b
  9323  004370  C110  F0A2         	movff	_time,?_printf+6
  9324  004374  0100               	movlb	0	; () banked
  9325  004376  6BA3               	clrf	(?_printf+7)& (0+255),b
  9326  004378  EC23  F008         	call	_printf	;wreg free
  9327  00437C  0012               	return	
  9328  00437E                     __end_of_date_time:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           intcon	equ	0xFF2
  9337                           intcon2	equ	0xFF1
  9338                           intcon3	equ	0xFF0
  9339                           postinc0	equ	0xFEE
  9340                           wreg	equ	0xFE8
  9341                           postdec1	equ	0xFE5
  9342                           fsr1l	equ	0xFE1
  9343                           indf2	equ	0xFDF
  9344                           postinc2	equ	0xFDE
  9345                           postdec2	equ	0xFDD
  9346                           fsr2h	equ	0xFDA
  9347                           fsr2l	equ	0xFD9
  9348                           status	equ	0xFD8
  9349                           
  9350 ;; *************** function _I2C_Master_Read *****************
  9351 ;; Defined at:
  9352 ;;		line 110 in file "I2C.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  a               1    wreg     unsigned char 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  a               1   17[BANK0 ] unsigned char 
  9357 ;;  temp            1   18[BANK0 ] unsigned char 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      unsigned char 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9371 ;;Total ram usage:        2 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    8
  9374 ;; This function calls:
  9375 ;;		_I2C_Master_Wait
  9376 ;; This function is called by:
  9377 ;;		_date_time
  9378 ;;		_read_time
  9379 ;;		_read_colorsensor
  9380 ;; This function uses a non-reentrant model
  9381 ;;
  9382                           
  9383                           	psect	text33
  9384  0052C2                     __ptext33:
  9385                           	opt stack 0
  9386  0052C2                     _I2C_Master_Read:
  9387                           	opt stack 20
  9388                           
  9389                           ;incstack = 0
  9390                           ;I2C_Master_Read@a stored from wreg
  9391  0052C2  0100               	movlb	0	; () banked
  9392  0052C4  6F91               	movwf	I2C_Master_Read@a& (0+255),b
  9393                           
  9394                           ;I2C.c: 112: unsigned char temp;
  9395                           ;I2C.c: 113: I2C_Master_Wait();
  9396  0052C6  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
  9397                           
  9398                           ;I2C.c: 114: RCEN = 1;
  9399  0052CA  86C5               	bsf	4037,3,c	;volatile
  9400                           
  9401                           ;I2C.c: 115: I2C_Master_Wait();
  9402  0052CC  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
  9403                           
  9404                           ;I2C.c: 116: temp = SSPBUF;
  9405  0052D0  CFC9 F092          	movff	4041,I2C_Master_Read@temp	;volatile
  9406                           
  9407                           ;I2C.c: 117: I2C_Master_Wait();
  9408  0052D4  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
  9409                           
  9410                           ;I2C.c: 118: ACKDT = (a)?0:1;
  9411  0052D8  0100               	movlb	0	; () banked
  9412  0052DA  5191               	movf	I2C_Master_Read@a& (0+255),w,b
  9413  0052DC  0100               	movlb	0	; () banked
  9414  0052DE  A4D8               	btfss	status,2,c
  9415  0052E0  D002               	goto	u7910
  9416  0052E2  8AC5               	bsf	4037,5,c	;volatile
  9417  0052E4  D001               	goto	l7844
  9418  0052E6                     u7910:
  9419  0052E6  9AC5               	bcf	4037,5,c	;volatile
  9420  0052E8                     l7844:
  9421                           
  9422                           ;I2C.c: 119: ACKEN = 1;
  9423  0052E8  88C5               	bsf	4037,4,c	;volatile
  9424                           
  9425                           ;I2C.c: 120: return temp;
  9426  0052EA  0100               	movlb	0	; () banked
  9427  0052EC  5192               	movf	I2C_Master_Read@temp& (0+255),w,b
  9428  0052EE  0012               	return	
  9429  0052F0                     __end_of_I2C_Master_Read:
  9430                           	opt stack 0
  9431                           tblptru	equ	0xFF8
  9432                           tblptrh	equ	0xFF7
  9433                           tblptrl	equ	0xFF6
  9434                           tablat	equ	0xFF5
  9435                           prodh	equ	0xFF4
  9436                           prodl	equ	0xFF3
  9437                           intcon	equ	0xFF2
  9438                           intcon2	equ	0xFF1
  9439                           intcon3	equ	0xFF0
  9440                           postinc0	equ	0xFEE
  9441                           wreg	equ	0xFE8
  9442                           postdec1	equ	0xFE5
  9443                           fsr1l	equ	0xFE1
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           
  9451 ;; *************** function _bottle_time *****************
  9452 ;; Defined at:
  9453 ;;		line 566 in file "main.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:   10
  9474 ;; This function calls:
  9475 ;;		_lcdInst
  9476 ;;		_printf
  9477 ;; This function is called by:
  9478 ;;		_main
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text34
  9483  005226                     __ptext34:
  9484                           	opt stack 0
  9485  005226                     _bottle_time:
  9486                           	opt stack 20
  9487                           
  9488                           ;main.c: 567: lcdInst(0b10000000);
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;incstack = 0
  9492  005226  0E80               	movlw	128
  9493  005228  EC5F  F02A         	call	_lcdInst
  9494                           
  9495                           ;main.c: 568: printf("Total Operation       ");
  9496  00522C  0E86               	movlw	low STR_44
  9497  00522E  0100               	movlb	0	; () banked
  9498  005230  6F9C               	movwf	printf@f& (0+255),b
  9499  005232  0EFE               	movlw	high STR_44
  9500  005234  0100               	movlb	0	; () banked
  9501  005236  6F9D               	movwf	(printf@f+1)& (0+255),b
  9502  005238  EC23  F008         	call	_printf	;wreg free
  9503                           
  9504                           ;main.c: 569: lcdInst(0b11000000);
  9505  00523C  0EC0               	movlw	192
  9506  00523E  EC5F  F02A         	call	_lcdInst
  9507                           
  9508                           ;main.c: 570: printf("Time: %d s       ", operation_time);
  9509  005242  0E29               	movlw	low STR_45
  9510  005244  0100               	movlb	0	; () banked
  9511  005246  6F9C               	movwf	printf@f& (0+255),b
  9512  005248  0EFF               	movlw	high STR_45
  9513  00524A  0100               	movlb	0	; () banked
  9514  00524C  6F9D               	movwf	(printf@f+1)& (0+255),b
  9515  00524E  C13F  F09E         	movff	_operation_time,?_printf+2
  9516  005252  C140  F09F         	movff	_operation_time+1,?_printf+3
  9517  005256  EC23  F008         	call	_printf	;wreg free
  9518  00525A  0012               	return	
  9519  00525C                     __end_of_bottle_time:
  9520                           	opt stack 0
  9521                           tblptru	equ	0xFF8
  9522                           tblptrh	equ	0xFF7
  9523                           tblptrl	equ	0xFF6
  9524                           tablat	equ	0xFF5
  9525                           prodh	equ	0xFF4
  9526                           prodl	equ	0xFF3
  9527                           intcon	equ	0xFF2
  9528                           intcon2	equ	0xFF1
  9529                           intcon3	equ	0xFF0
  9530                           postinc0	equ	0xFEE
  9531                           wreg	equ	0xFE8
  9532                           postdec1	equ	0xFE5
  9533                           fsr1l	equ	0xFE1
  9534                           indf2	equ	0xFDF
  9535                           postinc2	equ	0xFDE
  9536                           postdec2	equ	0xFDD
  9537                           fsr2h	equ	0xFDA
  9538                           fsr2l	equ	0xFD9
  9539                           status	equ	0xFD8
  9540                           
  9541 ;; *************** function _bottle_count4 *****************
  9542 ;; Defined at:
  9543 ;;		line 536 in file "main.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;Total ram usage:        0 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:   10
  9564 ;; This function calls:
  9565 ;;		___awmod
  9566 ;;		_lcdInst
  9567 ;;		_printf
  9568 ;; This function is called by:
  9569 ;;		_main
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text35
  9574  00343A                     __ptext35:
  9575                           	opt stack 0
  9576  00343A                     _bottle_count4:
  9577                           	opt stack 20
  9578                           
  9579                           ;main.c: 537: switch(bottle_count_disp[4] % 3){
  9580                           
  9581                           ;incstack = 0
  9582  00343A  D065               	goto	l8576
  9583  00343C                     l8552:
  9584                           
  9585                           ;main.c: 539: lcdInst(0b10000000);
  9586  00343C  0E80               	movlw	128
  9587  00343E  EC5F  F02A         	call	_lcdInst
  9588                           
  9589                           ;main.c: 540: printf("BttlCnt Prev 4    ");
  9590  003442  0E04               	movlw	low STR_37
  9591  003444  0100               	movlb	0	; () banked
  9592  003446  6F9C               	movwf	printf@f& (0+255),b
  9593  003448  0EFF               	movlw	high STR_37
  9594  00344A  0100               	movlb	0	; () banked
  9595  00344C  6F9D               	movwf	(printf@f+1)& (0+255),b
  9596  00344E  EC23  F008         	call	_printf	;wreg free
  9597                           
  9598                           ;main.c: 541: lcdInst(0b11000000);
  9599  003452  0EC0               	movlw	192
  9600  003454  EC5F  F02A         	call	_lcdInst
  9601                           
  9602                           ;main.c: 542: printf("Total: %d       ", bottle_count_array[0]);
  9603  003458  0E4C               	movlw	low STR_10
  9604  00345A  0100               	movlb	0	; () banked
  9605  00345C  6F9C               	movwf	printf@f& (0+255),b
  9606  00345E  0EFF               	movlw	high STR_10
  9607  003460  0100               	movlb	0	; () banked
  9608  003462  6F9D               	movwf	(printf@f+1)& (0+255),b
  9609  003464  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
  9610  003468  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
  9611  00346C  EC23  F008         	call	_printf	;wreg free
  9612                           
  9613                           ;main.c: 543: break;
  9614  003470  0012               	return	
  9615  003472                     l8558:
  9616                           
  9617                           ;main.c: 545: lcdInst(0b10000000);
  9618  003472  0E80               	movlw	128
  9619  003474  EC5F  F02A         	call	_lcdInst
  9620                           
  9621                           ;main.c: 546: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
  9622  003478  0E6E               	movlw	low STR_11
  9623  00347A  0100               	movlb	0	; () banked
  9624  00347C  6F9C               	movwf	printf@f& (0+255),b
  9625  00347E  0EFF               	movlw	high STR_11
  9626  003480  0100               	movlb	0	; () banked
  9627  003482  6F9D               	movwf	(printf@f+1)& (0+255),b
  9628  003484  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
  9629  003488  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
  9630  00348C  EC23  F008         	call	_printf	;wreg free
  9631                           
  9632                           ;main.c: 547: lcdInst(0b11000000);
  9633  003490  0EC0               	movlw	192
  9634  003492  EC5F  F02A         	call	_lcdInst
  9635                           
  9636                           ;main.c: 548: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
  9637  003496  0E7F               	movlw	low STR_12
  9638  003498  0100               	movlb	0	; () banked
  9639  00349A  6F9C               	movwf	printf@f& (0+255),b
  9640  00349C  0EFF               	movlw	high STR_12
  9641  00349E  0100               	movlb	0	; () banked
  9642  0034A0  6F9D               	movwf	(printf@f+1)& (0+255),b
  9643  0034A2  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
  9644  0034A6  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
  9645  0034AA  EC23  F008         	call	_printf	;wreg free
  9646                           
  9647                           ;main.c: 549: break;
  9648  0034AE  0012               	return	
  9649  0034B0                     l8564:
  9650                           
  9651                           ;main.c: 551: lcdInst(0b10000000);
  9652  0034B0  0E80               	movlw	128
  9653  0034B2  EC5F  F02A         	call	_lcdInst
  9654                           
  9655                           ;main.c: 552: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
  9656  0034B6  0E90               	movlw	low STR_13
  9657  0034B8  0100               	movlb	0	; () banked
  9658  0034BA  6F9C               	movwf	printf@f& (0+255),b
  9659  0034BC  0EFF               	movlw	high STR_13
  9660  0034BE  0100               	movlb	0	; () banked
  9661  0034C0  6F9D               	movwf	(printf@f+1)& (0+255),b
  9662  0034C2  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
  9663  0034C6  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
  9664  0034CA  EC23  F008         	call	_printf	;wreg free
  9665                           
  9666                           ;main.c: 553: lcdInst(0b11000000);
  9667  0034CE  0EC0               	movlw	192
  9668  0034D0  EC5F  F02A         	call	_lcdInst
  9669                           
  9670                           ;main.c: 554: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
  9671  0034D4  0EA1               	movlw	low STR_14
  9672  0034D6  0100               	movlb	0	; () banked
  9673  0034D8  6F9C               	movwf	printf@f& (0+255),b
  9674  0034DA  0EFF               	movlw	high STR_14
  9675  0034DC  0100               	movlb	0	; () banked
  9676  0034DE  6F9D               	movwf	(printf@f+1)& (0+255),b
  9677  0034E0  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
  9678  0034E4  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
  9679  0034E8  EC23  F008         	call	_printf	;wreg free
  9680                           
  9681                           ;main.c: 555: break;
  9682  0034EC  0012               	return	
  9683  0034EE                     l8570:
  9684                           
  9685                           ;main.c: 558: lcdInst(0b10000000);
  9686  0034EE  0E80               	movlw	128
  9687  0034F0  EC5F  F02A         	call	_lcdInst
  9688                           
  9689                           ;main.c: 559: printf("ERR: BAD BTLCNT");
  9690  0034F4  0EC2               	movlw	low STR_15
  9691  0034F6  0100               	movlb	0	; () banked
  9692  0034F8  6F9C               	movwf	printf@f& (0+255),b
  9693  0034FA  0EFF               	movlw	high STR_15
  9694  0034FC  0100               	movlb	0	; () banked
  9695  0034FE  6F9D               	movwf	(printf@f+1)& (0+255),b
  9696  003500  EC23  F008         	call	_printf	;wreg free
  9697  003504  D7F4               	goto	l8570
  9698  003506                     l8576:
  9699  003506  C17A  F090         	movff	_bottle_count_disp+8,___awmod@dividend
  9700  00350A  C17B  F091         	movff	_bottle_count_disp+9,___awmod@dividend+1
  9701  00350E  0E00               	movlw	0
  9702  003510  0100               	movlb	0	; () banked
  9703  003512  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  9704  003514  0E03               	movlw	3
  9705  003516  6F92               	movwf	___awmod@divisor& (0+255),b
  9706  003518  EC5A  F024         	call	___awmod	;wreg free
  9707                           
  9708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9709                           ; Switch size 1, requested type "space"
  9710                           ; Number of cases is 1, Range of values is 0 to 0
  9711                           ; switch strategies available:
  9712                           ; Name         Instructions Cycles
  9713                           ; simple_byte            4     3 (average)
  9714                           ;	Chosen strategy is simple_byte
  9715  00351C  0100               	movlb	0	; () banked
  9716  00351E  5191               	movf	(?___awmod+1)& (0+255),w,b
  9717  003520  0A00               	xorlw	0	; case 0
  9718  003522  A4D8               	btfss	status,2,c
  9719  003524  D7E4               	goto	l8570
  9720                           
  9721                           ; BSR set to: 0
  9722                           ; Switch size 1, requested type "space"
  9723                           ; Number of cases is 3, Range of values is 0 to 2
  9724                           ; switch strategies available:
  9725                           ; Name         Instructions Cycles
  9726                           ; simple_byte           10     6 (average)
  9727                           ;	Chosen strategy is simple_byte
  9728  003526  0100               	movlb	0	; () banked
  9729  003528  5190               	movf	?___awmod& (0+255),w,b
  9730  00352A  0A00               	xorlw	0	; case 0
  9731  00352C  B4D8               	btfsc	status,2,c
  9732  00352E  D786               	goto	l8552
  9733  003530  0A01               	xorlw	1	; case 1
  9734  003532  B4D8               	btfsc	status,2,c
  9735  003534  D79E               	goto	l8558
  9736  003536  0A03               	xorlw	3	; case 2
  9737  003538  B4D8               	btfsc	status,2,c
  9738  00353A  D7BA               	goto	l8564
  9739  00353C  D7D8               	goto	l8570
  9740  00353E                     __end_of_bottle_count4:
  9741                           	opt stack 0
  9742                           tblptru	equ	0xFF8
  9743                           tblptrh	equ	0xFF7
  9744                           tblptrl	equ	0xFF6
  9745                           tablat	equ	0xFF5
  9746                           prodh	equ	0xFF4
  9747                           prodl	equ	0xFF3
  9748                           intcon	equ	0xFF2
  9749                           intcon2	equ	0xFF1
  9750                           intcon3	equ	0xFF0
  9751                           postinc0	equ	0xFEE
  9752                           wreg	equ	0xFE8
  9753                           postdec1	equ	0xFE5
  9754                           fsr1l	equ	0xFE1
  9755                           indf2	equ	0xFDF
  9756                           postinc2	equ	0xFDE
  9757                           postdec2	equ	0xFDD
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function _bottle_count3 *****************
  9763 ;; Defined at:
  9764 ;;		line 506 in file "main.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:   10
  9785 ;; This function calls:
  9786 ;;		___awmod
  9787 ;;		_lcdInst
  9788 ;;		_printf
  9789 ;; This function is called by:
  9790 ;;		_main
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text36
  9795  00353E                     __ptext36:
  9796                           	opt stack 0
  9797  00353E                     _bottle_count3:
  9798                           	opt stack 20
  9799                           
  9800                           ;main.c: 507: switch(bottle_count_disp[3] % 3){
  9801                           
  9802                           ;incstack = 0
  9803  00353E  D065               	goto	l8544
  9804  003540                     l8520:
  9805                           
  9806                           ;main.c: 509: lcdInst(0b10000000);
  9807  003540  0E80               	movlw	128
  9808  003542  EC5F  F02A         	call	_lcdInst
  9809                           
  9810                           ;main.c: 510: printf("BttlCnt Prev 3    ");
  9811  003546  0EF1               	movlw	low STR_30
  9812  003548  0100               	movlb	0	; () banked
  9813  00354A  6F9C               	movwf	printf@f& (0+255),b
  9814  00354C  0EFE               	movlw	high STR_30
  9815  00354E  0100               	movlb	0	; () banked
  9816  003550  6F9D               	movwf	(printf@f+1)& (0+255),b
  9817  003552  EC23  F008         	call	_printf	;wreg free
  9818                           
  9819                           ;main.c: 511: lcdInst(0b11000000);
  9820  003556  0EC0               	movlw	192
  9821  003558  EC5F  F02A         	call	_lcdInst
  9822                           
  9823                           ;main.c: 512: printf("Total: %d       ", bottle_count_array[0]);
  9824  00355C  0E4C               	movlw	low STR_10
  9825  00355E  0100               	movlb	0	; () banked
  9826  003560  6F9C               	movwf	printf@f& (0+255),b
  9827  003562  0EFF               	movlw	high STR_10
  9828  003564  0100               	movlb	0	; () banked
  9829  003566  6F9D               	movwf	(printf@f+1)& (0+255),b
  9830  003568  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
  9831  00356C  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
  9832  003570  EC23  F008         	call	_printf	;wreg free
  9833                           
  9834                           ;main.c: 513: break;
  9835  003574  0012               	return	
  9836  003576                     l8526:
  9837                           
  9838                           ;main.c: 515: lcdInst(0b10000000);
  9839  003576  0E80               	movlw	128
  9840  003578  EC5F  F02A         	call	_lcdInst
  9841                           
  9842                           ;main.c: 516: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
  9843  00357C  0E6E               	movlw	low STR_11
  9844  00357E  0100               	movlb	0	; () banked
  9845  003580  6F9C               	movwf	printf@f& (0+255),b
  9846  003582  0EFF               	movlw	high STR_11
  9847  003584  0100               	movlb	0	; () banked
  9848  003586  6F9D               	movwf	(printf@f+1)& (0+255),b
  9849  003588  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
  9850  00358C  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
  9851  003590  EC23  F008         	call	_printf	;wreg free
  9852                           
  9853                           ;main.c: 517: lcdInst(0b11000000);
  9854  003594  0EC0               	movlw	192
  9855  003596  EC5F  F02A         	call	_lcdInst
  9856                           
  9857                           ;main.c: 518: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
  9858  00359A  0E7F               	movlw	low STR_12
  9859  00359C  0100               	movlb	0	; () banked
  9860  00359E  6F9C               	movwf	printf@f& (0+255),b
  9861  0035A0  0EFF               	movlw	high STR_12
  9862  0035A2  0100               	movlb	0	; () banked
  9863  0035A4  6F9D               	movwf	(printf@f+1)& (0+255),b
  9864  0035A6  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
  9865  0035AA  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
  9866  0035AE  EC23  F008         	call	_printf	;wreg free
  9867                           
  9868                           ;main.c: 519: break;
  9869  0035B2  0012               	return	
  9870  0035B4                     l8532:
  9871                           
  9872                           ;main.c: 521: lcdInst(0b10000000);
  9873  0035B4  0E80               	movlw	128
  9874  0035B6  EC5F  F02A         	call	_lcdInst
  9875                           
  9876                           ;main.c: 522: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
  9877  0035BA  0E90               	movlw	low STR_13
  9878  0035BC  0100               	movlb	0	; () banked
  9879  0035BE  6F9C               	movwf	printf@f& (0+255),b
  9880  0035C0  0EFF               	movlw	high STR_13
  9881  0035C2  0100               	movlb	0	; () banked
  9882  0035C4  6F9D               	movwf	(printf@f+1)& (0+255),b
  9883  0035C6  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
  9884  0035CA  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
  9885  0035CE  EC23  F008         	call	_printf	;wreg free
  9886                           
  9887                           ;main.c: 523: lcdInst(0b11000000);
  9888  0035D2  0EC0               	movlw	192
  9889  0035D4  EC5F  F02A         	call	_lcdInst
  9890                           
  9891                           ;main.c: 524: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
  9892  0035D8  0EA1               	movlw	low STR_14
  9893  0035DA  0100               	movlb	0	; () banked
  9894  0035DC  6F9C               	movwf	printf@f& (0+255),b
  9895  0035DE  0EFF               	movlw	high STR_14
  9896  0035E0  0100               	movlb	0	; () banked
  9897  0035E2  6F9D               	movwf	(printf@f+1)& (0+255),b
  9898  0035E4  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
  9899  0035E8  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
  9900  0035EC  EC23  F008         	call	_printf	;wreg free
  9901                           
  9902                           ;main.c: 525: break;
  9903  0035F0  0012               	return	
  9904  0035F2                     l8538:
  9905                           
  9906                           ;main.c: 528: lcdInst(0b10000000);
  9907  0035F2  0E80               	movlw	128
  9908  0035F4  EC5F  F02A         	call	_lcdInst
  9909                           
  9910                           ;main.c: 529: printf("ERR: BAD BTLCNT");
  9911  0035F8  0EC2               	movlw	low STR_15
  9912  0035FA  0100               	movlb	0	; () banked
  9913  0035FC  6F9C               	movwf	printf@f& (0+255),b
  9914  0035FE  0EFF               	movlw	high STR_15
  9915  003600  0100               	movlb	0	; () banked
  9916  003602  6F9D               	movwf	(printf@f+1)& (0+255),b
  9917  003604  EC23  F008         	call	_printf	;wreg free
  9918  003608  D7F4               	goto	l8538
  9919  00360A                     l8544:
  9920  00360A  C178  F090         	movff	_bottle_count_disp+6,___awmod@dividend
  9921  00360E  C179  F091         	movff	_bottle_count_disp+7,___awmod@dividend+1
  9922  003612  0E00               	movlw	0
  9923  003614  0100               	movlb	0	; () banked
  9924  003616  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  9925  003618  0E03               	movlw	3
  9926  00361A  6F92               	movwf	___awmod@divisor& (0+255),b
  9927  00361C  EC5A  F024         	call	___awmod	;wreg free
  9928                           
  9929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9930                           ; Switch size 1, requested type "space"
  9931                           ; Number of cases is 1, Range of values is 0 to 0
  9932                           ; switch strategies available:
  9933                           ; Name         Instructions Cycles
  9934                           ; simple_byte            4     3 (average)
  9935                           ;	Chosen strategy is simple_byte
  9936  003620  0100               	movlb	0	; () banked
  9937  003622  5191               	movf	(?___awmod+1)& (0+255),w,b
  9938  003624  0A00               	xorlw	0	; case 0
  9939  003626  A4D8               	btfss	status,2,c
  9940  003628  D7E4               	goto	l8538
  9941                           
  9942                           ; BSR set to: 0
  9943                           ; Switch size 1, requested type "space"
  9944                           ; Number of cases is 3, Range of values is 0 to 2
  9945                           ; switch strategies available:
  9946                           ; Name         Instructions Cycles
  9947                           ; simple_byte           10     6 (average)
  9948                           ;	Chosen strategy is simple_byte
  9949  00362A  0100               	movlb	0	; () banked
  9950  00362C  5190               	movf	?___awmod& (0+255),w,b
  9951  00362E  0A00               	xorlw	0	; case 0
  9952  003630  B4D8               	btfsc	status,2,c
  9953  003632  D786               	goto	l8520
  9954  003634  0A01               	xorlw	1	; case 1
  9955  003636  B4D8               	btfsc	status,2,c
  9956  003638  D79E               	goto	l8526
  9957  00363A  0A03               	xorlw	3	; case 2
  9958  00363C  B4D8               	btfsc	status,2,c
  9959  00363E  D7BA               	goto	l8532
  9960  003640  D7D8               	goto	l8538
  9961  003642                     __end_of_bottle_count3:
  9962                           	opt stack 0
  9963                           tblptru	equ	0xFF8
  9964                           tblptrh	equ	0xFF7
  9965                           tblptrl	equ	0xFF6
  9966                           tablat	equ	0xFF5
  9967                           prodh	equ	0xFF4
  9968                           prodl	equ	0xFF3
  9969                           intcon	equ	0xFF2
  9970                           intcon2	equ	0xFF1
  9971                           intcon3	equ	0xFF0
  9972                           postinc0	equ	0xFEE
  9973                           wreg	equ	0xFE8
  9974                           postdec1	equ	0xFE5
  9975                           fsr1l	equ	0xFE1
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           postdec2	equ	0xFDD
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function _bottle_count2 *****************
  9984 ;; Defined at:
  9985 ;;		line 476 in file "main.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  1    wreg      void 
  9992 ;; Registers used:
  9993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10003 ;;Total ram usage:        0 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:   10
 10006 ;; This function calls:
 10007 ;;		___awmod
 10008 ;;		_lcdInst
 10009 ;;		_printf
 10010 ;; This function is called by:
 10011 ;;		_main
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text37
 10016  003642                     __ptext37:
 10017                           	opt stack 0
 10018  003642                     _bottle_count2:
 10019                           	opt stack 20
 10020                           
 10021                           ;main.c: 477: switch(bottle_count_disp[2] % 3){
 10022                           
 10023                           ;incstack = 0
 10024  003642  D065               	goto	l8512
 10025  003644                     l8488:
 10026                           
 10027                           ;main.c: 479: lcdInst(0b10000000);
 10028  003644  0E80               	movlw	128
 10029  003646  EC5F  F02A         	call	_lcdInst
 10030                           
 10031                           ;main.c: 480: printf("BttlCnt Prev 2    ");
 10032  00364A  0EDE               	movlw	low STR_23
 10033  00364C  0100               	movlb	0	; () banked
 10034  00364E  6F9C               	movwf	printf@f& (0+255),b
 10035  003650  0EFE               	movlw	high STR_23
 10036  003652  0100               	movlb	0	; () banked
 10037  003654  6F9D               	movwf	(printf@f+1)& (0+255),b
 10038  003656  EC23  F008         	call	_printf	;wreg free
 10039                           
 10040                           ;main.c: 481: lcdInst(0b11000000);
 10041  00365A  0EC0               	movlw	192
 10042  00365C  EC5F  F02A         	call	_lcdInst
 10043                           
 10044                           ;main.c: 482: printf("Total: %d       ", bottle_count_array[0]);
 10045  003660  0E4C               	movlw	low STR_10
 10046  003662  0100               	movlb	0	; () banked
 10047  003664  6F9C               	movwf	printf@f& (0+255),b
 10048  003666  0EFF               	movlw	high STR_10
 10049  003668  0100               	movlb	0	; () banked
 10050  00366A  6F9D               	movwf	(printf@f+1)& (0+255),b
 10051  00366C  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10052  003670  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10053  003674  EC23  F008         	call	_printf	;wreg free
 10054                           
 10055                           ;main.c: 483: break;
 10056  003678  0012               	return	
 10057  00367A                     l8494:
 10058                           
 10059                           ;main.c: 485: lcdInst(0b10000000);
 10060  00367A  0E80               	movlw	128
 10061  00367C  EC5F  F02A         	call	_lcdInst
 10062                           
 10063                           ;main.c: 486: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10064  003680  0E6E               	movlw	low STR_11
 10065  003682  0100               	movlb	0	; () banked
 10066  003684  6F9C               	movwf	printf@f& (0+255),b
 10067  003686  0EFF               	movlw	high STR_11
 10068  003688  0100               	movlb	0	; () banked
 10069  00368A  6F9D               	movwf	(printf@f+1)& (0+255),b
 10070  00368C  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10071  003690  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10072  003694  EC23  F008         	call	_printf	;wreg free
 10073                           
 10074                           ;main.c: 487: lcdInst(0b11000000);
 10075  003698  0EC0               	movlw	192
 10076  00369A  EC5F  F02A         	call	_lcdInst
 10077                           
 10078                           ;main.c: 488: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10079  00369E  0E7F               	movlw	low STR_12
 10080  0036A0  0100               	movlb	0	; () banked
 10081  0036A2  6F9C               	movwf	printf@f& (0+255),b
 10082  0036A4  0EFF               	movlw	high STR_12
 10083  0036A6  0100               	movlb	0	; () banked
 10084  0036A8  6F9D               	movwf	(printf@f+1)& (0+255),b
 10085  0036AA  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10086  0036AE  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10087  0036B2  EC23  F008         	call	_printf	;wreg free
 10088                           
 10089                           ;main.c: 489: break;
 10090  0036B6  0012               	return	
 10091  0036B8                     l8500:
 10092                           
 10093                           ;main.c: 491: lcdInst(0b10000000);
 10094  0036B8  0E80               	movlw	128
 10095  0036BA  EC5F  F02A         	call	_lcdInst
 10096                           
 10097                           ;main.c: 492: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10098  0036BE  0E90               	movlw	low STR_13
 10099  0036C0  0100               	movlb	0	; () banked
 10100  0036C2  6F9C               	movwf	printf@f& (0+255),b
 10101  0036C4  0EFF               	movlw	high STR_13
 10102  0036C6  0100               	movlb	0	; () banked
 10103  0036C8  6F9D               	movwf	(printf@f+1)& (0+255),b
 10104  0036CA  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10105  0036CE  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10106  0036D2  EC23  F008         	call	_printf	;wreg free
 10107                           
 10108                           ;main.c: 493: lcdInst(0b11000000);
 10109  0036D6  0EC0               	movlw	192
 10110  0036D8  EC5F  F02A         	call	_lcdInst
 10111                           
 10112                           ;main.c: 494: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10113  0036DC  0EA1               	movlw	low STR_14
 10114  0036DE  0100               	movlb	0	; () banked
 10115  0036E0  6F9C               	movwf	printf@f& (0+255),b
 10116  0036E2  0EFF               	movlw	high STR_14
 10117  0036E4  0100               	movlb	0	; () banked
 10118  0036E6  6F9D               	movwf	(printf@f+1)& (0+255),b
 10119  0036E8  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10120  0036EC  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10121  0036F0  EC23  F008         	call	_printf	;wreg free
 10122                           
 10123                           ;main.c: 495: break;
 10124  0036F4  0012               	return	
 10125  0036F6                     l8506:
 10126                           
 10127                           ;main.c: 498: lcdInst(0b10000000);
 10128  0036F6  0E80               	movlw	128
 10129  0036F8  EC5F  F02A         	call	_lcdInst
 10130                           
 10131                           ;main.c: 499: printf("ERR: BAD BTLCNT");
 10132  0036FC  0EC2               	movlw	low STR_15
 10133  0036FE  0100               	movlb	0	; () banked
 10134  003700  6F9C               	movwf	printf@f& (0+255),b
 10135  003702  0EFF               	movlw	high STR_15
 10136  003704  0100               	movlb	0	; () banked
 10137  003706  6F9D               	movwf	(printf@f+1)& (0+255),b
 10138  003708  EC23  F008         	call	_printf	;wreg free
 10139  00370C  D7F4               	goto	l8506
 10140  00370E                     l8512:
 10141  00370E  C176  F090         	movff	_bottle_count_disp+4,___awmod@dividend
 10142  003712  C177  F091         	movff	_bottle_count_disp+5,___awmod@dividend+1
 10143  003716  0E00               	movlw	0
 10144  003718  0100               	movlb	0	; () banked
 10145  00371A  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10146  00371C  0E03               	movlw	3
 10147  00371E  6F92               	movwf	___awmod@divisor& (0+255),b
 10148  003720  EC5A  F024         	call	___awmod	;wreg free
 10149                           
 10150                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10151                           ; Switch size 1, requested type "space"
 10152                           ; Number of cases is 1, Range of values is 0 to 0
 10153                           ; switch strategies available:
 10154                           ; Name         Instructions Cycles
 10155                           ; simple_byte            4     3 (average)
 10156                           ;	Chosen strategy is simple_byte
 10157  003724  0100               	movlb	0	; () banked
 10158  003726  5191               	movf	(?___awmod+1)& (0+255),w,b
 10159  003728  0A00               	xorlw	0	; case 0
 10160  00372A  A4D8               	btfss	status,2,c
 10161  00372C  D7E4               	goto	l8506
 10162                           
 10163                           ; BSR set to: 0
 10164                           ; Switch size 1, requested type "space"
 10165                           ; Number of cases is 3, Range of values is 0 to 2
 10166                           ; switch strategies available:
 10167                           ; Name         Instructions Cycles
 10168                           ; simple_byte           10     6 (average)
 10169                           ;	Chosen strategy is simple_byte
 10170  00372E  0100               	movlb	0	; () banked
 10171  003730  5190               	movf	?___awmod& (0+255),w,b
 10172  003732  0A00               	xorlw	0	; case 0
 10173  003734  B4D8               	btfsc	status,2,c
 10174  003736  D786               	goto	l8488
 10175  003738  0A01               	xorlw	1	; case 1
 10176  00373A  B4D8               	btfsc	status,2,c
 10177  00373C  D79E               	goto	l8494
 10178  00373E  0A03               	xorlw	3	; case 2
 10179  003740  B4D8               	btfsc	status,2,c
 10180  003742  D7BA               	goto	l8500
 10181  003744  D7D8               	goto	l8506
 10182  003746                     __end_of_bottle_count2:
 10183                           	opt stack 0
 10184                           tblptru	equ	0xFF8
 10185                           tblptrh	equ	0xFF7
 10186                           tblptrl	equ	0xFF6
 10187                           tablat	equ	0xFF5
 10188                           prodh	equ	0xFF4
 10189                           prodl	equ	0xFF3
 10190                           intcon	equ	0xFF2
 10191                           intcon2	equ	0xFF1
 10192                           intcon3	equ	0xFF0
 10193                           postinc0	equ	0xFEE
 10194                           wreg	equ	0xFE8
 10195                           postdec1	equ	0xFE5
 10196                           fsr1l	equ	0xFE1
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           postdec2	equ	0xFDD
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function _bottle_count1 *****************
 10205 ;; Defined at:
 10206 ;;		line 446 in file "main.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;Total ram usage:        0 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:   10
 10227 ;; This function calls:
 10228 ;;		___awmod
 10229 ;;		_lcdInst
 10230 ;;		_printf
 10231 ;; This function is called by:
 10232 ;;		_main
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           	psect	text38
 10237  003746                     __ptext38:
 10238                           	opt stack 0
 10239  003746                     _bottle_count1:
 10240                           	opt stack 20
 10241                           
 10242                           ;main.c: 447: switch(bottle_count_disp[1] % 3){
 10243                           
 10244                           ;incstack = 0
 10245  003746  D065               	goto	l8480
 10246  003748                     l8456:
 10247                           
 10248                           ;main.c: 449: lcdInst(0b10000000);
 10249  003748  0E80               	movlw	128
 10250  00374A  EC5F  F02A         	call	_lcdInst
 10251                           
 10252                           ;main.c: 450: printf("BttlCnt Prev 1    ");
 10253  00374E  0ECB               	movlw	low STR_16
 10254  003750  0100               	movlb	0	; () banked
 10255  003752  6F9C               	movwf	printf@f& (0+255),b
 10256  003754  0EFE               	movlw	high STR_16
 10257  003756  0100               	movlb	0	; () banked
 10258  003758  6F9D               	movwf	(printf@f+1)& (0+255),b
 10259  00375A  EC23  F008         	call	_printf	;wreg free
 10260                           
 10261                           ;main.c: 451: lcdInst(0b11000000);
 10262  00375E  0EC0               	movlw	192
 10263  003760  EC5F  F02A         	call	_lcdInst
 10264                           
 10265                           ;main.c: 452: printf("Total: %d       ", bottle_count_array[0]);
 10266  003764  0E4C               	movlw	low STR_10
 10267  003766  0100               	movlb	0	; () banked
 10268  003768  6F9C               	movwf	printf@f& (0+255),b
 10269  00376A  0EFF               	movlw	high STR_10
 10270  00376C  0100               	movlb	0	; () banked
 10271  00376E  6F9D               	movwf	(printf@f+1)& (0+255),b
 10272  003770  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10273  003774  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10274  003778  EC23  F008         	call	_printf	;wreg free
 10275                           
 10276                           ;main.c: 453: break;
 10277  00377C  0012               	return	
 10278  00377E                     l8462:
 10279                           
 10280                           ;main.c: 455: lcdInst(0b10000000);
 10281  00377E  0E80               	movlw	128
 10282  003780  EC5F  F02A         	call	_lcdInst
 10283                           
 10284                           ;main.c: 456: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10285  003784  0E6E               	movlw	low STR_11
 10286  003786  0100               	movlb	0	; () banked
 10287  003788  6F9C               	movwf	printf@f& (0+255),b
 10288  00378A  0EFF               	movlw	high STR_11
 10289  00378C  0100               	movlb	0	; () banked
 10290  00378E  6F9D               	movwf	(printf@f+1)& (0+255),b
 10291  003790  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10292  003794  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10293  003798  EC23  F008         	call	_printf	;wreg free
 10294                           
 10295                           ;main.c: 457: lcdInst(0b11000000);
 10296  00379C  0EC0               	movlw	192
 10297  00379E  EC5F  F02A         	call	_lcdInst
 10298                           
 10299                           ;main.c: 458: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10300  0037A2  0E7F               	movlw	low STR_12
 10301  0037A4  0100               	movlb	0	; () banked
 10302  0037A6  6F9C               	movwf	printf@f& (0+255),b
 10303  0037A8  0EFF               	movlw	high STR_12
 10304  0037AA  0100               	movlb	0	; () banked
 10305  0037AC  6F9D               	movwf	(printf@f+1)& (0+255),b
 10306  0037AE  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10307  0037B2  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10308  0037B6  EC23  F008         	call	_printf	;wreg free
 10309                           
 10310                           ;main.c: 459: break;
 10311  0037BA  0012               	return	
 10312  0037BC                     l8468:
 10313                           
 10314                           ;main.c: 461: lcdInst(0b10000000);
 10315  0037BC  0E80               	movlw	128
 10316  0037BE  EC5F  F02A         	call	_lcdInst
 10317                           
 10318                           ;main.c: 462: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10319  0037C2  0E90               	movlw	low STR_13
 10320  0037C4  0100               	movlb	0	; () banked
 10321  0037C6  6F9C               	movwf	printf@f& (0+255),b
 10322  0037C8  0EFF               	movlw	high STR_13
 10323  0037CA  0100               	movlb	0	; () banked
 10324  0037CC  6F9D               	movwf	(printf@f+1)& (0+255),b
 10325  0037CE  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10326  0037D2  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10327  0037D6  EC23  F008         	call	_printf	;wreg free
 10328                           
 10329                           ;main.c: 463: lcdInst(0b11000000);
 10330  0037DA  0EC0               	movlw	192
 10331  0037DC  EC5F  F02A         	call	_lcdInst
 10332                           
 10333                           ;main.c: 464: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10334  0037E0  0EA1               	movlw	low STR_14
 10335  0037E2  0100               	movlb	0	; () banked
 10336  0037E4  6F9C               	movwf	printf@f& (0+255),b
 10337  0037E6  0EFF               	movlw	high STR_14
 10338  0037E8  0100               	movlb	0	; () banked
 10339  0037EA  6F9D               	movwf	(printf@f+1)& (0+255),b
 10340  0037EC  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10341  0037F0  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10342  0037F4  EC23  F008         	call	_printf	;wreg free
 10343                           
 10344                           ;main.c: 465: break;
 10345  0037F8  0012               	return	
 10346  0037FA                     l8474:
 10347                           
 10348                           ;main.c: 468: lcdInst(0b10000000);
 10349  0037FA  0E80               	movlw	128
 10350  0037FC  EC5F  F02A         	call	_lcdInst
 10351                           
 10352                           ;main.c: 469: printf("ERR: BAD BTLCNT");
 10353  003800  0EC2               	movlw	low STR_15
 10354  003802  0100               	movlb	0	; () banked
 10355  003804  6F9C               	movwf	printf@f& (0+255),b
 10356  003806  0EFF               	movlw	high STR_15
 10357  003808  0100               	movlb	0	; () banked
 10358  00380A  6F9D               	movwf	(printf@f+1)& (0+255),b
 10359  00380C  EC23  F008         	call	_printf	;wreg free
 10360  003810  D7F4               	goto	l8474
 10361  003812                     l8480:
 10362  003812  C174  F090         	movff	_bottle_count_disp+2,___awmod@dividend
 10363  003816  C175  F091         	movff	_bottle_count_disp+3,___awmod@dividend+1
 10364  00381A  0E00               	movlw	0
 10365  00381C  0100               	movlb	0	; () banked
 10366  00381E  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10367  003820  0E03               	movlw	3
 10368  003822  6F92               	movwf	___awmod@divisor& (0+255),b
 10369  003824  EC5A  F024         	call	___awmod	;wreg free
 10370                           
 10371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10372                           ; Switch size 1, requested type "space"
 10373                           ; Number of cases is 1, Range of values is 0 to 0
 10374                           ; switch strategies available:
 10375                           ; Name         Instructions Cycles
 10376                           ; simple_byte            4     3 (average)
 10377                           ;	Chosen strategy is simple_byte
 10378  003828  0100               	movlb	0	; () banked
 10379  00382A  5191               	movf	(?___awmod+1)& (0+255),w,b
 10380  00382C  0A00               	xorlw	0	; case 0
 10381  00382E  A4D8               	btfss	status,2,c
 10382  003830  D7E4               	goto	l8474
 10383                           
 10384                           ; BSR set to: 0
 10385                           ; Switch size 1, requested type "space"
 10386                           ; Number of cases is 3, Range of values is 0 to 2
 10387                           ; switch strategies available:
 10388                           ; Name         Instructions Cycles
 10389                           ; simple_byte           10     6 (average)
 10390                           ;	Chosen strategy is simple_byte
 10391  003832  0100               	movlb	0	; () banked
 10392  003834  5190               	movf	?___awmod& (0+255),w,b
 10393  003836  0A00               	xorlw	0	; case 0
 10394  003838  B4D8               	btfsc	status,2,c
 10395  00383A  D786               	goto	l8456
 10396  00383C  0A01               	xorlw	1	; case 1
 10397  00383E  B4D8               	btfsc	status,2,c
 10398  003840  D79E               	goto	l8462
 10399  003842  0A03               	xorlw	3	; case 2
 10400  003844  B4D8               	btfsc	status,2,c
 10401  003846  D7BA               	goto	l8468
 10402  003848  D7D8               	goto	l8474
 10403  00384A                     __end_of_bottle_count1:
 10404                           	opt stack 0
 10405                           tblptru	equ	0xFF8
 10406                           tblptrh	equ	0xFF7
 10407                           tblptrl	equ	0xFF6
 10408                           tablat	equ	0xFF5
 10409                           prodh	equ	0xFF4
 10410                           prodl	equ	0xFF3
 10411                           intcon	equ	0xFF2
 10412                           intcon2	equ	0xFF1
 10413                           intcon3	equ	0xFF0
 10414                           postinc0	equ	0xFEE
 10415                           wreg	equ	0xFE8
 10416                           postdec1	equ	0xFE5
 10417                           fsr1l	equ	0xFE1
 10418                           indf2	equ	0xFDF
 10419                           postinc2	equ	0xFDE
 10420                           postdec2	equ	0xFDD
 10421                           fsr2h	equ	0xFDA
 10422                           fsr2l	equ	0xFD9
 10423                           status	equ	0xFD8
 10424                           
 10425 ;; *************** function _bottle_count *****************
 10426 ;; Defined at:
 10427 ;;		line 416 in file "main.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;		None
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;Total ram usage:        0 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:   10
 10448 ;; This function calls:
 10449 ;;		___awmod
 10450 ;;		_lcdInst
 10451 ;;		_printf
 10452 ;; This function is called by:
 10453 ;;		_main
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text39
 10458  00384A                     __ptext39:
 10459                           	opt stack 0
 10460  00384A                     _bottle_count:
 10461                           	opt stack 20
 10462                           
 10463                           ;main.c: 417: switch(bottle_count_disp[0] % 3){
 10464                           
 10465                           ;incstack = 0
 10466  00384A  D065               	goto	l8448
 10467  00384C                     l8424:
 10468                           
 10469                           ;main.c: 419: lcdInst(0b10000000);
 10470  00384C  0E80               	movlw	128
 10471  00384E  EC5F  F02A         	call	_lcdInst
 10472                           
 10473                           ;main.c: 420: printf("Bottle Count    ");
 10474  003852  0E5D               	movlw	low STR_9
 10475  003854  0100               	movlb	0	; () banked
 10476  003856  6F9C               	movwf	printf@f& (0+255),b
 10477  003858  0EFF               	movlw	high STR_9
 10478  00385A  0100               	movlb	0	; () banked
 10479  00385C  6F9D               	movwf	(printf@f+1)& (0+255),b
 10480  00385E  EC23  F008         	call	_printf	;wreg free
 10481                           
 10482                           ;main.c: 421: lcdInst(0b11000000);
 10483  003862  0EC0               	movlw	192
 10484  003864  EC5F  F02A         	call	_lcdInst
 10485                           
 10486                           ;main.c: 422: printf("Total: %d       ", bottle_count_array[0]);
 10487  003868  0E4C               	movlw	low STR_10
 10488  00386A  0100               	movlb	0	; () banked
 10489  00386C  6F9C               	movwf	printf@f& (0+255),b
 10490  00386E  0EFF               	movlw	high STR_10
 10491  003870  0100               	movlb	0	; () banked
 10492  003872  6F9D               	movwf	(printf@f+1)& (0+255),b
 10493  003874  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10494  003878  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10495  00387C  EC23  F008         	call	_printf	;wreg free
 10496                           
 10497                           ;main.c: 423: break;
 10498  003880  0012               	return	
 10499  003882                     l8430:
 10500                           
 10501                           ;main.c: 425: lcdInst(0b10000000);
 10502  003882  0E80               	movlw	128
 10503  003884  EC5F  F02A         	call	_lcdInst
 10504                           
 10505                           ;main.c: 426: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10506  003888  0E6E               	movlw	low STR_11
 10507  00388A  0100               	movlb	0	; () banked
 10508  00388C  6F9C               	movwf	printf@f& (0+255),b
 10509  00388E  0EFF               	movlw	high STR_11
 10510  003890  0100               	movlb	0	; () banked
 10511  003892  6F9D               	movwf	(printf@f+1)& (0+255),b
 10512  003894  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10513  003898  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10514  00389C  EC23  F008         	call	_printf	;wreg free
 10515                           
 10516                           ;main.c: 427: lcdInst(0b11000000);
 10517  0038A0  0EC0               	movlw	192
 10518  0038A2  EC5F  F02A         	call	_lcdInst
 10519                           
 10520                           ;main.c: 428: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10521  0038A6  0E7F               	movlw	low STR_12
 10522  0038A8  0100               	movlb	0	; () banked
 10523  0038AA  6F9C               	movwf	printf@f& (0+255),b
 10524  0038AC  0EFF               	movlw	high STR_12
 10525  0038AE  0100               	movlb	0	; () banked
 10526  0038B0  6F9D               	movwf	(printf@f+1)& (0+255),b
 10527  0038B2  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10528  0038B6  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10529  0038BA  EC23  F008         	call	_printf	;wreg free
 10530                           
 10531                           ;main.c: 429: break;
 10532  0038BE  0012               	return	
 10533  0038C0                     l8436:
 10534                           
 10535                           ;main.c: 431: lcdInst(0b10000000);
 10536  0038C0  0E80               	movlw	128
 10537  0038C2  EC5F  F02A         	call	_lcdInst
 10538                           
 10539                           ;main.c: 432: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10540  0038C6  0E90               	movlw	low STR_13
 10541  0038C8  0100               	movlb	0	; () banked
 10542  0038CA  6F9C               	movwf	printf@f& (0+255),b
 10543  0038CC  0EFF               	movlw	high STR_13
 10544  0038CE  0100               	movlb	0	; () banked
 10545  0038D0  6F9D               	movwf	(printf@f+1)& (0+255),b
 10546  0038D2  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10547  0038D6  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10548  0038DA  EC23  F008         	call	_printf	;wreg free
 10549                           
 10550                           ;main.c: 433: lcdInst(0b11000000);
 10551  0038DE  0EC0               	movlw	192
 10552  0038E0  EC5F  F02A         	call	_lcdInst
 10553                           
 10554                           ;main.c: 434: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10555  0038E4  0EA1               	movlw	low STR_14
 10556  0038E6  0100               	movlb	0	; () banked
 10557  0038E8  6F9C               	movwf	printf@f& (0+255),b
 10558  0038EA  0EFF               	movlw	high STR_14
 10559  0038EC  0100               	movlb	0	; () banked
 10560  0038EE  6F9D               	movwf	(printf@f+1)& (0+255),b
 10561  0038F0  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10562  0038F4  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10563  0038F8  EC23  F008         	call	_printf	;wreg free
 10564                           
 10565                           ;main.c: 435: break;
 10566  0038FC  0012               	return	
 10567  0038FE                     l8442:
 10568                           
 10569                           ;main.c: 438: lcdInst(0b10000000);
 10570  0038FE  0E80               	movlw	128
 10571  003900  EC5F  F02A         	call	_lcdInst
 10572                           
 10573                           ;main.c: 439: printf("ERR: BAD BTLCNT");
 10574  003904  0EC2               	movlw	low STR_15
 10575  003906  0100               	movlb	0	; () banked
 10576  003908  6F9C               	movwf	printf@f& (0+255),b
 10577  00390A  0EFF               	movlw	high STR_15
 10578  00390C  0100               	movlb	0	; () banked
 10579  00390E  6F9D               	movwf	(printf@f+1)& (0+255),b
 10580  003910  EC23  F008         	call	_printf	;wreg free
 10581  003914  D7F4               	goto	l8442
 10582  003916                     l8448:
 10583  003916  C172  F090         	movff	_bottle_count_disp,___awmod@dividend
 10584  00391A  C173  F091         	movff	_bottle_count_disp+1,___awmod@dividend+1
 10585  00391E  0E00               	movlw	0
 10586  003920  0100               	movlb	0	; () banked
 10587  003922  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10588  003924  0E03               	movlw	3
 10589  003926  6F92               	movwf	___awmod@divisor& (0+255),b
 10590  003928  EC5A  F024         	call	___awmod	;wreg free
 10591                           
 10592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10593                           ; Switch size 1, requested type "space"
 10594                           ; Number of cases is 1, Range of values is 0 to 0
 10595                           ; switch strategies available:
 10596                           ; Name         Instructions Cycles
 10597                           ; simple_byte            4     3 (average)
 10598                           ;	Chosen strategy is simple_byte
 10599  00392C  0100               	movlb	0	; () banked
 10600  00392E  5191               	movf	(?___awmod+1)& (0+255),w,b
 10601  003930  0A00               	xorlw	0	; case 0
 10602  003932  A4D8               	btfss	status,2,c
 10603  003934  D7E4               	goto	l8442
 10604                           
 10605                           ; BSR set to: 0
 10606                           ; Switch size 1, requested type "space"
 10607                           ; Number of cases is 3, Range of values is 0 to 2
 10608                           ; switch strategies available:
 10609                           ; Name         Instructions Cycles
 10610                           ; simple_byte           10     6 (average)
 10611                           ;	Chosen strategy is simple_byte
 10612  003936  0100               	movlb	0	; () banked
 10613  003938  5190               	movf	?___awmod& (0+255),w,b
 10614  00393A  0A00               	xorlw	0	; case 0
 10615  00393C  B4D8               	btfsc	status,2,c
 10616  00393E  D786               	goto	l8424
 10617  003940  0A01               	xorlw	1	; case 1
 10618  003942  B4D8               	btfsc	status,2,c
 10619  003944  D79E               	goto	l8430
 10620  003946  0A03               	xorlw	3	; case 2
 10621  003948  B4D8               	btfsc	status,2,c
 10622  00394A  D7BA               	goto	l8436
 10623  00394C  D7D8               	goto	l8442
 10624  00394E                     __end_of_bottle_count:
 10625                           	opt stack 0
 10626                           tblptru	equ	0xFF8
 10627                           tblptrh	equ	0xFF7
 10628                           tblptrl	equ	0xFF6
 10629                           tablat	equ	0xFF5
 10630                           prodh	equ	0xFF4
 10631                           prodl	equ	0xFF3
 10632                           intcon	equ	0xFF2
 10633                           intcon2	equ	0xFF1
 10634                           intcon3	equ	0xFF0
 10635                           postinc0	equ	0xFEE
 10636                           wreg	equ	0xFE8
 10637                           postdec1	equ	0xFE5
 10638                           fsr1l	equ	0xFE1
 10639                           indf2	equ	0xFDF
 10640                           postinc2	equ	0xFDE
 10641                           postdec2	equ	0xFDD
 10642                           fsr2h	equ	0xFDA
 10643                           fsr2l	equ	0xFD9
 10644                           status	equ	0xFD8
 10645                           
 10646 ;; *************** function _printf *****************
 10647 ;; Defined at:
 10648 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;  f               2   28[BANK0 ] PTR const unsigned char 
 10651 ;;		 -> STR_47(15), STR_46(16), STR_45(18), STR_44(23), 
 10652 ;;		 -> STR_43(16), STR_42(17), STR_41(17), STR_40(17), 
 10653 ;;		 -> STR_39(17), STR_38(17), STR_37(19), STR_36(16), 
 10654 ;;		 -> STR_35(17), STR_34(17), STR_33(17), STR_32(17), 
 10655 ;;		 -> STR_31(17), STR_30(19), STR_29(16), STR_28(17), 
 10656 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(17), 
 10657 ;;		 -> STR_23(19), STR_22(16), STR_21(17), STR_20(17), 
 10658 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(19), 
 10659 ;;		 -> STR_15(16), STR_14(17), STR_13(17), STR_12(17), 
 10660 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(23), 
 10661 ;;		 -> STR_7(23), STR_6(9), STR_5(18), STR_4(13), 
 10662 ;;		 -> STR_3(24), STR_2(24), STR_1(8), 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  idx             1   40[BANK0 ] unsigned char 
 10665 ;;  tmpval          4    0        struct .
 10666 ;;  cp              3    0        PTR const unsigned char 
 10667 ;;  width           2   47[BANK0 ] int 
 10668 ;;  val             2   44[BANK0 ] unsigned int 
 10669 ;;  ap              2   41[BANK0 ] PTR void [1]
 10670 ;;		 -> ?i2_printf(2), ?_printf(2), 
 10671 ;;  len             2    0        unsigned int 
 10672 ;;  c               1   49[BANK0 ] char 
 10673 ;;  flag            1   46[BANK0 ] unsigned char 
 10674 ;;  prec            1   43[BANK0 ] char 
 10675 ;; Return value:  Size  Location     Type
 10676 ;;                  2   28[BANK0 ] int 
 10677 ;; Registers used:
 10678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10679 ;; Tracked objects:
 10680 ;;		On entry : 0/0
 10681 ;;		On exit  : 0/0
 10682 ;;		Unchanged: 0/0
 10683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10684 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10687 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10688 ;;Total ram usage:       22 bytes
 10689 ;; Hardware stack levels used:    1
 10690 ;; Hardware stack levels required when called:    9
 10691 ;; This function calls:
 10692 ;;		___lwdiv
 10693 ;;		___lwmod
 10694 ;;		___wmul
 10695 ;;		_isdigit
 10696 ;;		_putch
 10697 ;; This function is called by:
 10698 ;;		_standby
 10699 ;;		_date_time
 10700 ;;		_bottle_count
 10701 ;;		_bottle_count1
 10702 ;;		_bottle_count2
 10703 ;;		_bottle_count3
 10704 ;;		_bottle_count4
 10705 ;;		_bottle_time
 10706 ;;		_operationend
 10707 ;;		_emergencystop
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	text40
 10712  001046                     __ptext40:
 10713                           	opt stack 0
 10714  001046                     _printf:
 10715                           	opt stack 20
 10716                           
 10717                           ;doprnt.c: 466: va_list ap;
 10718                           ;doprnt.c: 499: signed char c;
 10719                           ;doprnt.c: 501: int width;
 10720                           ;doprnt.c: 506: signed char prec;
 10721                           ;doprnt.c: 508: unsigned char flag;
 10722                           ;doprnt.c: 523: union {
 10723                           ;doprnt.c: 524: unsigned long vd;
 10724                           ;doprnt.c: 525: double integ;
 10725                           ;doprnt.c: 526: } tmpval;
 10726                           ;doprnt.c: 528: unsigned int val;
 10727                           ;doprnt.c: 529: unsigned len;
 10728                           ;doprnt.c: 530: const char * cp;
 10729                           ;doprnt.c: 533: *ap = __va_start();
 10730                           
 10731                           ;incstack = 0
 10732  001046  0E9E               	movlw	low (?_printf+2)
 10733  001048  0100               	movlb	0	; () banked
 10734  00104A  6FA9               	movwf	printf@ap& (0+255),b
 10735  00104C  0E00               	movlw	high (?_printf+2)
 10736  00104E  0100               	movlb	0	; () banked
 10737  001050  6FAA               	movwf	(printf@ap+1)& (0+255),b
 10738                           
 10739                           ;doprnt.c: 536: while(c = *f++) {
 10740  001052  D1D5               	goto	l8120
 10741  001054                     l7990:
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;doprnt.c: 538: if(c != '%')
 10745  001054  0E25               	movlw	37
 10746  001056  0100               	movlb	0	; () banked
 10747  001058  19B1               	xorwf	printf@c& (0+255),w,b
 10748  00105A  B4D8               	btfsc	status,2,c
 10749  00105C  D005               	goto	l7994
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;doprnt.c: 540: {
 10753                           ;doprnt.c: 541: (putch(c) );
 10754  00105E  0100               	movlb	0	; () banked
 10755  001060  51B1               	movf	printf@c& (0+255),w,b
 10756  001062  EC57  F02A         	call	_putch
 10757                           
 10758                           ;doprnt.c: 542: continue;
 10759  001066  D1CB               	goto	l8120
 10760  001068                     l7994:
 10761                           
 10762                           ;doprnt.c: 543: }
 10763                           ;doprnt.c: 546: width = 0;
 10764  001068  0E00               	movlw	0
 10765  00106A  0100               	movlb	0	; () banked
 10766  00106C  6FB0               	movwf	(printf@width+1)& (0+255),b
 10767  00106E  0E00               	movlw	0
 10768  001070  6FAF               	movwf	printf@width& (0+255),b
 10769                           
 10770                           ;doprnt.c: 548: flag = 0;
 10771  001072  0E00               	movlw	0
 10772  001074  0100               	movlb	0	; () banked
 10773  001076  6FAE               	movwf	printf@flag& (0+255),b
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;doprnt.c: 551: switch(*f) {
 10777                           
 10778                           ;doprnt.c: 550: for(;;) {
 10779  001078  D005               	goto	l8000
 10780  00107A                     l7996:
 10781                           
 10782                           ;doprnt.c: 580: flag |= 0x04;
 10783  00107A  0100               	movlb	0	; () banked
 10784  00107C  85AE               	bsf	printf@flag& (0+255),2,b
 10785                           
 10786                           ;doprnt.c: 581: f++;
 10787  00107E  0100               	movlb	0	; () banked
 10788  001080  4B9C               	infsnz	printf@f& (0+255),f,b
 10789  001082  2B9D               	incf	(printf@f+1)& (0+255),f,b
 10790  001084                     l8000:
 10791  001084  C09C  FFF6         	movff	printf@f,tblptrl
 10792  001088  C09D  FFF7         	movff	printf@f+1,tblptrh
 10793  00108C                     	if	0	;tblptru may be non-zero
 10794  00108C                     	endif
 10795  00108C                     	if	0	;tblptru may be non-zero
 10796  00108C                     	endif
 10797  00108C  0008               	tblrd		*
 10798  00108E  50F5               	movf	tablat,w,c
 10799                           
 10800                           ; Switch size 1, requested type "space"
 10801                           ; Number of cases is 1, Range of values is 48 to 48
 10802                           ; switch strategies available:
 10803                           ; Name         Instructions Cycles
 10804                           ; simple_byte            4     3 (average)
 10805                           ;	Chosen strategy is simple_byte
 10806  001090  0A30               	xorlw	48	; case 48
 10807  001092  B4D8               	btfsc	status,2,c
 10808  001094  D7F2               	goto	l7996
 10809                           
 10810                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10811                           
 10812                           ;doprnt.c: 586: }
 10813                           
 10814                           ;doprnt.c: 585: break;
 10815  001096  C09C  FFF6         	movff	printf@f,tblptrl
 10816  00109A  C09D  FFF7         	movff	printf@f+1,tblptrh
 10817  00109E                     	if	0	;tblptru may be non-zero
 10818  00109E                     	endif
 10819  00109E                     	if	0	;tblptru may be non-zero
 10820  00109E                     	endif
 10821  00109E  0008               	tblrd		*
 10822  0010A0  50F5               	movf	tablat,w,c
 10823  0010A2  EC8D  F029         	call	_isdigit
 10824  0010A6  A0D8               	btfss	status,0,c
 10825  0010A8  D048               	goto	l8020
 10826                           
 10827                           ;doprnt.c: 598: width = 0;
 10828  0010AA  0E00               	movlw	0
 10829  0010AC  0100               	movlb	0	; () banked
 10830  0010AE  6FB0               	movwf	(printf@width+1)& (0+255),b
 10831  0010B0  0E00               	movlw	0
 10832  0010B2  6FAF               	movwf	printf@width& (0+255),b
 10833  0010B4                     l8006:
 10834                           
 10835                           ;doprnt.c: 600: width *= 10;
 10836  0010B4  C0AF  F090         	movff	printf@width,___wmul@multiplier
 10837  0010B8  C0B0  F091         	movff	printf@width+1,___wmul@multiplier+1
 10838  0010BC  0E00               	movlw	0
 10839  0010BE  0100               	movlb	0	; () banked
 10840  0010C0  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10841  0010C2  0E0A               	movlw	10
 10842  0010C4  6F92               	movwf	___wmul@multiplicand& (0+255),b
 10843  0010C6  EC2E  F029         	call	___wmul	;wreg free
 10844  0010CA  C090  F0AF         	movff	?___wmul,printf@width
 10845  0010CE  C091  F0B0         	movff	?___wmul+1,printf@width+1
 10846                           
 10847                           ;doprnt.c: 601: width += *f++ - '0';
 10848  0010D2  0ED0               	movlw	208
 10849  0010D4  0100               	movlb	0	; () banked
 10850  0010D6  6FA4               	movwf	??_printf& (0+255),b
 10851  0010D8  0EFF               	movlw	255
 10852  0010DA  0100               	movlb	0	; () banked
 10853  0010DC  6FA5               	movwf	(??_printf+1)& (0+255),b
 10854  0010DE  C09C  FFF6         	movff	printf@f,tblptrl
 10855  0010E2  C09D  FFF7         	movff	printf@f+1,tblptrh
 10856  0010E6                     	if	0	;tblptru may be non-zero
 10857  0010E6                     	endif
 10858  0010E6                     	if	0	;tblptru may be non-zero
 10859  0010E6                     	endif
 10860  0010E6  0008               	tblrd		*
 10861  0010E8  50F5               	movf	tablat,w,c
 10862  0010EA  0100               	movlb	0	; () banked
 10863  0010EC  6FA6               	movwf	(??_printf+2)& (0+255),b
 10864  0010EE  6BA7               	clrf	(??_printf+3)& (0+255),b
 10865  0010F0  0100               	movlb	0	; () banked
 10866  0010F2  51A4               	movf	??_printf& (0+255),w,b
 10867  0010F4  0100               	movlb	0	; () banked
 10868  0010F6  27A6               	addwf	(??_printf+2)& (0+255),f,b
 10869  0010F8  0100               	movlb	0	; () banked
 10870  0010FA  51A5               	movf	(??_printf+1)& (0+255),w,b
 10871  0010FC  0100               	movlb	0	; () banked
 10872  0010FE  23A7               	addwfc	(??_printf+3)& (0+255),f,b
 10873  001100  0100               	movlb	0	; () banked
 10874  001102  51A6               	movf	(??_printf+2)& (0+255),w,b
 10875  001104  0100               	movlb	0	; () banked
 10876  001106  27AF               	addwf	printf@width& (0+255),f,b
 10877  001108  0100               	movlb	0	; () banked
 10878  00110A  51A7               	movf	(??_printf+3)& (0+255),w,b
 10879  00110C  0100               	movlb	0	; () banked
 10880  00110E  23B0               	addwfc	(printf@width+1)& (0+255),f,b
 10881                           
 10882                           ; BSR set to: 0
 10883  001110  0100               	movlb	0	; () banked
 10884  001112  4B9C               	infsnz	printf@f& (0+255),f,b
 10885  001114  2B9D               	incf	(printf@f+1)& (0+255),f,b
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10889  001116  C09C  FFF6         	movff	printf@f,tblptrl
 10890  00111A  C09D  FFF7         	movff	printf@f+1,tblptrh
 10891  00111E                     	if	0	;tblptru may be non-zero
 10892  00111E                     	endif
 10893  00111E                     	if	0	;tblptru may be non-zero
 10894  00111E                     	endif
 10895  00111E  0008               	tblrd		*
 10896  001120  50F5               	movf	tablat,w,c
 10897  001122  EC8D  F029         	call	_isdigit
 10898  001126  A0D8               	btfss	status,0,c
 10899  001128  D008               	goto	l8020
 10900  00112A  D7C4               	goto	l8006
 10901  00112C                     l8014:
 10902                           
 10903                           ;doprnt.c: 721: flag |= 0x80;
 10904  00112C  0100               	movlb	0	; () banked
 10905  00112E  8FAE               	bsf	printf@flag& (0+255),7,b
 10906                           
 10907                           ;doprnt.c: 723: break;
 10908  001130  D020               	goto	l8022
 10909  001132                     l8016:
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;doprnt.c: 818: flag |= 0xC0;
 10913  001132  0EC0               	movlw	192
 10914  001134  0100               	movlb	0	; () banked
 10915  001136  13AE               	iorwf	printf@flag& (0+255),f,b
 10916                           
 10917                           ; BSR set to: 0
 10918                           ;doprnt.c: 822: }
 10919                           
 10920                           ;doprnt.c: 819: break;
 10921  001138  D01C               	goto	l8022
 10922  00113A                     l8020:
 10923  00113A  C09C  FFF6         	movff	printf@f,tblptrl
 10924  00113E  C09D  FFF7         	movff	printf@f+1,tblptrh
 10925  001142  0100               	movlb	0	; () banked
 10926  001144  4B9C               	infsnz	printf@f& (0+255),f,b
 10927  001146  2B9D               	incf	(printf@f+1)& (0+255),f,b
 10928  001148                     	if	0	;tblptru may be non-zero
 10929  001148                     	endif
 10930  001148                     	if	0	;tblptru may be non-zero
 10931  001148                     	endif
 10932  001148  0008               	tblrd		*
 10933  00114A  CFF5 F0B1          	movff	tablat,printf@c
 10934  00114E  0100               	movlb	0	; () banked
 10935  001150  51B1               	movf	printf@c& (0+255),w,b
 10936                           
 10937                           ; Switch size 1, requested type "space"
 10938                           ; Number of cases is 5, Range of values is 0 to 120
 10939                           ; switch strategies available:
 10940                           ; Name         Instructions Cycles
 10941                           ; simple_byte           16     9 (average)
 10942                           ;	Chosen strategy is simple_byte
 10943  001152  0A00               	xorlw	0	; case 0
 10944  001154  B4D8               	btfsc	status,2,c
 10945  001156  0012               	return	
 10946  001158  0A64               	xorlw	100	; case 100
 10947  00115A  B4D8               	btfsc	status,2,c
 10948  00115C  D00A               	goto	l8022
 10949  00115E  0A0D               	xorlw	13	; case 105
 10950  001160  B4D8               	btfsc	status,2,c
 10951  001162  D007               	goto	l8022
 10952  001164  0A1C               	xorlw	28	; case 117
 10953  001166  B4D8               	btfsc	status,2,c
 10954  001168  D7E4               	goto	l8016
 10955  00116A  0A0D               	xorlw	13	; case 120
 10956  00116C  B4D8               	btfsc	status,2,c
 10957  00116E  D7DE               	goto	l8014
 10958  001170  D146               	goto	l8120
 10959  001172                     l8022:
 10960                           
 10961                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10962  001172  C0AE  F0A4         	movff	printf@flag,??_printf
 10963  001176  0EC0               	movlw	192
 10964  001178  0100               	movlb	0	; () banked
 10965  00117A  17A4               	andwf	??_printf& (0+255),f,b
 10966  00117C  A4D8               	btfss	status,2,c
 10967  00117E  D019               	goto	l8034
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;doprnt.c: 1253: {
 10971                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 10972  001180  C0A9  FFD9         	movff	printf@ap,fsr2l
 10973  001184  C0AA  FFDA         	movff	printf@ap+1,fsr2h
 10974  001188  CFDE F0AC          	movff	postinc2,printf@val
 10975  00118C  CFDD F0AD          	movff	postdec2,printf@val+1
 10976                           
 10977                           ; BSR set to: 0
 10978  001190  0E02               	movlw	2
 10979  001192  0100               	movlb	0	; () banked
 10980  001194  27A9               	addwf	printf@ap& (0+255),f,b
 10981  001196  0E00               	movlw	0
 10982  001198  23AA               	addwfc	(printf@ap+1)& (0+255),f,b
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;doprnt.c: 1261: if((int)val < 0) {
 10986  00119A  0100               	movlb	0	; () banked
 10987  00119C  AFAD               	btfss	(printf@val+1)& (0+255),7,b
 10988  00119E  D053               	goto	l8068
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;doprnt.c: 1262: flag |= 0x03;
 10992  0011A0  0E03               	movlw	3
 10993  0011A2  0100               	movlb	0	; () banked
 10994  0011A4  13AE               	iorwf	printf@flag& (0+255),f,b
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;doprnt.c: 1263: val = -val;
 10998  0011A6  0100               	movlb	0	; () banked
 10999  0011A8  6DAC               	negf	printf@val& (0+255),b
 11000  0011AA  1FAD               	comf	(printf@val+1)& (0+255),f,b
 11001  0011AC  B0D8               	btfsc	status,0,c
 11002  0011AE  2BAD               	incf	(printf@val+1)& (0+255),f,b
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;doprnt.c: 1264: }
 11006                           ;doprnt.c: 1266: }
 11007  0011B0  D04A               	goto	l8068
 11008  0011B2                     l8034:
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;doprnt.c: 1268: else
 11012                           ;doprnt.c: 1273: {
 11013                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11014  0011B2  C0A9  FFD9         	movff	printf@ap,fsr2l
 11015  0011B6  C0AA  FFDA         	movff	printf@ap+1,fsr2h
 11016  0011BA  CFDE F0AC          	movff	postinc2,printf@val
 11017  0011BE  CFDD F0AD          	movff	postdec2,printf@val+1
 11018                           
 11019                           ; BSR set to: 0
 11020  0011C2  0E02               	movlw	2
 11021  0011C4  0100               	movlb	0	; () banked
 11022  0011C6  27A9               	addwf	printf@ap& (0+255),f,b
 11023  0011C8  0E00               	movlw	0
 11024  0011CA  23AA               	addwfc	(printf@ap+1)& (0+255),f,b
 11025                           
 11026                           ; BSR set to: 0
 11027                           ;doprnt.c: 1287: }
 11028                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11029  0011CC  D03C               	goto	l8068
 11030  0011CE                     l8038:
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;doprnt.c: 1302: case 0xC0:
 11034                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11035  0011CE  0E01               	movlw	1
 11036  0011D0  0100               	movlb	0	; () banked
 11037  0011D2  6FB1               	movwf	printf@c& (0+255),b
 11038  0011D4                     l8040:
 11039                           
 11040                           ; BSR set to: 0
 11041  0011D4  0E05               	movlw	5
 11042  0011D6  0100               	movlb	0	; () banked
 11043  0011D8  19B1               	xorwf	printf@c& (0+255),w,b
 11044  0011DA  B4D8               	btfsc	status,2,c
 11045  0011DC  D040               	goto	l8070
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;doprnt.c: 1306: if(val < dpowers[c])
 11049                           
 11050                           ; BSR set to: 0
 11051                           
 11052                           ; BSR set to: 0
 11053  0011DE  0100               	movlb	0	; () banked
 11054  0011E0  51B1               	movf	printf@c& (0+255),w,b
 11055  0011E2  0D02               	mullw	2
 11056  0011E4  0E04               	movlw	low _dpowers
 11057  0011E6  24F3               	addwf	prodl,w,c
 11058  0011E8  6EF6               	movwf	tblptrl,c
 11059  0011EA  0EFE               	movlw	high _dpowers
 11060  0011EC  20F4               	addwfc	prodh,w,c
 11061  0011EE  6EF7               	movwf	tblptrh,c
 11062  0011F0                     	if	0	;There are less than 3 active tblptr bytes
 11063  0011F0                     	endif
 11064  0011F0  0009               	tblrd		*+
 11065  0011F2  50F5               	movf	tablat,w,c
 11066  0011F4  0100               	movlb	0	; () banked
 11067  0011F6  5DAC               	subwf	printf@val& (0+255),w,b
 11068  0011F8  0009               	tblrd		*+
 11069  0011FA  50F5               	movf	tablat,w,c
 11070  0011FC  0100               	movlb	0	; () banked
 11071  0011FE  59AD               	subwfb	(printf@val+1)& (0+255),w,b
 11072  001200  A0D8               	btfss	status,0,c
 11073  001202  D02D               	goto	l8070
 11074                           
 11075                           ; BSR set to: 0
 11076                           
 11077                           ; BSR set to: 0
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;doprnt.c: 1307: break;
 11081  001204  0100               	movlb	0	; () banked
 11082  001206  2BB1               	incf	printf@c& (0+255),f,b
 11083  001208  D7E5               	goto	l8040
 11084  00120A                     l8052:
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11088  00120A  0E01               	movlw	1
 11089  00120C  0100               	movlb	0	; () banked
 11090  00120E  6FB1               	movwf	printf@c& (0+255),b
 11091  001210                     l8054:
 11092                           
 11093                           ; BSR set to: 0
 11094  001210  0E04               	movlw	4
 11095  001212  0100               	movlb	0	; () banked
 11096  001214  19B1               	xorwf	printf@c& (0+255),w,b
 11097  001216  B4D8               	btfsc	status,2,c
 11098  001218  D022               	goto	l8070
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11102                           
 11103                           ; BSR set to: 0
 11104                           
 11105                           ; BSR set to: 0
 11106  00121A  0100               	movlb	0	; () banked
 11107  00121C  51B1               	movf	printf@c& (0+255),w,b
 11108  00121E  0D02               	mullw	2
 11109  001220  0E0E               	movlw	low _hexpowers
 11110  001222  24F3               	addwf	prodl,w,c
 11111  001224  6EF6               	movwf	tblptrl,c
 11112  001226  0EFE               	movlw	high _hexpowers
 11113  001228  20F4               	addwfc	prodh,w,c
 11114  00122A  6EF7               	movwf	tblptrh,c
 11115  00122C                     	if	0	;There are less than 3 active tblptr bytes
 11116  00122C                     	endif
 11117  00122C  0009               	tblrd		*+
 11118  00122E  50F5               	movf	tablat,w,c
 11119  001230  0100               	movlb	0	; () banked
 11120  001232  5DAC               	subwf	printf@val& (0+255),w,b
 11121  001234  0009               	tblrd		*+
 11122  001236  50F5               	movf	tablat,w,c
 11123  001238  0100               	movlb	0	; () banked
 11124  00123A  59AD               	subwfb	(printf@val+1)& (0+255),w,b
 11125  00123C  A0D8               	btfss	status,0,c
 11126  00123E  D00F               	goto	l8070
 11127                           
 11128                           ; BSR set to: 0
 11129                           
 11130                           ; BSR set to: 0
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;doprnt.c: 1318: break;
 11134  001240  0100               	movlb	0	; () banked
 11135  001242  2BB1               	incf	printf@c& (0+255),f,b
 11136  001244  D7E5               	goto	l8054
 11137  001246                     l8068:
 11138                           
 11139                           ; BSR set to: 0
 11140  001246  0100               	movlb	0	; () banked
 11141  001248  51AE               	movf	printf@flag& (0+255),w,b
 11142  00124A  0BC0               	andlw	192
 11143                           
 11144                           ; Switch size 1, requested type "space"
 11145                           ; Number of cases is 3, Range of values is 0 to 192
 11146                           ; switch strategies available:
 11147                           ; Name         Instructions Cycles
 11148                           ; simple_byte           10     6 (average)
 11149                           ;	Chosen strategy is simple_byte
 11150  00124C  0A00               	xorlw	0	; case 0
 11151  00124E  B4D8               	btfsc	status,2,c
 11152  001250  D7BE               	goto	l8038
 11153  001252  0A80               	xorlw	128	; case 128
 11154  001254  B4D8               	btfsc	status,2,c
 11155  001256  D7D9               	goto	l8052
 11156  001258  0A40               	xorlw	64	; case 192
 11157  00125A  B4D8               	btfsc	status,2,c
 11158  00125C  D7B8               	goto	l8038
 11159  00125E                     l8070:
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11163  00125E  0100               	movlb	0	; () banked
 11164  001260  51AF               	movf	printf@width& (0+255),w,b
 11165  001262  0100               	movlb	0	; () banked
 11166  001264  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11167  001266  B4D8               	btfsc	status,2,c
 11168  001268  D00B               	goto	l8076
 11169                           
 11170                           ; BSR set to: 0
 11171  00126A  C0AE  F0A4         	movff	printf@flag,??_printf
 11172  00126E  0E03               	movlw	3
 11173  001270  0100               	movlb	0	; () banked
 11174  001272  17A4               	andwf	??_printf& (0+255),f,b
 11175  001274  B4D8               	btfsc	status,2,c
 11176  001276  D004               	goto	l8076
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;doprnt.c: 1346: width--;
 11180  001278  0100               	movlb	0	; () banked
 11181  00127A  07AF               	decf	printf@width& (0+255),f,b
 11182  00127C  A0D8               	btfss	status,0,c
 11183  00127E  07B0               	decf	(printf@width+1)& (0+255),f,b
 11184  001280                     l8076:
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;doprnt.c: 1381: if(width > c)
 11188  001280  0E80               	movlw	128
 11189  001282  0100               	movlb	0	; () banked
 11190  001284  BFB1               	btfsc	printf@c& (0+255),7,b
 11191  001286  0E7F               	movlw	127
 11192  001288  0100               	movlb	0	; () banked
 11193  00128A  6FA4               	movwf	??_printf& (0+255),b
 11194  00128C  0100               	movlb	0	; () banked
 11195  00128E  51AF               	movf	printf@width& (0+255),w,b
 11196  001290  0100               	movlb	0	; () banked
 11197  001292  5DB1               	subwf	printf@c& (0+255),w,b
 11198  001294  0100               	movlb	0	; () banked
 11199  001296  51B0               	movf	(printf@width+1)& (0+255),w,b
 11200  001298  0A80               	xorlw	128
 11201  00129A  0100               	movlb	0	; () banked
 11202  00129C  59A4               	subwfb	??_printf& (0+255),w,b
 11203  00129E  B0D8               	btfsc	status,0,c
 11204  0012A0  D00B               	goto	l8080
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;doprnt.c: 1382: width -= c;
 11208  0012A2  0100               	movlb	0	; () banked
 11209  0012A4  51B1               	movf	printf@c& (0+255),w,b
 11210  0012A6  0100               	movlb	0	; () banked
 11211  0012A8  5FAF               	subwf	printf@width& (0+255),f,b
 11212  0012AA  0E00               	movlw	0
 11213  0012AC  0100               	movlb	0	; () banked
 11214  0012AE  BFB1               	btfsc	printf@c& (0+255),7,b
 11215  0012B0  0EFF               	movlw	255
 11216  0012B2  0100               	movlb	0	; () banked
 11217  0012B4  5BB0               	subwfb	(printf@width+1)& (0+255),f,b
 11218  0012B6  D005               	goto	l8082
 11219  0012B8                     l8080:
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;doprnt.c: 1383: else
 11223                           ;doprnt.c: 1384: width = 0;
 11224  0012B8  0E00               	movlw	0
 11225  0012BA  0100               	movlb	0	; () banked
 11226  0012BC  6FB0               	movwf	(printf@width+1)& (0+255),b
 11227  0012BE  0E00               	movlw	0
 11228  0012C0  6FAF               	movwf	printf@width& (0+255),b
 11229  0012C2                     l8082:
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;doprnt.c: 1387: if(flag & 0x04) {
 11233  0012C2  0100               	movlb	0	; () banked
 11234  0012C4  A5AE               	btfss	printf@flag& (0+255),2,b
 11235  0012C6  D018               	goto	l8094
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;doprnt.c: 1392: if(flag & 0x03)
 11239  0012C8  C0AE  F0A4         	movff	printf@flag,??_printf
 11240  0012CC  0E03               	movlw	3
 11241  0012CE  0100               	movlb	0	; () banked
 11242  0012D0  17A4               	andwf	??_printf& (0+255),f,b
 11243  0012D2  B4D8               	btfsc	status,2,c
 11244  0012D4  D003               	goto	l8088
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;doprnt.c: 1393: (putch('-') );
 11248  0012D6  0E2D               	movlw	45
 11249  0012D8  EC57  F02A         	call	_putch
 11250  0012DC                     l8088:
 11251                           
 11252                           ;doprnt.c: 1415: if(width)
 11253  0012DC  0100               	movlb	0	; () banked
 11254  0012DE  51AF               	movf	printf@width& (0+255),w,b
 11255  0012E0  0100               	movlb	0	; () banked
 11256  0012E2  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11257  0012E4  B4D8               	btfsc	status,2,c
 11258  0012E6  D025               	goto	l8104
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;doprnt.c: 1417: (putch('0') );
 11262                           
 11263                           ; BSR set to: 0
 11264                           
 11265                           ;doprnt.c: 1416: do
 11266  0012E8  0E30               	movlw	48
 11267  0012EA  EC57  F02A         	call	_putch
 11268                           
 11269                           ;doprnt.c: 1418: while(--width);
 11270  0012EE  0100               	movlb	0	; () banked
 11271  0012F0  07AF               	decf	printf@width& (0+255),f,b
 11272  0012F2  A0D8               	btfss	status,0,c
 11273  0012F4  07B0               	decf	(printf@width+1)& (0+255),f,b
 11274  0012F6  D7F2               	goto	l8088
 11275  0012F8                     l8094:
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;doprnt.c: 1422: {
 11279                           ;doprnt.c: 1424: if(width
 11280                           ;doprnt.c: 1428: )
 11281  0012F8  0100               	movlb	0	; () banked
 11282  0012FA  51AF               	movf	printf@width& (0+255),w,b
 11283  0012FC  0100               	movlb	0	; () banked
 11284  0012FE  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11285  001300  B4D8               	btfsc	status,2,c
 11286  001302  D00D               	goto	l8100
 11287  001304                     l8096:
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;doprnt.c: 1430: (putch(' ') );
 11291  001304  0E20               	movlw	32
 11292  001306  EC57  F02A         	call	_putch
 11293                           
 11294                           ;doprnt.c: 1431: while(--width);
 11295  00130A  0100               	movlb	0	; () banked
 11296  00130C  07AF               	decf	printf@width& (0+255),f,b
 11297  00130E  A0D8               	btfss	status,0,c
 11298  001310  07B0               	decf	(printf@width+1)& (0+255),f,b
 11299  001312  0100               	movlb	0	; () banked
 11300  001314  51AF               	movf	printf@width& (0+255),w,b
 11301  001316  0100               	movlb	0	; () banked
 11302  001318  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11303  00131A  A4D8               	btfss	status,2,c
 11304  00131C  D7F3               	goto	l8096
 11305  00131E                     l8100:
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;doprnt.c: 1438: if(flag & 0x03)
 11309  00131E  C0AE  F0A4         	movff	printf@flag,??_printf
 11310  001322  0E03               	movlw	3
 11311  001324  0100               	movlb	0	; () banked
 11312  001326  17A4               	andwf	??_printf& (0+255),f,b
 11313  001328  B4D8               	btfsc	status,2,c
 11314  00132A  D003               	goto	l8104
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;doprnt.c: 1439: (putch('-') );
 11318  00132C  0E2D               	movlw	45
 11319  00132E  EC57  F02A         	call	_putch
 11320  001332                     l8104:
 11321                           
 11322                           ;doprnt.c: 1469: }
 11323                           ;doprnt.c: 1472: prec = c;
 11324  001332  C0B1  F0AB         	movff	printf@c,printf@prec
 11325                           
 11326                           ;doprnt.c: 1474: while(prec--) {
 11327  001336  D05D               	goto	l8118
 11328  001338                     l8106:
 11329                           
 11330                           ;doprnt.c: 1486: case 0xC0:
 11331                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11332  001338  0100               	movlb	0	; () banked
 11333  00133A  51AB               	movf	printf@prec& (0+255),w,b
 11334  00133C  0D02               	mullw	2
 11335  00133E  0E04               	movlw	low _dpowers
 11336  001340  24F3               	addwf	prodl,w,c
 11337  001342  6EF6               	movwf	tblptrl,c
 11338  001344  0EFE               	movlw	high _dpowers
 11339  001346  20F4               	addwfc	prodh,w,c
 11340  001348  6EF7               	movwf	tblptrh,c
 11341  00134A                     	if	0	;There are less than 3 active tblptr bytes
 11342  00134A                     	endif
 11343  00134A  0009               	tblrd		*+
 11344  00134C  CFF5 F092          	movff	tablat,___lwdiv@divisor
 11345  001350  000A               	tblrd		*-
 11346  001352  CFF5 F093          	movff	tablat,___lwdiv@divisor+1
 11347  001356  C0AC  F090         	movff	printf@val,___lwdiv@dividend
 11348  00135A  C0AD  F091         	movff	printf@val+1,___lwdiv@dividend+1
 11349  00135E  EC0A  F026         	call	___lwdiv	;wreg free
 11350  001362  C090  F097         	movff	?___lwdiv,___lwmod@dividend
 11351  001366  C091  F098         	movff	?___lwdiv+1,___lwmod@dividend+1
 11352  00136A  0E00               	movlw	0
 11353  00136C  0100               	movlb	0	; () banked
 11354  00136E  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
 11355  001370  0E0A               	movlw	10
 11356  001372  6F99               	movwf	___lwmod@divisor& (0+255),b
 11357  001374  ECF1  F026         	call	___lwmod	;wreg free
 11358  001378  0100               	movlb	0	; () banked
 11359  00137A  5197               	movf	?___lwmod& (0+255),w,b
 11360  00137C  0F30               	addlw	48
 11361  00137E  0100               	movlb	0	; () banked
 11362  001380  6FB1               	movwf	printf@c& (0+255),b
 11363                           
 11364                           ;doprnt.c: 1491: break;
 11365  001382  D033               	goto	l8116
 11366  001384                     l8108:
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;doprnt.c: 1499: {
 11370                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11371  001384  C0AC  F090         	movff	printf@val,___lwdiv@dividend
 11372  001388  C0AD  F091         	movff	printf@val+1,___lwdiv@dividend+1
 11373  00138C  0100               	movlb	0	; () banked
 11374  00138E  51AB               	movf	printf@prec& (0+255),w,b
 11375  001390  0D02               	mullw	2
 11376  001392  0E0E               	movlw	low _hexpowers
 11377  001394  24F3               	addwf	prodl,w,c
 11378  001396  6EF6               	movwf	tblptrl,c
 11379  001398  0EFE               	movlw	high _hexpowers
 11380  00139A  20F4               	addwfc	prodh,w,c
 11381  00139C  6EF7               	movwf	tblptrh,c
 11382  00139E                     	if	0	;There are less than 3 active tblptr bytes
 11383  00139E                     	endif
 11384  00139E  0009               	tblrd		*+
 11385  0013A0  CFF5 F092          	movff	tablat,___lwdiv@divisor
 11386  0013A4  000A               	tblrd		*-
 11387  0013A6  CFF5 F093          	movff	tablat,___lwdiv@divisor+1
 11388  0013AA  EC0A  F026         	call	___lwdiv	;wreg free
 11389  0013AE  0100               	movlb	0	; () banked
 11390  0013B0  5190               	movf	?___lwdiv& (0+255),w,b
 11391  0013B2  0B0F               	andlw	15
 11392  0013B4  0100               	movlb	0	; () banked
 11393  0013B6  6FA8               	movwf	printf@idx& (0+255),b
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 11397  0013B8  0100               	movlb	0	; () banked
 11398  0013BA  51A8               	movf	printf@idx& (0+255),w,b
 11399  0013BC  0D01               	mullw	1
 11400  0013BE  0E3B               	movlw	low STR_48
 11401  0013C0  24F3               	addwf	prodl,w,c
 11402  0013C2  6EF6               	movwf	tblptrl,c
 11403  0013C4  0EFF               	movlw	high STR_48
 11404  0013C6  20F4               	addwfc	prodh,w,c
 11405  0013C8  6EF7               	movwf	tblptrh,c
 11406  0013CA                     	if	0	;There are less than 3 active tblptr bytes
 11407  0013CA                     	endif
 11408  0013CA  0008               	tblrd		*
 11409  0013CC  CFF5 F0B1          	movff	tablat,printf@c
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;doprnt.c: 1523: }
 11413                           
 11414                           ;doprnt.c: 1508: }
 11415                           ;doprnt.c: 1510: break;
 11416  0013D0  D00C               	goto	l8116
 11417  0013D2                     l8114:
 11418  0013D2  0100               	movlb	0	; () banked
 11419  0013D4  51AE               	movf	printf@flag& (0+255),w,b
 11420  0013D6  0BC0               	andlw	192
 11421                           
 11422                           ; Switch size 1, requested type "space"
 11423                           ; Number of cases is 3, Range of values is 0 to 192
 11424                           ; switch strategies available:
 11425                           ; Name         Instructions Cycles
 11426                           ; simple_byte           10     6 (average)
 11427                           ;	Chosen strategy is simple_byte
 11428  0013D8  0A00               	xorlw	0	; case 0
 11429  0013DA  B4D8               	btfsc	status,2,c
 11430  0013DC  D7AD               	goto	l8106
 11431  0013DE  0A80               	xorlw	128	; case 128
 11432  0013E0  B4D8               	btfsc	status,2,c
 11433  0013E2  D7D0               	goto	l8108
 11434  0013E4  0A40               	xorlw	64	; case 192
 11435  0013E6  B4D8               	btfsc	status,2,c
 11436  0013E8  D7A7               	goto	l8106
 11437  0013EA                     l8116:
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;doprnt.c: 1524: (putch(c) );
 11441  0013EA  0100               	movlb	0	; () banked
 11442  0013EC  51B1               	movf	printf@c& (0+255),w,b
 11443  0013EE  EC57  F02A         	call	_putch
 11444  0013F2                     l8118:
 11445  0013F2  0100               	movlb	0	; () banked
 11446  0013F4  07AB               	decf	printf@prec& (0+255),f,b
 11447  0013F6  0100               	movlb	0	; () banked
 11448  0013F8  29AB               	incf	printf@prec& (0+255),w,b
 11449  0013FA  A4D8               	btfss	status,2,c
 11450  0013FC  D7EA               	goto	l8114
 11451  0013FE                     l8120:
 11452  0013FE  C09C  FFF6         	movff	printf@f,tblptrl
 11453  001402  C09D  FFF7         	movff	printf@f+1,tblptrh
 11454  001406  0100               	movlb	0	; () banked
 11455  001408  4B9C               	infsnz	printf@f& (0+255),f,b
 11456  00140A  2B9D               	incf	(printf@f+1)& (0+255),f,b
 11457  00140C                     	if	0	;tblptru may be non-zero
 11458  00140C                     	endif
 11459  00140C                     	if	0	;tblptru may be non-zero
 11460  00140C                     	endif
 11461  00140C  0008               	tblrd		*
 11462  00140E  CFF5 F0B1          	movff	tablat,printf@c
 11463  001412  0100               	movlb	0	; () banked
 11464  001414  51B1               	movf	printf@c& (0+255),w,b
 11465  001416  B4D8               	btfsc	status,2,c
 11466  001418  0012               	return	
 11467  00141A  D61C               	goto	l7990
 11468  00141C                     __end_of_printf:
 11469                           	opt stack 0
 11470                           tblptru	equ	0xFF8
 11471                           tblptrh	equ	0xFF7
 11472                           tblptrl	equ	0xFF6
 11473                           tablat	equ	0xFF5
 11474                           prodh	equ	0xFF4
 11475                           prodl	equ	0xFF3
 11476                           intcon	equ	0xFF2
 11477                           intcon2	equ	0xFF1
 11478                           intcon3	equ	0xFF0
 11479                           postinc0	equ	0xFEE
 11480                           wreg	equ	0xFE8
 11481                           postdec1	equ	0xFE5
 11482                           fsr1l	equ	0xFE1
 11483                           indf2	equ	0xFDF
 11484                           postinc2	equ	0xFDE
 11485                           postdec2	equ	0xFDD
 11486                           fsr2h	equ	0xFDA
 11487                           fsr2l	equ	0xFD9
 11488                           status	equ	0xFD8
 11489                           
 11490 ;; *************** function _putch *****************
 11491 ;; Defined at:
 11492 ;;		line 31 in file "lcd.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;  data            1    wreg     unsigned char 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  data            1   18[BANK0 ] unsigned char 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  1    wreg      void 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0, cstack
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;Total ram usage:        1 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    8
 11513 ;; This function calls:
 11514 ;;		_lcdNibble
 11515 ;; This function is called by:
 11516 ;;		_printf
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text41
 11521  0054AE                     __ptext41:
 11522                           	opt stack 0
 11523  0054AE                     _putch:
 11524                           	opt stack 20
 11525                           
 11526                           ;incstack = 0
 11527                           ;putch@data stored from wreg
 11528  0054AE  0100               	movlb	0	; () banked
 11529  0054B0  6F92               	movwf	putch@data& (0+255),b
 11530                           
 11531                           ;lcd.c: 32: LATDbits.LATD2 = 1;
 11532  0054B2  848C               	bsf	3980,2,c	;volatile
 11533                           
 11534                           ;lcd.c: 33: lcdNibble(data);
 11535  0054B4  0100               	movlb	0	; () banked
 11536  0054B6  5192               	movf	putch@data& (0+255),w,b
 11537  0054B8  EC22  F027         	call	_lcdNibble
 11538  0054BC  0012               	return		;funcret
 11539  0054BE                     __end_of_putch:
 11540                           	opt stack 0
 11541                           tblptru	equ	0xFF8
 11542                           tblptrh	equ	0xFF7
 11543                           tblptrl	equ	0xFF6
 11544                           tablat	equ	0xFF5
 11545                           prodh	equ	0xFF4
 11546                           prodl	equ	0xFF3
 11547                           intcon	equ	0xFF2
 11548                           intcon2	equ	0xFF1
 11549                           intcon3	equ	0xFF0
 11550                           postinc0	equ	0xFEE
 11551                           wreg	equ	0xFE8
 11552                           postdec1	equ	0xFE5
 11553                           fsr1l	equ	0xFE1
 11554                           indf2	equ	0xFDF
 11555                           postinc2	equ	0xFDE
 11556                           postdec2	equ	0xFDD
 11557                           fsr2h	equ	0xFDA
 11558                           fsr2l	equ	0xFD9
 11559                           status	equ	0xFD8
 11560                           
 11561 ;; *************** function _isdigit *****************
 11562 ;; Defined at:
 11563 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  c               1    wreg     unsigned char 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;  c               1   18[BANK0 ] unsigned char 
 11568 ;; Return value:  Size  Location     Type
 11569 ;;		None               void
 11570 ;; Registers used:
 11571 ;;		wreg, status,2, status,0
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;Total ram usage:        3 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:    7
 11584 ;; This function calls:
 11585 ;;		Nothing
 11586 ;; This function is called by:
 11587 ;;		_printf
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text42
 11592  00531A                     __ptext42:
 11593                           	opt stack 0
 11594  00531A                     _isdigit:
 11595                           	opt stack 21
 11596                           
 11597                           ;incstack = 0
 11598                           ;isdigit@c stored from wreg
 11599  00531A  0100               	movlb	0	; () banked
 11600  00531C  6F92               	movwf	isdigit@c& (0+255),b
 11601  00531E  0E00               	movlw	0
 11602  005320  0100               	movlb	0	; () banked
 11603  005322  6F91               	movwf	_isdigit$965& (0+255),b
 11604                           
 11605                           ; BSR set to: 0
 11606  005324  0E3A               	movlw	58
 11607  005326  0100               	movlb	0	; () banked
 11608  005328  6192               	cpfslt	isdigit@c& (0+255),b
 11609  00532A  D007               	goto	l5364
 11610                           
 11611                           ; BSR set to: 0
 11612  00532C  0E2F               	movlw	47
 11613  00532E  0100               	movlb	0	; () banked
 11614  005330  6592               	cpfsgt	isdigit@c& (0+255),b
 11615  005332  D003               	goto	l5364
 11616                           
 11617                           ; BSR set to: 0
 11618  005334  0E01               	movlw	1
 11619  005336  0100               	movlb	0	; () banked
 11620  005338  6F91               	movwf	_isdigit$965& (0+255),b
 11621  00533A                     l5364:
 11622                           
 11623                           ; BSR set to: 0
 11624  00533A  C091  F090         	movff	_isdigit$965,??_isdigit
 11625  00533E  0100               	movlb	0	; () banked
 11626  005340  3190               	rrcf	??_isdigit& (0+255),w,b
 11627  005342  0012               	return	
 11628  005344                     __end_of_isdigit:
 11629                           	opt stack 0
 11630                           tblptru	equ	0xFF8
 11631                           tblptrh	equ	0xFF7
 11632                           tblptrl	equ	0xFF6
 11633                           tablat	equ	0xFF5
 11634                           prodh	equ	0xFF4
 11635                           prodl	equ	0xFF3
 11636                           intcon	equ	0xFF2
 11637                           intcon2	equ	0xFF1
 11638                           intcon3	equ	0xFF0
 11639                           postinc0	equ	0xFEE
 11640                           wreg	equ	0xFE8
 11641                           postdec1	equ	0xFE5
 11642                           fsr1l	equ	0xFE1
 11643                           indf2	equ	0xFDF
 11644                           postinc2	equ	0xFDE
 11645                           postdec2	equ	0xFDD
 11646                           fsr2h	equ	0xFDA
 11647                           fsr2l	equ	0xFD9
 11648                           status	equ	0xFD8
 11649                           
 11650 ;; *************** function ___wmul *****************
 11651 ;; Defined at:
 11652 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;  multiplier      2   16[BANK0 ] unsigned int 
 11655 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 11656 ;; Auto vars:     Size  Location     Type
 11657 ;;  product         2   20[BANK0 ] unsigned int 
 11658 ;; Return value:  Size  Location     Type
 11659 ;;                  2   16[BANK0 ] unsigned int 
 11660 ;; Registers used:
 11661 ;;		wreg, status,2, status,0, prodl, prodh
 11662 ;; Tracked objects:
 11663 ;;		On entry : 0/0
 11664 ;;		On exit  : 0/0
 11665 ;;		Unchanged: 0/0
 11666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11670 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11671 ;;Total ram usage:        6 bytes
 11672 ;; Hardware stack levels used:    1
 11673 ;; Hardware stack levels required when called:    7
 11674 ;; This function calls:
 11675 ;;		Nothing
 11676 ;; This function is called by:
 11677 ;;		_operation
 11678 ;;		_printf
 11679 ;;		_eval_poly
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text43
 11684  00525C                     __ptext43:
 11685                           	opt stack 0
 11686  00525C                     ___wmul:
 11687                           	opt stack 21
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;incstack = 0
 11691  00525C  0100               	movlb	0	; () banked
 11692  00525E  5190               	movf	___wmul@multiplier& (0+255),w,b
 11693  005260  0100               	movlb	0	; () banked
 11694  005262  0392               	mulwf	___wmul@multiplicand& (0+255),b
 11695  005264  CFF3 F094          	movff	prodl,___wmul@product
 11696  005268  CFF4 F095          	movff	prodh,___wmul@product+1
 11697  00526C  0100               	movlb	0	; () banked
 11698  00526E  5190               	movf	___wmul@multiplier& (0+255),w,b
 11699  005270  0100               	movlb	0	; () banked
 11700  005272  0393               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11701  005274  50F3               	movf	prodl,w,c
 11702  005276  0100               	movlb	0	; () banked
 11703  005278  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 11704  00527A  0100               	movlb	0	; () banked
 11705  00527C  5191               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11706  00527E  0100               	movlb	0	; () banked
 11707  005280  0392               	mulwf	___wmul@multiplicand& (0+255),b
 11708  005282  50F3               	movf	prodl,w,c
 11709  005284  0100               	movlb	0	; () banked
 11710  005286  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 11711                           
 11712                           ; BSR set to: 0
 11713  005288  C094  F090         	movff	___wmul@product,?___wmul
 11714  00528C  C095  F091         	movff	___wmul@product+1,?___wmul+1
 11715  005290  0012               	return	
 11716  005292                     __end_of___wmul:
 11717                           	opt stack 0
 11718                           tblptru	equ	0xFF8
 11719                           tblptrh	equ	0xFF7
 11720                           tblptrl	equ	0xFF6
 11721                           tablat	equ	0xFF5
 11722                           prodh	equ	0xFF4
 11723                           prodl	equ	0xFF3
 11724                           intcon	equ	0xFF2
 11725                           intcon2	equ	0xFF1
 11726                           intcon3	equ	0xFF0
 11727                           postinc0	equ	0xFEE
 11728                           wreg	equ	0xFE8
 11729                           postdec1	equ	0xFE5
 11730                           fsr1l	equ	0xFE1
 11731                           indf2	equ	0xFDF
 11732                           postinc2	equ	0xFDE
 11733                           postdec2	equ	0xFDD
 11734                           fsr2h	equ	0xFDA
 11735                           fsr2l	equ	0xFD9
 11736                           status	equ	0xFD8
 11737                           
 11738 ;; *************** function ___lwmod *****************
 11739 ;; Defined at:
 11740 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
 11741 ;; Parameters:    Size  Location     Type
 11742 ;;  dividend        2   23[BANK0 ] unsigned int 
 11743 ;;  divisor         2   25[BANK0 ] unsigned int 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  counter         1   27[BANK0 ] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  2   23[BANK0 ] unsigned int 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11756 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11758 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11759 ;;Total ram usage:        5 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    7
 11762 ;; This function calls:
 11763 ;;		Nothing
 11764 ;; This function is called by:
 11765 ;;		_printf
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           	psect	text44
 11770  004DE2                     __ptext44:
 11771                           	opt stack 0
 11772  004DE2                     ___lwmod:
 11773                           	opt stack 21
 11774                           
 11775                           ; BSR set to: 0
 11776                           ;incstack = 0
 11777  004DE2  0100               	movlb	0	; () banked
 11778  004DE4  5199               	movf	___lwmod@divisor& (0+255),w,b
 11779  004DE6  0100               	movlb	0	; () banked
 11780  004DE8  119A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11781  004DEA  B4D8               	btfsc	status,2,c
 11782  004DEC  D026               	goto	l1092
 11783                           
 11784                           ; BSR set to: 0
 11785  004DEE  0E01               	movlw	1
 11786  004DF0  0100               	movlb	0	; () banked
 11787  004DF2  6F9B               	movwf	___lwmod@counter& (0+255),b
 11788  004DF4  D006               	goto	l5440
 11789  004DF6                     l5438:
 11790                           
 11791                           ; BSR set to: 0
 11792  004DF6  0100               	movlb	0	; () banked
 11793  004DF8  90D8               	bcf	status,0,c
 11794  004DFA  3799               	rlcf	___lwmod@divisor& (0+255),f,b
 11795  004DFC  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11796  004DFE  0100               	movlb	0	; () banked
 11797  004E00  2B9B               	incf	___lwmod@counter& (0+255),f,b
 11798  004E02                     l5440:
 11799                           
 11800                           ; BSR set to: 0
 11801  004E02  0100               	movlb	0	; () banked
 11802  004E04  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11803  004E06  D7F7               	goto	l5438
 11804  004E08                     l5442:
 11805                           
 11806                           ; BSR set to: 0
 11807  004E08  0100               	movlb	0	; () banked
 11808  004E0A  5199               	movf	___lwmod@divisor& (0+255),w,b
 11809  004E0C  0100               	movlb	0	; () banked
 11810  004E0E  5D97               	subwf	___lwmod@dividend& (0+255),w,b
 11811  004E10  0100               	movlb	0	; () banked
 11812  004E12  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11813  004E14  0100               	movlb	0	; () banked
 11814  004E16  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11815  004E18  A0D8               	btfss	status,0,c
 11816  004E1A  D008               	goto	l5446
 11817                           
 11818                           ; BSR set to: 0
 11819  004E1C  0100               	movlb	0	; () banked
 11820  004E1E  5199               	movf	___lwmod@divisor& (0+255),w,b
 11821  004E20  0100               	movlb	0	; () banked
 11822  004E22  5F97               	subwf	___lwmod@dividend& (0+255),f,b
 11823  004E24  0100               	movlb	0	; () banked
 11824  004E26  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11825  004E28  0100               	movlb	0	; () banked
 11826  004E2A  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11827  004E2C                     l5446:
 11828                           
 11829                           ; BSR set to: 0
 11830  004E2C  0100               	movlb	0	; () banked
 11831  004E2E  90D8               	bcf	status,0,c
 11832  004E30  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11833  004E32  3399               	rrcf	___lwmod@divisor& (0+255),f,b
 11834                           
 11835                           ; BSR set to: 0
 11836  004E34  0100               	movlb	0	; () banked
 11837  004E36  2F9B               	decfsz	___lwmod@counter& (0+255),f,b
 11838  004E38  D7E7               	goto	l5442
 11839  004E3A                     l1092:
 11840                           
 11841                           ; BSR set to: 0
 11842  004E3A  C097  F097         	movff	___lwmod@dividend,?___lwmod
 11843  004E3E  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
 11844                           
 11845                           ; BSR set to: 0
 11846  004E42  0012               	return		;funcret
 11847  004E44                     __end_of___lwmod:
 11848                           	opt stack 0
 11849                           tblptru	equ	0xFF8
 11850                           tblptrh	equ	0xFF7
 11851                           tblptrl	equ	0xFF6
 11852                           tablat	equ	0xFF5
 11853                           prodh	equ	0xFF4
 11854                           prodl	equ	0xFF3
 11855                           intcon	equ	0xFF2
 11856                           intcon2	equ	0xFF1
 11857                           intcon3	equ	0xFF0
 11858                           postinc0	equ	0xFEE
 11859                           wreg	equ	0xFE8
 11860                           postdec1	equ	0xFE5
 11861                           fsr1l	equ	0xFE1
 11862                           indf2	equ	0xFDF
 11863                           postinc2	equ	0xFDE
 11864                           postdec2	equ	0xFDD
 11865                           fsr2h	equ	0xFDA
 11866                           fsr2l	equ	0xFD9
 11867                           status	equ	0xFD8
 11868                           
 11869 ;; *************** function ___lwdiv *****************
 11870 ;; Defined at:
 11871 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  dividend        2   16[BANK0 ] unsigned int 
 11874 ;;  divisor         2   18[BANK0 ] unsigned int 
 11875 ;; Auto vars:     Size  Location     Type
 11876 ;;  quotient        2   20[BANK0 ] unsigned int 
 11877 ;;  counter         1   22[BANK0 ] unsigned char 
 11878 ;; Return value:  Size  Location     Type
 11879 ;;                  2   16[BANK0 ] unsigned int 
 11880 ;; Registers used:
 11881 ;;		wreg, status,2, status,0
 11882 ;; Tracked objects:
 11883 ;;		On entry : 0/0
 11884 ;;		On exit  : 0/0
 11885 ;;		Unchanged: 0/0
 11886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11890 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11891 ;;Total ram usage:        7 bytes
 11892 ;; Hardware stack levels used:    1
 11893 ;; Hardware stack levels required when called:    7
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_printf
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           	psect	text45
 11902  004C14                     __ptext45:
 11903                           	opt stack 0
 11904  004C14                     ___lwdiv:
 11905                           	opt stack 21
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;incstack = 0
 11909  004C14  0E00               	movlw	0
 11910  004C16  0100               	movlb	0	; () banked
 11911  004C18  6F95               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11912  004C1A  0E00               	movlw	0
 11913  004C1C  6F94               	movwf	___lwdiv@quotient& (0+255),b
 11914                           
 11915                           ; BSR set to: 0
 11916  004C1E  0100               	movlb	0	; () banked
 11917  004C20  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11918  004C22  0100               	movlb	0	; () banked
 11919  004C24  1193               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11920  004C26  B4D8               	btfsc	status,2,c
 11921  004C28  D02C               	goto	l1082
 11922                           
 11923                           ; BSR set to: 0
 11924  004C2A  0E01               	movlw	1
 11925  004C2C  0100               	movlb	0	; () banked
 11926  004C2E  6F96               	movwf	___lwdiv@counter& (0+255),b
 11927  004C30  D006               	goto	l5420
 11928  004C32                     l5418:
 11929                           
 11930                           ; BSR set to: 0
 11931  004C32  0100               	movlb	0	; () banked
 11932  004C34  90D8               	bcf	status,0,c
 11933  004C36  3792               	rlcf	___lwdiv@divisor& (0+255),f,b
 11934  004C38  3793               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11935  004C3A  0100               	movlb	0	; () banked
 11936  004C3C  2B96               	incf	___lwdiv@counter& (0+255),f,b
 11937  004C3E                     l5420:
 11938                           
 11939                           ; BSR set to: 0
 11940  004C3E  0100               	movlb	0	; () banked
 11941  004C40  AF93               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11942  004C42  D7F7               	goto	l5418
 11943  004C44                     l5422:
 11944                           
 11945                           ; BSR set to: 0
 11946  004C44  0100               	movlb	0	; () banked
 11947  004C46  90D8               	bcf	status,0,c
 11948  004C48  3794               	rlcf	___lwdiv@quotient& (0+255),f,b
 11949  004C4A  3795               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11950                           
 11951                           ; BSR set to: 0
 11952  004C4C  0100               	movlb	0	; () banked
 11953  004C4E  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11954  004C50  0100               	movlb	0	; () banked
 11955  004C52  5D90               	subwf	___lwdiv@dividend& (0+255),w,b
 11956  004C54  0100               	movlb	0	; () banked
 11957  004C56  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11958  004C58  0100               	movlb	0	; () banked
 11959  004C5A  5991               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11960  004C5C  A0D8               	btfss	status,0,c
 11961  004C5E  D00A               	goto	l5430
 11962                           
 11963                           ; BSR set to: 0
 11964  004C60  0100               	movlb	0	; () banked
 11965  004C62  5192               	movf	___lwdiv@divisor& (0+255),w,b
 11966  004C64  0100               	movlb	0	; () banked
 11967  004C66  5F90               	subwf	___lwdiv@dividend& (0+255),f,b
 11968  004C68  0100               	movlb	0	; () banked
 11969  004C6A  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11970  004C6C  0100               	movlb	0	; () banked
 11971  004C6E  5B91               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11972                           
 11973                           ; BSR set to: 0
 11974  004C70  0100               	movlb	0	; () banked
 11975  004C72  8194               	bsf	___lwdiv@quotient& (0+255),0,b
 11976  004C74                     l5430:
 11977                           
 11978                           ; BSR set to: 0
 11979  004C74  0100               	movlb	0	; () banked
 11980  004C76  90D8               	bcf	status,0,c
 11981  004C78  3393               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11982  004C7A  3392               	rrcf	___lwdiv@divisor& (0+255),f,b
 11983                           
 11984                           ; BSR set to: 0
 11985  004C7C  0100               	movlb	0	; () banked
 11986  004C7E  2F96               	decfsz	___lwdiv@counter& (0+255),f,b
 11987  004C80  D7E1               	goto	l5422
 11988  004C82                     l1082:
 11989                           
 11990                           ; BSR set to: 0
 11991  004C82  C094  F090         	movff	___lwdiv@quotient,?___lwdiv
 11992  004C86  C095  F091         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11993                           
 11994                           ; BSR set to: 0
 11995  004C8A  0012               	return		;funcret
 11996  004C8C                     __end_of___lwdiv:
 11997                           	opt stack 0
 11998                           tblptru	equ	0xFF8
 11999                           tblptrh	equ	0xFF7
 12000                           tblptrl	equ	0xFF6
 12001                           tablat	equ	0xFF5
 12002                           prodh	equ	0xFF4
 12003                           prodl	equ	0xFF3
 12004                           intcon	equ	0xFF2
 12005                           intcon2	equ	0xFF1
 12006                           intcon3	equ	0xFF0
 12007                           postinc0	equ	0xFEE
 12008                           wreg	equ	0xFE8
 12009                           postdec1	equ	0xFE5
 12010                           fsr1l	equ	0xFE1
 12011                           indf2	equ	0xFDF
 12012                           postinc2	equ	0xFDE
 12013                           postdec2	equ	0xFDD
 12014                           fsr2h	equ	0xFDA
 12015                           fsr2l	equ	0xFD9
 12016                           status	equ	0xFD8
 12017                           
 12018 ;; *************** function _lcdInst *****************
 12019 ;; Defined at:
 12020 ;;		line 26 in file "lcd.c"
 12021 ;; Parameters:    Size  Location     Type
 12022 ;;  data            1    wreg     unsigned char 
 12023 ;; Auto vars:     Size  Location     Type
 12024 ;;  data            1   18[BANK0 ] unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		wreg, status,2, status,0, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12038 ;;Total ram usage:        1 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    8
 12041 ;; This function calls:
 12042 ;;		_lcdNibble
 12043 ;; This function is called by:
 12044 ;;		_initLCD
 12045 ;;		_standby
 12046 ;;		_date_time
 12047 ;;		_bottle_count
 12048 ;;		_bottle_count1
 12049 ;;		_bottle_count2
 12050 ;;		_bottle_count3
 12051 ;;		_bottle_count4
 12052 ;;		_bottle_time
 12053 ;;		_operation
 12054 ;;		_operationend
 12055 ;;		_emergencystop
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text46
 12060  0054BE                     __ptext46:
 12061                           	opt stack 0
 12062  0054BE                     _lcdInst:
 12063                           	opt stack 21
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;incstack = 0
 12067                           ;lcdInst@data stored from wreg
 12068  0054BE  0100               	movlb	0	; () banked
 12069  0054C0  6F92               	movwf	lcdInst@data& (0+255),b
 12070                           
 12071                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 12072  0054C2  948C               	bcf	3980,2,c	;volatile
 12073                           
 12074                           ;lcd.c: 28: lcdNibble(data);
 12075  0054C4  0100               	movlb	0	; () banked
 12076  0054C6  5192               	movf	lcdInst@data& (0+255),w,b
 12077  0054C8  EC22  F027         	call	_lcdNibble
 12078  0054CC  0012               	return		;funcret
 12079  0054CE                     __end_of_lcdInst:
 12080                           	opt stack 0
 12081                           tblptru	equ	0xFF8
 12082                           tblptrh	equ	0xFF7
 12083                           tblptrl	equ	0xFF6
 12084                           tablat	equ	0xFF5
 12085                           prodh	equ	0xFF4
 12086                           prodl	equ	0xFF3
 12087                           intcon	equ	0xFF2
 12088                           intcon2	equ	0xFF1
 12089                           intcon3	equ	0xFF0
 12090                           postinc0	equ	0xFEE
 12091                           wreg	equ	0xFE8
 12092                           postdec1	equ	0xFE5
 12093                           fsr1l	equ	0xFE1
 12094                           indf2	equ	0xFDF
 12095                           postinc2	equ	0xFDE
 12096                           postdec2	equ	0xFDD
 12097                           fsr2h	equ	0xFDA
 12098                           fsr2l	equ	0xFD9
 12099                           status	equ	0xFD8
 12100                           
 12101 ;; *************** function _lcdNibble *****************
 12102 ;; Defined at:
 12103 ;;		line 36 in file "lcd.c"
 12104 ;; Parameters:    Size  Location     Type
 12105 ;;  data            1    wreg     unsigned char 
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;  data            1   17[BANK0 ] unsigned char 
 12108 ;;  temp            1   16[BANK0 ] unsigned char 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg, status,2, status,0
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/0
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;Total ram usage:        2 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    7
 12125 ;; This function calls:
 12126 ;;		Nothing
 12127 ;; This function is called by:
 12128 ;;		_lcdInst
 12129 ;;		_putch
 12130 ;; This function uses a non-reentrant model
 12131 ;;
 12132                           
 12133                           	psect	text47
 12134  004E44                     __ptext47:
 12135                           	opt stack 0
 12136  004E44                     _lcdNibble:
 12137                           	opt stack 20
 12138                           
 12139                           ;incstack = 0
 12140                           ;lcdNibble@data stored from wreg
 12141  004E44  0100               	movlb	0	; () banked
 12142  004E46  6F91               	movwf	lcdNibble@data& (0+255),b
 12143                           
 12144                           ;lcd.c: 38: char temp = data & 0xF0;
 12145  004E48  0100               	movlb	0	; () banked
 12146  004E4A  5191               	movf	lcdNibble@data& (0+255),w,b
 12147  004E4C  0BF0               	andlw	240
 12148  004E4E  0100               	movlb	0	; () banked
 12149  004E50  6F90               	movwf	lcdNibble@temp& (0+255),b
 12150                           
 12151                           ;lcd.c: 39: LATD = LATD & 0x0F;
 12152  004E52  508C               	movf	3980,w,c	;volatile
 12153  004E54  0B0F               	andlw	15
 12154  004E56  6E8C               	movwf	3980,c	;volatile
 12155                           
 12156                           ;lcd.c: 40: LATD = temp | LATD;
 12157  004E58  0100               	movlb	0	; () banked
 12158  004E5A  5190               	movf	lcdNibble@temp& (0+255),w,b
 12159  004E5C  108C               	iorwf	3980,w,c	;volatile
 12160  004E5E  6E8C               	movwf	3980,c	;volatile
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 12164  004E60  968C               	bcf	3980,3,c	;volatile
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12168  004E62  0E19               	movlw	25
 12169  004E64                     u8837:
 12170  004E64  2EE8               	decfsz	wreg,f,c
 12171  004E66  D7FE               	bra	u8837
 12172                           
 12173                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 12174  004E68  868C               	bsf	3980,3,c	;volatile
 12175                           
 12176                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12177  004E6A  0E19               	movlw	25
 12178  004E6C                     u8847:
 12179  004E6C  2EE8               	decfsz	wreg,f,c
 12180  004E6E  D7FE               	bra	u8847
 12181                           
 12182                           ;lcd.c: 47: data = data << 4;
 12183  004E70  0100               	movlb	0	; () banked
 12184  004E72  3991               	swapf	lcdNibble@data& (0+255),w,b
 12185  004E74  0BF0               	andlw	240
 12186  004E76  0100               	movlb	0	; () banked
 12187  004E78  6F91               	movwf	lcdNibble@data& (0+255),b
 12188                           
 12189                           ;lcd.c: 49: temp = data & 0xF0;
 12190  004E7A  0100               	movlb	0	; () banked
 12191  004E7C  5191               	movf	lcdNibble@data& (0+255),w,b
 12192  004E7E  0BF0               	andlw	240
 12193  004E80  0100               	movlb	0	; () banked
 12194  004E82  6F90               	movwf	lcdNibble@temp& (0+255),b
 12195                           
 12196                           ;lcd.c: 50: LATD = LATD & 0x0F;
 12197  004E84  508C               	movf	3980,w,c	;volatile
 12198  004E86  0B0F               	andlw	15
 12199  004E88  6E8C               	movwf	3980,c	;volatile
 12200                           
 12201                           ;lcd.c: 51: LATD = temp | LATD;
 12202  004E8A  0100               	movlb	0	; () banked
 12203  004E8C  5190               	movf	lcdNibble@temp& (0+255),w,b
 12204  004E8E  108C               	iorwf	3980,w,c	;volatile
 12205  004E90  6E8C               	movwf	3980,c	;volatile
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 12209  004E92  968C               	bcf	3980,3,c	;volatile
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12213  004E94  0E19               	movlw	25
 12214  004E96                     u8857:
 12215  004E96  2EE8               	decfsz	wreg,f,c
 12216  004E98  D7FE               	bra	u8857
 12217                           
 12218                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 12219  004E9A  868C               	bsf	3980,3,c	;volatile
 12220                           
 12221                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12222  004E9C  0E19               	movlw	25
 12223  004E9E                     u8867:
 12224  004E9E  2EE8               	decfsz	wreg,f,c
 12225  004EA0  D7FE               	bra	u8867
 12226  004EA2  0012               	return		;funcret
 12227  004EA4                     __end_of_lcdNibble:
 12228                           	opt stack 0
 12229                           tblptru	equ	0xFF8
 12230                           tblptrh	equ	0xFF7
 12231                           tblptrl	equ	0xFF6
 12232                           tablat	equ	0xFF5
 12233                           prodh	equ	0xFF4
 12234                           prodl	equ	0xFF3
 12235                           intcon	equ	0xFF2
 12236                           intcon2	equ	0xFF1
 12237                           intcon3	equ	0xFF0
 12238                           postinc0	equ	0xFEE
 12239                           wreg	equ	0xFE8
 12240                           postdec1	equ	0xFE5
 12241                           fsr1l	equ	0xFE1
 12242                           indf2	equ	0xFDF
 12243                           postinc2	equ	0xFDE
 12244                           postdec2	equ	0xFDD
 12245                           fsr2h	equ	0xFDA
 12246                           fsr2l	equ	0xFD9
 12247                           status	equ	0xFD8
 12248                           
 12249 ;; *************** function ___awmod *****************
 12250 ;; Defined at:
 12251 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 12252 ;; Parameters:    Size  Location     Type
 12253 ;;  dividend        2   16[BANK0 ] int 
 12254 ;;  divisor         2   18[BANK0 ] int 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  sign            1   21[BANK0 ] unsigned char 
 12257 ;;  counter         1   20[BANK0 ] unsigned char 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2   16[BANK0 ] int 
 12260 ;; Registers used:
 12261 ;;		wreg, status,2, status,0
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;Total ram usage:        6 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    7
 12274 ;; This function calls:
 12275 ;;		Nothing
 12276 ;; This function is called by:
 12277 ;;		_bottle_count
 12278 ;;		_bottle_count1
 12279 ;;		_bottle_count2
 12280 ;;		_bottle_count3
 12281 ;;		_bottle_count4
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text48
 12286  0048B4                     __ptext48:
 12287                           	opt stack 0
 12288  0048B4                     ___awmod:
 12289                           	opt stack 22
 12290                           
 12291                           ;incstack = 0
 12292  0048B4  0E00               	movlw	0
 12293  0048B6  0100               	movlb	0	; () banked
 12294  0048B8  6F95               	movwf	___awmod@sign& (0+255),b
 12295                           
 12296                           ; BSR set to: 0
 12297  0048BA  0100               	movlb	0	; () banked
 12298  0048BC  AF91               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12299  0048BE  D008               	goto	l5744
 12300                           
 12301                           ; BSR set to: 0
 12302  0048C0  0100               	movlb	0	; () banked
 12303  0048C2  6D90               	negf	___awmod@dividend& (0+255),b
 12304  0048C4  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
 12305  0048C6  B0D8               	btfsc	status,0,c
 12306  0048C8  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
 12307                           
 12308                           ; BSR set to: 0
 12309  0048CA  0E01               	movlw	1
 12310  0048CC  0100               	movlb	0	; () banked
 12311  0048CE  6F95               	movwf	___awmod@sign& (0+255),b
 12312  0048D0                     l5744:
 12313                           
 12314                           ; BSR set to: 0
 12315  0048D0  0100               	movlb	0	; () banked
 12316  0048D2  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12317  0048D4  D005               	goto	l5748
 12318                           
 12319                           ; BSR set to: 0
 12320  0048D6  0100               	movlb	0	; () banked
 12321  0048D8  6D92               	negf	___awmod@divisor& (0+255),b
 12322  0048DA  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
 12323  0048DC  B0D8               	btfsc	status,0,c
 12324  0048DE  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
 12325  0048E0                     l5748:
 12326                           
 12327                           ; BSR set to: 0
 12328  0048E0  0100               	movlb	0	; () banked
 12329  0048E2  5192               	movf	___awmod@divisor& (0+255),w,b
 12330  0048E4  0100               	movlb	0	; () banked
 12331  0048E6  1193               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12332  0048E8  B4D8               	btfsc	status,2,c
 12333  0048EA  D026               	goto	l5764
 12334                           
 12335                           ; BSR set to: 0
 12336  0048EC  0E01               	movlw	1
 12337  0048EE  0100               	movlb	0	; () banked
 12338  0048F0  6F94               	movwf	___awmod@counter& (0+255),b
 12339  0048F2  D006               	goto	l5754
 12340  0048F4                     l5752:
 12341                           
 12342                           ; BSR set to: 0
 12343  0048F4  0100               	movlb	0	; () banked
 12344  0048F6  90D8               	bcf	status,0,c
 12345  0048F8  3792               	rlcf	___awmod@divisor& (0+255),f,b
 12346  0048FA  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12347  0048FC  0100               	movlb	0	; () banked
 12348  0048FE  2B94               	incf	___awmod@counter& (0+255),f,b
 12349  004900                     l5754:
 12350                           
 12351                           ; BSR set to: 0
 12352  004900  0100               	movlb	0	; () banked
 12353  004902  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12354  004904  D7F7               	goto	l5752
 12355  004906                     l5756:
 12356                           
 12357                           ; BSR set to: 0
 12358  004906  0100               	movlb	0	; () banked
 12359  004908  5192               	movf	___awmod@divisor& (0+255),w,b
 12360  00490A  0100               	movlb	0	; () banked
 12361  00490C  5D90               	subwf	___awmod@dividend& (0+255),w,b
 12362  00490E  0100               	movlb	0	; () banked
 12363  004910  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
 12364  004912  0100               	movlb	0	; () banked
 12365  004914  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12366  004916  A0D8               	btfss	status,0,c
 12367  004918  D008               	goto	l5760
 12368                           
 12369                           ; BSR set to: 0
 12370  00491A  0100               	movlb	0	; () banked
 12371  00491C  5192               	movf	___awmod@divisor& (0+255),w,b
 12372  00491E  0100               	movlb	0	; () banked
 12373  004920  5F90               	subwf	___awmod@dividend& (0+255),f,b
 12374  004922  0100               	movlb	0	; () banked
 12375  004924  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
 12376  004926  0100               	movlb	0	; () banked
 12377  004928  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12378  00492A                     l5760:
 12379                           
 12380                           ; BSR set to: 0
 12381  00492A  0100               	movlb	0	; () banked
 12382  00492C  90D8               	bcf	status,0,c
 12383  00492E  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12384  004930  3392               	rrcf	___awmod@divisor& (0+255),f,b
 12385                           
 12386                           ; BSR set to: 0
 12387  004932  0100               	movlb	0	; () banked
 12388  004934  2F94               	decfsz	___awmod@counter& (0+255),f,b
 12389  004936  D7E7               	goto	l5756
 12390  004938                     l5764:
 12391                           
 12392                           ; BSR set to: 0
 12393  004938  0100               	movlb	0	; () banked
 12394  00493A  5195               	movf	___awmod@sign& (0+255),w,b
 12395  00493C  0100               	movlb	0	; () banked
 12396  00493E  B4D8               	btfsc	status,2,c
 12397  004940  D005               	goto	l5768
 12398                           
 12399                           ; BSR set to: 0
 12400  004942  0100               	movlb	0	; () banked
 12401  004944  6D90               	negf	___awmod@dividend& (0+255),b
 12402  004946  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
 12403  004948  B0D8               	btfsc	status,0,c
 12404  00494A  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
 12405  00494C                     l5768:
 12406                           
 12407                           ; BSR set to: 0
 12408  00494C  C090  F090         	movff	___awmod@dividend,?___awmod
 12409  004950  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
 12410  004954  0012               	return	
 12411  004956                     __end_of___awmod:
 12412                           	opt stack 0
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           intcon2	equ	0xFF1
 12421                           intcon3	equ	0xFF0
 12422                           postinc0	equ	0xFEE
 12423                           wreg	equ	0xFE8
 12424                           postdec1	equ	0xFE5
 12425                           fsr1l	equ	0xFE1
 12426                           indf2	equ	0xFDF
 12427                           postinc2	equ	0xFDE
 12428                           postdec2	equ	0xFDD
 12429                           fsr2h	equ	0xFDA
 12430                           fsr2l	equ	0xFD9
 12431                           status	equ	0xFD8
 12432                           
 12433 ;; *************** function _I2C_Master_Init *****************
 12434 ;; Defined at:
 12435 ;;		line 14 in file "I2C.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  c               4   29[BANK0 ] const unsigned long 
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;		None
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1    wreg      void 
 12442 ;; Registers used:
 12443 ;;		wreg, status,2, status,0, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12449 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12452 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12453 ;;Total ram usage:        8 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:    8
 12456 ;; This function calls:
 12457 ;;		___lldiv
 12458 ;; This function is called by:
 12459 ;;		_main
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text49
 12464  004EA4                     __ptext49:
 12465                           	opt stack 0
 12466  004EA4                     _I2C_Master_Init:
 12467                           	opt stack 22
 12468                           
 12469                           ;I2C.c: 17: SSPSTAT = 0b00000000;
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;incstack = 0
 12473  004EA4  0E00               	movlw	0
 12474  004EA6  6EC7               	movwf	4039,c	;volatile
 12475                           
 12476                           ;I2C.c: 18: SSPCON1 = 0b00101000;
 12477  004EA8  0E28               	movlw	40
 12478  004EAA  6EC6               	movwf	4038,c	;volatile
 12479                           
 12480                           ;I2C.c: 19: SSPCON2 = 0b00000000;
 12481  004EAC  0E00               	movlw	0
 12482  004EAE  6EC5               	movwf	4037,c	;volatile
 12483                           
 12484                           ;I2C.c: 20: SSPADD = (10000000/(4*c))-1;
 12485  004EB0  0E80               	movlw	128
 12486  004EB2  0100               	movlb	0	; () banked
 12487  004EB4  6F90               	movwf	___lldiv@dividend& (0+255),b
 12488  004EB6  0E96               	movlw	150
 12489  004EB8  6F91               	movwf	(___lldiv@dividend+1)& (0+255),b
 12490  004EBA  0E98               	movlw	152
 12491  004EBC  6F92               	movwf	(___lldiv@dividend+2)& (0+255),b
 12492  004EBE  0E00               	movlw	0
 12493  004EC0  6F93               	movwf	(___lldiv@dividend+3)& (0+255),b
 12494  004EC2  C09D  F0A1         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12495  004EC6  C09E  F0A2         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12496  004ECA  C09F  F0A3         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12497  004ECE  C0A0  F0A4         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12498  004ED2  0E02               	movlw	2
 12499  004ED4                     u6015:
 12500  004ED4  90D8               	bcf	status,0,c
 12501  004ED6  0100               	movlb	0	; () banked
 12502  004ED8  37A1               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12503  004EDA  37A2               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12504  004EDC  37A3               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12505  004EDE  37A4               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12506  004EE0  2EE8               	decfsz	wreg,f,c
 12507  004EE2  D7F8               	goto	u6015
 12508  004EE4  C0A1  F094         	movff	??_I2C_Master_Init,___lldiv@divisor
 12509  004EE8  C0A2  F095         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12510  004EEC  C0A3  F096         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12511  004EF0  C0A4  F097         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12512  004EF4  EC4E  F023         	call	___lldiv	;wreg free
 12513  004EF8  0100               	movlb	0	; () banked
 12514  004EFA  0590               	decf	?___lldiv& (0+255),w,b
 12515  004EFC  6EC8               	movwf	4040,c	;volatile
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;I2C.c: 21: TRISC3 = 1;
 12519  004EFE  8694               	bsf	3988,3,c	;volatile
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;I2C.c: 22: TRISC4 = 1;
 12523  004F00  8894               	bsf	3988,4,c	;volatile
 12524                           
 12525                           ; BSR set to: 0
 12526  004F02  0012               	return		;funcret
 12527  004F04                     __end_of_I2C_Master_Init:
 12528                           	opt stack 0
 12529                           tblptru	equ	0xFF8
 12530                           tblptrh	equ	0xFF7
 12531                           tblptrl	equ	0xFF6
 12532                           tablat	equ	0xFF5
 12533                           prodh	equ	0xFF4
 12534                           prodl	equ	0xFF3
 12535                           intcon	equ	0xFF2
 12536                           intcon2	equ	0xFF1
 12537                           intcon3	equ	0xFF0
 12538                           postinc0	equ	0xFEE
 12539                           wreg	equ	0xFE8
 12540                           postdec1	equ	0xFE5
 12541                           fsr1l	equ	0xFE1
 12542                           indf2	equ	0xFDF
 12543                           postinc2	equ	0xFDE
 12544                           postdec2	equ	0xFDD
 12545                           fsr2h	equ	0xFDA
 12546                           fsr2l	equ	0xFD9
 12547                           status	equ	0xFD8
 12548                           
 12549 ;; *************** function ___lldiv *****************
 12550 ;; Defined at:
 12551 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  dividend        4   16[BANK0 ] unsigned long 
 12554 ;;  divisor         4   20[BANK0 ] unsigned long 
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;  quotient        4   24[BANK0 ] unsigned long 
 12557 ;;  counter         1   28[BANK0 ] unsigned char 
 12558 ;; Return value:  Size  Location     Type
 12559 ;;                  4   16[BANK0 ] unsigned long 
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : 0/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12567 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;Total ram usage:       13 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    7
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_I2C_Master_Init
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text50
 12582  00469C                     __ptext50:
 12583                           	opt stack 0
 12584  00469C                     ___lldiv:
 12585                           	opt stack 22
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;incstack = 0
 12589  00469C  0E00               	movlw	0
 12590  00469E  0100               	movlb	0	; () banked
 12591  0046A0  6F98               	movwf	___lldiv@quotient& (0+255),b
 12592  0046A2  0E00               	movlw	0
 12593  0046A4  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
 12594  0046A6  0E00               	movlw	0
 12595  0046A8  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12596  0046AA  0E00               	movlw	0
 12597  0046AC  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12598                           
 12599                           ; BSR set to: 0
 12600  0046AE  0100               	movlb	0	; () banked
 12601  0046B0  5194               	movf	___lldiv@divisor& (0+255),w,b
 12602  0046B2  0100               	movlb	0	; () banked
 12603  0046B4  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12604  0046B6  0100               	movlb	0	; () banked
 12605  0046B8  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12606  0046BA  0100               	movlb	0	; () banked
 12607  0046BC  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12608  0046BE  B4D8               	btfsc	status,2,c
 12609  0046C0  D042               	goto	l1029
 12610                           
 12611                           ; BSR set to: 0
 12612  0046C2  0E01               	movlw	1
 12613  0046C4  0100               	movlb	0	; () banked
 12614  0046C6  6F9C               	movwf	___lldiv@counter& (0+255),b
 12615  0046C8  D008               	goto	l5780
 12616  0046CA                     l5778:
 12617                           
 12618                           ; BSR set to: 0
 12619  0046CA  0100               	movlb	0	; () banked
 12620  0046CC  90D8               	bcf	status,0,c
 12621  0046CE  3794               	rlcf	___lldiv@divisor& (0+255),f,b
 12622  0046D0  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12623  0046D2  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12624  0046D4  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12625  0046D6  0100               	movlb	0	; () banked
 12626  0046D8  2B9C               	incf	___lldiv@counter& (0+255),f,b
 12627  0046DA                     l5780:
 12628                           
 12629                           ; BSR set to: 0
 12630  0046DA  0100               	movlb	0	; () banked
 12631  0046DC  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12632  0046DE  D7F5               	goto	l5778
 12633  0046E0                     l5782:
 12634                           
 12635                           ; BSR set to: 0
 12636  0046E0  0100               	movlb	0	; () banked
 12637  0046E2  90D8               	bcf	status,0,c
 12638  0046E4  3798               	rlcf	___lldiv@quotient& (0+255),f,b
 12639  0046E6  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12640  0046E8  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12641  0046EA  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12642                           
 12643                           ; BSR set to: 0
 12644  0046EC  0100               	movlb	0	; () banked
 12645  0046EE  5194               	movf	___lldiv@divisor& (0+255),w,b
 12646  0046F0  0100               	movlb	0	; () banked
 12647  0046F2  5D90               	subwf	___lldiv@dividend& (0+255),w,b
 12648  0046F4  0100               	movlb	0	; () banked
 12649  0046F6  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12650  0046F8  0100               	movlb	0	; () banked
 12651  0046FA  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12652  0046FC  0100               	movlb	0	; () banked
 12653  0046FE  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12654  004700  0100               	movlb	0	; () banked
 12655  004702  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12656  004704  0100               	movlb	0	; () banked
 12657  004706  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12658  004708  0100               	movlb	0	; () banked
 12659  00470A  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12660  00470C  A0D8               	btfss	status,0,c
 12661  00470E  D012               	goto	l5790
 12662                           
 12663                           ; BSR set to: 0
 12664  004710  0100               	movlb	0	; () banked
 12665  004712  5194               	movf	___lldiv@divisor& (0+255),w,b
 12666  004714  0100               	movlb	0	; () banked
 12667  004716  5F90               	subwf	___lldiv@dividend& (0+255),f,b
 12668  004718  0100               	movlb	0	; () banked
 12669  00471A  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12670  00471C  0100               	movlb	0	; () banked
 12671  00471E  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12672  004720  0100               	movlb	0	; () banked
 12673  004722  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12674  004724  0100               	movlb	0	; () banked
 12675  004726  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12676  004728  0100               	movlb	0	; () banked
 12677  00472A  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12678  00472C  0100               	movlb	0	; () banked
 12679  00472E  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12680                           
 12681                           ; BSR set to: 0
 12682  004730  0100               	movlb	0	; () banked
 12683  004732  8198               	bsf	___lldiv@quotient& (0+255),0,b
 12684  004734                     l5790:
 12685                           
 12686                           ; BSR set to: 0
 12687  004734  0100               	movlb	0	; () banked
 12688  004736  90D8               	bcf	status,0,c
 12689  004738  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12690  00473A  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12691  00473C  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12692  00473E  3394               	rrcf	___lldiv@divisor& (0+255),f,b
 12693                           
 12694                           ; BSR set to: 0
 12695  004740  0100               	movlb	0	; () banked
 12696  004742  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
 12697  004744  D7CD               	goto	l5782
 12698  004746                     l1029:
 12699                           
 12700                           ; BSR set to: 0
 12701  004746  C098  F090         	movff	___lldiv@quotient,?___lldiv
 12702  00474A  C099  F091         	movff	___lldiv@quotient+1,?___lldiv+1
 12703  00474E  C09A  F092         	movff	___lldiv@quotient+2,?___lldiv+2
 12704  004752  C09B  F093         	movff	___lldiv@quotient+3,?___lldiv+3
 12705                           
 12706                           ; BSR set to: 0
 12707  004756  0012               	return		;funcret
 12708  004758                     __end_of___lldiv:
 12709                           	opt stack 0
 12710                           tblptru	equ	0xFF8
 12711                           tblptrh	equ	0xFF7
 12712                           tblptrl	equ	0xFF6
 12713                           tablat	equ	0xFF5
 12714                           prodh	equ	0xFF4
 12715                           prodl	equ	0xFF3
 12716                           intcon	equ	0xFF2
 12717                           intcon2	equ	0xFF1
 12718                           intcon3	equ	0xFF0
 12719                           postinc0	equ	0xFEE
 12720                           wreg	equ	0xFE8
 12721                           postdec1	equ	0xFE5
 12722                           fsr1l	equ	0xFE1
 12723                           indf2	equ	0xFDF
 12724                           postinc2	equ	0xFDE
 12725                           postdec2	equ	0xFDD
 12726                           fsr2h	equ	0xFDA
 12727                           fsr2l	equ	0xFD9
 12728                           status	equ	0xFD8
 12729                           
 12730 ;; *************** function _I2C_ColorSens_Init *****************
 12731 ;; Defined at:
 12732 ;;		line 54 in file "I2C.c"
 12733 ;; Parameters:    Size  Location     Type
 12734 ;;		None
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;		None
 12737 ;; Return value:  Size  Location     Type
 12738 ;;                  1    wreg      void 
 12739 ;; Registers used:
 12740 ;;		wreg, status,2, status,0, cstack
 12741 ;; Tracked objects:
 12742 ;;		On entry : 0/0
 12743 ;;		On exit  : 0/0
 12744 ;;		Unchanged: 0/0
 12745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12750 ;;Total ram usage:        1 bytes
 12751 ;; Hardware stack levels used:    1
 12752 ;; Hardware stack levels required when called:    9
 12753 ;; This function calls:
 12754 ;;		_I2C_Master_Start
 12755 ;;		_I2C_Master_Stop
 12756 ;;		_I2C_Master_Write
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text51
 12763  003A4C                     __ptext51:
 12764                           	opt stack 0
 12765  003A4C                     _I2C_ColorSens_Init:
 12766                           	opt stack 21
 12767                           
 12768                           ;I2C.c: 55: I2C_Master_Start();
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;incstack = 0
 12772  003A4C  EC86  F02A         	call	_I2C_Master_Start	;wreg free
 12773                           
 12774                           ;I2C.c: 56: I2C_Master_Write(0b01010010);
 12775  003A50  0E00               	movlw	0
 12776  003A52  0100               	movlb	0	; () banked
 12777  003A54  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12778  003A56  0E52               	movlw	82
 12779  003A58  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12780  003A5A  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12781                           
 12782                           ;I2C.c: 57: I2C_Master_Write(0b10000000);
 12783  003A5E  0E00               	movlw	0
 12784  003A60  0100               	movlb	0	; () banked
 12785  003A62  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12786  003A64  0E80               	movlw	128
 12787  003A66  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12788  003A68  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12789                           
 12790                           ;I2C.c: 58: I2C_Master_Write(0b00000001);
 12791  003A6C  0E00               	movlw	0
 12792  003A6E  0100               	movlb	0	; () banked
 12793  003A70  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12794  003A72  0E01               	movlw	1
 12795  003A74  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12796  003A76  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12797                           
 12798                           ;I2C.c: 59: I2C_Master_Stop();
 12799  003A7A  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
 12800                           
 12801                           ;I2C.c: 61: _delay((unsigned long)((3)*(10000000/4000.0)));
 12802  003A7E  0E0A               	movlw	10
 12803  003A80  0100               	movlb	0	; () banked
 12804  003A82  6F93               	movwf	??_I2C_ColorSens_Init& (0+255),b
 12805  003A84  0EBC               	movlw	188
 12806  003A86                     u8877:
 12807  003A86  2EE8               	decfsz	wreg,f,c
 12808  003A88  D7FE               	bra	u8877
 12809  003A8A  2F93               	decfsz	??_I2C_ColorSens_Init& (0+255),f,b
 12810  003A8C  D7FC               	bra	u8877
 12811  003A8E  F000               	nop	
 12812                           
 12813                           ;I2C.c: 63: I2C_Master_Start();
 12814  003A90  EC86  F02A         	call	_I2C_Master_Start	;wreg free
 12815                           
 12816                           ;I2C.c: 64: I2C_Master_Write(0b01010010);
 12817  003A94  0E00               	movlw	0
 12818  003A96  0100               	movlb	0	; () banked
 12819  003A98  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12820  003A9A  0E52               	movlw	82
 12821  003A9C  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12822  003A9E  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12823                           
 12824                           ;I2C.c: 65: I2C_Master_Write(0b10000000);
 12825  003AA2  0E00               	movlw	0
 12826  003AA4  0100               	movlb	0	; () banked
 12827  003AA6  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12828  003AA8  0E80               	movlw	128
 12829  003AAA  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12830  003AAC  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12831                           
 12832                           ;I2C.c: 66: I2C_Master_Write(0b00000011);
 12833  003AB0  0E00               	movlw	0
 12834  003AB2  0100               	movlb	0	; () banked
 12835  003AB4  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12836  003AB6  0E03               	movlw	3
 12837  003AB8  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12838  003ABA  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12839                           
 12840                           ;I2C.c: 67: I2C_Master_Stop();
 12841  003ABE  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
 12842                           
 12843                           ;I2C.c: 69: I2C_Master_Start();
 12844  003AC2  EC86  F02A         	call	_I2C_Master_Start	;wreg free
 12845                           
 12846                           ;I2C.c: 70: I2C_Master_Write(0b01010010);
 12847  003AC6  0E00               	movlw	0
 12848  003AC8  0100               	movlb	0	; () banked
 12849  003ACA  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12850  003ACC  0E52               	movlw	82
 12851  003ACE  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12852  003AD0  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12853                           
 12854                           ;I2C.c: 71: I2C_Master_Write(0b10001111);
 12855  003AD4  0E00               	movlw	0
 12856  003AD6  0100               	movlb	0	; () banked
 12857  003AD8  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12858  003ADA  0E8F               	movlw	143
 12859  003ADC  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12860  003ADE  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12861                           
 12862                           ;I2C.c: 72: I2C_Master_Write(0b00000010);
 12863  003AE2  0E00               	movlw	0
 12864  003AE4  0100               	movlb	0	; () banked
 12865  003AE6  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12866  003AE8  0E02               	movlw	2
 12867  003AEA  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12868  003AEC  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12869                           
 12870                           ;I2C.c: 73: I2C_Master_Stop();
 12871  003AF0  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
 12872                           
 12873                           ;I2C.c: 90: I2C_Master_Start();
 12874  003AF4  EC86  F02A         	call	_I2C_Master_Start	;wreg free
 12875                           
 12876                           ;I2C.c: 91: I2C_Master_Write(0b01010010);
 12877  003AF8  0E00               	movlw	0
 12878  003AFA  0100               	movlb	0	; () banked
 12879  003AFC  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12880  003AFE  0E52               	movlw	82
 12881  003B00  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12882  003B02  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12883                           
 12884                           ;I2C.c: 92: I2C_Master_Write(0b10000001);
 12885  003B06  0E00               	movlw	0
 12886  003B08  0100               	movlb	0	; () banked
 12887  003B0A  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12888  003B0C  0E81               	movlw	129
 12889  003B0E  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12890  003B10  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12891                           
 12892                           ;I2C.c: 93: I2C_Master_Write(0b11111111);
 12893  003B14  0E00               	movlw	0
 12894  003B16  0100               	movlb	0	; () banked
 12895  003B18  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12896  003B1A  6991               	setf	I2C_Master_Write@d& (0+255),b
 12897  003B1C  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12898                           
 12899                           ;I2C.c: 94: I2C_Master_Stop();
 12900  003B20  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
 12901                           
 12902                           ;I2C.c: 96: I2C_Master_Start();
 12903  003B24  EC86  F02A         	call	_I2C_Master_Start	;wreg free
 12904                           
 12905                           ;I2C.c: 97: I2C_Master_Write(0b01010010);
 12906  003B28  0E00               	movlw	0
 12907  003B2A  0100               	movlb	0	; () banked
 12908  003B2C  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12909  003B2E  0E52               	movlw	82
 12910  003B30  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12911  003B32  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12912                           
 12913                           ;I2C.c: 98: I2C_Master_Write(0b10110100);
 12914  003B36  0E00               	movlw	0
 12915  003B38  0100               	movlb	0	; () banked
 12916  003B3A  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12917  003B3C  0EB4               	movlw	180
 12918  003B3E  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12919  003B40  EC78  F02A         	call	_I2C_Master_Write	;wreg free
 12920                           
 12921                           ;I2C.c: 99: I2C_Master_Stop();
 12922  003B44  EC82  F02A         	call	_I2C_Master_Stop	;wreg free
 12923  003B48  0012               	return		;funcret
 12924  003B4A                     __end_of_I2C_ColorSens_Init:
 12925                           	opt stack 0
 12926                           tblptru	equ	0xFF8
 12927                           tblptrh	equ	0xFF7
 12928                           tblptrl	equ	0xFF6
 12929                           tablat	equ	0xFF5
 12930                           prodh	equ	0xFF4
 12931                           prodl	equ	0xFF3
 12932                           intcon	equ	0xFF2
 12933                           intcon2	equ	0xFF1
 12934                           intcon3	equ	0xFF0
 12935                           postinc0	equ	0xFEE
 12936                           wreg	equ	0xFE8
 12937                           postdec1	equ	0xFE5
 12938                           fsr1l	equ	0xFE1
 12939                           indf2	equ	0xFDF
 12940                           postinc2	equ	0xFDE
 12941                           postdec2	equ	0xFDD
 12942                           fsr2h	equ	0xFDA
 12943                           fsr2l	equ	0xFD9
 12944                           status	equ	0xFD8
 12945                           
 12946 ;; *************** function _I2C_Master_Write *****************
 12947 ;; Defined at:
 12948 ;;		line 48 in file "I2C.c"
 12949 ;; Parameters:    Size  Location     Type
 12950 ;;  d               2   17[BANK0 ] unsigned int 
 12951 ;; Auto vars:     Size  Location     Type
 12952 ;;		None
 12953 ;; Return value:  Size  Location     Type
 12954 ;;                  1    wreg      void 
 12955 ;; Registers used:
 12956 ;;		wreg, status,2, status,0, cstack
 12957 ;; Tracked objects:
 12958 ;;		On entry : 0/0
 12959 ;;		On exit  : 0/0
 12960 ;;		Unchanged: 0/0
 12961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;Total ram usage:        2 bytes
 12967 ;; Hardware stack levels used:    1
 12968 ;; Hardware stack levels required when called:    8
 12969 ;; This function calls:
 12970 ;;		_I2C_Master_Wait
 12971 ;; This function is called by:
 12972 ;;		_I2C_ColorSens_Init
 12973 ;;		_date_time
 12974 ;;		_read_time
 12975 ;;		_read_colorsensor
 12976 ;;		_I2C_ColorSens_ClearInt
 12977 ;;		_set_time
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text52
 12982  0054F0                     __ptext52:
 12983                           	opt stack 0
 12984  0054F0                     _I2C_Master_Write:
 12985                           	opt stack 20
 12986                           
 12987                           ;I2C.c: 50: I2C_Master_Wait();
 12988                           
 12989                           ;incstack = 0
 12990  0054F0  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
 12991                           
 12992                           ;I2C.c: 51: SSPBUF = d;
 12993  0054F4  C091  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 12994  0054F8  0012               	return		;funcret
 12995  0054FA                     __end_of_I2C_Master_Write:
 12996                           	opt stack 0
 12997                           tblptru	equ	0xFF8
 12998                           tblptrh	equ	0xFF7
 12999                           tblptrl	equ	0xFF6
 13000                           tablat	equ	0xFF5
 13001                           prodh	equ	0xFF4
 13002                           prodl	equ	0xFF3
 13003                           intcon	equ	0xFF2
 13004                           intcon2	equ	0xFF1
 13005                           intcon3	equ	0xFF0
 13006                           postinc0	equ	0xFEE
 13007                           wreg	equ	0xFE8
 13008                           postdec1	equ	0xFE5
 13009                           fsr1l	equ	0xFE1
 13010                           indf2	equ	0xFDF
 13011                           postinc2	equ	0xFDE
 13012                           postdec2	equ	0xFDD
 13013                           fsr2h	equ	0xFDA
 13014                           fsr2l	equ	0xFD9
 13015                           status	equ	0xFD8
 13016                           
 13017 ;; *************** function _I2C_Master_Stop *****************
 13018 ;; Defined at:
 13019 ;;		line 42 in file "I2C.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;		None
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;		None
 13024 ;; Return value:  Size  Location     Type
 13025 ;;                  1    wreg      void 
 13026 ;; Registers used:
 13027 ;;		wreg, status,2, status,0, cstack
 13028 ;; Tracked objects:
 13029 ;;		On entry : 0/0
 13030 ;;		On exit  : 0/0
 13031 ;;		Unchanged: 0/0
 13032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13037 ;;Total ram usage:        0 bytes
 13038 ;; Hardware stack levels used:    1
 13039 ;; Hardware stack levels required when called:    8
 13040 ;; This function calls:
 13041 ;;		_I2C_Master_Wait
 13042 ;; This function is called by:
 13043 ;;		_I2C_ColorSens_Init
 13044 ;;		_date_time
 13045 ;;		_read_time
 13046 ;;		_read_colorsensor
 13047 ;;		_I2C_ColorSens_ClearInt
 13048 ;;		_set_time
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           	psect	text53
 13053  005504                     __ptext53:
 13054                           	opt stack 0
 13055  005504                     _I2C_Master_Stop:
 13056                           	opt stack 20
 13057                           
 13058                           ;I2C.c: 44: I2C_Master_Wait();
 13059                           
 13060                           ;incstack = 0
 13061  005504  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
 13062                           
 13063                           ;I2C.c: 45: PEN = 1;
 13064  005508  84C5               	bsf	4037,2,c	;volatile
 13065  00550A  0012               	return		;funcret
 13066  00550C                     __end_of_I2C_Master_Stop:
 13067                           	opt stack 0
 13068                           tblptru	equ	0xFF8
 13069                           tblptrh	equ	0xFF7
 13070                           tblptrl	equ	0xFF6
 13071                           tablat	equ	0xFF5
 13072                           prodh	equ	0xFF4
 13073                           prodl	equ	0xFF3
 13074                           intcon	equ	0xFF2
 13075                           intcon2	equ	0xFF1
 13076                           intcon3	equ	0xFF0
 13077                           postinc0	equ	0xFEE
 13078                           wreg	equ	0xFE8
 13079                           postdec1	equ	0xFE5
 13080                           fsr1l	equ	0xFE1
 13081                           indf2	equ	0xFDF
 13082                           postinc2	equ	0xFDE
 13083                           postdec2	equ	0xFDD
 13084                           fsr2h	equ	0xFDA
 13085                           fsr2l	equ	0xFD9
 13086                           status	equ	0xFD8
 13087                           
 13088 ;; *************** function _I2C_Master_Start *****************
 13089 ;; Defined at:
 13090 ;;		line 30 in file "I2C.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;		None
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;		None
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg, status,2, status,0, cstack
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;Total ram usage:        0 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    8
 13111 ;; This function calls:
 13112 ;;		_I2C_Master_Wait
 13113 ;; This function is called by:
 13114 ;;		_I2C_ColorSens_Init
 13115 ;;		_date_time
 13116 ;;		_read_time
 13117 ;;		_read_colorsensor
 13118 ;;		_I2C_ColorSens_ClearInt
 13119 ;;		_set_time
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text54
 13124  00550C                     __ptext54:
 13125                           	opt stack 0
 13126  00550C                     _I2C_Master_Start:
 13127                           	opt stack 20
 13128                           
 13129                           ;I2C.c: 32: I2C_Master_Wait();
 13130                           
 13131                           ;incstack = 0
 13132  00550C  EC44  F02A         	call	_I2C_Master_Wait	;wreg free
 13133                           
 13134                           ;I2C.c: 33: SEN = 1;
 13135  005510  80C5               	bsf	4037,0,c	;volatile
 13136  005512  0012               	return		;funcret
 13137  005514                     __end_of_I2C_Master_Start:
 13138                           	opt stack 0
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           intcon2	equ	0xFF1
 13147                           intcon3	equ	0xFF0
 13148                           postinc0	equ	0xFEE
 13149                           wreg	equ	0xFE8
 13150                           postdec1	equ	0xFE5
 13151                           fsr1l	equ	0xFE1
 13152                           indf2	equ	0xFDF
 13153                           postinc2	equ	0xFDE
 13154                           postdec2	equ	0xFDD
 13155                           fsr2h	equ	0xFDA
 13156                           fsr2l	equ	0xFD9
 13157                           status	equ	0xFD8
 13158                           
 13159 ;; *************** function _I2C_Master_Wait *****************
 13160 ;; Defined at:
 13161 ;;		line 25 in file "I2C.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;		None
 13164 ;; Auto vars:     Size  Location     Type
 13165 ;;		None
 13166 ;; Return value:  Size  Location     Type
 13167 ;;                  1    wreg      void 
 13168 ;; Registers used:
 13169 ;;		wreg, status,2, status,0
 13170 ;; Tracked objects:
 13171 ;;		On entry : 0/0
 13172 ;;		On exit  : 0/0
 13173 ;;		Unchanged: 0/0
 13174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13178 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;Total ram usage:        1 bytes
 13180 ;; Hardware stack levels used:    1
 13181 ;; Hardware stack levels required when called:    7
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_I2C_Master_Start
 13186 ;;		_I2C_Master_Stop
 13187 ;;		_I2C_Master_Write
 13188 ;;		_I2C_Master_Read
 13189 ;;		_I2C_Master_RepeatedStart
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text55
 13194  005488                     __ptext55:
 13195                           	opt stack 0
 13196  005488                     _I2C_Master_Wait:
 13197                           	opt stack 20
 13198  005488                     l34:
 13199  005488  B4C7               	btfsc	4039,2,c	;volatile
 13200  00548A  D7FE               	goto	l34
 13201  00548C  CFC5 F090          	movff	4037,??_I2C_Master_Wait	;volatile
 13202  005490  0E1F               	movlw	31
 13203  005492  0100               	movlb	0	; () banked
 13204  005494  1790               	andwf	??_I2C_Master_Wait& (0+255),f,b
 13205  005496  B4D8               	btfsc	status,2,c
 13206  005498  0012               	return	
 13207  00549A  D7F6               	goto	l34
 13208  00549C                     __end_of_I2C_Master_Wait:
 13209                           	opt stack 0
 13210                           tblptru	equ	0xFF8
 13211                           tblptrh	equ	0xFF7
 13212                           tblptrl	equ	0xFF6
 13213                           tablat	equ	0xFF5
 13214                           prodh	equ	0xFF4
 13215                           prodl	equ	0xFF3
 13216                           intcon	equ	0xFF2
 13217                           intcon2	equ	0xFF1
 13218                           intcon3	equ	0xFF0
 13219                           postinc0	equ	0xFEE
 13220                           wreg	equ	0xFE8
 13221                           postdec1	equ	0xFE5
 13222                           fsr1l	equ	0xFE1
 13223                           indf2	equ	0xFDF
 13224                           postinc2	equ	0xFDE
 13225                           postdec2	equ	0xFDD
 13226                           fsr2h	equ	0xFDA
 13227                           fsr2l	equ	0xFD9
 13228                           status	equ	0xFD8
 13229                           
 13230 ;; *************** function _isr *****************
 13231 ;; Defined at:
 13232 ;;		line 142 in file "main.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;		None
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;  i               1  114[COMRAM] unsigned char 
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13249 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;Total ram usage:       19 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:    6
 13253 ;; This function calls:
 13254 ;;		i2___wmul
 13255 ;;		i2_dec_to_hex
 13256 ;;		i2_eeprom_readbyte
 13257 ;;		i2_lcdInst
 13258 ;;		i2_printf
 13259 ;;		i2_read_colorsensor
 13260 ;;		i2_read_time
 13261 ;;		i2_savedata
 13262 ;; This function is called by:
 13263 ;;		Interrupt level 2
 13264 ;; This function uses a non-reentrant model
 13265 ;;
 13266                           
 13267                           	psect	intcode
 13268  000008                     __pintcode:
 13269                           	opt stack 0
 13270  000008                     _isr:
 13271                           	opt stack 17
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;incstack = 0
 13275  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13276  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
 13277                           tblptru	equ	0xFF8
 13278                           tblptrh	equ	0xFF7
 13279                           tblptrl	equ	0xFF6
 13280                           tablat	equ	0xFF5
 13281                           prodh	equ	0xFF4
 13282                           prodl	equ	0xFF3
 13283                           intcon	equ	0xFF2
 13284                           intcon2	equ	0xFF1
 13285                           intcon3	equ	0xFF0
 13286                           postinc0	equ	0xFEE
 13287                           wreg	equ	0xFE8
 13288                           postdec1	equ	0xFE5
 13289                           fsr1l	equ	0xFE1
 13290                           indf2	equ	0xFDF
 13291                           postinc2	equ	0xFDE
 13292                           postdec2	equ	0xFDD
 13293                           fsr2h	equ	0xFDA
 13294                           fsr2l	equ	0xFD9
 13295                           status	equ	0xFD8
 13296                           
 13297                           	psect	intcode_body
 13298  000012                     __pintcode_body:
 13299                           	opt stack 17
 13300  000012                     int_func:
 13301                           	opt stack 17
 13302  000012  0006               	pop		; remove dummy address from shadow register refresh
 13303  000014  CFFA F082          	movff	pclath,??_isr+2
 13304  000018  CFFB F083          	movff	pclatu,??_isr+3
 13305  00001C  CFE9 F084          	movff	fsr0l,??_isr+4
 13306  000020  CFEA F085          	movff	fsr0h,??_isr+5
 13307  000024  CFE1 F086          	movff	fsr1l,??_isr+6
 13308  000028  CFE2 F087          	movff	fsr1h,??_isr+7
 13309  00002C  CFD9 F088          	movff	fsr2l,??_isr+8
 13310  000030  CFDA F089          	movff	fsr2h,??_isr+9
 13311  000034  CFF3 F08A          	movff	prodl,??_isr+10
 13312  000038  CFF4 F08B          	movff	prodh,??_isr+11
 13313  00003C  CFF6 F08C          	movff	tblptrl,??_isr+12
 13314  000040  CFF7 F08D          	movff	tblptrh,??_isr+13
 13315  000044  CFF8 F08E          	movff	tblptru,??_isr+14
 13316  000048  CFF5 F08F          	movff	tablat,??_isr+15
 13317                           
 13318                           ;main.c: 143: if (INT1IF) {
 13319  00004C  B0F0               	btfsc	intcon3,0,c	;volatile
 13320  00004E  D3FC               	goto	i2l7042
 13321  000050  EF5D  F004         	goto	i2l352
 13322  000054                     i2l354:
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;main.c: 146: LATAbits.LATA2 = 1;
 13326  000054  8489               	bsf	3977,2,c	;volatile
 13327                           
 13328                           ;main.c: 147: TMR0IE = 1;
 13329  000056  8AF2               	bsf	intcon,5,c	;volatile
 13330                           
 13331                           ;main.c: 148: TMR0ON = 1;
 13332  000058  8ED5               	bsf	4053,7,c	;volatile
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;main.c: 149: TMR0 = 0;
 13336  00005A  0E00               	movlw	0
 13337  00005C  6ED7               	movwf	4055,c	;volatile
 13338  00005E  0E00               	movlw	0
 13339  000060  6ED6               	movwf	4054,c	;volatile
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;main.c: 150: TMR1ON = 1;
 13343  000062  80CD               	bsf	4045,0,c	;volatile
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;main.c: 151: TMR3ON = 1;
 13347  000064  80B1               	bsf	4017,0,c	;volatile
 13348                           
 13349                           ;main.c: 152: operation_timeout = 0;
 13350  000066  0E00               	movlw	0
 13351  000068  0101               	movlb	1	; () banked
 13352  00006A  6F42               	movwf	(_operation_timeout+1)& (0+255),b
 13353  00006C  0E00               	movlw	0
 13354  00006E  6F41               	movwf	_operation_timeout& (0+255),b
 13355                           
 13356                           ; BSR set to: 1
 13357                           ;main.c: 154: read_time();
 13358  000070  ECBD  F026         	call	i2_read_time	;wreg free
 13359                           
 13360                           ;main.c: 155: start_time[1] = time[1];
 13361  000074  C111  F07B         	movff	_time+1,_start_time+1
 13362                           
 13363                           ;main.c: 156: start_time[0] = time[0];
 13364  000078  C110  F07A         	movff	_time,_start_time
 13365                           
 13366                           ;main.c: 157: for(i=0;i<5;i++){
 13367  00007C  0E00               	movlw	0
 13368  00007E  0100               	movlb	0	; () banked
 13369  000080  6FEC               	movwf	(_i+1)& (0+255),b
 13370  000082  0E00               	movlw	0
 13371  000084  6FEB               	movwf	_i& (0+255),b
 13372  000086                     i2l6790:
 13373                           
 13374                           ; BSR set to: 0
 13375  000086  0100               	movlb	0	; () banked
 13376  000088  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13377  00008A  D008               	goto	i2l6794
 13378  00008C  0100               	movlb	0	; () banked
 13379  00008E  51EC               	movf	(_i+1)& (0+255),w,b
 13380  000090  E127               	bnz	i2l6800
 13381  000092  0E05               	movlw	5
 13382  000094  0100               	movlb	0	; () banked
 13383  000096  5DEB               	subwf	_i& (0+255),w,b
 13384  000098  B0D8               	btfsc	status,0,c
 13385  00009A  D022               	goto	i2l6800
 13386  00009C                     i2l6794:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;main.c: 158: bottle_count_array[i] = 0;
 13390  00009C  90D8               	bcf	status,0,c
 13391  00009E  0100               	movlb	0	; () banked
 13392  0000A0  35EB               	rlcf	_i& (0+255),w,b
 13393  0000A2  6ED9               	movwf	fsr2l,c
 13394  0000A4  0100               	movlb	0	; () banked
 13395  0000A6  35EC               	rlcf	(_i+1)& (0+255),w,b
 13396  0000A8  6EDA               	movwf	fsr2h,c
 13397  0000AA  0EDF               	movlw	low _bottle_count_array
 13398  0000AC  26D9               	addwf	fsr2l,f,c
 13399  0000AE  0E00               	movlw	high _bottle_count_array
 13400  0000B0  22DA               	addwfc	fsr2h,f,c
 13401  0000B2  0E00               	movlw	0
 13402  0000B4  6EDE               	movwf	postinc2,c
 13403  0000B6  0E00               	movlw	0
 13404  0000B8  6EDD               	movwf	postdec2,c
 13405                           
 13406                           ;main.c: 159: bottle_count_disp[i] = -1;
 13407  0000BA  90D8               	bcf	status,0,c
 13408  0000BC  0100               	movlb	0	; () banked
 13409  0000BE  35EB               	rlcf	_i& (0+255),w,b
 13410  0000C0  6ED9               	movwf	fsr2l,c
 13411  0000C2  0100               	movlb	0	; () banked
 13412  0000C4  35EC               	rlcf	(_i+1)& (0+255),w,b
 13413  0000C6  6EDA               	movwf	fsr2h,c
 13414  0000C8  0E72               	movlw	low _bottle_count_disp
 13415  0000CA  26D9               	addwf	fsr2l,f,c
 13416  0000CC  0E01               	movlw	high _bottle_count_disp
 13417  0000CE  22DA               	addwfc	fsr2h,f,c
 13418  0000D0  0EFF               	movlw	255
 13419  0000D2  6EDE               	movwf	postinc2,c
 13420  0000D4  0EFF               	movlw	255
 13421  0000D6  6EDD               	movwf	postdec2,c
 13422                           
 13423                           ; BSR set to: 0
 13424  0000D8  0100               	movlb	0	; () banked
 13425  0000DA  4BEB               	infsnz	_i& (0+255),f,b
 13426  0000DC  2BEC               	incf	(_i+1)& (0+255),f,b
 13427  0000DE  D7D3               	goto	i2l6790
 13428  0000E0                     i2l6800:
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;main.c: 160: }
 13432                           ;main.c: 161: lcdInst(0b00000001);
 13433  0000E0  0E01               	movlw	1
 13434  0000E2  EC6D  F02A         	call	i2_lcdInst
 13435                           
 13436                           ;main.c: 162: _delay((unsigned long)((100)*(10000000/4000.0)));
 13437  0000E6  0E02               	movlw	2
 13438  0000E8  0100               	movlb	0	; () banked
 13439  0000EA  6F81               	movwf	(??_isr+1)& (0+255),b
 13440  0000EC  0E45               	movlw	69
 13441  0000EE  0100               	movlb	0	; () banked
 13442  0000F0  6F80               	movwf	??_isr& (0+255),b
 13443  0000F2  0EA9               	movlw	169
 13444  0000F4                     i2u888_47:
 13445  0000F4  2EE8               	decfsz	wreg,f,c
 13446  0000F6  D7FE               	bra	i2u888_47
 13447  0000F8  2F80               	decfsz	??_isr& (0+255),f,b
 13448  0000FA  D7FC               	bra	i2u888_47
 13449  0000FC  2F81               	decfsz	(??_isr+1)& (0+255),f,b
 13450  0000FE  D7FA               	bra	i2u888_47
 13451  000100  D000               	nop2	
 13452                           
 13453                           ;main.c: 163: lcdInst(0b10000000);
 13454  000102  0E80               	movlw	128
 13455  000104  EC6D  F02A         	call	i2_lcdInst
 13456                           
 13457                           ;main.c: 164: printf("running");
 13458  000108  0EF7               	movlw	low STR_1
 13459  00010A  6E0D               	movwf	i2printf@f,c
 13460  00010C  0EFF               	movlw	high STR_1
 13461  00010E  6E0E               	movwf	i2printf@f+1,c
 13462  000110  EC0E  F00A         	call	i2_printf	;wreg free
 13463                           
 13464                           ;main.c: 166: curr_state = OPERATION;
 13465  000114  0E02               	movlw	2
 13466  000116  D38E               	goto	L21
 13467  000118                     i2l358:
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;main.c: 171: temp = bottle_count_disp[0];
 13471  000118  C172  F07C         	movff	_bottle_count_disp,_temp
 13472  00011C  C173  F07D         	movff	_bottle_count_disp+1,_temp+1
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;main.c: 172: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13476  000120  0E00               	movlw	0
 13477  000122  0100               	movlb	0	; () banked
 13478  000124  6FEC               	movwf	(_i+1)& (0+255),b
 13479  000126  0E00               	movlw	0
 13480  000128  6FEB               	movwf	_i& (0+255),b
 13481  00012A                     i2l6812:
 13482                           
 13483                           ; BSR set to: 0
 13484  00012A  0100               	movlb	0	; () banked
 13485  00012C  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13486  00012E  D008               	goto	i2l6816
 13487  000130  0100               	movlb	0	; () banked
 13488  000132  51EC               	movf	(_i+1)& (0+255),w,b
 13489  000134  E118               	bnz	i2l6822
 13490  000136  0E05               	movlw	5
 13491  000138  0100               	movlb	0	; () banked
 13492  00013A  5DEB               	subwf	_i& (0+255),w,b
 13493  00013C  B0D8               	btfsc	status,0,c
 13494  00013E  D013               	goto	i2l6822
 13495  000140                     i2l6816:
 13496                           
 13497                           ; BSR set to: 0
 13498  000140  90D8               	bcf	status,0,c
 13499  000142  0100               	movlb	0	; () banked
 13500  000144  35EB               	rlcf	_i& (0+255),w,b
 13501  000146  6ED9               	movwf	fsr2l,c
 13502  000148  0100               	movlb	0	; () banked
 13503  00014A  35EC               	rlcf	(_i+1)& (0+255),w,b
 13504  00014C  6EDA               	movwf	fsr2h,c
 13505  00014E  0E72               	movlw	low _bottle_count_disp
 13506  000150  26D9               	addwf	fsr2l,f,c
 13507  000152  0E01               	movlw	high _bottle_count_disp
 13508  000154  22DA               	addwfc	fsr2h,f,c
 13509  000156  0EFF               	movlw	255
 13510  000158  6EDE               	movwf	postinc2,c
 13511  00015A  0EFF               	movlw	255
 13512  00015C  6EDD               	movwf	postdec2,c
 13513                           
 13514                           ; BSR set to: 0
 13515  00015E  0100               	movlb	0	; () banked
 13516  000160  4BEB               	infsnz	_i& (0+255),f,b
 13517  000162  2BEC               	incf	(_i+1)& (0+255),f,b
 13518  000164  D7E2               	goto	i2l6812
 13519  000166                     i2l6822:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;main.c: 173: bottle_count_disp[0] = temp + 1;
 13523  000166  0E01               	movlw	1
 13524  000168  247C               	addwf	_temp,w,c
 13525  00016A  0101               	movlb	1	; () banked
 13526  00016C  6F72               	movwf	_bottle_count_disp& (0+255),b
 13527  00016E  0E00               	movlw	0
 13528  000170  207D               	addwfc	_temp+1,w,c
 13529  000172  0101               	movlb	1	; () banked
 13530  000174  6F73               	movwf	(_bottle_count_disp+1)& (0+255),b
 13531                           
 13532                           ; BSR set to: 1
 13533                           ;main.c: 174: bottle_count_array[0] = eeprom_readbyte(20);
 13534  000176  0E00               	movlw	0
 13535  000178  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13536  00017A  0E14               	movlw	20
 13537  00017C  6E01               	movwf	i2eeprom_readbyte@address,c
 13538  00017E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13539  000182  0100               	movlb	0	; () banked
 13540  000184  6F80               	movwf	??_isr& (0+255),b
 13541  000186  0100               	movlb	0	; () banked
 13542  000188  5180               	movf	??_isr& (0+255),w,b
 13543  00018A  0100               	movlb	0	; () banked
 13544  00018C  6FDF               	movwf	_bottle_count_array& (0+255),b
 13545  00018E  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;main.c: 175: bottle_count_array[1] = eeprom_readbyte(21);
 13549  000190  0E00               	movlw	0
 13550  000192  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13551  000194  0E15               	movlw	21
 13552  000196  6E01               	movwf	i2eeprom_readbyte@address,c
 13553  000198  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13554  00019C  0100               	movlb	0	; () banked
 13555  00019E  6F80               	movwf	??_isr& (0+255),b
 13556  0001A0  0100               	movlb	0	; () banked
 13557  0001A2  5180               	movf	??_isr& (0+255),w,b
 13558  0001A4  0100               	movlb	0	; () banked
 13559  0001A6  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 13560  0001A8  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;main.c: 176: bottle_count_array[2] = eeprom_readbyte(22);
 13564  0001AA  0E00               	movlw	0
 13565  0001AC  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13566  0001AE  0E16               	movlw	22
 13567  0001B0  6E01               	movwf	i2eeprom_readbyte@address,c
 13568  0001B2  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13569  0001B6  0100               	movlb	0	; () banked
 13570  0001B8  6F80               	movwf	??_isr& (0+255),b
 13571  0001BA  0100               	movlb	0	; () banked
 13572  0001BC  5180               	movf	??_isr& (0+255),w,b
 13573  0001BE  0100               	movlb	0	; () banked
 13574  0001C0  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 13575  0001C2  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;main.c: 177: bottle_count_array[3] = eeprom_readbyte(23);
 13579  0001C4  0E00               	movlw	0
 13580  0001C6  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13581  0001C8  0E17               	movlw	23
 13582  0001CA  6E01               	movwf	i2eeprom_readbyte@address,c
 13583  0001CC  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13584  0001D0  0100               	movlb	0	; () banked
 13585  0001D2  6F80               	movwf	??_isr& (0+255),b
 13586  0001D4  0100               	movlb	0	; () banked
 13587  0001D6  5180               	movf	??_isr& (0+255),w,b
 13588  0001D8  0100               	movlb	0	; () banked
 13589  0001DA  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 13590  0001DC  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;main.c: 178: bottle_count_array[4] = eeprom_readbyte(24);
 13594  0001DE  0E00               	movlw	0
 13595  0001E0  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13596  0001E2  0E18               	movlw	24
 13597  0001E4  6E01               	movwf	i2eeprom_readbyte@address,c
 13598  0001E6  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13599  0001EA  0100               	movlb	0	; () banked
 13600  0001EC  6F80               	movwf	??_isr& (0+255),b
 13601  0001EE  0100               	movlb	0	; () banked
 13602  0001F0  5180               	movf	??_isr& (0+255),w,b
 13603  0001F2  0100               	movlb	0	; () banked
 13604  0001F4  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 13605  0001F6  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;main.c: 179: curr_state = BOTTLECOUNT;
 13609  0001F8  0E05               	movlw	5
 13610  0001FA  0100               	movlb	0	; () banked
 13611  0001FC  6FED               	movwf	_curr_state& (0+255),b
 13612  0001FE                     i2l6836:
 13613  0001FE  3881               	swapf	3969,w,c	;volatile
 13614  000200  0B0F               	andlw	15
 13615  000202  06E8               	decf	wreg,f,c
 13616  000204  A4D8               	btfss	status,2,c
 13617  000206  D357               	goto	i2l357
 13618  000208  D7FA               	goto	i2l6836
 13619  00020A                     i2l6838:
 13620                           
 13621                           ;main.c: 183: operation_time = etime - stime;
 13622  00020A  C147  F080         	movff	_stime,??_isr
 13623  00020E  C148  F081         	movff	_stime+1,??_isr+1
 13624  000212  0100               	movlb	0	; () banked
 13625  000214  1F80               	comf	??_isr& (0+255),f,b
 13626  000216  1F81               	comf	(??_isr+1)& (0+255),f,b
 13627  000218  4B80               	infsnz	??_isr& (0+255),f,b
 13628  00021A  2B81               	incf	(??_isr+1)& (0+255),f,b
 13629  00021C  0101               	movlb	1	; () banked
 13630  00021E  5131               	movf	_etime& (0+255),w,b
 13631  000220  0100               	movlb	0	; () banked
 13632  000222  2580               	addwf	??_isr& (0+255),w,b
 13633  000224  0101               	movlb	1	; () banked
 13634  000226  6F3F               	movwf	_operation_time& (0+255),b
 13635  000228  0101               	movlb	1	; () banked
 13636  00022A  5132               	movf	(_etime+1)& (0+255),w,b
 13637  00022C  0100               	movlb	0	; () banked
 13638  00022E  2181               	addwfc	(??_isr+1)& (0+255),w,b
 13639  000230  0101               	movlb	1	; () banked
 13640  000232  6F40               	movwf	(_operation_time+1)& (0+255),b
 13641                           
 13642                           ; BSR set to: 1
 13643                           ;main.c: 184: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13644  000234  0E00               	movlw	0
 13645  000236  0100               	movlb	0	; () banked
 13646  000238  6FEC               	movwf	(_i+1)& (0+255),b
 13647  00023A  0E00               	movlw	0
 13648  00023C  6FEB               	movwf	_i& (0+255),b
 13649  00023E                     i2l6842:
 13650                           
 13651                           ; BSR set to: 0
 13652  00023E  0100               	movlb	0	; () banked
 13653  000240  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13654  000242  D008               	goto	i2l6846
 13655  000244  0100               	movlb	0	; () banked
 13656  000246  51EC               	movf	(_i+1)& (0+255),w,b
 13657  000248  E118               	bnz	i2l6852
 13658  00024A  0E05               	movlw	5
 13659  00024C  0100               	movlb	0	; () banked
 13660  00024E  5DEB               	subwf	_i& (0+255),w,b
 13661  000250  B0D8               	btfsc	status,0,c
 13662  000252  D013               	goto	i2l6852
 13663  000254                     i2l6846:
 13664                           
 13665                           ; BSR set to: 0
 13666  000254  90D8               	bcf	status,0,c
 13667  000256  0100               	movlb	0	; () banked
 13668  000258  35EB               	rlcf	_i& (0+255),w,b
 13669  00025A  6ED9               	movwf	fsr2l,c
 13670  00025C  0100               	movlb	0	; () banked
 13671  00025E  35EC               	rlcf	(_i+1)& (0+255),w,b
 13672  000260  6EDA               	movwf	fsr2h,c
 13673  000262  0E72               	movlw	low _bottle_count_disp
 13674  000264  26D9               	addwf	fsr2l,f,c
 13675  000266  0E01               	movlw	high _bottle_count_disp
 13676  000268  22DA               	addwfc	fsr2h,f,c
 13677  00026A  0EFF               	movlw	255
 13678  00026C  6EDE               	movwf	postinc2,c
 13679  00026E  0EFF               	movlw	255
 13680  000270  6EDD               	movwf	postdec2,c
 13681                           
 13682                           ; BSR set to: 0
 13683  000272  0100               	movlb	0	; () banked
 13684  000274  4BEB               	infsnz	_i& (0+255),f,b
 13685  000276  2BEC               	incf	(_i+1)& (0+255),f,b
 13686  000278  D7E2               	goto	i2l6842
 13687  00027A                     i2l6852:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;main.c: 185: curr_state = BOTTLETIME;
 13691  00027A  0E0A               	movlw	10
 13692  00027C  D2DB               	goto	L21
 13693  00027E                     i2l6854:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;main.c: 188: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13697  00027E  0E00               	movlw	0
 13698  000280  0100               	movlb	0	; () banked
 13699  000282  6FEC               	movwf	(_i+1)& (0+255),b
 13700  000284  0E00               	movlw	0
 13701  000286  6FEB               	movwf	_i& (0+255),b
 13702  000288                     i2l6856:
 13703                           
 13704                           ; BSR set to: 0
 13705  000288  0100               	movlb	0	; () banked
 13706  00028A  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13707  00028C  D008               	goto	i2l6860
 13708  00028E  0100               	movlb	0	; () banked
 13709  000290  51EC               	movf	(_i+1)& (0+255),w,b
 13710  000292  E118               	bnz	i2l6866
 13711  000294  0E05               	movlw	5
 13712  000296  0100               	movlb	0	; () banked
 13713  000298  5DEB               	subwf	_i& (0+255),w,b
 13714  00029A  B0D8               	btfsc	status,0,c
 13715  00029C  D013               	goto	i2l6866
 13716  00029E                     i2l6860:
 13717                           
 13718                           ; BSR set to: 0
 13719  00029E  90D8               	bcf	status,0,c
 13720  0002A0  0100               	movlb	0	; () banked
 13721  0002A2  35EB               	rlcf	_i& (0+255),w,b
 13722  0002A4  6ED9               	movwf	fsr2l,c
 13723  0002A6  0100               	movlb	0	; () banked
 13724  0002A8  35EC               	rlcf	(_i+1)& (0+255),w,b
 13725  0002AA  6EDA               	movwf	fsr2h,c
 13726  0002AC  0E72               	movlw	low _bottle_count_disp
 13727  0002AE  26D9               	addwf	fsr2l,f,c
 13728  0002B0  0E01               	movlw	high _bottle_count_disp
 13729  0002B2  22DA               	addwfc	fsr2h,f,c
 13730  0002B4  0EFF               	movlw	255
 13731  0002B6  6EDE               	movwf	postinc2,c
 13732  0002B8  0EFF               	movlw	255
 13733  0002BA  6EDD               	movwf	postdec2,c
 13734                           
 13735                           ; BSR set to: 0
 13736  0002BC  0100               	movlb	0	; () banked
 13737  0002BE  4BEB               	infsnz	_i& (0+255),f,b
 13738  0002C0  2BEC               	incf	(_i+1)& (0+255),f,b
 13739  0002C2  D7E2               	goto	i2l6856
 13740  0002C4                     i2l6866:
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;main.c: 189: curr_state = DATETIME;
 13744  0002C4  0E04               	movlw	4
 13745  0002C6  D2B6               	goto	L21
 13746  0002C8                     i2l370:
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;main.c: 192: temp = bottle_count_disp[1];
 13750  0002C8  C174  F07C         	movff	_bottle_count_disp+2,_temp
 13751  0002CC  C175  F07D         	movff	_bottle_count_disp+3,_temp+1
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;main.c: 193: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13755  0002D0  0E00               	movlw	0
 13756  0002D2  0100               	movlb	0	; () banked
 13757  0002D4  6FEC               	movwf	(_i+1)& (0+255),b
 13758  0002D6  0E00               	movlw	0
 13759  0002D8  6FEB               	movwf	_i& (0+255),b
 13760  0002DA                     i2l6870:
 13761                           
 13762                           ; BSR set to: 0
 13763  0002DA  0100               	movlb	0	; () banked
 13764  0002DC  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13765  0002DE  D008               	goto	i2l6874
 13766  0002E0  0100               	movlb	0	; () banked
 13767  0002E2  51EC               	movf	(_i+1)& (0+255),w,b
 13768  0002E4  E118               	bnz	i2l6880
 13769  0002E6  0E05               	movlw	5
 13770  0002E8  0100               	movlb	0	; () banked
 13771  0002EA  5DEB               	subwf	_i& (0+255),w,b
 13772  0002EC  B0D8               	btfsc	status,0,c
 13773  0002EE  D013               	goto	i2l6880
 13774  0002F0                     i2l6874:
 13775                           
 13776                           ; BSR set to: 0
 13777  0002F0  90D8               	bcf	status,0,c
 13778  0002F2  0100               	movlb	0	; () banked
 13779  0002F4  35EB               	rlcf	_i& (0+255),w,b
 13780  0002F6  6ED9               	movwf	fsr2l,c
 13781  0002F8  0100               	movlb	0	; () banked
 13782  0002FA  35EC               	rlcf	(_i+1)& (0+255),w,b
 13783  0002FC  6EDA               	movwf	fsr2h,c
 13784  0002FE  0E72               	movlw	low _bottle_count_disp
 13785  000300  26D9               	addwf	fsr2l,f,c
 13786  000302  0E01               	movlw	high _bottle_count_disp
 13787  000304  22DA               	addwfc	fsr2h,f,c
 13788  000306  0EFF               	movlw	255
 13789  000308  6EDE               	movwf	postinc2,c
 13790  00030A  0EFF               	movlw	255
 13791  00030C  6EDD               	movwf	postdec2,c
 13792                           
 13793                           ; BSR set to: 0
 13794  00030E  0100               	movlb	0	; () banked
 13795  000310  4BEB               	infsnz	_i& (0+255),f,b
 13796  000312  2BEC               	incf	(_i+1)& (0+255),f,b
 13797  000314  D7E2               	goto	i2l6870
 13798  000316                     i2l6880:
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;main.c: 194: bottle_count_disp[1] = temp + 1;
 13802  000316  0E01               	movlw	1
 13803  000318  247C               	addwf	_temp,w,c
 13804  00031A  0101               	movlb	1	; () banked
 13805  00031C  6F74               	movwf	(_bottle_count_disp+2)& (0+255),b
 13806  00031E  0E00               	movlw	0
 13807  000320  207D               	addwfc	_temp+1,w,c
 13808  000322  0101               	movlb	1	; () banked
 13809  000324  6F75               	movwf	(_bottle_count_disp+3)& (0+255),b
 13810                           
 13811                           ; BSR set to: 1
 13812                           ;main.c: 195: bottle_count_array[0] = eeprom_readbyte(25);
 13813  000326  0E00               	movlw	0
 13814  000328  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13815  00032A  0E19               	movlw	25
 13816  00032C  6E01               	movwf	i2eeprom_readbyte@address,c
 13817  00032E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13818  000332  0100               	movlb	0	; () banked
 13819  000334  6F80               	movwf	??_isr& (0+255),b
 13820  000336  0100               	movlb	0	; () banked
 13821  000338  5180               	movf	??_isr& (0+255),w,b
 13822  00033A  0100               	movlb	0	; () banked
 13823  00033C  6FDF               	movwf	_bottle_count_array& (0+255),b
 13824  00033E  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;main.c: 196: bottle_count_array[1] = eeprom_readbyte(26);
 13828  000340  0E00               	movlw	0
 13829  000342  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13830  000344  0E1A               	movlw	26
 13831  000346  6E01               	movwf	i2eeprom_readbyte@address,c
 13832  000348  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13833  00034C  0100               	movlb	0	; () banked
 13834  00034E  6F80               	movwf	??_isr& (0+255),b
 13835  000350  0100               	movlb	0	; () banked
 13836  000352  5180               	movf	??_isr& (0+255),w,b
 13837  000354  0100               	movlb	0	; () banked
 13838  000356  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 13839  000358  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;main.c: 197: bottle_count_array[2] = eeprom_readbyte(27);
 13843  00035A  0E00               	movlw	0
 13844  00035C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13845  00035E  0E1B               	movlw	27
 13846  000360  6E01               	movwf	i2eeprom_readbyte@address,c
 13847  000362  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13848  000366  0100               	movlb	0	; () banked
 13849  000368  6F80               	movwf	??_isr& (0+255),b
 13850  00036A  0100               	movlb	0	; () banked
 13851  00036C  5180               	movf	??_isr& (0+255),w,b
 13852  00036E  0100               	movlb	0	; () banked
 13853  000370  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 13854  000372  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 13855                           
 13856                           ; BSR set to: 0
 13857                           ;main.c: 198: bottle_count_array[3] = eeprom_readbyte(28);
 13858  000374  0E00               	movlw	0
 13859  000376  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13860  000378  0E1C               	movlw	28
 13861  00037A  6E01               	movwf	i2eeprom_readbyte@address,c
 13862  00037C  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13863  000380  0100               	movlb	0	; () banked
 13864  000382  6F80               	movwf	??_isr& (0+255),b
 13865  000384  0100               	movlb	0	; () banked
 13866  000386  5180               	movf	??_isr& (0+255),w,b
 13867  000388  0100               	movlb	0	; () banked
 13868  00038A  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 13869  00038C  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 13870                           
 13871                           ; BSR set to: 0
 13872                           ;main.c: 199: bottle_count_array[4] = eeprom_readbyte(29);
 13873  00038E  0E00               	movlw	0
 13874  000390  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13875  000392  0E1D               	movlw	29
 13876  000394  6E01               	movwf	i2eeprom_readbyte@address,c
 13877  000396  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13878  00039A  0100               	movlb	0	; () banked
 13879  00039C  6F80               	movwf	??_isr& (0+255),b
 13880  00039E  0100               	movlb	0	; () banked
 13881  0003A0  5180               	movf	??_isr& (0+255),w,b
 13882  0003A2  0100               	movlb	0	; () banked
 13883  0003A4  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 13884  0003A6  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;main.c: 200: curr_state = BOTTLECOUNT1;
 13888  0003A8  0E06               	movlw	6
 13889  0003AA  0100               	movlb	0	; () banked
 13890  0003AC  6FED               	movwf	_curr_state& (0+255),b
 13891  0003AE                     i2l6894:
 13892  0003AE  3881               	swapf	3969,w,c	;volatile
 13893  0003B0  0B0F               	andlw	15
 13894  0003B2  0A04               	xorlw	4
 13895  0003B4  A4D8               	btfss	status,2,c
 13896  0003B6  D27F               	goto	i2l357
 13897  0003B8  D7FA               	goto	i2l6894
 13898  0003BA                     i2l376:
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;main.c: 204: temp = bottle_count_disp[2];
 13902  0003BA  C176  F07C         	movff	_bottle_count_disp+4,_temp
 13903  0003BE  C177  F07D         	movff	_bottle_count_disp+5,_temp+1
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;main.c: 205: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13907  0003C2  0E00               	movlw	0
 13908  0003C4  0100               	movlb	0	; () banked
 13909  0003C6  6FEC               	movwf	(_i+1)& (0+255),b
 13910  0003C8  0E00               	movlw	0
 13911  0003CA  6FEB               	movwf	_i& (0+255),b
 13912  0003CC                     i2l6898:
 13913                           
 13914                           ; BSR set to: 0
 13915  0003CC  0100               	movlb	0	; () banked
 13916  0003CE  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13917  0003D0  D008               	goto	i2l6902
 13918  0003D2  0100               	movlb	0	; () banked
 13919  0003D4  51EC               	movf	(_i+1)& (0+255),w,b
 13920  0003D6  E118               	bnz	i2l6908
 13921  0003D8  0E05               	movlw	5
 13922  0003DA  0100               	movlb	0	; () banked
 13923  0003DC  5DEB               	subwf	_i& (0+255),w,b
 13924  0003DE  B0D8               	btfsc	status,0,c
 13925  0003E0  D013               	goto	i2l6908
 13926  0003E2                     i2l6902:
 13927                           
 13928                           ; BSR set to: 0
 13929  0003E2  90D8               	bcf	status,0,c
 13930  0003E4  0100               	movlb	0	; () banked
 13931  0003E6  35EB               	rlcf	_i& (0+255),w,b
 13932  0003E8  6ED9               	movwf	fsr2l,c
 13933  0003EA  0100               	movlb	0	; () banked
 13934  0003EC  35EC               	rlcf	(_i+1)& (0+255),w,b
 13935  0003EE  6EDA               	movwf	fsr2h,c
 13936  0003F0  0E72               	movlw	low _bottle_count_disp
 13937  0003F2  26D9               	addwf	fsr2l,f,c
 13938  0003F4  0E01               	movlw	high _bottle_count_disp
 13939  0003F6  22DA               	addwfc	fsr2h,f,c
 13940  0003F8  0EFF               	movlw	255
 13941  0003FA  6EDE               	movwf	postinc2,c
 13942  0003FC  0EFF               	movlw	255
 13943  0003FE  6EDD               	movwf	postdec2,c
 13944                           
 13945                           ; BSR set to: 0
 13946  000400  0100               	movlb	0	; () banked
 13947  000402  4BEB               	infsnz	_i& (0+255),f,b
 13948  000404  2BEC               	incf	(_i+1)& (0+255),f,b
 13949  000406  D7E2               	goto	i2l6898
 13950  000408                     i2l6908:
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;main.c: 206: bottle_count_disp[2] = temp + 1;
 13954  000408  0E01               	movlw	1
 13955  00040A  247C               	addwf	_temp,w,c
 13956  00040C  0101               	movlb	1	; () banked
 13957  00040E  6F76               	movwf	(_bottle_count_disp+4)& (0+255),b
 13958  000410  0E00               	movlw	0
 13959  000412  207D               	addwfc	_temp+1,w,c
 13960  000414  0101               	movlb	1	; () banked
 13961  000416  6F77               	movwf	(_bottle_count_disp+5)& (0+255),b
 13962                           
 13963                           ; BSR set to: 1
 13964                           ;main.c: 207: bottle_count_array[0] = eeprom_readbyte(30);
 13965  000418  0E00               	movlw	0
 13966  00041A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13967  00041C  0E1E               	movlw	30
 13968  00041E  6E01               	movwf	i2eeprom_readbyte@address,c
 13969  000420  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13970  000424  0100               	movlb	0	; () banked
 13971  000426  6F80               	movwf	??_isr& (0+255),b
 13972  000428  0100               	movlb	0	; () banked
 13973  00042A  5180               	movf	??_isr& (0+255),w,b
 13974  00042C  0100               	movlb	0	; () banked
 13975  00042E  6FDF               	movwf	_bottle_count_array& (0+255),b
 13976  000430  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;main.c: 208: bottle_count_array[1] = eeprom_readbyte(31);
 13980  000432  0E00               	movlw	0
 13981  000434  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13982  000436  0E1F               	movlw	31
 13983  000438  6E01               	movwf	i2eeprom_readbyte@address,c
 13984  00043A  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 13985  00043E  0100               	movlb	0	; () banked
 13986  000440  6F80               	movwf	??_isr& (0+255),b
 13987  000442  0100               	movlb	0	; () banked
 13988  000444  5180               	movf	??_isr& (0+255),w,b
 13989  000446  0100               	movlb	0	; () banked
 13990  000448  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 13991  00044A  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;main.c: 209: bottle_count_array[2] = eeprom_readbyte(32);
 13995  00044C  0E00               	movlw	0
 13996  00044E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13997  000450  0E20               	movlw	32
 13998  000452  6E01               	movwf	i2eeprom_readbyte@address,c
 13999  000454  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14000  000458  0100               	movlb	0	; () banked
 14001  00045A  6F80               	movwf	??_isr& (0+255),b
 14002  00045C  0100               	movlb	0	; () banked
 14003  00045E  5180               	movf	??_isr& (0+255),w,b
 14004  000460  0100               	movlb	0	; () banked
 14005  000462  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14006  000464  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14007                           
 14008                           ; BSR set to: 0
 14009                           ;main.c: 210: bottle_count_array[3] = eeprom_readbyte(33);
 14010  000466  0E00               	movlw	0
 14011  000468  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14012  00046A  0E21               	movlw	33
 14013  00046C  6E01               	movwf	i2eeprom_readbyte@address,c
 14014  00046E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14015  000472  0100               	movlb	0	; () banked
 14016  000474  6F80               	movwf	??_isr& (0+255),b
 14017  000476  0100               	movlb	0	; () banked
 14018  000478  5180               	movf	??_isr& (0+255),w,b
 14019  00047A  0100               	movlb	0	; () banked
 14020  00047C  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14021  00047E  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14022                           
 14023                           ; BSR set to: 0
 14024                           ;main.c: 211: bottle_count_array[4] = eeprom_readbyte(34);
 14025  000480  0E00               	movlw	0
 14026  000482  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14027  000484  0E22               	movlw	34
 14028  000486  6E01               	movwf	i2eeprom_readbyte@address,c
 14029  000488  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14030  00048C  0100               	movlb	0	; () banked
 14031  00048E  6F80               	movwf	??_isr& (0+255),b
 14032  000490  0100               	movlb	0	; () banked
 14033  000492  5180               	movf	??_isr& (0+255),w,b
 14034  000494  0100               	movlb	0	; () banked
 14035  000496  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14036  000498  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;main.c: 212: curr_state = BOTTLECOUNT2;
 14040  00049A  0E07               	movlw	7
 14041  00049C  0100               	movlb	0	; () banked
 14042  00049E  6FED               	movwf	_curr_state& (0+255),b
 14043  0004A0                     i2l6922:
 14044  0004A0  3881               	swapf	3969,w,c	;volatile
 14045  0004A2  0B0F               	andlw	15
 14046  0004A4  0A05               	xorlw	5
 14047  0004A6  A4D8               	btfss	status,2,c
 14048  0004A8  D206               	goto	i2l357
 14049  0004AA  D7FA               	goto	i2l6922
 14050  0004AC                     i2l382:
 14051                           
 14052                           ; BSR set to: 0
 14053                           ;main.c: 216: temp = bottle_count_disp[3];
 14054  0004AC  C178  F07C         	movff	_bottle_count_disp+6,_temp
 14055  0004B0  C179  F07D         	movff	_bottle_count_disp+7,_temp+1
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;main.c: 217: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14059  0004B4  0E00               	movlw	0
 14060  0004B6  0100               	movlb	0	; () banked
 14061  0004B8  6FEC               	movwf	(_i+1)& (0+255),b
 14062  0004BA  0E00               	movlw	0
 14063  0004BC  6FEB               	movwf	_i& (0+255),b
 14064  0004BE                     i2l6926:
 14065                           
 14066                           ; BSR set to: 0
 14067  0004BE  0100               	movlb	0	; () banked
 14068  0004C0  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14069  0004C2  D008               	goto	i2l6930
 14070  0004C4  0100               	movlb	0	; () banked
 14071  0004C6  51EC               	movf	(_i+1)& (0+255),w,b
 14072  0004C8  E118               	bnz	i2l6936
 14073  0004CA  0E05               	movlw	5
 14074  0004CC  0100               	movlb	0	; () banked
 14075  0004CE  5DEB               	subwf	_i& (0+255),w,b
 14076  0004D0  B0D8               	btfsc	status,0,c
 14077  0004D2  D013               	goto	i2l6936
 14078  0004D4                     i2l6930:
 14079                           
 14080                           ; BSR set to: 0
 14081  0004D4  90D8               	bcf	status,0,c
 14082  0004D6  0100               	movlb	0	; () banked
 14083  0004D8  35EB               	rlcf	_i& (0+255),w,b
 14084  0004DA  6ED9               	movwf	fsr2l,c
 14085  0004DC  0100               	movlb	0	; () banked
 14086  0004DE  35EC               	rlcf	(_i+1)& (0+255),w,b
 14087  0004E0  6EDA               	movwf	fsr2h,c
 14088  0004E2  0E72               	movlw	low _bottle_count_disp
 14089  0004E4  26D9               	addwf	fsr2l,f,c
 14090  0004E6  0E01               	movlw	high _bottle_count_disp
 14091  0004E8  22DA               	addwfc	fsr2h,f,c
 14092  0004EA  0EFF               	movlw	255
 14093  0004EC  6EDE               	movwf	postinc2,c
 14094  0004EE  0EFF               	movlw	255
 14095  0004F0  6EDD               	movwf	postdec2,c
 14096                           
 14097                           ; BSR set to: 0
 14098  0004F2  0100               	movlb	0	; () banked
 14099  0004F4  4BEB               	infsnz	_i& (0+255),f,b
 14100  0004F6  2BEC               	incf	(_i+1)& (0+255),f,b
 14101  0004F8  D7E2               	goto	i2l6926
 14102  0004FA                     i2l6936:
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;main.c: 218: bottle_count_disp[3] = temp + 1;
 14106  0004FA  0E01               	movlw	1
 14107  0004FC  247C               	addwf	_temp,w,c
 14108  0004FE  0101               	movlb	1	; () banked
 14109  000500  6F78               	movwf	(_bottle_count_disp+6)& (0+255),b
 14110  000502  0E00               	movlw	0
 14111  000504  207D               	addwfc	_temp+1,w,c
 14112  000506  0101               	movlb	1	; () banked
 14113  000508  6F79               	movwf	(_bottle_count_disp+7)& (0+255),b
 14114                           
 14115                           ; BSR set to: 1
 14116                           ;main.c: 219: bottle_count_array[0] = eeprom_readbyte(35);
 14117  00050A  0E00               	movlw	0
 14118  00050C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14119  00050E  0E23               	movlw	35
 14120  000510  6E01               	movwf	i2eeprom_readbyte@address,c
 14121  000512  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14122  000516  0100               	movlb	0	; () banked
 14123  000518  6F80               	movwf	??_isr& (0+255),b
 14124  00051A  0100               	movlb	0	; () banked
 14125  00051C  5180               	movf	??_isr& (0+255),w,b
 14126  00051E  0100               	movlb	0	; () banked
 14127  000520  6FDF               	movwf	_bottle_count_array& (0+255),b
 14128  000522  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;main.c: 220: bottle_count_array[1] = eeprom_readbyte(36);
 14132  000524  0E00               	movlw	0
 14133  000526  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14134  000528  0E24               	movlw	36
 14135  00052A  6E01               	movwf	i2eeprom_readbyte@address,c
 14136  00052C  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14137  000530  0100               	movlb	0	; () banked
 14138  000532  6F80               	movwf	??_isr& (0+255),b
 14139  000534  0100               	movlb	0	; () banked
 14140  000536  5180               	movf	??_isr& (0+255),w,b
 14141  000538  0100               	movlb	0	; () banked
 14142  00053A  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 14143  00053C  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;main.c: 221: bottle_count_array[2] = eeprom_readbyte(37);
 14147  00053E  0E00               	movlw	0
 14148  000540  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14149  000542  0E25               	movlw	37
 14150  000544  6E01               	movwf	i2eeprom_readbyte@address,c
 14151  000546  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14152  00054A  0100               	movlb	0	; () banked
 14153  00054C  6F80               	movwf	??_isr& (0+255),b
 14154  00054E  0100               	movlb	0	; () banked
 14155  000550  5180               	movf	??_isr& (0+255),w,b
 14156  000552  0100               	movlb	0	; () banked
 14157  000554  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14158  000556  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14159                           
 14160                           ; BSR set to: 0
 14161                           ;main.c: 222: bottle_count_array[3] = eeprom_readbyte(38);
 14162  000558  0E00               	movlw	0
 14163  00055A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14164  00055C  0E26               	movlw	38
 14165  00055E  6E01               	movwf	i2eeprom_readbyte@address,c
 14166  000560  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14167  000564  0100               	movlb	0	; () banked
 14168  000566  6F80               	movwf	??_isr& (0+255),b
 14169  000568  0100               	movlb	0	; () banked
 14170  00056A  5180               	movf	??_isr& (0+255),w,b
 14171  00056C  0100               	movlb	0	; () banked
 14172  00056E  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14173  000570  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14174                           
 14175                           ; BSR set to: 0
 14176                           ;main.c: 223: bottle_count_array[4] = eeprom_readbyte(39);
 14177  000572  0E00               	movlw	0
 14178  000574  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14179  000576  0E27               	movlw	39
 14180  000578  6E01               	movwf	i2eeprom_readbyte@address,c
 14181  00057A  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14182  00057E  0100               	movlb	0	; () banked
 14183  000580  6F80               	movwf	??_isr& (0+255),b
 14184  000582  0100               	movlb	0	; () banked
 14185  000584  5180               	movf	??_isr& (0+255),w,b
 14186  000586  0100               	movlb	0	; () banked
 14187  000588  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14188  00058A  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;main.c: 224: curr_state = BOTTLECOUNT3;
 14192  00058C  0E08               	movlw	8
 14193  00058E  0100               	movlb	0	; () banked
 14194  000590  6FED               	movwf	_curr_state& (0+255),b
 14195  000592                     i2l6950:
 14196  000592  3881               	swapf	3969,w,c	;volatile
 14197  000594  0B0F               	andlw	15
 14198  000596  0A06               	xorlw	6
 14199  000598  A4D8               	btfss	status,2,c
 14200  00059A  D18D               	goto	i2l357
 14201  00059C  D7FA               	goto	i2l6950
 14202  00059E                     i2l388:
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;main.c: 228: temp = bottle_count_disp[4];
 14206  00059E  C17A  F07C         	movff	_bottle_count_disp+8,_temp
 14207  0005A2  C17B  F07D         	movff	_bottle_count_disp+9,_temp+1
 14208                           
 14209                           ; BSR set to: 0
 14210                           ;main.c: 229: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14211  0005A6  0E00               	movlw	0
 14212  0005A8  0100               	movlb	0	; () banked
 14213  0005AA  6FEC               	movwf	(_i+1)& (0+255),b
 14214  0005AC  0E00               	movlw	0
 14215  0005AE  6FEB               	movwf	_i& (0+255),b
 14216  0005B0                     i2l6954:
 14217                           
 14218                           ; BSR set to: 0
 14219  0005B0  0100               	movlb	0	; () banked
 14220  0005B2  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14221  0005B4  D008               	goto	i2l6958
 14222  0005B6  0100               	movlb	0	; () banked
 14223  0005B8  51EC               	movf	(_i+1)& (0+255),w,b
 14224  0005BA  E118               	bnz	i2l6964
 14225  0005BC  0E05               	movlw	5
 14226  0005BE  0100               	movlb	0	; () banked
 14227  0005C0  5DEB               	subwf	_i& (0+255),w,b
 14228  0005C2  B0D8               	btfsc	status,0,c
 14229  0005C4  D013               	goto	i2l6964
 14230  0005C6                     i2l6958:
 14231                           
 14232                           ; BSR set to: 0
 14233  0005C6  90D8               	bcf	status,0,c
 14234  0005C8  0100               	movlb	0	; () banked
 14235  0005CA  35EB               	rlcf	_i& (0+255),w,b
 14236  0005CC  6ED9               	movwf	fsr2l,c
 14237  0005CE  0100               	movlb	0	; () banked
 14238  0005D0  35EC               	rlcf	(_i+1)& (0+255),w,b
 14239  0005D2  6EDA               	movwf	fsr2h,c
 14240  0005D4  0E72               	movlw	low _bottle_count_disp
 14241  0005D6  26D9               	addwf	fsr2l,f,c
 14242  0005D8  0E01               	movlw	high _bottle_count_disp
 14243  0005DA  22DA               	addwfc	fsr2h,f,c
 14244  0005DC  0EFF               	movlw	255
 14245  0005DE  6EDE               	movwf	postinc2,c
 14246  0005E0  0EFF               	movlw	255
 14247  0005E2  6EDD               	movwf	postdec2,c
 14248                           
 14249                           ; BSR set to: 0
 14250  0005E4  0100               	movlb	0	; () banked
 14251  0005E6  4BEB               	infsnz	_i& (0+255),f,b
 14252  0005E8  2BEC               	incf	(_i+1)& (0+255),f,b
 14253  0005EA  D7E2               	goto	i2l6954
 14254  0005EC                     i2l6964:
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;main.c: 230: bottle_count_disp[4] = temp + 1;
 14258  0005EC  0E01               	movlw	1
 14259  0005EE  247C               	addwf	_temp,w,c
 14260  0005F0  0101               	movlb	1	; () banked
 14261  0005F2  6F7A               	movwf	(_bottle_count_disp+8)& (0+255),b
 14262  0005F4  0E00               	movlw	0
 14263  0005F6  207D               	addwfc	_temp+1,w,c
 14264  0005F8  0101               	movlb	1	; () banked
 14265  0005FA  6F7B               	movwf	(_bottle_count_disp+9)& (0+255),b
 14266                           
 14267                           ; BSR set to: 1
 14268                           ;main.c: 231: bottle_count_array[0] = eeprom_readbyte(40);
 14269  0005FC  0E00               	movlw	0
 14270  0005FE  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14271  000600  0E28               	movlw	40
 14272  000602  6E01               	movwf	i2eeprom_readbyte@address,c
 14273  000604  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14274  000608  0100               	movlb	0	; () banked
 14275  00060A  6F80               	movwf	??_isr& (0+255),b
 14276  00060C  0100               	movlb	0	; () banked
 14277  00060E  5180               	movf	??_isr& (0+255),w,b
 14278  000610  0100               	movlb	0	; () banked
 14279  000612  6FDF               	movwf	_bottle_count_array& (0+255),b
 14280  000614  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 14281                           
 14282                           ; BSR set to: 0
 14283                           ;main.c: 232: bottle_count_array[1] = eeprom_readbyte(41);
 14284  000616  0E00               	movlw	0
 14285  000618  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14286  00061A  0E29               	movlw	41
 14287  00061C  6E01               	movwf	i2eeprom_readbyte@address,c
 14288  00061E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14289  000622  0100               	movlb	0	; () banked
 14290  000624  6F80               	movwf	??_isr& (0+255),b
 14291  000626  0100               	movlb	0	; () banked
 14292  000628  5180               	movf	??_isr& (0+255),w,b
 14293  00062A  0100               	movlb	0	; () banked
 14294  00062C  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 14295  00062E  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;main.c: 233: bottle_count_array[2] = eeprom_readbyte(42);
 14299  000630  0E00               	movlw	0
 14300  000632  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14301  000634  0E2A               	movlw	42
 14302  000636  6E01               	movwf	i2eeprom_readbyte@address,c
 14303  000638  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14304  00063C  0100               	movlb	0	; () banked
 14305  00063E  6F80               	movwf	??_isr& (0+255),b
 14306  000640  0100               	movlb	0	; () banked
 14307  000642  5180               	movf	??_isr& (0+255),w,b
 14308  000644  0100               	movlb	0	; () banked
 14309  000646  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14310  000648  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14311                           
 14312                           ; BSR set to: 0
 14313                           ;main.c: 234: bottle_count_array[3] = eeprom_readbyte(43);
 14314  00064A  0E00               	movlw	0
 14315  00064C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14316  00064E  0E2B               	movlw	43
 14317  000650  6E01               	movwf	i2eeprom_readbyte@address,c
 14318  000652  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14319  000656  0100               	movlb	0	; () banked
 14320  000658  6F80               	movwf	??_isr& (0+255),b
 14321  00065A  0100               	movlb	0	; () banked
 14322  00065C  5180               	movf	??_isr& (0+255),w,b
 14323  00065E  0100               	movlb	0	; () banked
 14324  000660  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14325  000662  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;main.c: 235: bottle_count_array[4] = eeprom_readbyte(44);
 14329  000664  0E00               	movlw	0
 14330  000666  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14331  000668  0E2C               	movlw	44
 14332  00066A  6E01               	movwf	i2eeprom_readbyte@address,c
 14333  00066C  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 14334  000670  0100               	movlb	0	; () banked
 14335  000672  6F80               	movwf	??_isr& (0+255),b
 14336  000674  0100               	movlb	0	; () banked
 14337  000676  5180               	movf	??_isr& (0+255),w,b
 14338  000678  0100               	movlb	0	; () banked
 14339  00067A  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14340  00067C  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;main.c: 236: curr_state = BOTTLECOUNT4;
 14344  00067E  0E09               	movlw	9
 14345  000680  0100               	movlb	0	; () banked
 14346  000682  6FED               	movwf	_curr_state& (0+255),b
 14347  000684                     i2l6978:
 14348  000684  3881               	swapf	3969,w,c	;volatile
 14349  000686  0B0F               	andlw	15
 14350  000688  0A07               	xorlw	7
 14351  00068A  A4D8               	btfss	status,2,c
 14352  00068C  D114               	goto	i2l357
 14353  00068E  D7FA               	goto	i2l6978
 14354  000690                     i2l394:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;main.c: 240: LATAbits.LATA2 = 0;
 14358  000690  9489               	bcf	3977,2,c	;volatile
 14359                           
 14360                           ;main.c: 241: TMR0IE = 0;
 14361  000692  9AF2               	bcf	intcon,5,c	;volatile
 14362                           
 14363                           ;main.c: 242: TMR0ON = 0;
 14364  000694  9ED5               	bcf	4053,7,c	;volatile
 14365                           
 14366                           ;main.c: 243: TMR1ON = 0;
 14367  000696  90CD               	bcf	4045,0,c	;volatile
 14368                           
 14369                           ;main.c: 244: TMR3ON = 0;
 14370  000698  90B1               	bcf	4017,0,c	;volatile
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;main.c: 246: read_time();
 14374  00069A  ECBD  F026         	call	i2_read_time	;wreg free
 14375                           
 14376                           ;main.c: 247: end_time[1] = time[1];
 14377  00069E  C111  F077         	movff	_time+1,_end_time+1
 14378                           
 14379                           ;main.c: 248: end_time[0] = time[0];
 14380  0006A2  C110  F076         	movff	_time,_end_time
 14381                           
 14382                           ;main.c: 249: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14383  0006A6  C07B  F063         	movff	_start_time+1,i2dec_to_hex@num
 14384  0006AA  6A64               	clrf	i2dec_to_hex@num+1,c
 14385  0006AC  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14386  0006B0  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14387  0006B4  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14388                           
 14389                           ;main.c: 249: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14390  0006B8  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14391  0006BC  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14392  0006C0  0E00               	movlw	0
 14393  0006C2  6E04               	movwf	i2___wmul@multiplicand+1,c
 14394  0006C4  0E3C               	movlw	60
 14395  0006C6  6E03               	movwf	i2___wmul@multiplicand,c
 14396  0006C8  ECDC  F029         	call	i2___wmul	;wreg free
 14397  0006CC  C001  F080         	movff	?i2___wmul,??_isr
 14398  0006D0  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14399  0006D4  C07A  F063         	movff	_start_time,i2dec_to_hex@num
 14400  0006D8  6A64               	clrf	i2dec_to_hex@num+1,c
 14401  0006DA  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14402  0006DE  5063               	movf	?i2_dec_to_hex,w,c
 14403  0006E0  0100               	movlb	0	; () banked
 14404  0006E2  2580               	addwf	??_isr& (0+255),w,b
 14405  0006E4  0101               	movlb	1	; () banked
 14406  0006E6  6F47               	movwf	_stime& (0+255),b
 14407  0006E8  5064               	movf	?i2_dec_to_hex+1,w,c
 14408  0006EA  0100               	movlb	0	; () banked
 14409  0006EC  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14410  0006EE  0101               	movlb	1	; () banked
 14411  0006F0  6F48               	movwf	(_stime+1)& (0+255),b
 14412                           
 14413                           ; BSR set to: 1
 14414                           ;main.c: 250: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14415  0006F2  C077  F063         	movff	_end_time+1,i2dec_to_hex@num
 14416  0006F6  6A64               	clrf	i2dec_to_hex@num+1,c
 14417  0006F8  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14418  0006FC  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14419  000700  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14420                           
 14421                           ;main.c: 250: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14422  000704  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14423  000708  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14424  00070C  0E00               	movlw	0
 14425  00070E  6E04               	movwf	i2___wmul@multiplicand+1,c
 14426  000710  0E3C               	movlw	60
 14427  000712  6E03               	movwf	i2___wmul@multiplicand,c
 14428  000714  ECDC  F029         	call	i2___wmul	;wreg free
 14429  000718  C001  F080         	movff	?i2___wmul,??_isr
 14430  00071C  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14431  000720  C076  F063         	movff	_end_time,i2dec_to_hex@num
 14432  000724  6A64               	clrf	i2dec_to_hex@num+1,c
 14433  000726  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14434  00072A  5063               	movf	?i2_dec_to_hex,w,c
 14435  00072C  0100               	movlb	0	; () banked
 14436  00072E  2580               	addwf	??_isr& (0+255),w,b
 14437  000730  0101               	movlb	1	; () banked
 14438  000732  6F31               	movwf	_etime& (0+255),b
 14439  000734  5064               	movf	?i2_dec_to_hex+1,w,c
 14440  000736  0100               	movlb	0	; () banked
 14441  000738  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14442  00073A  0101               	movlb	1	; () banked
 14443  00073C  6F32               	movwf	(_etime+1)& (0+255),b
 14444                           
 14445                           ; BSR set to: 1
 14446                           ;main.c: 251: lcdInst(0b00000001);
 14447  00073E  0E01               	movlw	1
 14448  000740  EC6D  F02A         	call	i2_lcdInst
 14449                           
 14450                           ;main.c: 252: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14451  000744  0E00               	movlw	0
 14452  000746  0100               	movlb	0	; () banked
 14453  000748  6FEC               	movwf	(_i+1)& (0+255),b
 14454  00074A  0E00               	movlw	0
 14455  00074C  6FEB               	movwf	_i& (0+255),b
 14456  00074E                     i2l6998:
 14457                           
 14458                           ; BSR set to: 0
 14459  00074E  0100               	movlb	0	; () banked
 14460  000750  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14461  000752  D008               	goto	i2l7002
 14462  000754  0100               	movlb	0	; () banked
 14463  000756  51EC               	movf	(_i+1)& (0+255),w,b
 14464  000758  E118               	bnz	i2l7008
 14465  00075A  0E05               	movlw	5
 14466  00075C  0100               	movlb	0	; () banked
 14467  00075E  5DEB               	subwf	_i& (0+255),w,b
 14468  000760  B0D8               	btfsc	status,0,c
 14469  000762  D013               	goto	i2l7008
 14470  000764                     i2l7002:
 14471                           
 14472                           ; BSR set to: 0
 14473  000764  90D8               	bcf	status,0,c
 14474  000766  0100               	movlb	0	; () banked
 14475  000768  35EB               	rlcf	_i& (0+255),w,b
 14476  00076A  6ED9               	movwf	fsr2l,c
 14477  00076C  0100               	movlb	0	; () banked
 14478  00076E  35EC               	rlcf	(_i+1)& (0+255),w,b
 14479  000770  6EDA               	movwf	fsr2h,c
 14480  000772  0E72               	movlw	low _bottle_count_disp
 14481  000774  26D9               	addwf	fsr2l,f,c
 14482  000776  0E01               	movlw	high _bottle_count_disp
 14483  000778  22DA               	addwfc	fsr2h,f,c
 14484  00077A  0EFF               	movlw	255
 14485  00077C  6EDE               	movwf	postinc2,c
 14486  00077E  0EFF               	movlw	255
 14487  000780  6EDD               	movwf	postdec2,c
 14488                           
 14489                           ; BSR set to: 0
 14490  000782  0100               	movlb	0	; () banked
 14491  000784  4BEB               	infsnz	_i& (0+255),f,b
 14492  000786  2BEC               	incf	(_i+1)& (0+255),f,b
 14493  000788  D7E2               	goto	i2l6998
 14494  00078A                     i2l7008:
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;main.c: 253: savedata();
 14498  00078A  ECAA  F00F         	call	i2_savedata	;wreg free
 14499                           
 14500                           ;main.c: 254: curr_state = OPERATIONEND;
 14501  00078E  0E03               	movlw	3
 14502  000790  D051               	goto	L21
 14503  000792                     i2l7012:
 14504                           
 14505                           ; BSR set to: 0
 14506                           ;main.c: 257: read_colorsensor();
 14507  000792  ECEB  F020         	call	i2_read_colorsensor	;wreg free
 14508                           
 14509                           ;main.c: 258: lcdInst(0b10000000);
 14510  000796  0E80               	movlw	128
 14511  000798  EC6D  F02A         	call	i2_lcdInst
 14512                           
 14513                           ;main.c: 259: printf("C%u R%u                ", color[0], color[1]);
 14514  00079C  0E6E               	movlw	low STR_2
 14515  00079E  6E0D               	movwf	i2printf@f,c
 14516  0007A0  0EFE               	movlw	high STR_2
 14517  0007A2  6E0E               	movwf	i2printf@f+1,c
 14518  0007A4  C100  F00F         	movff	_color,?i2_printf+2
 14519  0007A8  C101  F010         	movff	_color+1,?i2_printf+3
 14520  0007AC  C102  F011         	movff	_color+2,?i2_printf+4
 14521  0007B0  C103  F012         	movff	_color+3,?i2_printf+5
 14522  0007B4  EC0E  F00A         	call	i2_printf	;wreg free
 14523                           
 14524                           ;main.c: 260: lcdInst(0b11000000);
 14525  0007B8  0EC0               	movlw	192
 14526  0007BA  EC6D  F02A         	call	i2_lcdInst
 14527                           
 14528                           ;main.c: 261: printf("G%u B%u                ", color[2], color[3]);
 14529  0007BE  0E56               	movlw	low STR_3
 14530  0007C0  6E0D               	movwf	i2printf@f,c
 14531  0007C2  0EFE               	movlw	high STR_3
 14532  0007C4  6E0E               	movwf	i2printf@f+1,c
 14533  0007C6  C104  F00F         	movff	_color+4,?i2_printf+2
 14534  0007CA  C105  F010         	movff	_color+5,?i2_printf+3
 14535  0007CE  C106  F011         	movff	_color+6,?i2_printf+4
 14536  0007D2  C107  F012         	movff	_color+7,?i2_printf+5
 14537  0007D6  EC0E  F00A         	call	i2_printf	;wreg free
 14538                           
 14539                           ;main.c: 262: break;
 14540  0007DA  D06D               	goto	i2l357
 14541  0007DC                     i2l398:
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;main.c: 264: LATAbits.LATA2 = 0;
 14545  0007DC  9489               	bcf	3977,2,c	;volatile
 14546                           
 14547                           ;main.c: 265: (INTCONbits.GIE = 0);
 14548  0007DE  9EF2               	bcf	intcon,7,c	;volatile
 14549                           
 14550                           ;main.c: 266: TMR0ON = 0;
 14551  0007E0  9ED5               	bcf	4053,7,c	;volatile
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;main.c: 267: lcdInst(0b00000001);
 14555  0007E2  0E01               	movlw	1
 14556  0007E4  EC6D  F02A         	call	i2_lcdInst
 14557                           
 14558                           ;main.c: 268: curr_state = EMERGENCYSTOP;
 14559  0007E8  0E01               	movlw	1
 14560  0007EA  D024               	goto	L21
 14561  0007EC                     i2l7022:
 14562                           
 14563                           ; BSR set to: 0
 14564                           ;main.c: 271: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14565  0007EC  0E00               	movlw	0
 14566  0007EE  0100               	movlb	0	; () banked
 14567  0007F0  6FEC               	movwf	(_i+1)& (0+255),b
 14568  0007F2  0E00               	movlw	0
 14569  0007F4  6FEB               	movwf	_i& (0+255),b
 14570  0007F6                     i2l7024:
 14571                           
 14572                           ; BSR set to: 0
 14573  0007F6  0100               	movlb	0	; () banked
 14574  0007F8  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14575  0007FA  D008               	goto	i2l7028
 14576  0007FC  0100               	movlb	0	; () banked
 14577  0007FE  51EC               	movf	(_i+1)& (0+255),w,b
 14578  000800  E118               	bnz	i2l7034
 14579  000802  0E05               	movlw	5
 14580  000804  0100               	movlb	0	; () banked
 14581  000806  5DEB               	subwf	_i& (0+255),w,b
 14582  000808  B0D8               	btfsc	status,0,c
 14583  00080A  D013               	goto	i2l7034
 14584  00080C                     i2l7028:
 14585                           
 14586                           ; BSR set to: 0
 14587  00080C  90D8               	bcf	status,0,c
 14588  00080E  0100               	movlb	0	; () banked
 14589  000810  35EB               	rlcf	_i& (0+255),w,b
 14590  000812  6ED9               	movwf	fsr2l,c
 14591  000814  0100               	movlb	0	; () banked
 14592  000816  35EC               	rlcf	(_i+1)& (0+255),w,b
 14593  000818  6EDA               	movwf	fsr2h,c
 14594  00081A  0E72               	movlw	low _bottle_count_disp
 14595  00081C  26D9               	addwf	fsr2l,f,c
 14596  00081E  0E01               	movlw	high _bottle_count_disp
 14597  000820  22DA               	addwfc	fsr2h,f,c
 14598  000822  0EFF               	movlw	255
 14599  000824  6EDE               	movwf	postinc2,c
 14600  000826  0EFF               	movlw	255
 14601  000828  6EDD               	movwf	postdec2,c
 14602                           
 14603                           ; BSR set to: 0
 14604  00082A  0100               	movlb	0	; () banked
 14605  00082C  4BEB               	infsnz	_i& (0+255),f,b
 14606  00082E  2BEC               	incf	(_i+1)& (0+255),f,b
 14607  000830  D7E2               	goto	i2l7024
 14608  000832                     i2l7034:
 14609                           
 14610                           ; BSR set to: 0
 14611                           ;main.c: 272: curr_state = STANDBY;
 14612  000832  0E00               	movlw	0
 14613  000834                     L21:
 14614  000834  0100               	movlb	0	; () banked
 14615  000836  6FED               	movwf	_curr_state& (0+255),b
 14616                           
 14617                           ;main.c: 273: break;
 14618  000838  D03E               	goto	i2l357
 14619  00083A                     i2l7036:
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;main.c: 275: bottle_count_array[0] += 1;
 14623  00083A  0100               	movlb	0	; () banked
 14624  00083C  4BDF               	infsnz	_bottle_count_array& (0+255),f,b
 14625  00083E  2BE0               	incf	(_bottle_count_array+1)& (0+255),f,b
 14626                           
 14627                           ;main.c: 276: break;
 14628  000840  D03A               	goto	i2l357
 14629  000842                     i2l7038:
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;main.c: 278: savedata();
 14633  000842  ECAA  F00F         	call	i2_savedata	;wreg free
 14634                           
 14635                           ;main.c: 280: }
 14636                           
 14637                           ;main.c: 279: break;
 14638  000846  D037               	goto	i2l357
 14639  000848                     i2l7042:
 14640  000848  3881               	swapf	3969,w,c	;volatile
 14641  00084A  0B0F               	andlw	15
 14642  00084C  0100               	movlb	0	; () banked
 14643  00084E  6F80               	movwf	??_isr& (0+255),b
 14644  000850  6B81               	clrf	(??_isr+1)& (0+255),b
 14645                           
 14646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14647                           ; Switch size 1, requested type "space"
 14648                           ; Number of cases is 1, Range of values is 0 to 0
 14649                           ; switch strategies available:
 14650                           ; Name         Instructions Cycles
 14651                           ; simple_byte            4     3 (average)
 14652                           ;	Chosen strategy is simple_byte
 14653  000852  0100               	movlb	0	; () banked
 14654  000854  5181               	movf	(??_isr+1)& (0+255),w,b
 14655  000856  0A00               	xorlw	0	; case 0
 14656  000858  A4D8               	btfss	status,2,c
 14657  00085A  D02D               	goto	i2l357
 14658                           
 14659                           ; BSR set to: 0
 14660                           ; Switch size 1, requested type "space"
 14661                           ; Number of cases is 14, Range of values is 0 to 14
 14662                           ; switch strategies available:
 14663                           ; Name         Instructions Cycles
 14664                           ; simple_byte           43    22 (average)
 14665                           ;	Chosen strategy is simple_byte
 14666  00085C  0100               	movlb	0	; () banked
 14667  00085E  5180               	movf	??_isr& (0+255),w,b
 14668  000860  0A00               	xorlw	0	; case 0
 14669  000862  B4D8               	btfsc	status,2,c
 14670  000864  EF2A  F000         	goto	i2l354
 14671  000868  0A01               	xorlw	1	; case 1
 14672  00086A  B4D8               	btfsc	status,2,c
 14673  00086C  D455               	goto	i2l358
 14674  00086E  0A03               	xorlw	3	; case 2
 14675  000870  B4D8               	btfsc	status,2,c
 14676  000872  D4CB               	goto	i2l6838
 14677  000874  0A01               	xorlw	1	; case 3
 14678  000876  B4D8               	btfsc	status,2,c
 14679  000878  D502               	goto	i2l6854
 14680  00087A  0A07               	xorlw	7	; case 4
 14681  00087C  B4D8               	btfsc	status,2,c
 14682  00087E  D524               	goto	i2l370
 14683  000880  0A01               	xorlw	1	; case 5
 14684  000882  B4D8               	btfsc	status,2,c
 14685  000884  D59A               	goto	i2l376
 14686  000886  0A03               	xorlw	3	; case 6
 14687  000888  B4D8               	btfsc	status,2,c
 14688  00088A  D610               	goto	i2l382
 14689  00088C  0A01               	xorlw	1	; case 7
 14690  00088E  B4D8               	btfsc	status,2,c
 14691  000890  D686               	goto	i2l388
 14692  000892  0A0F               	xorlw	15	; case 8
 14693  000894  B4D8               	btfsc	status,2,c
 14694  000896  D6FC               	goto	i2l394
 14695  000898  0A01               	xorlw	1	; case 9
 14696  00089A  B4D8               	btfsc	status,2,c
 14697  00089C  D77A               	goto	i2l7012
 14698  00089E  0A03               	xorlw	3	; case 10
 14699  0008A0  B4D8               	btfsc	status,2,c
 14700  0008A2  D7CB               	goto	i2l7036
 14701  0008A4  0A01               	xorlw	1	; case 11
 14702  0008A6  B4D8               	btfsc	status,2,c
 14703  0008A8  D7CC               	goto	i2l7038
 14704  0008AA  0A07               	xorlw	7	; case 12
 14705  0008AC  B4D8               	btfsc	status,2,c
 14706  0008AE  D796               	goto	i2l398
 14707  0008B0  0A02               	xorlw	2	; case 14
 14708  0008B2  B4D8               	btfsc	status,2,c
 14709  0008B4  D79B               	goto	i2l7022
 14710  0008B6                     i2l357:
 14711                           
 14712                           ;main.c: 281: INT1IF = 0;
 14713  0008B6  90F0               	bcf	intcon3,0,c	;volatile
 14714                           
 14715                           ;main.c: 282: }
 14716  0008B8  D0EF               	goto	i2l428
 14717  0008BA                     i2l352:
 14718                           
 14719                           ;main.c: 283: else if (TMR1IF){
 14720  0008BA  A09E               	btfss	3998,0,c	;volatile
 14721  0008BC  D01D               	goto	i2l405
 14722                           
 14723                           ;main.c: 284: if(servo0_flag){
 14724  0008BE  507E               	movf	_servo0_flag,w,c
 14725  0008C0  B4D8               	btfsc	status,2,c
 14726  0008C2  D007               	goto	i2l406
 14727                           
 14728                           ;main.c: 285: LATCbits.LATC0 = 0;
 14729  0008C4  908B               	bcf	3979,0,c	;volatile
 14730                           
 14731                           ;main.c: 286: TMR1 = 16517;
 14732  0008C6  0E40               	movlw	64
 14733  0008C8  6ECF               	movwf	4047,c	;volatile
 14734  0008CA  0E85               	movlw	133
 14735  0008CC  6ECE               	movwf	4046,c	;volatile
 14736                           
 14737                           ;main.c: 287: servo0_flag = 0;
 14738  0008CE  0E00               	movlw	0
 14739  0008D0  D010               	goto	L22
 14740  0008D2                     i2l406:
 14741                           
 14742                           ;main.c: 289: else{
 14743                           ;main.c: 290: LATCbits.LATC0 = 1;
 14744  0008D2  808B               	bsf	3979,0,c	;volatile
 14745                           
 14746                           ;main.c: 291: if(servo0_timer) TMR1 = 63000;
 14747  0008D4  0101               	movlb	1	; () banked
 14748  0008D6  5143               	movf	_servo0_timer& (0+255),w,b
 14749  0008D8  0101               	movlb	1	; () banked
 14750  0008DA  1144               	iorwf	(_servo0_timer+1)& (0+255),w,b
 14751  0008DC  B4D8               	btfsc	status,2,c
 14752  0008DE  D004               	goto	i2l7054
 14753                           
 14754                           ; BSR set to: 1
 14755  0008E0  0EF6               	movlw	246
 14756  0008E2  6ECF               	movwf	4047,c	;volatile
 14757  0008E4  0E18               	movlw	24
 14758  0008E6  D003               	goto	L23
 14759  0008E8                     i2l7054:
 14760                           
 14761                           ; BSR set to: 1
 14762                           ;main.c: 292: else TMR1 = 62000;
 14763  0008E8  0EF2               	movlw	242
 14764  0008EA  6ECF               	movwf	4047,c	;volatile
 14765  0008EC  0E30               	movlw	48
 14766  0008EE                     L23:
 14767  0008EE  6ECE               	movwf	4046,c	;volatile
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;main.c: 293: servo0_flag = 1;
 14771  0008F0  0E01               	movlw	1
 14772  0008F2                     L22:
 14773  0008F2  6E7E               	movwf	_servo0_flag,c
 14774                           
 14775                           ;main.c: 294: }
 14776                           ;main.c: 295: TMR1IF = 0;
 14777                           
 14778                           ; BSR set to: 1
 14779  0008F4  909E               	bcf	3998,0,c	;volatile
 14780                           
 14781                           ;main.c: 296: }
 14782  0008F6  D0D0               	goto	i2l428
 14783  0008F8                     i2l405:
 14784                           
 14785                           ;main.c: 297: else if (TMR3IF){
 14786  0008F8  A2A1               	btfss	4001,1,c	;volatile
 14787  0008FA  D01F               	goto	i2l411
 14788                           
 14789                           ;main.c: 298: if(servo1_flag){
 14790  0008FC  0100               	movlb	0	; () banked
 14791  0008FE  51EE               	movf	_servo1_flag& (0+255),w,b
 14792  000900  B4D8               	btfsc	status,2,c
 14793  000902  D007               	goto	i2l412
 14794                           
 14795                           ; BSR set to: 0
 14796                           ;main.c: 299: LATCbits.LATC1 = 0;
 14797  000904  928B               	bcf	3979,1,c	;volatile
 14798                           
 14799                           ; BSR set to: 0
 14800                           ;main.c: 300: TMR3 = 16517;
 14801  000906  0E40               	movlw	64
 14802  000908  6EB3               	movwf	4019,c	;volatile
 14803  00090A  0E85               	movlw	133
 14804  00090C  6EB2               	movwf	4018,c	;volatile
 14805                           
 14806                           ;main.c: 301: servo1_flag = 0;
 14807  00090E  0E00               	movlw	0
 14808  000910  D010               	goto	L24
 14809  000912                     i2l412:
 14810                           
 14811                           ; BSR set to: 0
 14812                           ;main.c: 303: else{
 14813                           ;main.c: 304: LATCbits.LATC1 = 1;
 14814  000912  828B               	bsf	3979,1,c	;volatile
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;main.c: 305: if(servo1_timer) TMR3 = 62000;
 14818  000914  0101               	movlb	1	; () banked
 14819  000916  5145               	movf	_servo1_timer& (0+255),w,b
 14820  000918  0101               	movlb	1	; () banked
 14821  00091A  1146               	iorwf	(_servo1_timer+1)& (0+255),w,b
 14822  00091C  B4D8               	btfsc	status,2,c
 14823  00091E  D004               	goto	i2l7068
 14824                           
 14825                           ; BSR set to: 1
 14826  000920  0EF2               	movlw	242
 14827  000922  6EB3               	movwf	4019,c	;volatile
 14828  000924  0E30               	movlw	48
 14829  000926  D003               	goto	L25
 14830  000928                     i2l7068:
 14831                           
 14832                           ; BSR set to: 1
 14833                           ;main.c: 306: else TMR3 = 63000;
 14834  000928  0EF6               	movlw	246
 14835  00092A  6EB3               	movwf	4019,c	;volatile
 14836  00092C  0E18               	movlw	24
 14837  00092E                     L25:
 14838  00092E  6EB2               	movwf	4018,c	;volatile
 14839                           
 14840                           ; BSR set to: 1
 14841                           ;main.c: 307: servo1_flag = 1;
 14842  000930  0E01               	movlw	1
 14843  000932                     L24:
 14844  000932  0100               	movlb	0	; () banked
 14845  000934  6FEE               	movwf	_servo1_flag& (0+255),b
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;main.c: 308: }
 14849                           ;main.c: 309: TMR3IF = 0;
 14850                           
 14851                           ; BSR set to: 0
 14852  000936  92A1               	bcf	4001,1,c	;volatile
 14853                           
 14854                           ;main.c: 310: }
 14855  000938  D0AF               	goto	i2l428
 14856  00093A                     i2l411:
 14857                           
 14858                           ;main.c: 311: else if (TMR0IF){
 14859  00093A  A4F2               	btfss	intcon,2,c	;volatile
 14860  00093C  D093               	goto	i2l7112
 14861                           
 14862                           ;main.c: 312: if(operation_timeout > 4){
 14863  00093E  0101               	movlb	1	; () banked
 14864  000940  BF42               	btfsc	(_operation_timeout+1)& (0+255),7,b
 14865  000942  D08B               	goto	i2l7108
 14866  000944  0101               	movlb	1	; () banked
 14867  000946  5142               	movf	(_operation_timeout+1)& (0+255),w,b
 14868  000948  E105               	bnz	i2u695_40
 14869  00094A  0E05               	movlw	5
 14870  00094C  0101               	movlb	1	; () banked
 14871  00094E  5D41               	subwf	_operation_timeout& (0+255),w,b
 14872  000950  A0D8               	btfss	status,0,c
 14873  000952  D083               	goto	i2l7108
 14874  000954                     i2u695_40:
 14875                           
 14876                           ; BSR set to: 1
 14877                           ;main.c: 313: LATAbits.LATA2 = 0;
 14878  000954  9489               	bcf	3977,2,c	;volatile
 14879                           
 14880                           ;main.c: 314: TMR0IE = 0;
 14881  000956  9AF2               	bcf	intcon,5,c	;volatile
 14882                           
 14883                           ;main.c: 315: TMR0ON = 0;
 14884  000958  9ED5               	bcf	4053,7,c	;volatile
 14885                           
 14886                           ;main.c: 316: TMR1ON = 0;
 14887  00095A  90CD               	bcf	4045,0,c	;volatile
 14888                           
 14889                           ;main.c: 317: TMR3ON = 0;
 14890  00095C  90B1               	bcf	4017,0,c	;volatile
 14891                           
 14892                           ; BSR set to: 1
 14893                           ;main.c: 319: read_time();
 14894  00095E  ECBD  F026         	call	i2_read_time	;wreg free
 14895                           
 14896                           ;main.c: 320: end_time[1] = time[1];
 14897  000962  C111  F077         	movff	_time+1,_end_time+1
 14898                           
 14899                           ;main.c: 321: end_time[0] = time[0];
 14900  000966  C110  F076         	movff	_time,_end_time
 14901                           
 14902                           ;main.c: 322: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14903  00096A  C07B  F063         	movff	_start_time+1,i2dec_to_hex@num
 14904  00096E  6A64               	clrf	i2dec_to_hex@num+1,c
 14905  000970  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14906  000974  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14907  000978  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14908                           
 14909                           ;main.c: 322: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14910  00097C  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14911  000980  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14912  000984  0E00               	movlw	0
 14913  000986  6E04               	movwf	i2___wmul@multiplicand+1,c
 14914  000988  0E3C               	movlw	60
 14915  00098A  6E03               	movwf	i2___wmul@multiplicand,c
 14916  00098C  ECDC  F029         	call	i2___wmul	;wreg free
 14917  000990  C001  F080         	movff	?i2___wmul,??_isr
 14918  000994  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14919  000998  C07A  F063         	movff	_start_time,i2dec_to_hex@num
 14920  00099C  6A64               	clrf	i2dec_to_hex@num+1,c
 14921  00099E  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14922  0009A2  5063               	movf	?i2_dec_to_hex,w,c
 14923  0009A4  0100               	movlb	0	; () banked
 14924  0009A6  2580               	addwf	??_isr& (0+255),w,b
 14925  0009A8  0101               	movlb	1	; () banked
 14926  0009AA  6F47               	movwf	_stime& (0+255),b
 14927  0009AC  5064               	movf	?i2_dec_to_hex+1,w,c
 14928  0009AE  0100               	movlb	0	; () banked
 14929  0009B0  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14930  0009B2  0101               	movlb	1	; () banked
 14931  0009B4  6F48               	movwf	(_stime+1)& (0+255),b
 14932                           
 14933                           ; BSR set to: 1
 14934                           ;main.c: 323: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14935  0009B6  C077  F063         	movff	_end_time+1,i2dec_to_hex@num
 14936  0009BA  6A64               	clrf	i2dec_to_hex@num+1,c
 14937  0009BC  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14938  0009C0  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14939  0009C4  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14940                           
 14941                           ;main.c: 323: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14942  0009C8  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14943  0009CC  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14944  0009D0  0E00               	movlw	0
 14945  0009D2  6E04               	movwf	i2___wmul@multiplicand+1,c
 14946  0009D4  0E3C               	movlw	60
 14947  0009D6  6E03               	movwf	i2___wmul@multiplicand,c
 14948  0009D8  ECDC  F029         	call	i2___wmul	;wreg free
 14949  0009DC  C001  F080         	movff	?i2___wmul,??_isr
 14950  0009E0  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14951  0009E4  C076  F063         	movff	_end_time,i2dec_to_hex@num
 14952  0009E8  6A64               	clrf	i2dec_to_hex@num+1,c
 14953  0009EA  ECA5  F01D         	call	i2_dec_to_hex	;wreg free
 14954  0009EE  5063               	movf	?i2_dec_to_hex,w,c
 14955  0009F0  0100               	movlb	0	; () banked
 14956  0009F2  2580               	addwf	??_isr& (0+255),w,b
 14957  0009F4  0101               	movlb	1	; () banked
 14958  0009F6  6F31               	movwf	_etime& (0+255),b
 14959  0009F8  5064               	movf	?i2_dec_to_hex+1,w,c
 14960  0009FA  0100               	movlb	0	; () banked
 14961  0009FC  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14962  0009FE  0101               	movlb	1	; () banked
 14963  000A00  6F32               	movwf	(_etime+1)& (0+255),b
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;main.c: 324: lcdInst(0b00000001);
 14967  000A02  0E01               	movlw	1
 14968  000A04  EC6D  F02A         	call	i2_lcdInst
 14969                           
 14970                           ;main.c: 325: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14971  000A08  0E00               	movlw	0
 14972  000A0A  0100               	movlb	0	; () banked
 14973  000A0C  6FEC               	movwf	(_i+1)& (0+255),b
 14974  000A0E  0E00               	movlw	0
 14975  000A10  6FEB               	movwf	_i& (0+255),b
 14976  000A12                     i2l7094:
 14977                           
 14978                           ; BSR set to: 0
 14979  000A12  0100               	movlb	0	; () banked
 14980  000A14  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14981  000A16  D008               	goto	i2l7098
 14982  000A18  0100               	movlb	0	; () banked
 14983  000A1A  51EC               	movf	(_i+1)& (0+255),w,b
 14984  000A1C  E118               	bnz	i2l7104
 14985  000A1E  0E05               	movlw	5
 14986  000A20  0100               	movlb	0	; () banked
 14987  000A22  5DEB               	subwf	_i& (0+255),w,b
 14988  000A24  B0D8               	btfsc	status,0,c
 14989  000A26  D013               	goto	i2l7104
 14990  000A28                     i2l7098:
 14991                           
 14992                           ; BSR set to: 0
 14993  000A28  90D8               	bcf	status,0,c
 14994  000A2A  0100               	movlb	0	; () banked
 14995  000A2C  35EB               	rlcf	_i& (0+255),w,b
 14996  000A2E  6ED9               	movwf	fsr2l,c
 14997  000A30  0100               	movlb	0	; () banked
 14998  000A32  35EC               	rlcf	(_i+1)& (0+255),w,b
 14999  000A34  6EDA               	movwf	fsr2h,c
 15000  000A36  0E72               	movlw	low _bottle_count_disp
 15001  000A38  26D9               	addwf	fsr2l,f,c
 15002  000A3A  0E01               	movlw	high _bottle_count_disp
 15003  000A3C  22DA               	addwfc	fsr2h,f,c
 15004  000A3E  0EFF               	movlw	255
 15005  000A40  6EDE               	movwf	postinc2,c
 15006  000A42  0EFF               	movlw	255
 15007  000A44  6EDD               	movwf	postdec2,c
 15008                           
 15009                           ; BSR set to: 0
 15010  000A46  0100               	movlb	0	; () banked
 15011  000A48  4BEB               	infsnz	_i& (0+255),f,b
 15012  000A4A  2BEC               	incf	(_i+1)& (0+255),f,b
 15013  000A4C  D7E2               	goto	i2l7094
 15014  000A4E                     i2l7104:
 15015                           
 15016                           ; BSR set to: 0
 15017                           ;main.c: 326: savedata();
 15018  000A4E  ECAA  F00F         	call	i2_savedata	;wreg free
 15019                           
 15020                           ;main.c: 327: curr_state = OPERATIONEND;
 15021  000A52  0E03               	movlw	3
 15022  000A54  0100               	movlb	0	; () banked
 15023  000A56  6FED               	movwf	_curr_state& (0+255),b
 15024                           
 15025                           ;main.c: 328: }
 15026  000A58  D003               	goto	i2l7110
 15027  000A5A                     i2l7108:
 15028                           
 15029                           ;main.c: 329: else operation_timeout += 1;
 15030  000A5A  0101               	movlb	1	; () banked
 15031  000A5C  4B41               	infsnz	_operation_timeout& (0+255),f,b
 15032  000A5E  2B42               	incf	(_operation_timeout+1)& (0+255),f,b
 15033  000A60                     i2l7110:
 15034                           
 15035                           ;main.c: 330: TMR0IF = 0;
 15036  000A60  94F2               	bcf	intcon,2,c	;volatile
 15037                           
 15038                           ;main.c: 331: }
 15039  000A62  D01A               	goto	i2l428
 15040  000A64                     i2l7112:
 15041                           
 15042                           ;main.c: 334: lcdInst(0b10000000);
 15043  000A64  0E80               	movlw	128
 15044  000A66  EC6D  F02A         	call	i2_lcdInst
 15045                           
 15046                           ;main.c: 335: printf("ERR: BAD ISR");
 15047  000A6A  0EE1               	movlw	low STR_4
 15048  000A6C  6E0D               	movwf	i2printf@f,c
 15049  000A6E  0EFF               	movlw	high STR_4
 15050  000A70  6E0E               	movwf	i2printf@f+1,c
 15051  000A72  EC0E  F00A         	call	i2_printf	;wreg free
 15052                           
 15053                           ;main.c: 336: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
 15054  000A76  0E00               	movlw	0
 15055  000A78  6E73               	movwf	isr@i,c
 15056  000A7A                     i2l7118:
 15057  000A7A  0E63               	movlw	99
 15058  000A7C  6473               	cpfsgt	isr@i,c
 15059  000A7E  D001               	goto	i2l7122
 15060  000A80  D7F1               	goto	i2l7112
 15061  000A82                     i2l7122:
 15062  000A82  0E21               	movlw	33
 15063  000A84  0100               	movlb	0	; () banked
 15064  000A86  6F80               	movwf	??_isr& (0+255),b
 15065  000A88  0E76               	movlw	118
 15066  000A8A                     i2u889_47:
 15067  000A8A  2EE8               	decfsz	wreg,f,c
 15068  000A8C  D7FE               	bra	i2u889_47
 15069  000A8E  2F80               	decfsz	??_isr& (0+255),f,b
 15070  000A90  D7FC               	bra	i2u889_47
 15071  000A92  F000               	nop	
 15072  000A94  2A73               	incf	isr@i,f,c
 15073  000A96  D7F1               	goto	i2l7118
 15074  000A98                     i2l428:
 15075  000A98  C08F  FFF5         	movff	??_isr+15,tablat
 15076  000A9C  C08E  FFF8         	movff	??_isr+14,tblptru
 15077  000AA0  C08D  FFF7         	movff	??_isr+13,tblptrh
 15078  000AA4  C08C  FFF6         	movff	??_isr+12,tblptrl
 15079  000AA8  C08B  FFF4         	movff	??_isr+11,prodh
 15080  000AAC  C08A  FFF3         	movff	??_isr+10,prodl
 15081  000AB0  C089  FFDA         	movff	??_isr+9,fsr2h
 15082  000AB4  C088  FFD9         	movff	??_isr+8,fsr2l
 15083  000AB8  C087  FFE2         	movff	??_isr+7,fsr1h
 15084  000ABC  C086  FFE1         	movff	??_isr+6,fsr1l
 15085  000AC0  C085  FFEA         	movff	??_isr+5,fsr0h
 15086  000AC4  C084  FFE9         	movff	??_isr+4,fsr0l
 15087  000AC8  C083  FFFB         	movff	??_isr+3,pclatu
 15088  000ACC  C082  FFFA         	movff	??_isr+2,pclath
 15089  000AD0  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15090  000AD2  0011               	retfie		f
 15091  000AD4                     __end_of_isr:
 15092                           	opt stack 0
 15093                           pclatu	equ	0xFFB
 15094                           pclath	equ	0xFFA
 15095                           tblptru	equ	0xFF8
 15096                           tblptrh	equ	0xFF7
 15097                           tblptrl	equ	0xFF6
 15098                           tablat	equ	0xFF5
 15099                           prodh	equ	0xFF4
 15100                           prodl	equ	0xFF3
 15101                           intcon	equ	0xFF2
 15102                           intcon2	equ	0xFF1
 15103                           intcon3	equ	0xFF0
 15104                           postinc0	equ	0xFEE
 15105                           fsr0h	equ	0xFEA
 15106                           fsr0l	equ	0xFE9
 15107                           wreg	equ	0xFE8
 15108                           postdec1	equ	0xFE5
 15109                           fsr1h	equ	0xFE2
 15110                           fsr1l	equ	0xFE1
 15111                           indf2	equ	0xFDF
 15112                           postinc2	equ	0xFDE
 15113                           postdec2	equ	0xFDD
 15114                           fsr2h	equ	0xFDA
 15115                           fsr2l	equ	0xFD9
 15116                           status	equ	0xFD8
 15117                           
 15118 ;; *************** function i2_savedata *****************
 15119 ;; Defined at:
 15120 ;;		line 787 in file "main.c"
 15121 ;; Parameters:    Size  Location     Type
 15122 ;;		None
 15123 ;; Auto vars:     Size  Location     Type
 15124 ;;		None
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, status,2, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15138 ;;Total ram usage:        0 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; Hardware stack levels required when called:    1
 15141 ;; This function calls:
 15142 ;;		i2_eeprom_readbyte
 15143 ;;		i2_eeprom_writebyte
 15144 ;; This function is called by:
 15145 ;;		_isr
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text57
 15150  001F54                     __ptext57:
 15151                           	opt stack 0
 15152  001F54                     i2_savedata:
 15153                           	opt stack 21
 15154                           
 15155                           ;main.c: 794: eeprom_writebyte(44, eeprom_readbyte(39));
 15156                           
 15157                           ;incstack = 0
 15158  001F54  0E00               	movlw	0
 15159  001F56  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15160  001F58  0E2C               	movlw	44
 15161  001F5A  6E03               	movwf	i2eeprom_writebyte@address,c
 15162  001F5C  0E00               	movlw	0
 15163  001F5E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15164  001F60  0E27               	movlw	39
 15165  001F62  6E01               	movwf	i2eeprom_readbyte@address,c
 15166  001F64  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15167  001F68  6E05               	movwf	i2eeprom_writebyte@data,c
 15168  001F6A  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15169                           
 15170                           ;main.c: 795: eeprom_writebyte(43, eeprom_readbyte(38));
 15171  001F6E  0E00               	movlw	0
 15172  001F70  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15173  001F72  0E2B               	movlw	43
 15174  001F74  6E03               	movwf	i2eeprom_writebyte@address,c
 15175  001F76  0E00               	movlw	0
 15176  001F78  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15177  001F7A  0E26               	movlw	38
 15178  001F7C  6E01               	movwf	i2eeprom_readbyte@address,c
 15179  001F7E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15180  001F82  6E05               	movwf	i2eeprom_writebyte@data,c
 15181  001F84  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15182                           
 15183                           ;main.c: 796: eeprom_writebyte(42, eeprom_readbyte(37));
 15184  001F88  0E00               	movlw	0
 15185  001F8A  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15186  001F8C  0E2A               	movlw	42
 15187  001F8E  6E03               	movwf	i2eeprom_writebyte@address,c
 15188  001F90  0E00               	movlw	0
 15189  001F92  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15190  001F94  0E25               	movlw	37
 15191  001F96  6E01               	movwf	i2eeprom_readbyte@address,c
 15192  001F98  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15193  001F9C  6E05               	movwf	i2eeprom_writebyte@data,c
 15194  001F9E  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15195                           
 15196                           ;main.c: 797: eeprom_writebyte(41, eeprom_readbyte(36));
 15197  001FA2  0E00               	movlw	0
 15198  001FA4  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15199  001FA6  0E29               	movlw	41
 15200  001FA8  6E03               	movwf	i2eeprom_writebyte@address,c
 15201  001FAA  0E00               	movlw	0
 15202  001FAC  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15203  001FAE  0E24               	movlw	36
 15204  001FB0  6E01               	movwf	i2eeprom_readbyte@address,c
 15205  001FB2  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15206  001FB6  6E05               	movwf	i2eeprom_writebyte@data,c
 15207  001FB8  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15208                           
 15209                           ;main.c: 798: eeprom_writebyte(40, eeprom_readbyte(35));
 15210  001FBC  0E00               	movlw	0
 15211  001FBE  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15212  001FC0  0E28               	movlw	40
 15213  001FC2  6E03               	movwf	i2eeprom_writebyte@address,c
 15214  001FC4  0E00               	movlw	0
 15215  001FC6  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15216  001FC8  0E23               	movlw	35
 15217  001FCA  6E01               	movwf	i2eeprom_readbyte@address,c
 15218  001FCC  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15219  001FD0  6E05               	movwf	i2eeprom_writebyte@data,c
 15220  001FD2  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15221                           
 15222                           ;main.c: 800: eeprom_writebyte(39, eeprom_readbyte(34));
 15223  001FD6  0E00               	movlw	0
 15224  001FD8  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15225  001FDA  0E27               	movlw	39
 15226  001FDC  6E03               	movwf	i2eeprom_writebyte@address,c
 15227  001FDE  0E00               	movlw	0
 15228  001FE0  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15229  001FE2  0E22               	movlw	34
 15230  001FE4  6E01               	movwf	i2eeprom_readbyte@address,c
 15231  001FE6  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15232  001FEA  6E05               	movwf	i2eeprom_writebyte@data,c
 15233  001FEC  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15234                           
 15235                           ;main.c: 801: eeprom_writebyte(38, eeprom_readbyte(33));
 15236  001FF0  0E00               	movlw	0
 15237  001FF2  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15238  001FF4  0E26               	movlw	38
 15239  001FF6  6E03               	movwf	i2eeprom_writebyte@address,c
 15240  001FF8  0E00               	movlw	0
 15241  001FFA  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15242  001FFC  0E21               	movlw	33
 15243  001FFE  6E01               	movwf	i2eeprom_readbyte@address,c
 15244  002000  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15245  002004  6E05               	movwf	i2eeprom_writebyte@data,c
 15246  002006  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15247                           
 15248                           ;main.c: 802: eeprom_writebyte(37, eeprom_readbyte(32));
 15249  00200A  0E00               	movlw	0
 15250  00200C  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15251  00200E  0E25               	movlw	37
 15252  002010  6E03               	movwf	i2eeprom_writebyte@address,c
 15253  002012  0E00               	movlw	0
 15254  002014  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15255  002016  0E20               	movlw	32
 15256  002018  6E01               	movwf	i2eeprom_readbyte@address,c
 15257  00201A  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15258  00201E  6E05               	movwf	i2eeprom_writebyte@data,c
 15259  002020  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15260                           
 15261                           ;main.c: 803: eeprom_writebyte(36, eeprom_readbyte(31));
 15262  002024  0E00               	movlw	0
 15263  002026  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15264  002028  0E24               	movlw	36
 15265  00202A  6E03               	movwf	i2eeprom_writebyte@address,c
 15266  00202C  0E00               	movlw	0
 15267  00202E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15268  002030  0E1F               	movlw	31
 15269  002032  6E01               	movwf	i2eeprom_readbyte@address,c
 15270  002034  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15271  002038  6E05               	movwf	i2eeprom_writebyte@data,c
 15272  00203A  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15273                           
 15274                           ;main.c: 804: eeprom_writebyte(35, eeprom_readbyte(30));
 15275  00203E  0E00               	movlw	0
 15276  002040  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15277  002042  0E23               	movlw	35
 15278  002044  6E03               	movwf	i2eeprom_writebyte@address,c
 15279  002046  0E00               	movlw	0
 15280  002048  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15281  00204A  0E1E               	movlw	30
 15282  00204C  6E01               	movwf	i2eeprom_readbyte@address,c
 15283  00204E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15284  002052  6E05               	movwf	i2eeprom_writebyte@data,c
 15285  002054  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15286                           
 15287                           ;main.c: 806: eeprom_writebyte(34, eeprom_readbyte(29));
 15288  002058  0E00               	movlw	0
 15289  00205A  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15290  00205C  0E22               	movlw	34
 15291  00205E  6E03               	movwf	i2eeprom_writebyte@address,c
 15292  002060  0E00               	movlw	0
 15293  002062  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15294  002064  0E1D               	movlw	29
 15295  002066  6E01               	movwf	i2eeprom_readbyte@address,c
 15296  002068  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15297  00206C  6E05               	movwf	i2eeprom_writebyte@data,c
 15298  00206E  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15299                           
 15300                           ;main.c: 807: eeprom_writebyte(33, eeprom_readbyte(28));
 15301  002072  0E00               	movlw	0
 15302  002074  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15303  002076  0E21               	movlw	33
 15304  002078  6E03               	movwf	i2eeprom_writebyte@address,c
 15305  00207A  0E00               	movlw	0
 15306  00207C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15307  00207E  0E1C               	movlw	28
 15308  002080  6E01               	movwf	i2eeprom_readbyte@address,c
 15309  002082  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15310  002086  6E05               	movwf	i2eeprom_writebyte@data,c
 15311  002088  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15312                           
 15313                           ;main.c: 808: eeprom_writebyte(32, eeprom_readbyte(27));
 15314  00208C  0E00               	movlw	0
 15315  00208E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15316  002090  0E20               	movlw	32
 15317  002092  6E03               	movwf	i2eeprom_writebyte@address,c
 15318  002094  0E00               	movlw	0
 15319  002096  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15320  002098  0E1B               	movlw	27
 15321  00209A  6E01               	movwf	i2eeprom_readbyte@address,c
 15322  00209C  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15323  0020A0  6E05               	movwf	i2eeprom_writebyte@data,c
 15324  0020A2  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15325                           
 15326                           ;main.c: 809: eeprom_writebyte(31, eeprom_readbyte(26));
 15327  0020A6  0E00               	movlw	0
 15328  0020A8  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15329  0020AA  0E1F               	movlw	31
 15330  0020AC  6E03               	movwf	i2eeprom_writebyte@address,c
 15331  0020AE  0E00               	movlw	0
 15332  0020B0  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15333  0020B2  0E1A               	movlw	26
 15334  0020B4  6E01               	movwf	i2eeprom_readbyte@address,c
 15335  0020B6  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15336  0020BA  6E05               	movwf	i2eeprom_writebyte@data,c
 15337  0020BC  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15338                           
 15339                           ;main.c: 810: eeprom_writebyte(30, eeprom_readbyte(25));
 15340  0020C0  0E00               	movlw	0
 15341  0020C2  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15342  0020C4  0E1E               	movlw	30
 15343  0020C6  6E03               	movwf	i2eeprom_writebyte@address,c
 15344  0020C8  0E00               	movlw	0
 15345  0020CA  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15346  0020CC  0E19               	movlw	25
 15347  0020CE  6E01               	movwf	i2eeprom_readbyte@address,c
 15348  0020D0  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15349  0020D4  6E05               	movwf	i2eeprom_writebyte@data,c
 15350  0020D6  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15351                           
 15352                           ;main.c: 812: eeprom_writebyte(29, eeprom_readbyte(34));
 15353  0020DA  0E00               	movlw	0
 15354  0020DC  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15355  0020DE  0E1D               	movlw	29
 15356  0020E0  6E03               	movwf	i2eeprom_writebyte@address,c
 15357  0020E2  0E00               	movlw	0
 15358  0020E4  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15359  0020E6  0E22               	movlw	34
 15360  0020E8  6E01               	movwf	i2eeprom_readbyte@address,c
 15361  0020EA  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15362  0020EE  6E05               	movwf	i2eeprom_writebyte@data,c
 15363  0020F0  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15364                           
 15365                           ;main.c: 813: eeprom_writebyte(28, eeprom_readbyte(23));
 15366  0020F4  0E00               	movlw	0
 15367  0020F6  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15368  0020F8  0E1C               	movlw	28
 15369  0020FA  6E03               	movwf	i2eeprom_writebyte@address,c
 15370  0020FC  0E00               	movlw	0
 15371  0020FE  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15372  002100  0E17               	movlw	23
 15373  002102  6E01               	movwf	i2eeprom_readbyte@address,c
 15374  002104  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15375  002108  6E05               	movwf	i2eeprom_writebyte@data,c
 15376  00210A  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15377                           
 15378                           ;main.c: 814: eeprom_writebyte(27, eeprom_readbyte(22));
 15379  00210E  0E00               	movlw	0
 15380  002110  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15381  002112  0E1B               	movlw	27
 15382  002114  6E03               	movwf	i2eeprom_writebyte@address,c
 15383  002116  0E00               	movlw	0
 15384  002118  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15385  00211A  0E16               	movlw	22
 15386  00211C  6E01               	movwf	i2eeprom_readbyte@address,c
 15387  00211E  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15388  002122  6E05               	movwf	i2eeprom_writebyte@data,c
 15389  002124  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15390                           
 15391                           ;main.c: 815: eeprom_writebyte(26, eeprom_readbyte(21));
 15392  002128  0E00               	movlw	0
 15393  00212A  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15394  00212C  0E1A               	movlw	26
 15395  00212E  6E03               	movwf	i2eeprom_writebyte@address,c
 15396  002130  0E00               	movlw	0
 15397  002132  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15398  002134  0E15               	movlw	21
 15399  002136  6E01               	movwf	i2eeprom_readbyte@address,c
 15400  002138  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15401  00213C  6E05               	movwf	i2eeprom_writebyte@data,c
 15402  00213E  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15403                           
 15404                           ;main.c: 816: eeprom_writebyte(25, eeprom_readbyte(20));
 15405  002142  0E00               	movlw	0
 15406  002144  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15407  002146  0E19               	movlw	25
 15408  002148  6E03               	movwf	i2eeprom_writebyte@address,c
 15409  00214A  0E00               	movlw	0
 15410  00214C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15411  00214E  0E14               	movlw	20
 15412  002150  6E01               	movwf	i2eeprom_readbyte@address,c
 15413  002152  EC39  F02A         	call	i2_eeprom_readbyte	;wreg free
 15414  002156  6E05               	movwf	i2eeprom_writebyte@data,c
 15415  002158  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15416                           
 15417                           ;main.c: 818: eeprom_writebyte(24, bottle_count_array[4]);
 15418  00215C  0E00               	movlw	0
 15419  00215E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15420  002160  0E18               	movlw	24
 15421  002162  6E03               	movwf	i2eeprom_writebyte@address,c
 15422  002164  C0E7  F005         	movff	_bottle_count_array+8,i2eeprom_writebyte@data
 15423  002168  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15424                           
 15425                           ;main.c: 819: eeprom_writebyte(23, bottle_count_array[3]);
 15426  00216C  0E00               	movlw	0
 15427  00216E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15428  002170  0E17               	movlw	23
 15429  002172  6E03               	movwf	i2eeprom_writebyte@address,c
 15430  002174  C0E5  F005         	movff	_bottle_count_array+6,i2eeprom_writebyte@data
 15431  002178  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15432                           
 15433                           ;main.c: 820: eeprom_writebyte(22, bottle_count_array[2]);
 15434  00217C  0E00               	movlw	0
 15435  00217E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15436  002180  0E16               	movlw	22
 15437  002182  6E03               	movwf	i2eeprom_writebyte@address,c
 15438  002184  C0E3  F005         	movff	_bottle_count_array+4,i2eeprom_writebyte@data
 15439  002188  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15440                           
 15441                           ;main.c: 821: eeprom_writebyte(21, bottle_count_array[1]);
 15442  00218C  0E00               	movlw	0
 15443  00218E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15444  002190  0E15               	movlw	21
 15445  002192  6E03               	movwf	i2eeprom_writebyte@address,c
 15446  002194  C0E1  F005         	movff	_bottle_count_array+2,i2eeprom_writebyte@data
 15447  002198  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15448                           
 15449                           ;main.c: 822: eeprom_writebyte(20, bottle_count_array[0]);
 15450  00219C  0E00               	movlw	0
 15451  00219E  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15452  0021A0  0E14               	movlw	20
 15453  0021A2  6E03               	movwf	i2eeprom_writebyte@address,c
 15454  0021A4  C0DF  F005         	movff	_bottle_count_array,i2eeprom_writebyte@data
 15455  0021A8  ECB6  F029         	call	i2_eeprom_writebyte	;wreg free
 15456  0021AC  0012               	return		;funcret
 15457  0021AE                     __end_ofi2_savedata:
 15458                           	opt stack 0
 15459                           pclatu	equ	0xFFB
 15460                           pclath	equ	0xFFA
 15461                           tblptru	equ	0xFF8
 15462                           tblptrh	equ	0xFF7
 15463                           tblptrl	equ	0xFF6
 15464                           tablat	equ	0xFF5
 15465                           prodh	equ	0xFF4
 15466                           prodl	equ	0xFF3
 15467                           intcon	equ	0xFF2
 15468                           intcon2	equ	0xFF1
 15469                           intcon3	equ	0xFF0
 15470                           postinc0	equ	0xFEE
 15471                           fsr0h	equ	0xFEA
 15472                           fsr0l	equ	0xFE9
 15473                           wreg	equ	0xFE8
 15474                           postdec1	equ	0xFE5
 15475                           fsr1h	equ	0xFE2
 15476                           fsr1l	equ	0xFE1
 15477                           indf2	equ	0xFDF
 15478                           postinc2	equ	0xFDE
 15479                           postdec2	equ	0xFDD
 15480                           fsr2h	equ	0xFDA
 15481                           fsr2l	equ	0xFD9
 15482                           status	equ	0xFD8
 15483                           
 15484 ;; *************** function i2_eeprom_writebyte *****************
 15485 ;; Defined at:
 15486 ;;		line 761 in file "main.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;  address         2    2[COMRAM] unsigned int 
 15489 ;;  data            1    4[COMRAM] unsigned char 
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		wreg, status,2
 15496 ;; Tracked objects:
 15497 ;;		On entry : 0/0
 15498 ;;		On exit  : 0/0
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15501 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15505 ;;Total ram usage:        3 bytes
 15506 ;; Hardware stack levels used:    1
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		i2_savedata
 15511 ;; This function uses a non-reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text58
 15515  00536C                     __ptext58:
 15516                           	opt stack 0
 15517  00536C                     i2_eeprom_writebyte:
 15518                           	opt stack 21
 15519                           
 15520                           ;main.c: 763: EEADRH = (uint8_t)(address >> 8);
 15521                           
 15522                           ;incstack = 0
 15523  00536C  5004               	movf	i2eeprom_writebyte@address+1,w,c
 15524  00536E  6EAA               	movwf	4010,c	;volatile
 15525                           
 15526                           ;main.c: 764: EEADR = (uint8_t)address;
 15527  005370  C003  FFA9         	movff	i2eeprom_writebyte@address,4009	;volatile
 15528                           
 15529                           ;main.c: 766: EEDATA = data;
 15530  005374  C005  FFA8         	movff	i2eeprom_writebyte@data,4008	;volatile
 15531                           
 15532                           ;main.c: 767: EECON1bits.EEPGD = 0;
 15533  005378  9EA6               	bcf	4006,7,c	;volatile
 15534                           
 15535                           ;main.c: 768: EECON1bits.CFGS = 0;
 15536  00537A  9CA6               	bcf	4006,6,c	;volatile
 15537                           
 15538                           ;main.c: 769: EECON1bits.WREN = 1;
 15539  00537C  84A6               	bsf	4006,2,c	;volatile
 15540                           
 15541                           ;main.c: 773: EECON2 = 0x55;
 15542  00537E  0E55               	movlw	85
 15543  005380  6EA7               	movwf	4007,c	;volatile
 15544                           
 15545                           ;main.c: 774: EECON2 = 0xAA;
 15546  005382  0EAA               	movlw	170
 15547  005384  6EA7               	movwf	4007,c	;volatile
 15548                           
 15549                           ;main.c: 775: EECON1bits.WR = 1;
 15550  005386  82A6               	bsf	4006,1,c	;volatile
 15551  005388                     i2l596:
 15552  005388  A8A1               	btfss	4001,4,c	;volatile
 15553  00538A  D7FE               	goto	i2l596
 15554                           
 15555                           ;main.c: 781: }
 15556                           ;main.c: 783: PIR2bits.EEIF = 0;
 15557  00538C  98A1               	bcf	4001,4,c	;volatile
 15558                           
 15559                           ;main.c: 784: EECON1bits.WREN = 0;
 15560  00538E  94A6               	bcf	4006,2,c	;volatile
 15561  005390  0012               	return		;funcret
 15562  005392                     __end_ofi2_eeprom_writebyte:
 15563                           	opt stack 0
 15564                           pclatu	equ	0xFFB
 15565                           pclath	equ	0xFFA
 15566                           tblptru	equ	0xFF8
 15567                           tblptrh	equ	0xFF7
 15568                           tblptrl	equ	0xFF6
 15569                           tablat	equ	0xFF5
 15570                           prodh	equ	0xFF4
 15571                           prodl	equ	0xFF3
 15572                           intcon	equ	0xFF2
 15573                           intcon2	equ	0xFF1
 15574                           intcon3	equ	0xFF0
 15575                           postinc0	equ	0xFEE
 15576                           fsr0h	equ	0xFEA
 15577                           fsr0l	equ	0xFE9
 15578                           wreg	equ	0xFE8
 15579                           postdec1	equ	0xFE5
 15580                           fsr1h	equ	0xFE2
 15581                           fsr1l	equ	0xFE1
 15582                           indf2	equ	0xFDF
 15583                           postinc2	equ	0xFDE
 15584                           postdec2	equ	0xFDD
 15585                           fsr2h	equ	0xFDA
 15586                           fsr2l	equ	0xFD9
 15587                           status	equ	0xFD8
 15588                           
 15589 ;; *************** function i2_eeprom_readbyte *****************
 15590 ;; Defined at:
 15591 ;;		line 744 in file "main.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;  address         2    0[COMRAM] unsigned int 
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;		None
 15596 ;; Return value:  Size  Location     Type
 15597 ;;                  1    wreg      unsigned char 
 15598 ;; Registers used:
 15599 ;;		wreg, status,2
 15600 ;; Tracked objects:
 15601 ;;		On entry : 0/0
 15602 ;;		On exit  : 0/0
 15603 ;;		Unchanged: 0/0
 15604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15609 ;;Total ram usage:        2 bytes
 15610 ;; Hardware stack levels used:    1
 15611 ;; This function calls:
 15612 ;;		Nothing
 15613 ;; This function is called by:
 15614 ;;		_isr
 15615 ;;		i2_savedata
 15616 ;; This function uses a non-reentrant model
 15617 ;;
 15618                           
 15619                           	psect	text59
 15620  005472                     __ptext59:
 15621                           	opt stack 0
 15622  005472                     i2_eeprom_readbyte:
 15623                           	opt stack 21
 15624                           
 15625                           ;main.c: 747: EEADRH = (uint8_t)(address >> 8);
 15626                           
 15627                           ;incstack = 0
 15628  005472  5002               	movf	i2eeprom_readbyte@address+1,w,c
 15629  005474  6EAA               	movwf	4010,c	;volatile
 15630                           
 15631                           ;main.c: 748: EEADR = (uint8_t)address;
 15632  005476  C001  FFA9         	movff	i2eeprom_readbyte@address,4009	;volatile
 15633                           
 15634                           ;main.c: 750: EECON1bits.EEPGD = 0;
 15635  00547A  9EA6               	bcf	4006,7,c	;volatile
 15636                           
 15637                           ;main.c: 751: EECON1bits.CFGS = 0;
 15638  00547C  9CA6               	bcf	4006,6,c	;volatile
 15639                           
 15640                           ;main.c: 752: EECON1bits.RD = 1;
 15641  00547E  80A6               	bsf	4006,0,c	;volatile
 15642  005480                     i2l590:
 15643  005480  B0A6               	btfsc	4006,0,c	;volatile
 15644  005482  D7FE               	goto	i2l590
 15645                           
 15646                           ;main.c: 758: return EEDATA;
 15647  005484  50A8               	movf	4008,w,c	;volatile
 15648  005486  0012               	return	
 15649  005488                     __end_ofi2_eeprom_readbyte:
 15650                           	opt stack 0
 15651                           pclatu	equ	0xFFB
 15652                           pclath	equ	0xFFA
 15653                           tblptru	equ	0xFF8
 15654                           tblptrh	equ	0xFF7
 15655                           tblptrl	equ	0xFF6
 15656                           tablat	equ	0xFF5
 15657                           prodh	equ	0xFF4
 15658                           prodl	equ	0xFF3
 15659                           intcon	equ	0xFF2
 15660                           intcon2	equ	0xFF1
 15661                           intcon3	equ	0xFF0
 15662                           postinc0	equ	0xFEE
 15663                           fsr0h	equ	0xFEA
 15664                           fsr0l	equ	0xFE9
 15665                           wreg	equ	0xFE8
 15666                           postdec1	equ	0xFE5
 15667                           fsr1h	equ	0xFE2
 15668                           fsr1l	equ	0xFE1
 15669                           indf2	equ	0xFDF
 15670                           postinc2	equ	0xFDE
 15671                           postdec2	equ	0xFDD
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function i2_read_time *****************
 15677 ;; Defined at:
 15678 ;;		line 398 in file "main.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;  read_time       1    3[COMRAM] unsigned char 
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15696 ;;Total ram usage:        1 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; Hardware stack levels required when called:    2
 15699 ;; This function calls:
 15700 ;;		i2_I2C_Master_Read
 15701 ;;		i2_I2C_Master_Start
 15702 ;;		i2_I2C_Master_Stop
 15703 ;;		i2_I2C_Master_Write
 15704 ;; This function is called by:
 15705 ;;		_isr
 15706 ;; This function uses a non-reentrant model
 15707 ;;
 15708                           
 15709                           	psect	text60
 15710  004D7A                     __ptext60:
 15711                           	opt stack 0
 15712  004D7A                     i2_read_time:
 15713                           	opt stack 20
 15714                           
 15715                           ;main.c: 400: I2C_Master_Start();
 15716                           
 15717                           ;incstack = 0
 15718  004D7A  EC8E  F02A         	call	i2_I2C_Master_Start	;wreg free
 15719                           
 15720                           ;main.c: 401: I2C_Master_Write(0b11010000);
 15721  004D7E  0E00               	movlw	0
 15722  004D80  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15723  004D82  0ED0               	movlw	208
 15724  004D84  6E02               	movwf	i2I2C_Master_Write@d,c
 15725  004D86  EC7D  F02A         	call	i2_I2C_Master_Write	;wreg free
 15726                           
 15727                           ;main.c: 402: I2C_Master_Write(0x00);
 15728  004D8A  0E00               	movlw	0
 15729  004D8C  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15730  004D8E  0E00               	movlw	0
 15731  004D90  6E02               	movwf	i2I2C_Master_Write@d,c
 15732  004D92  EC7D  F02A         	call	i2_I2C_Master_Write	;wreg free
 15733                           
 15734                           ;main.c: 403: I2C_Master_Stop();
 15735  004D96  EC8A  F02A         	call	i2_I2C_Master_Stop	;wreg free
 15736                           
 15737                           ;main.c: 406: I2C_Master_Start();
 15738  004D9A  EC8E  F02A         	call	i2_I2C_Master_Start	;wreg free
 15739                           
 15740                           ;main.c: 407: I2C_Master_Write(0b11010001);
 15741  004D9E  0E00               	movlw	0
 15742  004DA0  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15743  004DA2  0ED1               	movlw	209
 15744  004DA4  6E02               	movwf	i2I2C_Master_Write@d,c
 15745  004DA6  EC7D  F02A         	call	i2_I2C_Master_Write	;wreg free
 15746                           
 15747                           ;main.c: 408: for(unsigned char i=0;i<0x06;i++){
 15748  004DAA  0E00               	movlw	0
 15749  004DAC  6E04               	movwf	i2read_time@i,c
 15750  004DAE                     i2l6456:
 15751  004DAE  0E05               	movlw	5
 15752  004DB0  6404               	cpfsgt	i2read_time@i,c
 15753  004DB2  D001               	goto	i2l6460
 15754  004DB4  D00E               	goto	i2l6466
 15755  004DB6                     i2l6460:
 15756                           
 15757                           ;main.c: 409: time[i] = I2C_Master_Read(1);
 15758  004DB6  5004               	movf	i2read_time@i,w,c
 15759  004DB8  0D01               	mullw	1
 15760  004DBA  0E10               	movlw	low _time
 15761  004DBC  24F3               	addwf	prodl,w,c
 15762  004DBE  6ED9               	movwf	fsr2l,c
 15763  004DC0  0E01               	movlw	high _time
 15764  004DC2  20F4               	addwfc	prodh,w,c
 15765  004DC4  6EDA               	movwf	fsr2h,c
 15766  004DC6  0E01               	movlw	1
 15767  004DC8  ECC9  F029         	call	i2_I2C_Master_Read
 15768  004DCC  6EDF               	movwf	indf2,c
 15769  004DCE  2A04               	incf	i2read_time@i,f,c
 15770  004DD0  D7EE               	goto	i2l6456
 15771  004DD2                     i2l6466:
 15772                           
 15773                           ;main.c: 410: }
 15774                           ;main.c: 411: time[6] = I2C_Master_Read(0);
 15775  004DD2  0E00               	movlw	0
 15776  004DD4  ECC9  F029         	call	i2_I2C_Master_Read
 15777  004DD8  0101               	movlb	1	; () banked
 15778  004DDA  6F16               	movwf	(_time+6)& (0+255),b
 15779                           
 15780                           ;main.c: 412: I2C_Master_Stop();
 15781  004DDC  EC8A  F02A         	call	i2_I2C_Master_Stop	;wreg free
 15782  004DE0  0012               	return	
 15783  004DE2                     __end_ofi2_read_time:
 15784                           	opt stack 0
 15785                           pclatu	equ	0xFFB
 15786                           pclath	equ	0xFFA
 15787                           tblptru	equ	0xFF8
 15788                           tblptrh	equ	0xFF7
 15789                           tblptrl	equ	0xFF6
 15790                           tablat	equ	0xFF5
 15791                           prodh	equ	0xFF4
 15792                           prodl	equ	0xFF3
 15793                           intcon	equ	0xFF2
 15794                           intcon2	equ	0xFF1
 15795                           intcon3	equ	0xFF0
 15796                           postinc0	equ	0xFEE
 15797                           fsr0h	equ	0xFEA
 15798                           fsr0l	equ	0xFE9
 15799                           wreg	equ	0xFE8
 15800                           postdec1	equ	0xFE5
 15801                           fsr1h	equ	0xFE2
 15802                           fsr1l	equ	0xFE1
 15803                           indf2	equ	0xFDF
 15804                           postinc2	equ	0xFDE
 15805                           postdec2	equ	0xFDD
 15806                           fsr2h	equ	0xFDA
 15807                           fsr2l	equ	0xFD9
 15808                           status	equ	0xFD8
 15809                           
 15810 ;; *************** function i2_read_colorsensor *****************
 15811 ;; Defined at:
 15812 ;;		line 706 in file "main.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;		None
 15815 ;; Auto vars:     Size  Location     Type
 15816 ;;		None
 15817 ;; Return value:  Size  Location     Type
 15818 ;;                  1    wreg      void 
 15819 ;; Registers used:
 15820 ;;		wreg, status,2, status,0, cstack
 15821 ;; Tracked objects:
 15822 ;;		On entry : 0/0
 15823 ;;		On exit  : 0/0
 15824 ;;		Unchanged: 0/0
 15825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;Total ram usage:        2 bytes
 15831 ;; Hardware stack levels used:    1
 15832 ;; Hardware stack levels required when called:    2
 15833 ;; This function calls:
 15834 ;;		i2_I2C_Master_Read
 15835 ;;		i2_I2C_Master_Start
 15836 ;;		i2_I2C_Master_Stop
 15837 ;;		i2_I2C_Master_Write
 15838 ;; This function is called by:
 15839 ;;		_isr
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text61
 15844  0041D6                     __ptext61:
 15845                           	opt stack 0
 15846  0041D6                     i2_read_colorsensor:
 15847                           	opt stack 20
 15848                           
 15849                           ;main.c: 725: I2C_Master_Start();
 15850                           
 15851                           ;incstack = 0
 15852  0041D6  EC8E  F02A         	call	i2_I2C_Master_Start	;wreg free
 15853                           
 15854                           ;main.c: 726: I2C_Master_Write(0b01010011);
 15855  0041DA  0E00               	movlw	0
 15856  0041DC  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15857  0041DE  0E53               	movlw	83
 15858  0041E0  6E02               	movwf	i2I2C_Master_Write@d,c
 15859  0041E2  EC7D  F02A         	call	i2_I2C_Master_Write	;wreg free
 15860                           
 15861                           ;main.c: 727: color_low[0] = I2C_Master_Read(1);
 15862  0041E6  0E01               	movlw	1
 15863  0041E8  ECC9  F029         	call	i2_I2C_Master_Read
 15864  0041EC  0101               	movlb	1	; () banked
 15865  0041EE  6F1B               	movwf	_color_low& (0+255),b
 15866                           
 15867                           ;main.c: 728: color_high[0] = I2C_Master_Read(1);
 15868  0041F0  0E01               	movlw	1
 15869  0041F2  ECC9  F029         	call	i2_I2C_Master_Read
 15870  0041F6  0101               	movlb	1	; () banked
 15871  0041F8  6F17               	movwf	_color_high& (0+255),b
 15872                           
 15873                           ;main.c: 729: color_low[1] = I2C_Master_Read(1);
 15874  0041FA  0E01               	movlw	1
 15875  0041FC  ECC9  F029         	call	i2_I2C_Master_Read
 15876  004200  0101               	movlb	1	; () banked
 15877  004202  6F1C               	movwf	(_color_low+1)& (0+255),b
 15878                           
 15879                           ;main.c: 730: color_high[1] = I2C_Master_Read(1);
 15880  004204  0E01               	movlw	1
 15881  004206  ECC9  F029         	call	i2_I2C_Master_Read
 15882  00420A  0101               	movlb	1	; () banked
 15883  00420C  6F18               	movwf	(_color_high+1)& (0+255),b
 15884                           
 15885                           ;main.c: 731: color_low[2] = I2C_Master_Read(1);
 15886  00420E  0E01               	movlw	1
 15887  004210  ECC9  F029         	call	i2_I2C_Master_Read
 15888  004214  0101               	movlb	1	; () banked
 15889  004216  6F1D               	movwf	(_color_low+2)& (0+255),b
 15890                           
 15891                           ;main.c: 732: color_high[2] = I2C_Master_Read(1);
 15892  004218  0E01               	movlw	1
 15893  00421A  ECC9  F029         	call	i2_I2C_Master_Read
 15894  00421E  0101               	movlb	1	; () banked
 15895  004220  6F19               	movwf	(_color_high+2)& (0+255),b
 15896                           
 15897                           ;main.c: 733: color_low[3] = I2C_Master_Read(1);
 15898  004222  0E01               	movlw	1
 15899  004224  ECC9  F029         	call	i2_I2C_Master_Read
 15900  004228  0101               	movlb	1	; () banked
 15901  00422A  6F1E               	movwf	(_color_low+3)& (0+255),b
 15902                           
 15903                           ;main.c: 734: color_high[3] = I2C_Master_Read(0);
 15904  00422C  0E00               	movlw	0
 15905  00422E  ECC9  F029         	call	i2_I2C_Master_Read
 15906  004232  0101               	movlb	1	; () banked
 15907  004234  6F1A               	movwf	(_color_high+3)& (0+255),b
 15908                           
 15909                           ;main.c: 735: I2C_Master_Stop();
 15910  004236  EC8A  F02A         	call	i2_I2C_Master_Stop	;wreg free
 15911                           
 15912                           ;main.c: 736: color[0] = (color_high[0] << 8)|(color_low[0]);
 15913  00423A  0101               	movlb	1	; () banked
 15914  00423C  511B               	movf	_color_low& (0+255),w,b
 15915  00423E  C117  F004         	movff	_color_high,??i2_read_colorsensor
 15916  004242  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 15917  004244  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 15918  004248  6A04               	clrf	??i2_read_colorsensor,c
 15919  00424A  1004               	iorwf	??i2_read_colorsensor,w,c
 15920  00424C  0101               	movlb	1	; () banked
 15921  00424E  6F00               	movwf	_color& (0+255),b
 15922  004250  5005               	movf	??i2_read_colorsensor+1,w,c
 15923  004252  0101               	movlb	1	; () banked
 15924  004254  6F01               	movwf	(_color+1)& (0+255),b
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;main.c: 737: color[1] = (color_high[1] << 8)|(color_low[1]);
 15928  004256  0101               	movlb	1	; () banked
 15929  004258  511C               	movf	(_color_low+1)& (0+255),w,b
 15930  00425A  C118  F004         	movff	_color_high+1,??i2_read_colorsensor
 15931  00425E  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 15932  004260  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 15933  004264  6A04               	clrf	??i2_read_colorsensor,c
 15934  004266  1004               	iorwf	??i2_read_colorsensor,w,c
 15935  004268  0101               	movlb	1	; () banked
 15936  00426A  6F02               	movwf	(_color+2)& (0+255),b
 15937  00426C  5005               	movf	??i2_read_colorsensor+1,w,c
 15938  00426E  0101               	movlb	1	; () banked
 15939  004270  6F03               	movwf	(_color+3)& (0+255),b
 15940                           
 15941                           ; BSR set to: 1
 15942                           ;main.c: 738: color[2] = (color_high[2] << 8)|(color_low[2]);
 15943  004272  0101               	movlb	1	; () banked
 15944  004274  511D               	movf	(_color_low+2)& (0+255),w,b
 15945  004276  C119  F004         	movff	_color_high+2,??i2_read_colorsensor
 15946  00427A  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 15947  00427C  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 15948  004280  6A04               	clrf	??i2_read_colorsensor,c
 15949  004282  1004               	iorwf	??i2_read_colorsensor,w,c
 15950  004284  0101               	movlb	1	; () banked
 15951  004286  6F04               	movwf	(_color+4)& (0+255),b
 15952  004288  5005               	movf	??i2_read_colorsensor+1,w,c
 15953  00428A  0101               	movlb	1	; () banked
 15954  00428C  6F05               	movwf	(_color+5)& (0+255),b
 15955                           
 15956                           ; BSR set to: 1
 15957                           ;main.c: 739: color[3] = (color_high[3] << 8)|(color_low[3]);
 15958  00428E  0101               	movlb	1	; () banked
 15959  004290  511E               	movf	(_color_low+3)& (0+255),w,b
 15960  004292  C11A  F004         	movff	_color_high+3,??i2_read_colorsensor
 15961  004296  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 15962  004298  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 15963  00429C  6A04               	clrf	??i2_read_colorsensor,c
 15964  00429E  1004               	iorwf	??i2_read_colorsensor,w,c
 15965  0042A0  0101               	movlb	1	; () banked
 15966  0042A2  6F06               	movwf	(_color+6)& (0+255),b
 15967  0042A4  5005               	movf	??i2_read_colorsensor+1,w,c
 15968  0042A6  0101               	movlb	1	; () banked
 15969  0042A8  6F07               	movwf	(_color+7)& (0+255),b
 15970  0042AA  0012               	return	
 15971  0042AC                     __end_ofi2_read_colorsensor:
 15972                           	opt stack 0
 15973                           pclatu	equ	0xFFB
 15974                           pclath	equ	0xFFA
 15975                           tblptru	equ	0xFF8
 15976                           tblptrh	equ	0xFF7
 15977                           tblptrl	equ	0xFF6
 15978                           tablat	equ	0xFF5
 15979                           prodh	equ	0xFF4
 15980                           prodl	equ	0xFF3
 15981                           intcon	equ	0xFF2
 15982                           intcon2	equ	0xFF1
 15983                           intcon3	equ	0xFF0
 15984                           postinc0	equ	0xFEE
 15985                           fsr0h	equ	0xFEA
 15986                           fsr0l	equ	0xFE9
 15987                           wreg	equ	0xFE8
 15988                           postdec1	equ	0xFE5
 15989                           fsr1h	equ	0xFE2
 15990                           fsr1l	equ	0xFE1
 15991                           indf2	equ	0xFDF
 15992                           postinc2	equ	0xFDE
 15993                           postdec2	equ	0xFDD
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function i2_I2C_Master_Write *****************
 15999 ;; Defined at:
 16000 ;;		line 48 in file "I2C.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  d               2    1[COMRAM] unsigned int 
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      void 
 16007 ;; Registers used:
 16008 ;;		wreg, status,2, status,0, cstack
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16018 ;;Total ram usage:        2 bytes
 16019 ;; Hardware stack levels used:    1
 16020 ;; Hardware stack levels required when called:    1
 16021 ;; This function calls:
 16022 ;;		i2_I2C_Master_Wait
 16023 ;; This function is called by:
 16024 ;;		i2_read_time
 16025 ;;		i2_read_colorsensor
 16026 ;; This function uses a non-reentrant model
 16027 ;;
 16028                           
 16029                           	psect	text62
 16030  0054FA                     __ptext62:
 16031                           	opt stack 0
 16032  0054FA                     i2_I2C_Master_Write:
 16033                           	opt stack 20
 16034                           
 16035                           ;I2C.c: 50: I2C_Master_Wait();
 16036                           
 16037                           ; BSR set to: 1
 16038                           ;incstack = 0
 16039  0054FA  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16040                           
 16041                           ;I2C.c: 51: SSPBUF = d;
 16042  0054FE  C002  FFC9         	movff	i2I2C_Master_Write@d,4041	;volatile
 16043  005502  0012               	return		;funcret
 16044  005504                     __end_ofi2_I2C_Master_Write:
 16045                           	opt stack 0
 16046                           pclatu	equ	0xFFB
 16047                           pclath	equ	0xFFA
 16048                           tblptru	equ	0xFF8
 16049                           tblptrh	equ	0xFF7
 16050                           tblptrl	equ	0xFF6
 16051                           tablat	equ	0xFF5
 16052                           prodh	equ	0xFF4
 16053                           prodl	equ	0xFF3
 16054                           intcon	equ	0xFF2
 16055                           intcon2	equ	0xFF1
 16056                           intcon3	equ	0xFF0
 16057                           postinc0	equ	0xFEE
 16058                           fsr0h	equ	0xFEA
 16059                           fsr0l	equ	0xFE9
 16060                           wreg	equ	0xFE8
 16061                           postdec1	equ	0xFE5
 16062                           fsr1h	equ	0xFE2
 16063                           fsr1l	equ	0xFE1
 16064                           indf2	equ	0xFDF
 16065                           postinc2	equ	0xFDE
 16066                           postdec2	equ	0xFDD
 16067                           fsr2h	equ	0xFDA
 16068                           fsr2l	equ	0xFD9
 16069                           status	equ	0xFD8
 16070                           
 16071 ;; *************** function i2_I2C_Master_Stop *****************
 16072 ;; Defined at:
 16073 ;;		line 42 in file "I2C.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		wreg, status,2, status,0, cstack
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    1
 16094 ;; This function calls:
 16095 ;;		i2_I2C_Master_Wait
 16096 ;; This function is called by:
 16097 ;;		i2_read_time
 16098 ;;		i2_read_colorsensor
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text63
 16103  005514                     __ptext63:
 16104                           	opt stack 0
 16105  005514                     i2_I2C_Master_Stop:
 16106                           	opt stack 20
 16107                           
 16108                           ;I2C.c: 44: I2C_Master_Wait();
 16109                           
 16110                           ;incstack = 0
 16111  005514  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16112                           
 16113                           ;I2C.c: 45: PEN = 1;
 16114  005518  84C5               	bsf	4037,2,c	;volatile
 16115  00551A  0012               	return		;funcret
 16116  00551C                     __end_ofi2_I2C_Master_Stop:
 16117                           	opt stack 0
 16118                           pclatu	equ	0xFFB
 16119                           pclath	equ	0xFFA
 16120                           tblptru	equ	0xFF8
 16121                           tblptrh	equ	0xFF7
 16122                           tblptrl	equ	0xFF6
 16123                           tablat	equ	0xFF5
 16124                           prodh	equ	0xFF4
 16125                           prodl	equ	0xFF3
 16126                           intcon	equ	0xFF2
 16127                           intcon2	equ	0xFF1
 16128                           intcon3	equ	0xFF0
 16129                           postinc0	equ	0xFEE
 16130                           fsr0h	equ	0xFEA
 16131                           fsr0l	equ	0xFE9
 16132                           wreg	equ	0xFE8
 16133                           postdec1	equ	0xFE5
 16134                           fsr1h	equ	0xFE2
 16135                           fsr1l	equ	0xFE1
 16136                           indf2	equ	0xFDF
 16137                           postinc2	equ	0xFDE
 16138                           postdec2	equ	0xFDD
 16139                           fsr2h	equ	0xFDA
 16140                           fsr2l	equ	0xFD9
 16141                           status	equ	0xFD8
 16142                           
 16143 ;; *************** function i2_I2C_Master_Start *****************
 16144 ;; Defined at:
 16145 ;;		line 30 in file "I2C.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;		None
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;		None
 16150 ;; Return value:  Size  Location     Type
 16151 ;;                  1    wreg      void 
 16152 ;; Registers used:
 16153 ;;		wreg, status,2, status,0, cstack
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16163 ;;Total ram usage:        0 bytes
 16164 ;; Hardware stack levels used:    1
 16165 ;; Hardware stack levels required when called:    1
 16166 ;; This function calls:
 16167 ;;		i2_I2C_Master_Wait
 16168 ;; This function is called by:
 16169 ;;		i2_read_time
 16170 ;;		i2_read_colorsensor
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text64
 16175  00551C                     __ptext64:
 16176                           	opt stack 0
 16177  00551C                     i2_I2C_Master_Start:
 16178                           	opt stack 20
 16179                           
 16180                           ;I2C.c: 32: I2C_Master_Wait();
 16181                           
 16182                           ;incstack = 0
 16183  00551C  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16184                           
 16185                           ;I2C.c: 33: SEN = 1;
 16186  005520  80C5               	bsf	4037,0,c	;volatile
 16187  005522  0012               	return		;funcret
 16188  005524                     __end_ofi2_I2C_Master_Start:
 16189                           	opt stack 0
 16190                           pclatu	equ	0xFFB
 16191                           pclath	equ	0xFFA
 16192                           tblptru	equ	0xFF8
 16193                           tblptrh	equ	0xFF7
 16194                           tblptrl	equ	0xFF6
 16195                           tablat	equ	0xFF5
 16196                           prodh	equ	0xFF4
 16197                           prodl	equ	0xFF3
 16198                           intcon	equ	0xFF2
 16199                           intcon2	equ	0xFF1
 16200                           intcon3	equ	0xFF0
 16201                           postinc0	equ	0xFEE
 16202                           fsr0h	equ	0xFEA
 16203                           fsr0l	equ	0xFE9
 16204                           wreg	equ	0xFE8
 16205                           postdec1	equ	0xFE5
 16206                           fsr1h	equ	0xFE2
 16207                           fsr1l	equ	0xFE1
 16208                           indf2	equ	0xFDF
 16209                           postinc2	equ	0xFDE
 16210                           postdec2	equ	0xFDD
 16211                           fsr2h	equ	0xFDA
 16212                           fsr2l	equ	0xFD9
 16213                           status	equ	0xFD8
 16214                           
 16215 ;; *************** function i2_I2C_Master_Read *****************
 16216 ;; Defined at:
 16217 ;;		line 110 in file "I2C.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  a               1    wreg     unsigned char 
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;  a               1    1[COMRAM] unsigned char 
 16222 ;;  I2C_Master_R    1    2[COMRAM] unsigned char 
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  1    wreg      unsigned char 
 16225 ;; Registers used:
 16226 ;;		wreg, status,2, status,0, cstack
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16236 ;;Total ram usage:        2 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    1
 16239 ;; This function calls:
 16240 ;;		i2_I2C_Master_Wait
 16241 ;; This function is called by:
 16242 ;;		i2_read_time
 16243 ;;		i2_read_colorsensor
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text65
 16248  005392                     __ptext65:
 16249                           	opt stack 0
 16250  005392                     i2_I2C_Master_Read:
 16251                           	opt stack 20
 16252                           
 16253                           ;incstack = 0
 16254                           ;i2I2C_Master_Read@a stored from wreg
 16255  005392  6E02               	movwf	i2I2C_Master_Read@a,c
 16256                           
 16257                           ;I2C.c: 112: unsigned char temp;
 16258                           ;I2C.c: 113: I2C_Master_Wait();
 16259  005394  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16260                           
 16261                           ;I2C.c: 114: RCEN = 1;
 16262  005398  86C5               	bsf	4037,3,c	;volatile
 16263                           
 16264                           ;I2C.c: 115: I2C_Master_Wait();
 16265  00539A  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16266                           
 16267                           ;I2C.c: 116: temp = SSPBUF;
 16268  00539E  CFC9 F003          	movff	4041,i2I2C_Master_Read@temp	;volatile
 16269                           
 16270                           ;I2C.c: 117: I2C_Master_Wait();
 16271  0053A2  EC4E  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16272                           
 16273                           ;I2C.c: 118: ACKDT = (a)?0:1;
 16274  0053A6  5002               	movf	i2I2C_Master_Read@a,w,c
 16275  0053A8  A4D8               	btfss	status,2,c
 16276  0053AA  D002               	goto	i2u577_40
 16277  0053AC  8AC5               	bsf	4037,5,c	;volatile
 16278  0053AE  D001               	goto	i2l5818
 16279  0053B0                     i2u577_40:
 16280  0053B0  9AC5               	bcf	4037,5,c	;volatile
 16281  0053B2                     i2l5818:
 16282                           
 16283                           ;I2C.c: 119: ACKEN = 1;
 16284  0053B2  88C5               	bsf	4037,4,c	;volatile
 16285                           
 16286                           ;I2C.c: 120: return temp;
 16287  0053B4  5003               	movf	i2I2C_Master_Read@temp,w,c
 16288  0053B6  0012               	return	
 16289  0053B8                     __end_ofi2_I2C_Master_Read:
 16290                           	opt stack 0
 16291                           pclatu	equ	0xFFB
 16292                           pclath	equ	0xFFA
 16293                           tblptru	equ	0xFF8
 16294                           tblptrh	equ	0xFF7
 16295                           tblptrl	equ	0xFF6
 16296                           tablat	equ	0xFF5
 16297                           prodh	equ	0xFF4
 16298                           prodl	equ	0xFF3
 16299                           intcon	equ	0xFF2
 16300                           intcon2	equ	0xFF1
 16301                           intcon3	equ	0xFF0
 16302                           postinc0	equ	0xFEE
 16303                           fsr0h	equ	0xFEA
 16304                           fsr0l	equ	0xFE9
 16305                           wreg	equ	0xFE8
 16306                           postdec1	equ	0xFE5
 16307                           fsr1h	equ	0xFE2
 16308                           fsr1l	equ	0xFE1
 16309                           indf2	equ	0xFDF
 16310                           postinc2	equ	0xFDE
 16311                           postdec2	equ	0xFDD
 16312                           fsr2h	equ	0xFDA
 16313                           fsr2l	equ	0xFD9
 16314                           status	equ	0xFD8
 16315                           
 16316 ;; *************** function i2_I2C_Master_Wait *****************
 16317 ;; Defined at:
 16318 ;;		line 25 in file "I2C.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;		None
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;		None
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  1    wreg      void 
 16325 ;; Registers used:
 16326 ;;		wreg, status,2, status,0
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16336 ;;Total ram usage:        1 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; This function calls:
 16339 ;;		Nothing
 16340 ;; This function is called by:
 16341 ;;		i2_I2C_Master_Start
 16342 ;;		i2_I2C_Master_Stop
 16343 ;;		i2_I2C_Master_Write
 16344 ;;		i2_I2C_Master_Read
 16345 ;; This function uses a non-reentrant model
 16346 ;;
 16347                           
 16348                           	psect	text66
 16349  00549C                     __ptext66:
 16350                           	opt stack 0
 16351  00549C                     i2_I2C_Master_Wait:
 16352                           	opt stack 20
 16353  00549C                     i2l34:
 16354  00549C  B4C7               	btfsc	4039,2,c	;volatile
 16355  00549E  D7FE               	goto	i2l34
 16356  0054A0  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
 16357  0054A4  0E1F               	movlw	31
 16358  0054A6  1601               	andwf	??i2_I2C_Master_Wait,f,c
 16359  0054A8  B4D8               	btfsc	status,2,c
 16360  0054AA  0012               	return	
 16361  0054AC  D7F7               	goto	i2l34
 16362  0054AE                     __end_ofi2_I2C_Master_Wait:
 16363                           	opt stack 0
 16364                           pclatu	equ	0xFFB
 16365                           pclath	equ	0xFFA
 16366                           tblptru	equ	0xFF8
 16367                           tblptrh	equ	0xFF7
 16368                           tblptrl	equ	0xFF6
 16369                           tablat	equ	0xFF5
 16370                           prodh	equ	0xFF4
 16371                           prodl	equ	0xFF3
 16372                           intcon	equ	0xFF2
 16373                           intcon2	equ	0xFF1
 16374                           intcon3	equ	0xFF0
 16375                           postinc0	equ	0xFEE
 16376                           fsr0h	equ	0xFEA
 16377                           fsr0l	equ	0xFE9
 16378                           wreg	equ	0xFE8
 16379                           postdec1	equ	0xFE5
 16380                           fsr1h	equ	0xFE2
 16381                           fsr1l	equ	0xFE1
 16382                           indf2	equ	0xFDF
 16383                           postinc2	equ	0xFDE
 16384                           postdec2	equ	0xFDD
 16385                           fsr2h	equ	0xFDA
 16386                           fsr2l	equ	0xFD9
 16387                           status	equ	0xFD8
 16388                           
 16389 ;; *************** function i2_printf *****************
 16390 ;; Defined at:
 16391 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 16392 ;; Parameters:    Size  Location     Type
 16393 ;;  f               2   12[COMRAM] PTR const unsigned char 
 16394 ;;		 -> STR_47(15), STR_46(16), STR_45(18), STR_44(23), 
 16395 ;;		 -> STR_43(16), STR_42(17), STR_41(17), STR_40(17), 
 16396 ;;		 -> STR_39(17), STR_38(17), STR_37(19), STR_36(16), 
 16397 ;;		 -> STR_35(17), STR_34(17), STR_33(17), STR_32(17), 
 16398 ;;		 -> STR_31(17), STR_30(19), STR_29(16), STR_28(17), 
 16399 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(17), 
 16400 ;;		 -> STR_23(19), STR_22(16), STR_21(17), STR_20(17), 
 16401 ;;		 -> STR_19(17), STR_18(17), STR_17(17), STR_16(19), 
 16402 ;;		 -> STR_15(16), STR_14(17), STR_13(17), STR_12(17), 
 16403 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(23), 
 16404 ;;		 -> STR_7(23), STR_6(9), STR_5(18), STR_4(13), 
 16405 ;;		 -> STR_3(24), STR_2(24), STR_1(8), 
 16406 ;; Auto vars:     Size  Location     Type
 16407 ;;  printf          4    0        struct .
 16408 ;;  printf          3    0        PTR const unsigned char 
 16409 ;;  printf          2   29[COMRAM] int 
 16410 ;;  printf          2   26[COMRAM] unsigned int 
 16411 ;;  printf          2   23[COMRAM] PTR void [1]
 16412 ;;		 -> ?i2_printf(2), ?_printf(2), 
 16413 ;;  printf          2    0        unsigned int 
 16414 ;;  printf          1   31[COMRAM] char 
 16415 ;;  printf          1   28[COMRAM] unsigned char 
 16416 ;;  printf          1   25[COMRAM] char 
 16417 ;;  printf          1   22[COMRAM] unsigned char 
 16418 ;; Return value:  Size  Location     Type
 16419 ;;                  2   12[COMRAM] int 
 16420 ;; Registers used:
 16421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16422 ;; Tracked objects:
 16423 ;;		On entry : 0/0
 16424 ;;		On exit  : 0/0
 16425 ;;		Unchanged: 0/0
 16426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16428 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;Total ram usage:       20 bytes
 16432 ;; Hardware stack levels used:    1
 16433 ;; Hardware stack levels required when called:    2
 16434 ;; This function calls:
 16435 ;;		i2___lwdiv
 16436 ;;		i2___lwmod
 16437 ;;		i2___wmul
 16438 ;;		i2_isdigit
 16439 ;;		i2_putch
 16440 ;; This function is called by:
 16441 ;;		_isr
 16442 ;; This function uses a non-reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text67
 16446  00141C                     __ptext67:
 16447                           	opt stack 0
 16448  00141C                     i2_printf:
 16449                           	opt stack 20
 16450                           
 16451                           ;doprnt.c: 466: va_list ap;
 16452                           ;doprnt.c: 499: signed char c;
 16453                           ;doprnt.c: 501: int width;
 16454                           ;doprnt.c: 506: signed char prec;
 16455                           ;doprnt.c: 508: unsigned char flag;
 16456                           ;doprnt.c: 523: union {
 16457                           ;doprnt.c: 524: unsigned long vd;
 16458                           ;doprnt.c: 525: double integ;
 16459                           ;doprnt.c: 526: } tmpval;
 16460                           ;doprnt.c: 528: unsigned int val;
 16461                           ;doprnt.c: 529: unsigned len;
 16462                           ;doprnt.c: 530: const char * cp;
 16463                           ;doprnt.c: 533: *ap = __va_start();
 16464                           
 16465                           ;incstack = 0
 16466  00141C  0E0F               	movlw	low (?i2_printf+2)
 16467  00141E  6E18               	movwf	i2printf@ap,c
 16468  001420  0E00               	movlw	high (?i2_printf+2)
 16469  001422  6E19               	movwf	i2printf@ap+1,c
 16470                           
 16471                           ;doprnt.c: 536: while(c = *f++) {
 16472  001424  D184               	goto	i2l6616
 16473  001426                     i2l6486:
 16474                           
 16475                           ;doprnt.c: 538: if(c != '%')
 16476  001426  0E25               	movlw	37
 16477  001428  1820               	xorwf	i2printf@c,w,c
 16478  00142A  B4D8               	btfsc	status,2,c
 16479  00142C  D004               	goto	i2l6490
 16480                           
 16481                           ;doprnt.c: 540: {
 16482                           ;doprnt.c: 541: (putch(c) );
 16483  00142E  5020               	movf	i2printf@c,w,c
 16484  001430  EC67  F02A         	call	i2_putch
 16485                           
 16486                           ;doprnt.c: 542: continue;
 16487  001434  D17C               	goto	i2l6616
 16488  001436                     i2l6490:
 16489                           
 16490                           ;doprnt.c: 543: }
 16491                           ;doprnt.c: 546: width = 0;
 16492  001436  0E00               	movlw	0
 16493  001438  6E1F               	movwf	i2printf@width+1,c
 16494  00143A  0E00               	movlw	0
 16495  00143C  6E1E               	movwf	i2printf@width,c
 16496                           
 16497                           ;doprnt.c: 548: flag = 0;
 16498  00143E  0E00               	movlw	0
 16499  001440  6E1D               	movwf	i2printf@flag,c
 16500                           
 16501                           ;doprnt.c: 551: switch(*f) {
 16502                           
 16503                           ;doprnt.c: 550: for(;;) {
 16504  001442  D003               	goto	i2l6496
 16505  001444                     i2l6492:
 16506                           
 16507                           ;doprnt.c: 580: flag |= 0x04;
 16508  001444  841D               	bsf	i2printf@flag,2,c
 16509                           
 16510                           ;doprnt.c: 581: f++;
 16511  001446  4A0D               	infsnz	i2printf@f,f,c
 16512  001448  2A0E               	incf	i2printf@f+1,f,c
 16513  00144A                     i2l6496:
 16514  00144A  C00D  FFF6         	movff	i2printf@f,tblptrl
 16515  00144E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16516  001452                     	if	0	;tblptru may be non-zero
 16517  001452                     	endif
 16518  001452                     	if	0	;tblptru may be non-zero
 16519  001452                     	endif
 16520  001452  0008               	tblrd		*
 16521  001454  50F5               	movf	tablat,w,c
 16522                           
 16523                           ; Switch size 1, requested type "space"
 16524                           ; Number of cases is 1, Range of values is 48 to 48
 16525                           ; switch strategies available:
 16526                           ; Name         Instructions Cycles
 16527                           ; simple_byte            4     3 (average)
 16528                           ;	Chosen strategy is simple_byte
 16529  001456  0A30               	xorlw	48	; case 48
 16530  001458  B4D8               	btfsc	status,2,c
 16531  00145A  D7F4               	goto	i2l6492
 16532                           
 16533                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16534                           
 16535                           ;doprnt.c: 586: }
 16536                           
 16537                           ;doprnt.c: 585: break;
 16538  00145C  C00D  FFF6         	movff	i2printf@f,tblptrl
 16539  001460  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16540  001464                     	if	0	;tblptru may be non-zero
 16541  001464                     	endif
 16542  001464                     	if	0	;tblptru may be non-zero
 16543  001464                     	endif
 16544  001464  0008               	tblrd		*
 16545  001466  50F5               	movf	tablat,w,c
 16546  001468  EC12  F02A         	call	i2_isdigit
 16547  00146C  A0D8               	btfss	status,0,c
 16548  00146E  D038               	goto	i2l6516
 16549                           
 16550                           ;doprnt.c: 598: width = 0;
 16551  001470  0E00               	movlw	0
 16552  001472  6E1F               	movwf	i2printf@width+1,c
 16553  001474  0E00               	movlw	0
 16554  001476  6E1E               	movwf	i2printf@width,c
 16555  001478                     i2l6502:
 16556                           
 16557                           ;doprnt.c: 600: width *= 10;
 16558  001478  C01E  F001         	movff	i2printf@width,i2___wmul@multiplier
 16559  00147C  C01F  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 16560  001480  0E00               	movlw	0
 16561  001482  6E04               	movwf	i2___wmul@multiplicand+1,c
 16562  001484  0E0A               	movlw	10
 16563  001486  6E03               	movwf	i2___wmul@multiplicand,c
 16564  001488  ECDC  F029         	call	i2___wmul	;wreg free
 16565  00148C  C001  F01E         	movff	?i2___wmul,i2printf@width
 16566  001490  C002  F01F         	movff	?i2___wmul+1,i2printf@width+1
 16567                           
 16568                           ;doprnt.c: 601: width += *f++ - '0';
 16569  001494  0ED0               	movlw	208
 16570  001496  6E13               	movwf	??i2_printf& (0+255),c
 16571  001498  0EFF               	movlw	255
 16572  00149A  6E14               	movwf	(??i2_printf+1)& (0+255),c
 16573  00149C  C00D  FFF6         	movff	i2printf@f,tblptrl
 16574  0014A0  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16575  0014A4                     	if	0	;tblptru may be non-zero
 16576  0014A4                     	endif
 16577  0014A4                     	if	0	;tblptru may be non-zero
 16578  0014A4                     	endif
 16579  0014A4  0008               	tblrd		*
 16580  0014A6  50F5               	movf	tablat,w,c
 16581  0014A8  6E15               	movwf	(??i2_printf+2)& (0+255),c
 16582  0014AA  6A16               	clrf	(??i2_printf+3)& (0+255),c
 16583  0014AC  5013               	movf	??i2_printf,w,c
 16584  0014AE  2615               	addwf	??i2_printf+2,f,c
 16585  0014B0  5014               	movf	??i2_printf+1,w,c
 16586  0014B2  2216               	addwfc	??i2_printf+3,f,c
 16587  0014B4  5015               	movf	??i2_printf+2,w,c
 16588  0014B6  261E               	addwf	i2printf@width,f,c
 16589  0014B8  5016               	movf	??i2_printf+3,w,c
 16590  0014BA  221F               	addwfc	i2printf@width+1,f,c
 16591  0014BC  4A0D               	infsnz	i2printf@f,f,c
 16592  0014BE  2A0E               	incf	i2printf@f+1,f,c
 16593                           
 16594                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16595  0014C0  C00D  FFF6         	movff	i2printf@f,tblptrl
 16596  0014C4  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16597  0014C8                     	if	0	;tblptru may be non-zero
 16598  0014C8                     	endif
 16599  0014C8                     	if	0	;tblptru may be non-zero
 16600  0014C8                     	endif
 16601  0014C8  0008               	tblrd		*
 16602  0014CA  50F5               	movf	tablat,w,c
 16603  0014CC  EC12  F02A         	call	i2_isdigit
 16604  0014D0  A0D8               	btfss	status,0,c
 16605  0014D2  D006               	goto	i2l6516
 16606  0014D4  D7D1               	goto	i2l6502
 16607  0014D6                     i2l6510:
 16608                           
 16609                           ;doprnt.c: 721: flag |= 0x80;
 16610  0014D6  8E1D               	bsf	i2printf@flag,7,c
 16611                           
 16612                           ;doprnt.c: 723: break;
 16613  0014D8  D01D               	goto	i2l6518
 16614  0014DA                     i2l6512:
 16615                           
 16616                           ;doprnt.c: 818: flag |= 0xC0;
 16617  0014DA  0EC0               	movlw	192
 16618  0014DC  121D               	iorwf	i2printf@flag,f,c
 16619                           
 16620                           ;doprnt.c: 822: }
 16621                           
 16622                           ;doprnt.c: 819: break;
 16623  0014DE  D01A               	goto	i2l6518
 16624  0014E0                     i2l6516:
 16625  0014E0  C00D  FFF6         	movff	i2printf@f,tblptrl
 16626  0014E4  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16627  0014E8  4A0D               	infsnz	i2printf@f,f,c
 16628  0014EA  2A0E               	incf	i2printf@f+1,f,c
 16629  0014EC                     	if	0	;tblptru may be non-zero
 16630  0014EC                     	endif
 16631  0014EC                     	if	0	;tblptru may be non-zero
 16632  0014EC                     	endif
 16633  0014EC  0008               	tblrd		*
 16634  0014EE  CFF5 F020          	movff	tablat,i2printf@c
 16635  0014F2  5020               	movf	i2printf@c,w,c
 16636                           
 16637                           ; Switch size 1, requested type "space"
 16638                           ; Number of cases is 5, Range of values is 0 to 120
 16639                           ; switch strategies available:
 16640                           ; Name         Instructions Cycles
 16641                           ; simple_byte           16     9 (average)
 16642                           ;	Chosen strategy is simple_byte
 16643  0014F4  0A00               	xorlw	0	; case 0
 16644  0014F6  B4D8               	btfsc	status,2,c
 16645  0014F8  0012               	return	
 16646  0014FA  0A64               	xorlw	100	; case 100
 16647  0014FC  B4D8               	btfsc	status,2,c
 16648  0014FE  D00A               	goto	i2l6518
 16649  001500  0A0D               	xorlw	13	; case 105
 16650  001502  B4D8               	btfsc	status,2,c
 16651  001504  D007               	goto	i2l6518
 16652  001506  0A1C               	xorlw	28	; case 117
 16653  001508  B4D8               	btfsc	status,2,c
 16654  00150A  D7E7               	goto	i2l6512
 16655  00150C  0A0D               	xorlw	13	; case 120
 16656  00150E  B4D8               	btfsc	status,2,c
 16657  001510  D7E2               	goto	i2l6510
 16658  001512  D10D               	goto	i2l6616
 16659  001514                     i2l6518:
 16660                           
 16661                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16662  001514  C01D  F013         	movff	i2printf@flag,??i2_printf
 16663  001518  0EC0               	movlw	192
 16664  00151A  1613               	andwf	??i2_printf,f,c
 16665  00151C  A4D8               	btfss	status,2,c
 16666  00151E  D015               	goto	i2l6530
 16667                           
 16668                           ;doprnt.c: 1253: {
 16669                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16670  001520  C018  FFD9         	movff	i2printf@ap,fsr2l
 16671  001524  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 16672  001528  CFDE F01B          	movff	postinc2,i2printf@val
 16673  00152C  CFDD F01C          	movff	postdec2,i2printf@val+1
 16674  001530  0E02               	movlw	2
 16675  001532  2618               	addwf	i2printf@ap,f,c
 16676  001534  0E00               	movlw	0
 16677  001536  2219               	addwfc	i2printf@ap+1,f,c
 16678                           
 16679                           ;doprnt.c: 1261: if((int)val < 0) {
 16680  001538  AE1C               	btfss	i2printf@val+1,7,c
 16681  00153A  D044               	goto	i2l6564
 16682                           
 16683                           ;doprnt.c: 1262: flag |= 0x03;
 16684  00153C  0E03               	movlw	3
 16685  00153E  121D               	iorwf	i2printf@flag,f,c
 16686                           
 16687                           ;doprnt.c: 1263: val = -val;
 16688  001540  6C1B               	negf	i2printf@val,c
 16689  001542  1E1C               	comf	i2printf@val+1,f,c
 16690  001544  B0D8               	btfsc	status,0,c
 16691  001546  2A1C               	incf	i2printf@val+1,f,c
 16692                           
 16693                           ;doprnt.c: 1264: }
 16694                           ;doprnt.c: 1266: }
 16695  001548  D03D               	goto	i2l6564
 16696  00154A                     i2l6530:
 16697                           
 16698                           ;doprnt.c: 1268: else
 16699                           ;doprnt.c: 1273: {
 16700                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16701  00154A  C018  FFD9         	movff	i2printf@ap,fsr2l
 16702  00154E  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 16703  001552  CFDE F01B          	movff	postinc2,i2printf@val
 16704  001556  CFDD F01C          	movff	postdec2,i2printf@val+1
 16705  00155A  0E02               	movlw	2
 16706  00155C  2618               	addwf	i2printf@ap,f,c
 16707  00155E  0E00               	movlw	0
 16708  001560  2219               	addwfc	i2printf@ap+1,f,c
 16709                           
 16710                           ;doprnt.c: 1287: }
 16711                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 16712  001562  D030               	goto	i2l6564
 16713  001564                     i2l6534:
 16714                           
 16715                           ;doprnt.c: 1302: case 0xC0:
 16716                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16717  001564  0E01               	movlw	1
 16718  001566  6E20               	movwf	i2printf@c,c
 16719  001568                     i2l6536:
 16720  001568  0E05               	movlw	5
 16721  00156A  1820               	xorwf	i2printf@c,w,c
 16722  00156C  B4D8               	btfsc	status,2,c
 16723  00156E  D035               	goto	i2l6566
 16724                           
 16725                           ;doprnt.c: 1306: if(val < dpowers[c])
 16726  001570  5020               	movf	i2printf@c,w,c
 16727  001572  0D02               	mullw	2
 16728  001574  0E04               	movlw	low _dpowers
 16729  001576  24F3               	addwf	prodl,w,c
 16730  001578  6EF6               	movwf	tblptrl,c
 16731  00157A  0EFE               	movlw	high _dpowers
 16732  00157C  20F4               	addwfc	prodh,w,c
 16733  00157E  6EF7               	movwf	tblptrh,c
 16734  001580                     	if	0	;There are less than 3 active tblptr bytes
 16735  001580                     	endif
 16736  001580  0009               	tblrd		*+
 16737  001582  50F5               	movf	tablat,w,c
 16738  001584  5C1B               	subwf	i2printf@val,w,c
 16739  001586  0009               	tblrd		*+
 16740  001588  50F5               	movf	tablat,w,c
 16741  00158A  581C               	subwfb	i2printf@val+1,w,c
 16742  00158C  A0D8               	btfss	status,0,c
 16743  00158E  D025               	goto	i2l6566
 16744                           
 16745                           ;doprnt.c: 1307: break;
 16746  001590  2A20               	incf	i2printf@c,f,c
 16747  001592  D7EA               	goto	i2l6536
 16748  001594                     i2l6548:
 16749                           
 16750                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16751  001594  0E01               	movlw	1
 16752  001596  6E20               	movwf	i2printf@c,c
 16753  001598                     i2l6550:
 16754  001598  0E04               	movlw	4
 16755  00159A  1820               	xorwf	i2printf@c,w,c
 16756  00159C  B4D8               	btfsc	status,2,c
 16757  00159E  D01D               	goto	i2l6566
 16758                           
 16759                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16760  0015A0  5020               	movf	i2printf@c,w,c
 16761  0015A2  0D02               	mullw	2
 16762  0015A4  0E0E               	movlw	low _hexpowers
 16763  0015A6  24F3               	addwf	prodl,w,c
 16764  0015A8  6EF6               	movwf	tblptrl,c
 16765  0015AA  0EFE               	movlw	high _hexpowers
 16766  0015AC  20F4               	addwfc	prodh,w,c
 16767  0015AE  6EF7               	movwf	tblptrh,c
 16768  0015B0                     	if	0	;There are less than 3 active tblptr bytes
 16769  0015B0                     	endif
 16770  0015B0  0009               	tblrd		*+
 16771  0015B2  50F5               	movf	tablat,w,c
 16772  0015B4  5C1B               	subwf	i2printf@val,w,c
 16773  0015B6  0009               	tblrd		*+
 16774  0015B8  50F5               	movf	tablat,w,c
 16775  0015BA  581C               	subwfb	i2printf@val+1,w,c
 16776  0015BC  A0D8               	btfss	status,0,c
 16777  0015BE  D00D               	goto	i2l6566
 16778                           
 16779                           ;doprnt.c: 1318: break;
 16780  0015C0  2A20               	incf	i2printf@c,f,c
 16781  0015C2  D7EA               	goto	i2l6550
 16782  0015C4                     i2l6564:
 16783  0015C4  501D               	movf	i2printf@flag,w,c
 16784  0015C6  0BC0               	andlw	192
 16785                           
 16786                           ; Switch size 1, requested type "space"
 16787                           ; Number of cases is 3, Range of values is 0 to 192
 16788                           ; switch strategies available:
 16789                           ; Name         Instructions Cycles
 16790                           ; simple_byte           10     6 (average)
 16791                           ;	Chosen strategy is simple_byte
 16792  0015C8  0A00               	xorlw	0	; case 0
 16793  0015CA  B4D8               	btfsc	status,2,c
 16794  0015CC  D7CB               	goto	i2l6534
 16795  0015CE  0A80               	xorlw	128	; case 128
 16796  0015D0  B4D8               	btfsc	status,2,c
 16797  0015D2  D7E0               	goto	i2l6548
 16798  0015D4  0A40               	xorlw	64	; case 192
 16799  0015D6  B4D8               	btfsc	status,2,c
 16800  0015D8  D7C5               	goto	i2l6534
 16801  0015DA                     i2l6566:
 16802                           
 16803                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16804  0015DA  501E               	movf	i2printf@width,w,c
 16805  0015DC  101F               	iorwf	i2printf@width+1,w,c
 16806  0015DE  B4D8               	btfsc	status,2,c
 16807  0015E0  D009               	goto	i2l6572
 16808  0015E2  C01D  F013         	movff	i2printf@flag,??i2_printf
 16809  0015E6  0E03               	movlw	3
 16810  0015E8  1613               	andwf	??i2_printf,f,c
 16811  0015EA  B4D8               	btfsc	status,2,c
 16812  0015EC  D003               	goto	i2l6572
 16813                           
 16814                           ;doprnt.c: 1346: width--;
 16815  0015EE  061E               	decf	i2printf@width,f,c
 16816  0015F0  A0D8               	btfss	status,0,c
 16817  0015F2  061F               	decf	i2printf@width+1,f,c
 16818  0015F4                     i2l6572:
 16819                           
 16820                           ;doprnt.c: 1381: if(width > c)
 16821  0015F4  0E80               	movlw	128
 16822  0015F6  BE20               	btfsc	i2printf@c,7,c
 16823  0015F8  0E7F               	movlw	127
 16824  0015FA  6E13               	movwf	??i2_printf& (0+255),c
 16825  0015FC  501E               	movf	i2printf@width,w,c
 16826  0015FE  5C20               	subwf	i2printf@c,w,c
 16827  001600  501F               	movf	i2printf@width+1,w,c
 16828  001602  0A80               	xorlw	128
 16829  001604  5813               	subwfb	??i2_printf& (0+255),w,c
 16830  001606  B0D8               	btfsc	status,0,c
 16831  001608  D007               	goto	i2l6576
 16832                           
 16833                           ;doprnt.c: 1382: width -= c;
 16834  00160A  5020               	movf	i2printf@c,w,c
 16835  00160C  5E1E               	subwf	i2printf@width,f,c
 16836  00160E  0E00               	movlw	0
 16837  001610  BE20               	btfsc	i2printf@c,7,c
 16838  001612  0EFF               	movlw	255
 16839  001614  5A1F               	subwfb	i2printf@width+1,f,c
 16840  001616  D004               	goto	i2l6578
 16841  001618                     i2l6576:
 16842                           
 16843                           ;doprnt.c: 1383: else
 16844                           ;doprnt.c: 1384: width = 0;
 16845  001618  0E00               	movlw	0
 16846  00161A  6E1F               	movwf	i2printf@width+1,c
 16847  00161C  0E00               	movlw	0
 16848  00161E  6E1E               	movwf	i2printf@width,c
 16849  001620                     i2l6578:
 16850                           
 16851                           ;doprnt.c: 1387: if(flag & 0x04) {
 16852  001620  A41D               	btfss	i2printf@flag,2,c
 16853  001622  D014               	goto	i2l6590
 16854                           
 16855                           ;doprnt.c: 1392: if(flag & 0x03)
 16856  001624  C01D  F013         	movff	i2printf@flag,??i2_printf
 16857  001628  0E03               	movlw	3
 16858  00162A  1613               	andwf	??i2_printf,f,c
 16859  00162C  B4D8               	btfsc	status,2,c
 16860  00162E  D003               	goto	i2l6584
 16861                           
 16862                           ;doprnt.c: 1393: (putch('-') );
 16863  001630  0E2D               	movlw	45
 16864  001632  EC67  F02A         	call	i2_putch
 16865  001636                     i2l6584:
 16866                           
 16867                           ;doprnt.c: 1415: if(width)
 16868  001636  501E               	movf	i2printf@width,w,c
 16869  001638  101F               	iorwf	i2printf@width+1,w,c
 16870  00163A  B4D8               	btfsc	status,2,c
 16871  00163C  D01E               	goto	i2l6600
 16872                           
 16873                           ;doprnt.c: 1417: (putch('0') );
 16874                           
 16875                           ;doprnt.c: 1416: do
 16876  00163E  0E30               	movlw	48
 16877  001640  EC67  F02A         	call	i2_putch
 16878                           
 16879                           ;doprnt.c: 1418: while(--width);
 16880  001644  061E               	decf	i2printf@width,f,c
 16881  001646  A0D8               	btfss	status,0,c
 16882  001648  061F               	decf	i2printf@width+1,f,c
 16883  00164A  D7F5               	goto	i2l6584
 16884  00164C                     i2l6590:
 16885                           
 16886                           ;doprnt.c: 1422: {
 16887                           ;doprnt.c: 1424: if(width
 16888                           ;doprnt.c: 1428: )
 16889  00164C  501E               	movf	i2printf@width,w,c
 16890  00164E  101F               	iorwf	i2printf@width+1,w,c
 16891  001650  B4D8               	btfsc	status,2,c
 16892  001652  D00A               	goto	i2l6596
 16893  001654                     i2l6592:
 16894                           
 16895                           ;doprnt.c: 1430: (putch(' ') );
 16896  001654  0E20               	movlw	32
 16897  001656  EC67  F02A         	call	i2_putch
 16898                           
 16899                           ;doprnt.c: 1431: while(--width);
 16900  00165A  061E               	decf	i2printf@width,f,c
 16901  00165C  A0D8               	btfss	status,0,c
 16902  00165E  061F               	decf	i2printf@width+1,f,c
 16903  001660  501E               	movf	i2printf@width,w,c
 16904  001662  101F               	iorwf	i2printf@width+1,w,c
 16905  001664  A4D8               	btfss	status,2,c
 16906  001666  D7F6               	goto	i2l6592
 16907  001668                     i2l6596:
 16908                           
 16909                           ;doprnt.c: 1438: if(flag & 0x03)
 16910  001668  C01D  F013         	movff	i2printf@flag,??i2_printf
 16911  00166C  0E03               	movlw	3
 16912  00166E  1613               	andwf	??i2_printf,f,c
 16913  001670  B4D8               	btfsc	status,2,c
 16914  001672  D003               	goto	i2l6600
 16915                           
 16916                           ;doprnt.c: 1439: (putch('-') );
 16917  001674  0E2D               	movlw	45
 16918  001676  EC67  F02A         	call	i2_putch
 16919  00167A                     i2l6600:
 16920                           
 16921                           ;doprnt.c: 1469: }
 16922                           ;doprnt.c: 1472: prec = c;
 16923  00167A  C020  F01A         	movff	i2printf@c,i2printf@prec
 16924                           
 16925                           ;doprnt.c: 1474: while(prec--) {
 16926  00167E  D053               	goto	i2l6614
 16927  001680                     i2l6602:
 16928                           
 16929                           ;doprnt.c: 1486: case 0xC0:
 16930                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16931  001680  501A               	movf	i2printf@prec,w,c
 16932  001682  0D02               	mullw	2
 16933  001684  0E04               	movlw	low _dpowers
 16934  001686  24F3               	addwf	prodl,w,c
 16935  001688  6EF6               	movwf	tblptrl,c
 16936  00168A  0EFE               	movlw	high _dpowers
 16937  00168C  20F4               	addwfc	prodh,w,c
 16938  00168E  6EF7               	movwf	tblptrh,c
 16939  001690                     	if	0	;There are less than 3 active tblptr bytes
 16940  001690                     	endif
 16941  001690  0009               	tblrd		*+
 16942  001692  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 16943  001696  000A               	tblrd		*-
 16944  001698  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 16945  00169C  C01B  F001         	movff	i2printf@val,i2___lwdiv@dividend
 16946  0016A0  C01C  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 16947  0016A4  ECD9  F027         	call	i2___lwdiv	;wreg free
 16948  0016A8  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
 16949  0016AC  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
 16950  0016B0  0E00               	movlw	0
 16951  0016B2  6E0B               	movwf	i2___lwmod@divisor+1,c
 16952  0016B4  0E0A               	movlw	10
 16953  0016B6  6E0A               	movwf	i2___lwmod@divisor,c
 16954  0016B8  EC99  F028         	call	i2___lwmod	;wreg free
 16955  0016BC  5008               	movf	?i2___lwmod,w,c
 16956  0016BE  0F30               	addlw	48
 16957  0016C0  6E20               	movwf	i2printf@c,c
 16958                           
 16959                           ;doprnt.c: 1491: break;
 16960  0016C2  D02E               	goto	i2l6612
 16961  0016C4                     i2l6604:
 16962                           
 16963                           ;doprnt.c: 1499: {
 16964                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16965  0016C4  C01B  F001         	movff	i2printf@val,i2___lwdiv@dividend
 16966  0016C8  C01C  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 16967  0016CC  501A               	movf	i2printf@prec,w,c
 16968  0016CE  0D02               	mullw	2
 16969  0016D0  0E0E               	movlw	low _hexpowers
 16970  0016D2  24F3               	addwf	prodl,w,c
 16971  0016D4  6EF6               	movwf	tblptrl,c
 16972  0016D6  0EFE               	movlw	high _hexpowers
 16973  0016D8  20F4               	addwfc	prodh,w,c
 16974  0016DA  6EF7               	movwf	tblptrh,c
 16975  0016DC                     	if	0	;There are less than 3 active tblptr bytes
 16976  0016DC                     	endif
 16977  0016DC  0009               	tblrd		*+
 16978  0016DE  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 16979  0016E2  000A               	tblrd		*-
 16980  0016E4  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 16981  0016E8  ECD9  F027         	call	i2___lwdiv	;wreg free
 16982  0016EC  5001               	movf	?i2___lwdiv,w,c
 16983  0016EE  0B0F               	andlw	15
 16984  0016F0  6E17               	movwf	i2printf@idx,c
 16985                           
 16986                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 16987  0016F2  5017               	movf	i2printf@idx,w,c
 16988  0016F4  0D01               	mullw	1
 16989  0016F6  0E3B               	movlw	low STR_48
 16990  0016F8  24F3               	addwf	prodl,w,c
 16991  0016FA  6EF6               	movwf	tblptrl,c
 16992  0016FC  0EFF               	movlw	high STR_48
 16993  0016FE  20F4               	addwfc	prodh,w,c
 16994  001700  6EF7               	movwf	tblptrh,c
 16995  001702                     	if	0	;There are less than 3 active tblptr bytes
 16996  001702                     	endif
 16997  001702  0008               	tblrd		*
 16998  001704  CFF5 F020          	movff	tablat,i2printf@c
 16999                           
 17000                           ;doprnt.c: 1523: }
 17001                           
 17002                           ;doprnt.c: 1508: }
 17003                           ;doprnt.c: 1510: break;
 17004  001708  D00B               	goto	i2l6612
 17005  00170A                     i2l6610:
 17006  00170A  501D               	movf	i2printf@flag,w,c
 17007  00170C  0BC0               	andlw	192
 17008                           
 17009                           ; Switch size 1, requested type "space"
 17010                           ; Number of cases is 3, Range of values is 0 to 192
 17011                           ; switch strategies available:
 17012                           ; Name         Instructions Cycles
 17013                           ; simple_byte           10     6 (average)
 17014                           ;	Chosen strategy is simple_byte
 17015  00170E  0A00               	xorlw	0	; case 0
 17016  001710  B4D8               	btfsc	status,2,c
 17017  001712  D7B6               	goto	i2l6602
 17018  001714  0A80               	xorlw	128	; case 128
 17019  001716  B4D8               	btfsc	status,2,c
 17020  001718  D7D5               	goto	i2l6604
 17021  00171A  0A40               	xorlw	64	; case 192
 17022  00171C  B4D8               	btfsc	status,2,c
 17023  00171E  D7B0               	goto	i2l6602
 17024  001720                     i2l6612:
 17025                           
 17026                           ;doprnt.c: 1524: (putch(c) );
 17027  001720  5020               	movf	i2printf@c,w,c
 17028  001722  EC67  F02A         	call	i2_putch
 17029  001726                     i2l6614:
 17030  001726  061A               	decf	i2printf@prec,f,c
 17031  001728  281A               	incf	i2printf@prec,w,c
 17032  00172A  A4D8               	btfss	status,2,c
 17033  00172C  D7EE               	goto	i2l6610
 17034  00172E                     i2l6616:
 17035  00172E  C00D  FFF6         	movff	i2printf@f,tblptrl
 17036  001732  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 17037  001736  4A0D               	infsnz	i2printf@f,f,c
 17038  001738  2A0E               	incf	i2printf@f+1,f,c
 17039  00173A                     	if	0	;tblptru may be non-zero
 17040  00173A                     	endif
 17041  00173A                     	if	0	;tblptru may be non-zero
 17042  00173A                     	endif
 17043  00173A  0008               	tblrd		*
 17044  00173C  CFF5 F020          	movff	tablat,i2printf@c
 17045  001740  5020               	movf	i2printf@c,w,c
 17046  001742  B4D8               	btfsc	status,2,c
 17047  001744  0012               	return	
 17048  001746  D66F               	goto	i2l6486
 17049  001748                     __end_ofi2_printf:
 17050                           	opt stack 0
 17051                           pclatu	equ	0xFFB
 17052                           pclath	equ	0xFFA
 17053                           tblptru	equ	0xFF8
 17054                           tblptrh	equ	0xFF7
 17055                           tblptrl	equ	0xFF6
 17056                           tablat	equ	0xFF5
 17057                           prodh	equ	0xFF4
 17058                           prodl	equ	0xFF3
 17059                           intcon	equ	0xFF2
 17060                           intcon2	equ	0xFF1
 17061                           intcon3	equ	0xFF0
 17062                           postinc0	equ	0xFEE
 17063                           fsr0h	equ	0xFEA
 17064                           fsr0l	equ	0xFE9
 17065                           wreg	equ	0xFE8
 17066                           postdec1	equ	0xFE5
 17067                           fsr1h	equ	0xFE2
 17068                           fsr1l	equ	0xFE1
 17069                           indf2	equ	0xFDF
 17070                           postinc2	equ	0xFDE
 17071                           postdec2	equ	0xFDD
 17072                           fsr2h	equ	0xFDA
 17073                           fsr2l	equ	0xFD9
 17074                           status	equ	0xFD8
 17075                           
 17076 ;; *************** function i2_putch *****************
 17077 ;; Defined at:
 17078 ;;		line 31 in file "lcd.c"
 17079 ;; Parameters:    Size  Location     Type
 17080 ;;  data            1    wreg     unsigned char 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  data            1    2[COMRAM] unsigned char 
 17083 ;; Return value:  Size  Location     Type
 17084 ;;                  1    wreg      void 
 17085 ;; Registers used:
 17086 ;;		wreg, status,2, status,0, cstack
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17096 ;;Total ram usage:        1 bytes
 17097 ;; Hardware stack levels used:    1
 17098 ;; Hardware stack levels required when called:    1
 17099 ;; This function calls:
 17100 ;;		i2_lcdNibble
 17101 ;; This function is called by:
 17102 ;;		i2_printf
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text68
 17107  0054CE                     __ptext68:
 17108                           	opt stack 0
 17109  0054CE                     i2_putch:
 17110                           	opt stack 20
 17111                           
 17112                           ;incstack = 0
 17113                           ;i2putch@data stored from wreg
 17114  0054CE  6E03               	movwf	i2putch@data,c
 17115                           
 17116                           ;lcd.c: 32: LATDbits.LATD2 = 1;
 17117  0054D0  848C               	bsf	3980,2,c	;volatile
 17118                           
 17119                           ;lcd.c: 33: lcdNibble(data);
 17120  0054D2  5003               	movf	i2putch@data,w,c
 17121  0054D4  EC2A  F028         	call	i2_lcdNibble
 17122  0054D8  0012               	return		;funcret
 17123  0054DA                     __end_ofi2_putch:
 17124                           	opt stack 0
 17125                           pclatu	equ	0xFFB
 17126                           pclath	equ	0xFFA
 17127                           tblptru	equ	0xFF8
 17128                           tblptrh	equ	0xFF7
 17129                           tblptrl	equ	0xFF6
 17130                           tablat	equ	0xFF5
 17131                           prodh	equ	0xFF4
 17132                           prodl	equ	0xFF3
 17133                           intcon	equ	0xFF2
 17134                           intcon2	equ	0xFF1
 17135                           intcon3	equ	0xFF0
 17136                           postinc0	equ	0xFEE
 17137                           fsr0h	equ	0xFEA
 17138                           fsr0l	equ	0xFE9
 17139                           wreg	equ	0xFE8
 17140                           postdec1	equ	0xFE5
 17141                           fsr1h	equ	0xFE2
 17142                           fsr1l	equ	0xFE1
 17143                           indf2	equ	0xFDF
 17144                           postinc2	equ	0xFDE
 17145                           postdec2	equ	0xFDD
 17146                           fsr2h	equ	0xFDA
 17147                           fsr2l	equ	0xFD9
 17148                           status	equ	0xFD8
 17149                           
 17150 ;; *************** function i2_isdigit *****************
 17151 ;; Defined at:
 17152 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 17153 ;; Parameters:    Size  Location     Type
 17154 ;;  c               1    wreg     unsigned char 
 17155 ;; Auto vars:     Size  Location     Type
 17156 ;;  c               1    2[COMRAM] unsigned char 
 17157 ;; Return value:  Size  Location     Type
 17158 ;;		None               void
 17159 ;; Registers used:
 17160 ;;		wreg, status,2, status,0
 17161 ;; Tracked objects:
 17162 ;;		On entry : 0/0
 17163 ;;		On exit  : 0/0
 17164 ;;		Unchanged: 0/0
 17165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17170 ;;Total ram usage:        3 bytes
 17171 ;; Hardware stack levels used:    1
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		i2_printf
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           	psect	text69
 17180  005424                     __ptext69:
 17181                           	opt stack 0
 17182  005424                     i2_isdigit:
 17183                           	opt stack 21
 17184                           
 17185                           ;incstack = 0
 17186                           ;i2isdigit@c stored from wreg
 17187  005424  6E03               	movwf	i2isdigit@c,c
 17188  005426  0E00               	movlw	0
 17189  005428  6E02               	movwf	i2_isdigit$965,c
 17190  00542A  0E3A               	movlw	58
 17191  00542C  6003               	cpfslt	i2isdigit@c,c
 17192  00542E  D005               	goto	i2l5908
 17193  005430  0E2F               	movlw	47
 17194  005432  6403               	cpfsgt	i2isdigit@c,c
 17195  005434  D002               	goto	i2l5908
 17196  005436  0E01               	movlw	1
 17197  005438  6E02               	movwf	i2_isdigit$965,c
 17198  00543A                     i2l5908:
 17199  00543A  C002  F001         	movff	i2_isdigit$965,??i2_isdigit
 17200  00543E  3001               	rrcf	??i2_isdigit,w,c
 17201  005440  0012               	return	
 17202  005442                     __end_ofi2_isdigit:
 17203                           	opt stack 0
 17204                           pclatu	equ	0xFFB
 17205                           pclath	equ	0xFFA
 17206                           tblptru	equ	0xFF8
 17207                           tblptrh	equ	0xFF7
 17208                           tblptrl	equ	0xFF6
 17209                           tablat	equ	0xFF5
 17210                           prodh	equ	0xFF4
 17211                           prodl	equ	0xFF3
 17212                           intcon	equ	0xFF2
 17213                           intcon2	equ	0xFF1
 17214                           intcon3	equ	0xFF0
 17215                           postinc0	equ	0xFEE
 17216                           fsr0h	equ	0xFEA
 17217                           fsr0l	equ	0xFE9
 17218                           wreg	equ	0xFE8
 17219                           postdec1	equ	0xFE5
 17220                           fsr1h	equ	0xFE2
 17221                           fsr1l	equ	0xFE1
 17222                           indf2	equ	0xFDF
 17223                           postinc2	equ	0xFDE
 17224                           postdec2	equ	0xFDD
 17225                           fsr2h	equ	0xFDA
 17226                           fsr2l	equ	0xFD9
 17227                           status	equ	0xFD8
 17228                           
 17229 ;; *************** function i2___lwmod *****************
 17230 ;; Defined at:
 17231 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;  dividend        2    7[COMRAM] unsigned int 
 17234 ;;  divisor         2    9[COMRAM] unsigned int 
 17235 ;; Auto vars:     Size  Location     Type
 17236 ;;  __lwmod         1   11[COMRAM] unsigned char 
 17237 ;; Return value:  Size  Location     Type
 17238 ;;                  2    7[COMRAM] unsigned int 
 17239 ;; Registers used:
 17240 ;;		wreg, status,2, status,0
 17241 ;; Tracked objects:
 17242 ;;		On entry : 0/0
 17243 ;;		On exit  : 0/0
 17244 ;;		Unchanged: 0/0
 17245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17250 ;;Total ram usage:        5 bytes
 17251 ;; Hardware stack levels used:    1
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		i2_printf
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           	psect	text70
 17260  005132                     __ptext70:
 17261                           	opt stack 0
 17262  005132                     i2___lwmod:
 17263                           	opt stack 21
 17264                           
 17265                           ;incstack = 0
 17266  005132  500A               	movf	i2___lwmod@divisor,w,c
 17267  005134  100B               	iorwf	i2___lwmod@divisor+1,w,c
 17268  005136  B4D8               	btfsc	status,2,c
 17269  005138  D018               	goto	i2l1092
 17270  00513A  0E01               	movlw	1
 17271  00513C  6E0C               	movwf	i2___lwmod@counter,c
 17272  00513E  D004               	goto	i2l5940
 17273  005140                     i2l5938:
 17274  005140  90D8               	bcf	status,0,c
 17275  005142  360A               	rlcf	i2___lwmod@divisor,f,c
 17276  005144  360B               	rlcf	i2___lwmod@divisor+1,f,c
 17277  005146  2A0C               	incf	i2___lwmod@counter,f,c
 17278  005148                     i2l5940:
 17279  005148  AE0B               	btfss	i2___lwmod@divisor+1,7,c
 17280  00514A  D7FA               	goto	i2l5938
 17281  00514C                     i2l5942:
 17282  00514C  500A               	movf	i2___lwmod@divisor,w,c
 17283  00514E  5C08               	subwf	i2___lwmod@dividend,w,c
 17284  005150  500B               	movf	i2___lwmod@divisor+1,w,c
 17285  005152  5809               	subwfb	i2___lwmod@dividend+1,w,c
 17286  005154  A0D8               	btfss	status,0,c
 17287  005156  D004               	goto	i2l5946
 17288  005158  500A               	movf	i2___lwmod@divisor,w,c
 17289  00515A  5E08               	subwf	i2___lwmod@dividend,f,c
 17290  00515C  500B               	movf	i2___lwmod@divisor+1,w,c
 17291  00515E  5A09               	subwfb	i2___lwmod@dividend+1,f,c
 17292  005160                     i2l5946:
 17293  005160  90D8               	bcf	status,0,c
 17294  005162  320B               	rrcf	i2___lwmod@divisor+1,f,c
 17295  005164  320A               	rrcf	i2___lwmod@divisor,f,c
 17296  005166  2E0C               	decfsz	i2___lwmod@counter,f,c
 17297  005168  D7F1               	goto	i2l5942
 17298  00516A                     i2l1092:
 17299  00516A  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
 17300  00516E  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 17301  005172  0012               	return		;funcret
 17302  005174                     __end_ofi2___lwmod:
 17303                           	opt stack 0
 17304                           pclatu	equ	0xFFB
 17305                           pclath	equ	0xFFA
 17306                           tblptru	equ	0xFF8
 17307                           tblptrh	equ	0xFF7
 17308                           tblptrl	equ	0xFF6
 17309                           tablat	equ	0xFF5
 17310                           prodh	equ	0xFF4
 17311                           prodl	equ	0xFF3
 17312                           intcon	equ	0xFF2
 17313                           intcon2	equ	0xFF1
 17314                           intcon3	equ	0xFF0
 17315                           postinc0	equ	0xFEE
 17316                           fsr0h	equ	0xFEA
 17317                           fsr0l	equ	0xFE9
 17318                           wreg	equ	0xFE8
 17319                           postdec1	equ	0xFE5
 17320                           fsr1h	equ	0xFE2
 17321                           fsr1l	equ	0xFE1
 17322                           indf2	equ	0xFDF
 17323                           postinc2	equ	0xFDE
 17324                           postdec2	equ	0xFDD
 17325                           fsr2h	equ	0xFDA
 17326                           fsr2l	equ	0xFD9
 17327                           status	equ	0xFD8
 17328                           
 17329 ;; *************** function i2___lwdiv *****************
 17330 ;; Defined at:
 17331 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;  dividend        2    0[COMRAM] unsigned int 
 17334 ;;  divisor         2    2[COMRAM] unsigned int 
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 17337 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 17338 ;; Return value:  Size  Location     Type
 17339 ;;                  2    0[COMRAM] unsigned int 
 17340 ;; Registers used:
 17341 ;;		wreg, status,2, status,0
 17342 ;; Tracked objects:
 17343 ;;		On entry : 0/0
 17344 ;;		On exit  : 0/0
 17345 ;;		Unchanged: 0/0
 17346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17350 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17351 ;;Total ram usage:        7 bytes
 17352 ;; Hardware stack levels used:    1
 17353 ;; This function calls:
 17354 ;;		Nothing
 17355 ;; This function is called by:
 17356 ;;		i2_printf
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           
 17360                           	psect	text71
 17361  004FB2                     __ptext71:
 17362                           	opt stack 0
 17363  004FB2                     i2___lwdiv:
 17364                           	opt stack 21
 17365                           
 17366                           ;incstack = 0
 17367  004FB2  0E00               	movlw	0
 17368  004FB4  6E06               	movwf	i2___lwdiv@quotient+1,c
 17369  004FB6  0E00               	movlw	0
 17370  004FB8  6E05               	movwf	i2___lwdiv@quotient,c
 17371  004FBA  5003               	movf	i2___lwdiv@divisor,w,c
 17372  004FBC  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 17373  004FBE  B4D8               	btfsc	status,2,c
 17374  004FC0  D01C               	goto	i2l1082
 17375  004FC2  0E01               	movlw	1
 17376  004FC4  6E07               	movwf	i2___lwdiv@counter,c
 17377  004FC6  D004               	goto	i2l5920
 17378  004FC8                     i2l5918:
 17379  004FC8  90D8               	bcf	status,0,c
 17380  004FCA  3603               	rlcf	i2___lwdiv@divisor,f,c
 17381  004FCC  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 17382  004FCE  2A07               	incf	i2___lwdiv@counter,f,c
 17383  004FD0                     i2l5920:
 17384  004FD0  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 17385  004FD2  D7FA               	goto	i2l5918
 17386  004FD4                     i2l5922:
 17387  004FD4  90D8               	bcf	status,0,c
 17388  004FD6  3605               	rlcf	i2___lwdiv@quotient,f,c
 17389  004FD8  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 17390  004FDA  5003               	movf	i2___lwdiv@divisor,w,c
 17391  004FDC  5C01               	subwf	i2___lwdiv@dividend,w,c
 17392  004FDE  5004               	movf	i2___lwdiv@divisor+1,w,c
 17393  004FE0  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 17394  004FE2  A0D8               	btfss	status,0,c
 17395  004FE4  D005               	goto	i2l5930
 17396  004FE6  5003               	movf	i2___lwdiv@divisor,w,c
 17397  004FE8  5E01               	subwf	i2___lwdiv@dividend,f,c
 17398  004FEA  5004               	movf	i2___lwdiv@divisor+1,w,c
 17399  004FEC  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 17400  004FEE  8005               	bsf	i2___lwdiv@quotient,0,c
 17401  004FF0                     i2l5930:
 17402  004FF0  90D8               	bcf	status,0,c
 17403  004FF2  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 17404  004FF4  3203               	rrcf	i2___lwdiv@divisor,f,c
 17405  004FF6  2E07               	decfsz	i2___lwdiv@counter,f,c
 17406  004FF8  D7ED               	goto	i2l5922
 17407  004FFA                     i2l1082:
 17408  004FFA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 17409  004FFE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 17410  005002  0012               	return		;funcret
 17411  005004                     __end_ofi2___lwdiv:
 17412                           	opt stack 0
 17413                           pclatu	equ	0xFFB
 17414                           pclath	equ	0xFFA
 17415                           tblptru	equ	0xFF8
 17416                           tblptrh	equ	0xFF7
 17417                           tblptrl	equ	0xFF6
 17418                           tablat	equ	0xFF5
 17419                           prodh	equ	0xFF4
 17420                           prodl	equ	0xFF3
 17421                           intcon	equ	0xFF2
 17422                           intcon2	equ	0xFF1
 17423                           intcon3	equ	0xFF0
 17424                           postinc0	equ	0xFEE
 17425                           fsr0h	equ	0xFEA
 17426                           fsr0l	equ	0xFE9
 17427                           wreg	equ	0xFE8
 17428                           postdec1	equ	0xFE5
 17429                           fsr1h	equ	0xFE2
 17430                           fsr1l	equ	0xFE1
 17431                           indf2	equ	0xFDF
 17432                           postinc2	equ	0xFDE
 17433                           postdec2	equ	0xFDD
 17434                           fsr2h	equ	0xFDA
 17435                           fsr2l	equ	0xFD9
 17436                           status	equ	0xFD8
 17437                           
 17438 ;; *************** function i2_lcdInst *****************
 17439 ;; Defined at:
 17440 ;;		line 26 in file "lcd.c"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;  data            1    wreg     unsigned char 
 17443 ;; Auto vars:     Size  Location     Type
 17444 ;;  data            1    2[COMRAM] unsigned char 
 17445 ;; Return value:  Size  Location     Type
 17446 ;;                  1    wreg      void 
 17447 ;; Registers used:
 17448 ;;		wreg, status,2, status,0, cstack
 17449 ;; Tracked objects:
 17450 ;;		On entry : 0/0
 17451 ;;		On exit  : 0/0
 17452 ;;		Unchanged: 0/0
 17453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17458 ;;Total ram usage:        1 bytes
 17459 ;; Hardware stack levels used:    1
 17460 ;; Hardware stack levels required when called:    1
 17461 ;; This function calls:
 17462 ;;		i2_lcdNibble
 17463 ;; This function is called by:
 17464 ;;		_isr
 17465 ;; This function uses a non-reentrant model
 17466 ;;
 17467                           
 17468                           	psect	text72
 17469  0054DA                     __ptext72:
 17470                           	opt stack 0
 17471  0054DA                     i2_lcdInst:
 17472                           	opt stack 21
 17473                           
 17474                           ;incstack = 0
 17475                           ;i2lcdInst@data stored from wreg
 17476  0054DA  6E03               	movwf	i2lcdInst@data,c
 17477                           
 17478                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 17479  0054DC  948C               	bcf	3980,2,c	;volatile
 17480                           
 17481                           ;lcd.c: 28: lcdNibble(data);
 17482  0054DE  5003               	movf	i2lcdInst@data,w,c
 17483  0054E0  EC2A  F028         	call	i2_lcdNibble
 17484  0054E4  0012               	return		;funcret
 17485  0054E6                     __end_ofi2_lcdInst:
 17486                           	opt stack 0
 17487                           pclatu	equ	0xFFB
 17488                           pclath	equ	0xFFA
 17489                           tblptru	equ	0xFF8
 17490                           tblptrh	equ	0xFF7
 17491                           tblptrl	equ	0xFF6
 17492                           tablat	equ	0xFF5
 17493                           prodh	equ	0xFF4
 17494                           prodl	equ	0xFF3
 17495                           intcon	equ	0xFF2
 17496                           intcon2	equ	0xFF1
 17497                           intcon3	equ	0xFF0
 17498                           postinc0	equ	0xFEE
 17499                           fsr0h	equ	0xFEA
 17500                           fsr0l	equ	0xFE9
 17501                           wreg	equ	0xFE8
 17502                           postdec1	equ	0xFE5
 17503                           fsr1h	equ	0xFE2
 17504                           fsr1l	equ	0xFE1
 17505                           indf2	equ	0xFDF
 17506                           postinc2	equ	0xFDE
 17507                           postdec2	equ	0xFDD
 17508                           fsr2h	equ	0xFDA
 17509                           fsr2l	equ	0xFD9
 17510                           status	equ	0xFD8
 17511                           
 17512 ;; *************** function i2_lcdNibble *****************
 17513 ;; Defined at:
 17514 ;;		line 36 in file "lcd.c"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;  data            1    wreg     unsigned char 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;  data            1    1[COMRAM] unsigned char 
 17519 ;;  lcdNibble       1    0[COMRAM] unsigned char 
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      void 
 17522 ;; Registers used:
 17523 ;;		wreg, status,2, status,0
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;Total ram usage:        2 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		i2_lcdInst
 17539 ;;		i2_putch
 17540 ;; This function uses a non-reentrant model
 17541 ;;
 17542                           
 17543                           	psect	text73
 17544  005054                     __ptext73:
 17545                           	opt stack 0
 17546  005054                     i2_lcdNibble:
 17547                           	opt stack 20
 17548                           
 17549                           ;incstack = 0
 17550                           ;i2lcdNibble@data stored from wreg
 17551  005054  6E02               	movwf	i2lcdNibble@data,c
 17552                           
 17553                           ;lcd.c: 38: char temp = data & 0xF0;
 17554  005056  5002               	movf	i2lcdNibble@data,w,c
 17555  005058  0BF0               	andlw	240
 17556  00505A  6E01               	movwf	i2lcdNibble@temp,c
 17557                           
 17558                           ;lcd.c: 39: LATD = LATD & 0x0F;
 17559  00505C  508C               	movf	3980,w,c	;volatile
 17560  00505E  0B0F               	andlw	15
 17561  005060  6E8C               	movwf	3980,c	;volatile
 17562                           
 17563                           ;lcd.c: 40: LATD = temp | LATD;
 17564  005062  5001               	movf	i2lcdNibble@temp,w,c
 17565  005064  108C               	iorwf	3980,w,c	;volatile
 17566  005066  6E8C               	movwf	3980,c	;volatile
 17567                           
 17568                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 17569  005068  968C               	bcf	3980,3,c	;volatile
 17570                           
 17571                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17572  00506A  0E19               	movlw	25
 17573  00506C                     i2u890_47:
 17574  00506C  2EE8               	decfsz	wreg,f,c
 17575  00506E  D7FE               	bra	i2u890_47
 17576                           
 17577                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 17578  005070  868C               	bsf	3980,3,c	;volatile
 17579                           
 17580                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17581  005072  0E19               	movlw	25
 17582  005074                     i2u891_47:
 17583  005074  2EE8               	decfsz	wreg,f,c
 17584  005076  D7FE               	bra	i2u891_47
 17585                           
 17586                           ;lcd.c: 47: data = data << 4;
 17587  005078  3802               	swapf	i2lcdNibble@data,w,c
 17588  00507A  0BF0               	andlw	240
 17589  00507C  6E02               	movwf	i2lcdNibble@data,c
 17590                           
 17591                           ;lcd.c: 49: temp = data & 0xF0;
 17592  00507E  5002               	movf	i2lcdNibble@data,w,c
 17593  005080  0BF0               	andlw	240
 17594  005082  6E01               	movwf	i2lcdNibble@temp,c
 17595                           
 17596                           ;lcd.c: 50: LATD = LATD & 0x0F;
 17597  005084  508C               	movf	3980,w,c	;volatile
 17598  005086  0B0F               	andlw	15
 17599  005088  6E8C               	movwf	3980,c	;volatile
 17600                           
 17601                           ;lcd.c: 51: LATD = temp | LATD;
 17602  00508A  5001               	movf	i2lcdNibble@temp,w,c
 17603  00508C  108C               	iorwf	3980,w,c	;volatile
 17604  00508E  6E8C               	movwf	3980,c	;volatile
 17605                           
 17606                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 17607  005090  968C               	bcf	3980,3,c	;volatile
 17608                           
 17609                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17610  005092  0E19               	movlw	25
 17611  005094                     i2u892_47:
 17612  005094  2EE8               	decfsz	wreg,f,c
 17613  005096  D7FE               	bra	i2u892_47
 17614                           
 17615                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 17616  005098  868C               	bsf	3980,3,c	;volatile
 17617                           
 17618                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17619  00509A  0E19               	movlw	25
 17620  00509C                     i2u893_47:
 17621  00509C  2EE8               	decfsz	wreg,f,c
 17622  00509E  D7FE               	bra	i2u893_47
 17623  0050A0  0012               	return		;funcret
 17624  0050A2                     __end_ofi2_lcdNibble:
 17625                           	opt stack 0
 17626                           pclatu	equ	0xFFB
 17627                           pclath	equ	0xFFA
 17628                           tblptru	equ	0xFF8
 17629                           tblptrh	equ	0xFF7
 17630                           tblptrl	equ	0xFF6
 17631                           tablat	equ	0xFF5
 17632                           prodh	equ	0xFF4
 17633                           prodl	equ	0xFF3
 17634                           intcon	equ	0xFF2
 17635                           intcon2	equ	0xFF1
 17636                           intcon3	equ	0xFF0
 17637                           postinc0	equ	0xFEE
 17638                           fsr0h	equ	0xFEA
 17639                           fsr0l	equ	0xFE9
 17640                           wreg	equ	0xFE8
 17641                           postdec1	equ	0xFE5
 17642                           fsr1h	equ	0xFE2
 17643                           fsr1l	equ	0xFE1
 17644                           indf2	equ	0xFDF
 17645                           postinc2	equ	0xFDE
 17646                           postdec2	equ	0xFDD
 17647                           fsr2h	equ	0xFDA
 17648                           fsr2l	equ	0xFD9
 17649                           status	equ	0xFD8
 17650                           
 17651 ;; *************** function i2_dec_to_hex *****************
 17652 ;; Defined at:
 17653 ;;		line 361 in file "main.c"
 17654 ;; Parameters:    Size  Location     Type
 17655 ;;  num             2   98[COMRAM] int 
 17656 ;; Auto vars:     Size  Location     Type
 17657 ;;  dec_to_hex      2  112[COMRAM] int 
 17658 ;;  dec_to_hex      2  110[COMRAM] int 
 17659 ;;  dec_to_hex      2  108[COMRAM] int 
 17660 ;;  dec_to_hex      2  106[COMRAM] int 
 17661 ;; Return value:  Size  Location     Type
 17662 ;;                  2   98[COMRAM] int 
 17663 ;; Registers used:
 17664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17665 ;; Tracked objects:
 17666 ;;		On entry : 0/0
 17667 ;;		On exit  : 0/0
 17668 ;;		Unchanged: 0/0
 17669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17671 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17673 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17674 ;;Total ram usage:       16 bytes
 17675 ;; Hardware stack levels used:    1
 17676 ;; Hardware stack levels required when called:    5
 17677 ;; This function calls:
 17678 ;;		i2___awdiv
 17679 ;;		i2___awtoft
 17680 ;;		i2___ftadd
 17681 ;;		i2___ftmul
 17682 ;;		i2___fttol
 17683 ;;		i2_pow
 17684 ;; This function is called by:
 17685 ;;		_isr
 17686 ;; This function uses a non-reentrant model
 17687 ;;
 17688                           
 17689                           	psect	text74
 17690  003B4A                     __ptext74:
 17691                           	opt stack 0
 17692  003B4A                     i2_dec_to_hex:
 17693                           	opt stack 17
 17694                           
 17695                           ;main.c: 362: int i = 0, quotient = num, temp, hexnum = 0;
 17696                           
 17697                           ;incstack = 0
 17698  003B4A  0E00               	movlw	0
 17699  003B4C  6E6E               	movwf	i2dec_to_hex@i+1,c
 17700  003B4E  0E00               	movlw	0
 17701  003B50  6E6D               	movwf	i2dec_to_hex@i,c
 17702  003B52  C063  F071         	movff	i2dec_to_hex@num,i2dec_to_hex@quotient
 17703  003B56  C064  F072         	movff	i2dec_to_hex@num+1,i2dec_to_hex@quotient+1
 17704  003B5A  0E00               	movlw	0
 17705  003B5C  6E70               	movwf	i2dec_to_hex@hexnum+1,c
 17706  003B5E  0E00               	movlw	0
 17707  003B60  6E6F               	movwf	i2dec_to_hex@hexnum,c
 17708                           
 17709                           ;main.c: 364: while (quotient != 0) {
 17710  003B62  D068               	goto	i2l6450
 17711  003B64                     i2l6438:
 17712                           
 17713                           ;main.c: 365: temp = quotient % 16;
 17714  003B64  0E0F               	movlw	15
 17715  003B66  1471               	andwf	i2dec_to_hex@quotient,w,c
 17716  003B68  6E6B               	movwf	i2dec_to_hex@temp,c
 17717  003B6A  6A6C               	clrf	i2dec_to_hex@temp+1,c
 17718                           
 17719                           ;main.c: 366: hexnum += temp*pow(10,i);
 17720  003B6C  C06D  F009         	movff	i2dec_to_hex@i,i2___awtoft@c
 17721  003B70  C06E  F00A         	movff	i2dec_to_hex@i+1,i2___awtoft@c+1
 17722  003B74  ECF7  F028         	call	i2___awtoft	;wreg free
 17723  003B78  C009  F065         	movff	?i2___awtoft,i2_dec_to_hex$1675
 17724  003B7C  C00A  F066         	movff	?i2___awtoft+1,i2_dec_to_hex$1675+1
 17725  003B80  C00B  F067         	movff	?i2___awtoft+2,i2_dec_to_hex$1675+2
 17726                           
 17727                           ;main.c: 366: hexnum += temp*pow(10,i);
 17728  003B84  C065  F055         	movff	i2_dec_to_hex$1675,i2pow@y
 17729  003B88  C066  F056         	movff	i2_dec_to_hex$1675+1,i2pow@y+1
 17730  003B8C  C067  F057         	movff	i2_dec_to_hex$1675+2,i2pow@y+2
 17731  003B90  0E00               	movlw	0
 17732  003B92  6E52               	movwf	i2pow@x,c
 17733  003B94  0E20               	movlw	32
 17734  003B96  6E53               	movwf	i2pow@x+1,c
 17735  003B98  0E41               	movlw	65
 17736  003B9A  6E54               	movwf	i2pow@x+2,c
 17737  003B9C  EC98  F014         	call	i2_pow	;wreg free
 17738  003BA0  C052  F068         	movff	?i2_pow,i2_dec_to_hex$1676
 17739  003BA4  C053  F069         	movff	?i2_pow+1,i2_dec_to_hex$1676+1
 17740  003BA8  C054  F06A         	movff	?i2_pow+2,i2_dec_to_hex$1676+2
 17741                           
 17742                           ;main.c: 366: hexnum += temp*pow(10,i);
 17743  003BAC  C068  F010         	movff	i2_dec_to_hex$1676,i2___ftmul@f2
 17744  003BB0  C069  F011         	movff	i2_dec_to_hex$1676+1,i2___ftmul@f2+1
 17745  003BB4  C06A  F012         	movff	i2_dec_to_hex$1676+2,i2___ftmul@f2+2
 17746  003BB8  C06B  F009         	movff	i2dec_to_hex@temp,i2___awtoft@c
 17747  003BBC  C06C  F00A         	movff	i2dec_to_hex@temp+1,i2___awtoft@c+1
 17748  003BC0  ECF7  F028         	call	i2___awtoft	;wreg free
 17749  003BC4  C009  F00D         	movff	?i2___awtoft,i2___ftmul@f1
 17750  003BC8  C00A  F00E         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 17751  003BCC  C00B  F00F         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 17752  003BD0  EC19  F01F         	call	i2___ftmul	;wreg free
 17753  003BD4  C00D  F01F         	movff	?i2___ftmul,i2___ftadd@f2
 17754  003BD8  C00E  F020         	movff	?i2___ftmul+1,i2___ftadd@f2+1
 17755  003BDC  C00F  F021         	movff	?i2___ftmul+2,i2___ftadd@f2+2
 17756  003BE0  C06F  F009         	movff	i2dec_to_hex@hexnum,i2___awtoft@c
 17757  003BE4  C070  F00A         	movff	i2dec_to_hex@hexnum+1,i2___awtoft@c+1
 17758  003BE8  ECF7  F028         	call	i2___awtoft	;wreg free
 17759  003BEC  C009  F01C         	movff	?i2___awtoft,i2___ftadd@f1
 17760  003BF0  C00A  F01D         	movff	?i2___awtoft+1,i2___ftadd@f1+1
 17761  003BF4  C00B  F01E         	movff	?i2___awtoft+2,i2___ftadd@f1+2
 17762  003BF8  ECC2  F013         	call	i2___ftadd	;wreg free
 17763  003BFC  C01C  F028         	movff	?i2___ftadd,i2___fttol@f1
 17764  003C00  C01D  F029         	movff	?i2___ftadd+1,i2___fttol@f1+1
 17765  003C04  C01E  F02A         	movff	?i2___ftadd+2,i2___fttol@f1+2
 17766  003C08  EC9F  F01E         	call	i2___fttol	;wreg free
 17767  003C0C  C028  F06F         	movff	?i2___fttol,i2dec_to_hex@hexnum
 17768  003C10  C029  F070         	movff	?i2___fttol+1,i2dec_to_hex@hexnum+1
 17769                           
 17770                           ;main.c: 367: quotient = quotient / 16;
 17771  003C14  C071  F001         	movff	i2dec_to_hex@quotient,i2___awdiv@dividend
 17772  003C18  C072  F002         	movff	i2dec_to_hex@quotient+1,i2___awdiv@dividend+1
 17773  003C1C  0E00               	movlw	0
 17774  003C1E  6E04               	movwf	i2___awdiv@divisor+1,c
 17775  003C20  0E10               	movlw	16
 17776  003C22  6E03               	movwf	i2___awdiv@divisor,c
 17777  003C24  EC8A  F025         	call	i2___awdiv	;wreg free
 17778  003C28  C001  F071         	movff	?i2___awdiv,i2dec_to_hex@quotient
 17779  003C2C  C002  F072         	movff	?i2___awdiv+1,i2dec_to_hex@quotient+1
 17780                           
 17781                           ;main.c: 368: i += 1;
 17782  003C30  4A6D               	infsnz	i2dec_to_hex@i,f,c
 17783  003C32  2A6E               	incf	i2dec_to_hex@i+1,f,c
 17784  003C34                     i2l6450:
 17785  003C34  5071               	movf	i2dec_to_hex@quotient,w,c
 17786  003C36  1072               	iorwf	i2dec_to_hex@quotient+1,w,c
 17787  003C38  A4D8               	btfss	status,2,c
 17788  003C3A  D794               	goto	i2l6438
 17789                           
 17790                           ;main.c: 369: }
 17791                           ;main.c: 370: return hexnum;
 17792  003C3C  C06F  F063         	movff	i2dec_to_hex@hexnum,?i2_dec_to_hex
 17793  003C40  C070  F064         	movff	i2dec_to_hex@hexnum+1,?i2_dec_to_hex+1
 17794  003C44  0012               	return		;funcret
 17795  003C46                     __end_ofi2_dec_to_hex:
 17796                           	opt stack 0
 17797                           pclatu	equ	0xFFB
 17798                           pclath	equ	0xFFA
 17799                           tblptru	equ	0xFF8
 17800                           tblptrh	equ	0xFF7
 17801                           tblptrl	equ	0xFF6
 17802                           tablat	equ	0xFF5
 17803                           prodh	equ	0xFF4
 17804                           prodl	equ	0xFF3
 17805                           intcon	equ	0xFF2
 17806                           intcon2	equ	0xFF1
 17807                           intcon3	equ	0xFF0
 17808                           postinc0	equ	0xFEE
 17809                           fsr0h	equ	0xFEA
 17810                           fsr0l	equ	0xFE9
 17811                           wreg	equ	0xFE8
 17812                           postdec1	equ	0xFE5
 17813                           fsr1h	equ	0xFE2
 17814                           fsr1l	equ	0xFE1
 17815                           indf2	equ	0xFDF
 17816                           postinc2	equ	0xFDE
 17817                           postdec2	equ	0xFDD
 17818                           fsr2h	equ	0xFDA
 17819                           fsr2l	equ	0xFD9
 17820                           status	equ	0xFD8
 17821                           
 17822 ;; *************** function i2_pow *****************
 17823 ;; Defined at:
 17824 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\pow.c"
 17825 ;; Parameters:    Size  Location     Type
 17826 ;;  x               3   81[COMRAM] int 
 17827 ;;  y               3   84[COMRAM] int 
 17828 ;; Auto vars:     Size  Location     Type
 17829 ;;  pow             4   94[COMRAM] unsigned long 
 17830 ;;  pow             1   93[COMRAM] unsigned char 
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  3   81[COMRAM] unsigned char 
 17833 ;; Registers used:
 17834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17835 ;; Tracked objects:
 17836 ;;		On entry : 0/0
 17837 ;;		On exit  : 0/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17841 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17843 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17844 ;;Total ram usage:       17 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; Hardware stack levels required when called:    4
 17847 ;; This function calls:
 17848 ;;		i2___ftge
 17849 ;;		i2___ftmul
 17850 ;;		i2___ftneg
 17851 ;;		i2___fttol
 17852 ;;		i2___lltoft
 17853 ;;		i2_exp
 17854 ;;		i2_log
 17855 ;; This function is called by:
 17856 ;;		i2_dec_to_hex
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text75
 17861  002930                     __ptext75:
 17862                           	opt stack 0
 17863  002930                     i2_pow:
 17864                           	opt stack 17
 17865                           
 17866                           ;incstack = 0
 17867  002930  0E00               	movlw	0
 17868  002932  6E5E               	movwf	i2pow@sign,c
 17869  002934  5052               	movf	i2pow@x,w,c
 17870  002936  1053               	iorwf	i2pow@x+1,w,c
 17871  002938  1054               	iorwf	i2pow@x+2,w,c
 17872  00293A  A4D8               	btfss	status,2,c
 17873  00293C  D01C               	goto	i2l5960
 17874  00293E  0E00               	movlw	0
 17875  002940  6E01               	movwf	i2___ftge@ff1,c
 17876  002942  0E00               	movlw	0
 17877  002944  6E02               	movwf	i2___ftge@ff1+1,c
 17878  002946  0E00               	movlw	0
 17879  002948  6E03               	movwf	i2___ftge@ff1+2,c
 17880  00294A  C055  F004         	movff	i2pow@y,i2___ftge@ff2
 17881  00294E  C056  F005         	movff	i2pow@y+1,i2___ftge@ff2+1
 17882  002952  C057  F006         	movff	i2pow@y+2,i2___ftge@ff2+2
 17883  002956  EC42  F025         	call	i2___ftge	;wreg free
 17884  00295A  A0D8               	btfss	status,0,c
 17885  00295C  D005               	goto	i2l1114
 17886  00295E  0E00               	movlw	0
 17887  002960  0101               	movlb	1	; () banked
 17888  002962  6F30               	movwf	(_errno+1)& (0+255),b
 17889  002964  0E21               	movlw	33
 17890  002966  6F2F               	movwf	_errno& (0+255),b
 17891  002968                     i2l1114:
 17892  002968  0E00               	movlw	0
 17893  00296A  6E52               	movwf	?i2_pow,c
 17894  00296C  0E00               	movlw	0
 17895  00296E  6E53               	movwf	?i2_pow+1,c
 17896  002970  0E00               	movlw	0
 17897  002972  6E54               	movwf	?i2_pow+2,c
 17898  002974  0012               	return	
 17899  002976                     i2l5960:
 17900  002976  5055               	movf	i2pow@y,w,c
 17901  002978  1056               	iorwf	i2pow@y+1,w,c
 17902  00297A  1057               	iorwf	i2pow@y+2,w,c
 17903  00297C  A4D8               	btfss	status,2,c
 17904  00297E  D007               	goto	i2l5966
 17905  002980  0E00               	movlw	0
 17906  002982  6E52               	movwf	?i2_pow,c
 17907  002984  0E80               	movlw	128
 17908  002986  6E53               	movwf	?i2_pow+1,c
 17909  002988  0E3F               	movlw	63
 17910  00298A  6E54               	movwf	?i2_pow+2,c
 17911  00298C  0012               	return	
 17912  00298E                     i2l5966:
 17913  00298E  AE54               	btfss	i2pow@x+2,7,c
 17914  002990  D041               	goto	i2l5978
 17915  002992  C055  F028         	movff	i2pow@y,i2___fttol@f1
 17916  002996  C056  F029         	movff	i2pow@y+1,i2___fttol@f1+1
 17917  00299A  C057  F02A         	movff	i2pow@y+2,i2___fttol@f1+2
 17918  00299E  EC9F  F01E         	call	i2___fttol	;wreg free
 17919  0029A2  C028  F05F         	movff	?i2___fttol,i2pow@yi
 17920  0029A6  C029  F060         	movff	?i2___fttol+1,i2pow@yi+1
 17921  0029AA  C02A  F061         	movff	?i2___fttol+2,i2pow@yi+2
 17922  0029AE  C02B  F062         	movff	?i2___fttol+3,i2pow@yi+3
 17923  0029B2  C05F  F009         	movff	i2pow@yi,i2___lltoft@c
 17924  0029B6  C060  F00A         	movff	i2pow@yi+1,i2___lltoft@c+1
 17925  0029BA  C061  F00B         	movff	i2pow@yi+2,i2___lltoft@c+2
 17926  0029BE  C062  F00C         	movff	i2pow@yi+3,i2___lltoft@c+3
 17927  0029C2  EC82  F027         	call	i2___lltoft	;wreg free
 17928  0029C6  5055               	movf	i2pow@y,w,c
 17929  0029C8  1809               	xorwf	?i2___lltoft,w,c
 17930  0029CA  E107               	bnz	i2u599_40
 17931  0029CC  5056               	movf	i2pow@y+1,w,c
 17932  0029CE  180A               	xorwf	?i2___lltoft+1,w,c
 17933  0029D0  E104               	bnz	i2u599_40
 17934  0029D2  5057               	movf	i2pow@y+2,w,c
 17935  0029D4  180B               	xorwf	?i2___lltoft+2,w,c
 17936  0029D6  B4D8               	btfsc	status,2,c
 17937  0029D8  D00C               	goto	i2l5974
 17938  0029DA                     i2u599_40:
 17939  0029DA  0E00               	movlw	0
 17940  0029DC  0101               	movlb	1	; () banked
 17941  0029DE  6F30               	movwf	(_errno+1)& (0+255),b
 17942  0029E0  0E21               	movlw	33
 17943  0029E2  6F2F               	movwf	_errno& (0+255),b
 17944  0029E4  0E00               	movlw	0
 17945  0029E6  6E52               	movwf	?i2_pow,c
 17946  0029E8  0E00               	movlw	0
 17947  0029EA  6E53               	movwf	?i2_pow+1,c
 17948  0029EC  0E00               	movlw	0
 17949  0029EE  6E54               	movwf	?i2_pow+2,c
 17950                           
 17951                           ; BSR set to: 1
 17952  0029F0  0012               	return	
 17953  0029F2                     i2l5974:
 17954  0029F2  505F               	movf	i2pow@yi,w,c
 17955  0029F4  0B01               	andlw	1
 17956  0029F6  6E5E               	movwf	i2pow@sign,c
 17957  0029F8  C052  F001         	movff	i2pow@x,i2___ftneg@f1
 17958  0029FC  C053  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
 17959  002A00  C054  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
 17960  002A04  ECEF  F029         	call	i2___ftneg	;wreg free
 17961  002A08  C001  F052         	movff	?i2___ftneg,i2pow@x
 17962  002A0C  C002  F053         	movff	?i2___ftneg+1,i2pow@x+1
 17963  002A10  C003  F054         	movff	?i2___ftneg+2,i2pow@x+2
 17964  002A14                     i2l5978:
 17965  002A14  C052  F034         	movff	i2pow@x,i2log@x
 17966  002A18  C053  F035         	movff	i2pow@x+1,i2log@x+1
 17967  002A1C  C054  F036         	movff	i2pow@x+2,i2log@x+2
 17968  002A20  ECF2  F017         	call	i2_log	;wreg free
 17969  002A24  C034  F058         	movff	?i2_log,i2_pow$1677
 17970  002A28  C035  F059         	movff	?i2_log+1,i2_pow$1677+1
 17971  002A2C  C036  F05A         	movff	?i2_log+2,i2_pow$1677+2
 17972  002A30  C058  F00D         	movff	i2_pow$1677,i2___ftmul@f1
 17973  002A34  C059  F00E         	movff	i2_pow$1677+1,i2___ftmul@f1+1
 17974  002A38  C05A  F00F         	movff	i2_pow$1677+2,i2___ftmul@f1+2
 17975  002A3C  C055  F010         	movff	i2pow@y,i2___ftmul@f2
 17976  002A40  C056  F011         	movff	i2pow@y+1,i2___ftmul@f2+1
 17977  002A44  C057  F012         	movff	i2pow@y+2,i2___ftmul@f2+2
 17978  002A48  EC19  F01F         	call	i2___ftmul	;wreg free
 17979  002A4C  C00D  F05B         	movff	?i2___ftmul,i2_pow$1678
 17980  002A50  C00E  F05C         	movff	?i2___ftmul+1,i2_pow$1678+1
 17981  002A54  C00F  F05D         	movff	?i2___ftmul+2,i2_pow$1678+2
 17982  002A58  C05B  F049         	movff	i2_pow$1678,i2exp@x
 17983  002A5C  C05C  F04A         	movff	i2_pow$1678+1,i2exp@x+1
 17984  002A60  C05D  F04B         	movff	i2_pow$1678+2,i2exp@x+2
 17985  002A64  ECF4  F011         	call	i2_exp	;wreg free
 17986  002A68  C049  F052         	movff	?i2_exp,i2pow@x
 17987  002A6C  C04A  F053         	movff	?i2_exp+1,i2pow@x+1
 17988  002A70  C04B  F054         	movff	?i2_exp+2,i2pow@x+2
 17989  002A74  505E               	movf	i2pow@sign,w,c
 17990  002A76  B4D8               	btfsc	status,2,c
 17991  002A78  D00F               	goto	i2l1119
 17992  002A7A  C052  F001         	movff	i2pow@x,i2___ftneg@f1
 17993  002A7E  C053  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
 17994  002A82  C054  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
 17995  002A86  ECEF  F029         	call	i2___ftneg	;wreg free
 17996  002A8A  C001  F052         	movff	?i2___ftneg,?i2_pow
 17997  002A8E  C002  F053         	movff	?i2___ftneg+1,?i2_pow+1
 17998  002A92  C003  F054         	movff	?i2___ftneg+2,?i2_pow+2
 17999  002A96  0012               	return	
 18000  002A98                     i2l1119:
 18001  002A98  C052  F052         	movff	i2pow@x,?i2_pow
 18002  002A9C  C053  F053         	movff	i2pow@x+1,?i2_pow+1
 18003  002AA0  C054  F054         	movff	i2pow@x+2,?i2_pow+2
 18004  002AA4  0012               	return		;funcret
 18005  002AA6                     __end_ofi2_pow:
 18006                           	opt stack 0
 18007                           pclatu	equ	0xFFB
 18008                           pclath	equ	0xFFA
 18009                           tblptru	equ	0xFF8
 18010                           tblptrh	equ	0xFF7
 18011                           tblptrl	equ	0xFF6
 18012                           tablat	equ	0xFF5
 18013                           prodh	equ	0xFF4
 18014                           prodl	equ	0xFF3
 18015                           intcon	equ	0xFF2
 18016                           intcon2	equ	0xFF1
 18017                           intcon3	equ	0xFF0
 18018                           postinc0	equ	0xFEE
 18019                           fsr0h	equ	0xFEA
 18020                           fsr0l	equ	0xFE9
 18021                           wreg	equ	0xFE8
 18022                           postdec1	equ	0xFE5
 18023                           fsr1h	equ	0xFE2
 18024                           fsr1l	equ	0xFE1
 18025                           indf2	equ	0xFDF
 18026                           postinc2	equ	0xFDE
 18027                           postdec2	equ	0xFDD
 18028                           fsr2h	equ	0xFDA
 18029                           fsr2l	equ	0xFD9
 18030                           status	equ	0xFD8
 18031                           
 18032 ;; *************** function i2_log *****************
 18033 ;; Defined at:
 18034 ;;		line 5 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\log.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  x               3   51[COMRAM] unsigned char 
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;  log             2   54[COMRAM] int 
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  3   51[COMRAM] int 
 18041 ;; Registers used:
 18042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18048 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18051 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;Total ram usage:        5 bytes
 18053 ;; Hardware stack levels used:    1
 18054 ;; Hardware stack levels required when called:    3
 18055 ;; This function calls:
 18056 ;;		i2___awtoft
 18057 ;;		i2___ftadd
 18058 ;;		i2___ftmul
 18059 ;;		i2_eval_poly
 18060 ;;		i2_frexp
 18061 ;; This function is called by:
 18062 ;;		i2_pow
 18063 ;; This function uses a non-reentrant model
 18064 ;;
 18065                           
 18066                           	psect	text76
 18067  002FE4                     __ptext76:
 18068                           	opt stack 0
 18069  002FE4                     i2_log:
 18070                           	opt stack 17
 18071                           
 18072                           ;incstack = 0
 18073  002FE4  AE36               	btfss	i2log@x+2,7,c
 18074  002FE6  D00C               	goto	i2l5532
 18075  002FE8  0E00               	movlw	0
 18076  002FEA  0101               	movlb	1	; () banked
 18077  002FEC  6F30               	movwf	(_errno+1)& (0+255),b
 18078  002FEE  0E21               	movlw	33
 18079  002FF0  6F2F               	movwf	_errno& (0+255),b
 18080  002FF2  0E00               	movlw	0
 18081  002FF4  6E34               	movwf	?i2_log,c
 18082  002FF6  0E00               	movlw	0
 18083  002FF8  6E35               	movwf	?i2_log+1,c
 18084  002FFA  0E00               	movlw	0
 18085  002FFC  6E36               	movwf	?i2_log+2,c
 18086                           
 18087                           ; BSR set to: 1
 18088  002FFE  0012               	return	
 18089  003000                     i2l5532:
 18090  003000  5034               	movf	i2log@x,w,c
 18091  003002  1035               	iorwf	i2log@x+1,w,c
 18092  003004  1036               	iorwf	i2log@x+2,w,c
 18093  003006  A4D8               	btfss	status,2,c
 18094  003008  D00C               	goto	i2l5538
 18095  00300A  0E00               	movlw	0
 18096  00300C  0101               	movlb	1	; () banked
 18097  00300E  6F30               	movwf	(_errno+1)& (0+255),b
 18098  003010  0E22               	movlw	34
 18099  003012  6F2F               	movwf	_errno& (0+255),b
 18100  003014  0E00               	movlw	0
 18101  003016  6E34               	movwf	?i2_log,c
 18102  003018  0E00               	movlw	0
 18103  00301A  6E35               	movwf	?i2_log+1,c
 18104  00301C  0E00               	movlw	0
 18105  00301E  6E36               	movwf	?i2_log+2,c
 18106                           
 18107                           ; BSR set to: 1
 18108  003020  0012               	return	
 18109  003022                     i2l5538:
 18110  003022  0E00               	movlw	0
 18111  003024  6E10               	movwf	i2___ftmul@f2,c
 18112  003026  0E00               	movlw	0
 18113  003028  6E11               	movwf	i2___ftmul@f2+1,c
 18114  00302A  0E40               	movlw	64
 18115  00302C  6E12               	movwf	i2___ftmul@f2+2,c
 18116  00302E  0E37               	movlw	low i2log@exponent
 18117  003030  6E04               	movwf	i2frexp@eptr,c
 18118  003032  0E00               	movlw	high i2log@exponent
 18119  003034  6E05               	movwf	i2frexp@eptr+1,c
 18120  003036  C034  F001         	movff	i2log@x,i2frexp@value
 18121  00303A  C035  F002         	movff	i2log@x+1,i2frexp@value+1
 18122  00303E  C036  F003         	movff	i2log@x+2,i2frexp@value+2
 18123  003042  ECFA  F024         	call	i2_frexp	;wreg free
 18124  003046  C001  F00D         	movff	?i2_frexp,i2___ftmul@f1
 18125  00304A  C002  F00E         	movff	?i2_frexp+1,i2___ftmul@f1+1
 18126  00304E  C003  F00F         	movff	?i2_frexp+2,i2___ftmul@f1+2
 18127  003052  EC19  F01F         	call	i2___ftmul	;wreg free
 18128  003056  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 18129  00305A  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 18130  00305E  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 18131  003062  0E00               	movlw	0
 18132  003064  6E1F               	movwf	i2___ftadd@f2,c
 18133  003066  0E80               	movlw	128
 18134  003068  6E20               	movwf	i2___ftadd@f2+1,c
 18135  00306A  0EBF               	movlw	191
 18136  00306C  6E21               	movwf	i2___ftadd@f2+2,c
 18137  00306E  ECC2  F013         	call	i2___ftadd	;wreg free
 18138  003072  C01C  F034         	movff	?i2___ftadd,i2log@x
 18139  003076  C01D  F035         	movff	?i2___ftadd+1,i2log@x+1
 18140  00307A  C01E  F036         	movff	?i2___ftadd+2,i2log@x+2
 18141  00307E  0637               	decf	i2log@exponent,f,c
 18142  003080  A0D8               	btfss	status,0,c
 18143  003082  0638               	decf	i2log@exponent+1,f,c
 18144  003084  C034  F028         	movff	i2log@x,i2eval_poly@x
 18145  003088  C035  F029         	movff	i2log@x+1,i2eval_poly@x+1
 18146  00308C  C036  F02A         	movff	i2log@x+2,i2eval_poly@x+2
 18147  003090  0E3B               	movlw	low log@coeff
 18148  003092  6E2B               	movwf	i2eval_poly@d,c
 18149  003094  0EFE               	movlw	high log@coeff
 18150  003096  6E2C               	movwf	i2eval_poly@d+1,c
 18151  003098  0E00               	movlw	0
 18152  00309A  6E2E               	movwf	i2eval_poly@n+1,c
 18153  00309C  0E08               	movlw	8
 18154  00309E  6E2D               	movwf	i2eval_poly@n,c
 18155  0030A0  ECBF  F021         	call	i2_eval_poly	;wreg free
 18156  0030A4  C028  F034         	movff	?i2_eval_poly,i2log@x
 18157  0030A8  C029  F035         	movff	?i2_eval_poly+1,i2log@x+1
 18158  0030AC  C02A  F036         	movff	?i2_eval_poly+2,i2log@x+2
 18159  0030B0  0E72               	movlw	114
 18160  0030B2  6E10               	movwf	i2___ftmul@f2,c
 18161  0030B4  0E31               	movlw	49
 18162  0030B6  6E11               	movwf	i2___ftmul@f2+1,c
 18163  0030B8  0E3F               	movlw	63
 18164  0030BA  6E12               	movwf	i2___ftmul@f2+2,c
 18165  0030BC  C037  F009         	movff	i2log@exponent,i2___awtoft@c
 18166  0030C0  C038  F00A         	movff	i2log@exponent+1,i2___awtoft@c+1
 18167  0030C4  ECF7  F028         	call	i2___awtoft	;wreg free
 18168  0030C8  C009  F00D         	movff	?i2___awtoft,i2___ftmul@f1
 18169  0030CC  C00A  F00E         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 18170  0030D0  C00B  F00F         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 18171  0030D4  EC19  F01F         	call	i2___ftmul	;wreg free
 18172  0030D8  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 18173  0030DC  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 18174  0030E0  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 18175  0030E4  C034  F01F         	movff	i2log@x,i2___ftadd@f2
 18176  0030E8  C035  F020         	movff	i2log@x+1,i2___ftadd@f2+1
 18177  0030EC  C036  F021         	movff	i2log@x+2,i2___ftadd@f2+2
 18178  0030F0  ECC2  F013         	call	i2___ftadd	;wreg free
 18179  0030F4  C01C  F034         	movff	?i2___ftadd,?i2_log
 18180  0030F8  C01D  F035         	movff	?i2___ftadd+1,?i2_log+1
 18181  0030FC  C01E  F036         	movff	?i2___ftadd+2,?i2_log+2
 18182  003100  0012               	return	
 18183  003102                     __end_ofi2_log:
 18184                           	opt stack 0
 18185                           pclatu	equ	0xFFB
 18186                           pclath	equ	0xFFA
 18187                           tblptru	equ	0xFF8
 18188                           tblptrh	equ	0xFF7
 18189                           tblptrl	equ	0xFF6
 18190                           tablat	equ	0xFF5
 18191                           prodh	equ	0xFF4
 18192                           prodl	equ	0xFF3
 18193                           intcon	equ	0xFF2
 18194                           intcon2	equ	0xFF1
 18195                           intcon3	equ	0xFF0
 18196                           postinc0	equ	0xFEE
 18197                           fsr0h	equ	0xFEA
 18198                           fsr0l	equ	0xFE9
 18199                           wreg	equ	0xFE8
 18200                           postdec1	equ	0xFE5
 18201                           fsr1h	equ	0xFE2
 18202                           fsr1l	equ	0xFE1
 18203                           indf2	equ	0xFDF
 18204                           postinc2	equ	0xFDE
 18205                           postdec2	equ	0xFDD
 18206                           fsr2h	equ	0xFDA
 18207                           fsr2l	equ	0xFD9
 18208                           status	equ	0xFD8
 18209                           
 18210 ;; *************** function i2_exp *****************
 18211 ;; Defined at:
 18212 ;;		line 12 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\exp.c"
 18213 ;; Parameters:    Size  Location     Type
 18214 ;;  x               3   72[COMRAM] int 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  exp             2   78[COMRAM] int 
 18217 ;;  exp             1   80[COMRAM] unsigned char 
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  3   72[COMRAM] unsigned char 
 18220 ;; Registers used:
 18221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18227 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18228 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18230 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18231 ;;Total ram usage:        9 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    3
 18234 ;; This function calls:
 18235 ;;		i2___awtoft
 18236 ;;		i2___ftdiv
 18237 ;;		i2___ftge
 18238 ;;		i2___ftmul
 18239 ;;		i2___ftneg
 18240 ;;		i2___ftsub
 18241 ;;		i2___fttol
 18242 ;;		i2_eval_poly
 18243 ;;		i2_floor
 18244 ;;		i2_ldexp
 18245 ;; This function is called by:
 18246 ;;		i2_pow
 18247 ;; This function uses a non-reentrant model
 18248 ;;
 18249                           
 18250                           	psect	text77
 18251  0023E8                     __ptext77:
 18252                           	opt stack 0
 18253  0023E8                     i2_exp:
 18254                           	opt stack 17
 18255                           
 18256                           ;incstack = 0
 18257  0023E8  5049               	movf	i2exp@x,w,c
 18258  0023EA  104A               	iorwf	i2exp@x+1,w,c
 18259  0023EC  104B               	iorwf	i2exp@x+2,w,c
 18260  0023EE  A4D8               	btfss	status,2,c
 18261  0023F0  D007               	goto	i2l5488
 18262  0023F2  0E00               	movlw	0
 18263  0023F4  6E49               	movwf	?i2_exp,c
 18264  0023F6  0E80               	movlw	128
 18265  0023F8  6E4A               	movwf	?i2_exp+1,c
 18266  0023FA  0E3F               	movlw	63
 18267  0023FC  6E4B               	movwf	?i2_exp+2,c
 18268  0023FE  0012               	return	
 18269  002400                     i2l5488:
 18270  002400  0E72               	movlw	114
 18271  002402  6E01               	movwf	i2___ftge@ff1,c
 18272  002404  0E31               	movlw	49
 18273  002406  6E02               	movwf	i2___ftge@ff1+1,c
 18274  002408  0E44               	movlw	68
 18275  00240A  6E03               	movwf	i2___ftge@ff1+2,c
 18276  00240C  C049  F004         	movff	i2exp@x,i2___ftge@ff2
 18277  002410  C04A  F005         	movff	i2exp@x+1,i2___ftge@ff2+1
 18278  002414  C04B  F006         	movff	i2exp@x+2,i2___ftge@ff2+2
 18279  002418  EC42  F025         	call	i2___ftge	;wreg free
 18280  00241C  B0D8               	btfsc	status,0,c
 18281  00241E  D00C               	goto	i2l5494
 18282  002420  0E00               	movlw	0
 18283  002422  0101               	movlb	1	; () banked
 18284  002424  6F30               	movwf	(_errno+1)& (0+255),b
 18285  002426  0E22               	movlw	34
 18286  002428  6F2F               	movwf	_errno& (0+255),b
 18287  00242A  0EFF               	movlw	255
 18288  00242C  6E49               	movwf	?i2_exp,c
 18289  00242E  0E7F               	movlw	127
 18290  002430  6E4A               	movwf	?i2_exp+1,c
 18291  002432  0E7F               	movlw	127
 18292  002434  6E4B               	movwf	?i2_exp+2,c
 18293                           
 18294                           ; BSR set to: 1
 18295  002436  0012               	return	
 18296  002438                     i2l5494:
 18297  002438  C049  F001         	movff	i2exp@x,i2___ftge@ff1
 18298  00243C  C04A  F002         	movff	i2exp@x+1,i2___ftge@ff1+1
 18299  002440  C04B  F003         	movff	i2exp@x+2,i2___ftge@ff1+2
 18300  002444  0E49               	movlw	73
 18301  002446  6E04               	movwf	i2___ftge@ff2,c
 18302  002448  0E3A               	movlw	58
 18303  00244A  6E05               	movwf	i2___ftge@ff2+1,c
 18304  00244C  0EC4               	movlw	196
 18305  00244E  6E06               	movwf	i2___ftge@ff2+2,c
 18306  002450  EC42  F025         	call	i2___ftge	;wreg free
 18307  002454  B0D8               	btfsc	status,0,c
 18308  002456  D00C               	goto	i2l5500
 18309  002458  0E00               	movlw	0
 18310  00245A  0101               	movlb	1	; () banked
 18311  00245C  6F30               	movwf	(_errno+1)& (0+255),b
 18312  00245E  0E22               	movlw	34
 18313  002460  6F2F               	movwf	_errno& (0+255),b
 18314  002462  0E00               	movlw	0
 18315  002464  6E49               	movwf	?i2_exp,c
 18316  002466  0E00               	movlw	0
 18317  002468  6E4A               	movwf	?i2_exp+1,c
 18318  00246A  0E00               	movlw	0
 18319  00246C  6E4B               	movwf	?i2_exp+2,c
 18320                           
 18321                           ; BSR set to: 1
 18322  00246E  0012               	return	
 18323  002470                     i2l5500:
 18324  002470  AE4B               	btfss	i2exp@x+2,7,c
 18325  002472  D002               	goto	i2u535_40
 18326  002474  0E01               	movlw	1
 18327  002476  D001               	goto	i2u536_40
 18328  002478                     i2u535_40:
 18329  002478  0E00               	movlw	0
 18330  00247A                     i2u536_40:
 18331  00247A  6E51               	movwf	i2exp@sign,c
 18332  00247C  5051               	movf	i2exp@sign,w,c
 18333  00247E  B4D8               	btfsc	status,2,c
 18334  002480  D00E               	goto	i2l1277
 18335  002482  C049  F001         	movff	i2exp@x,i2___ftneg@f1
 18336  002486  C04A  F002         	movff	i2exp@x+1,i2___ftneg@f1+1
 18337  00248A  C04B  F003         	movff	i2exp@x+2,i2___ftneg@f1+2
 18338  00248E  ECEF  F029         	call	i2___ftneg	;wreg free
 18339  002492  C001  F049         	movff	?i2___ftneg,i2exp@x
 18340  002496  C002  F04A         	movff	?i2___ftneg+1,i2exp@x+1
 18341  00249A  C003  F04B         	movff	?i2___ftneg+2,i2exp@x+2
 18342  00249E                     i2l1277:
 18343  00249E  C049  F00D         	movff	i2exp@x,i2___ftmul@f1
 18344  0024A2  C04A  F00E         	movff	i2exp@x+1,i2___ftmul@f1+1
 18345  0024A6  C04B  F00F         	movff	i2exp@x+2,i2___ftmul@f1+2
 18346  0024AA  0EAA               	movlw	170
 18347  0024AC  6E10               	movwf	i2___ftmul@f2,c
 18348  0024AE  0EB8               	movlw	184
 18349  0024B0  6E11               	movwf	i2___ftmul@f2+1,c
 18350  0024B2  0E3F               	movlw	63
 18351  0024B4  6E12               	movwf	i2___ftmul@f2+2,c
 18352  0024B6  EC19  F01F         	call	i2___ftmul	;wreg free
 18353  0024BA  C00D  F049         	movff	?i2___ftmul,i2exp@x
 18354  0024BE  C00E  F04A         	movff	?i2___ftmul+1,i2exp@x+1
 18355  0024C2  C00F  F04B         	movff	?i2___ftmul+2,i2exp@x+2
 18356  0024C6  C049  F041         	movff	i2exp@x,i2floor@x
 18357  0024CA  C04A  F042         	movff	i2exp@x+1,i2floor@x+1
 18358  0024CE  C04B  F043         	movff	i2exp@x+2,i2floor@x+2
 18359  0024D2  EC7C  F020         	call	i2_floor	;wreg free
 18360  0024D6  C041  F04C         	movff	?i2_floor,i2_exp$1679
 18361  0024DA  C042  F04D         	movff	?i2_floor+1,i2_exp$1679+1
 18362  0024DE  C043  F04E         	movff	?i2_floor+2,i2_exp$1679+2
 18363  0024E2  C04C  F028         	movff	i2_exp$1679,i2___fttol@f1
 18364  0024E6  C04D  F029         	movff	i2_exp$1679+1,i2___fttol@f1+1
 18365  0024EA  C04E  F02A         	movff	i2_exp$1679+2,i2___fttol@f1+2
 18366  0024EE  EC9F  F01E         	call	i2___fttol	;wreg free
 18367  0024F2  C028  F04F         	movff	?i2___fttol,i2exp@exponent
 18368  0024F6  C029  F050         	movff	?i2___fttol+1,i2exp@exponent+1
 18369  0024FA  C049  F028         	movff	i2exp@x,i2___ftsub@f1
 18370  0024FE  C04A  F029         	movff	i2exp@x+1,i2___ftsub@f1+1
 18371  002502  C04B  F02A         	movff	i2exp@x+2,i2___ftsub@f1+2
 18372  002506  C04F  F009         	movff	i2exp@exponent,i2___awtoft@c
 18373  00250A  C050  F00A         	movff	i2exp@exponent+1,i2___awtoft@c+1
 18374  00250E  ECF7  F028         	call	i2___awtoft	;wreg free
 18375  002512  C009  F02B         	movff	?i2___awtoft,i2___ftsub@f2
 18376  002516  C00A  F02C         	movff	?i2___awtoft+1,i2___ftsub@f2+1
 18377  00251A  C00B  F02D         	movff	?i2___awtoft+2,i2___ftsub@f2+2
 18378  00251E  ECBA  F028         	call	i2___ftsub	;wreg free
 18379  002522  C028  F049         	movff	?i2___ftsub,i2exp@x
 18380  002526  C029  F04A         	movff	?i2___ftsub+1,i2exp@x+1
 18381  00252A  C02A  F04B         	movff	?i2___ftsub+2,i2exp@x+2
 18382  00252E  C049  F028         	movff	i2exp@x,i2eval_poly@x
 18383  002532  C04A  F029         	movff	i2exp@x+1,i2eval_poly@x+1
 18384  002536  C04B  F02A         	movff	i2exp@x+2,i2eval_poly@x+2
 18385  00253A  0E1D               	movlw	low exp@coeff
 18386  00253C  6E2B               	movwf	i2eval_poly@d,c
 18387  00253E  0EFE               	movlw	high exp@coeff
 18388  002540  6E2C               	movwf	i2eval_poly@d+1,c
 18389  002542  0E00               	movlw	0
 18390  002544  6E2E               	movwf	i2eval_poly@n+1,c
 18391  002546  0E09               	movlw	9
 18392  002548  6E2D               	movwf	i2eval_poly@n,c
 18393  00254A  ECBF  F021         	call	i2_eval_poly	;wreg free
 18394  00254E  C028  F034         	movff	?i2_eval_poly,i2ldexp@value
 18395  002552  C029  F035         	movff	?i2_eval_poly+1,i2ldexp@value+1
 18396  002556  C02A  F036         	movff	?i2_eval_poly+2,i2ldexp@value+2
 18397  00255A  C04F  F037         	movff	i2exp@exponent,i2ldexp@newexp
 18398  00255E  C050  F038         	movff	i2exp@exponent+1,i2ldexp@newexp+1
 18399  002562  EC8C  F022         	call	i2_ldexp	;wreg free
 18400  002566  C034  F049         	movff	?i2_ldexp,i2exp@x
 18401  00256A  C035  F04A         	movff	?i2_ldexp+1,i2exp@x+1
 18402  00256E  C036  F04B         	movff	?i2_ldexp+2,i2exp@x+2
 18403  002572  5051               	movf	i2exp@sign,w,c
 18404  002574  B4D8               	btfsc	status,2,c
 18405  002576  D025               	goto	i2l1278
 18406  002578  2849               	incf	i2exp@x,w,c
 18407  00257A  E10E               	bnz	i2l5522
 18408  00257C  0E7F               	movlw	127
 18409  00257E  184A               	xorwf	i2exp@x+1,w,c
 18410  002580  E10B               	bnz	i2l5522
 18411  002582  0E7F               	movlw	127
 18412  002584  184B               	xorwf	i2exp@x+2,w,c
 18413  002586  A4D8               	btfss	status,2,c
 18414  002588  D007               	goto	i2l5522
 18415  00258A  0E00               	movlw	0
 18416  00258C  6E49               	movwf	?i2_exp,c
 18417  00258E  0E00               	movlw	0
 18418  002590  6E4A               	movwf	?i2_exp+1,c
 18419  002592  0E00               	movlw	0
 18420  002594  6E4B               	movwf	?i2_exp+2,c
 18421  002596  0012               	return	
 18422  002598                     i2l5522:
 18423  002598  0E00               	movlw	0
 18424  00259A  6E09               	movwf	i2___ftdiv@f1,c
 18425  00259C  0E80               	movlw	128
 18426  00259E  6E0A               	movwf	i2___ftdiv@f1+1,c
 18427  0025A0  0E3F               	movlw	63
 18428  0025A2  6E0B               	movwf	i2___ftdiv@f1+2,c
 18429  0025A4  C049  F00C         	movff	i2exp@x,i2___ftdiv@f2
 18430  0025A8  C04A  F00D         	movff	i2exp@x+1,i2___ftdiv@f2+1
 18431  0025AC  C04B  F00E         	movff	i2exp@x+2,i2___ftdiv@f2+2
 18432  0025B0  EC09  F020         	call	i2___ftdiv	;wreg free
 18433  0025B4  C009  F049         	movff	?i2___ftdiv,?i2_exp
 18434  0025B8  C00A  F04A         	movff	?i2___ftdiv+1,?i2_exp+1
 18435  0025BC  C00B  F04B         	movff	?i2___ftdiv+2,?i2_exp+2
 18436  0025C0  0012               	return	
 18437  0025C2                     i2l1278:
 18438  0025C2  C049  F049         	movff	i2exp@x,?i2_exp
 18439  0025C6  C04A  F04A         	movff	i2exp@x+1,?i2_exp+1
 18440  0025CA  C04B  F04B         	movff	i2exp@x+2,?i2_exp+2
 18441  0025CE  0012               	return		;funcret
 18442  0025D0                     __end_ofi2_exp:
 18443                           	opt stack 0
 18444                           pclatu	equ	0xFFB
 18445                           pclath	equ	0xFFA
 18446                           tblptru	equ	0xFF8
 18447                           tblptrh	equ	0xFF7
 18448                           tblptrl	equ	0xFF6
 18449                           tablat	equ	0xFF5
 18450                           prodh	equ	0xFF4
 18451                           prodl	equ	0xFF3
 18452                           intcon	equ	0xFF2
 18453                           intcon2	equ	0xFF1
 18454                           intcon3	equ	0xFF0
 18455                           postinc0	equ	0xFEE
 18456                           fsr0h	equ	0xFEA
 18457                           fsr0l	equ	0xFE9
 18458                           wreg	equ	0xFE8
 18459                           postdec1	equ	0xFE5
 18460                           fsr1h	equ	0xFE2
 18461                           fsr1l	equ	0xFE1
 18462                           indf2	equ	0xFDF
 18463                           postinc2	equ	0xFDE
 18464                           postdec2	equ	0xFDD
 18465                           fsr2h	equ	0xFDA
 18466                           fsr2l	equ	0xFD9
 18467                           status	equ	0xFD8
 18468                           
 18469 ;; *************** function i2_ldexp *****************
 18470 ;; Defined at:
 18471 ;;		line 277 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;  value           3   51[COMRAM] unsigned char 
 18474 ;;  newexp          2   54[COMRAM] int 
 18475 ;; Auto vars:     Size  Location     Type
 18476 ;;		None
 18477 ;; Return value:  Size  Location     Type
 18478 ;;                  3   51[COMRAM] int 
 18479 ;; Registers used:
 18480 ;;		wreg, status,2, status,0
 18481 ;; Tracked objects:
 18482 ;;		On entry : 0/0
 18483 ;;		On exit  : 0/0
 18484 ;;		Unchanged: 0/0
 18485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18486 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18489 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18490 ;;Total ram usage:        7 bytes
 18491 ;; Hardware stack levels used:    1
 18492 ;; This function calls:
 18493 ;;		Nothing
 18494 ;; This function is called by:
 18495 ;;		i2_exp
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499                           	psect	text78
 18500  004518                     __ptext78:
 18501                           	opt stack 0
 18502  004518                     i2_ldexp:
 18503                           	opt stack 19
 18504                           
 18505                           ;incstack = 0
 18506  004518  5034               	movf	i2ldexp@value,w,c
 18507  00451A  1035               	iorwf	i2ldexp@value+1,w,c
 18508  00451C  1036               	iorwf	i2ldexp@value+2,w,c
 18509  00451E  A4D8               	btfss	status,2,c
 18510  004520  D007               	goto	i2l5222
 18511  004522  0E00               	movlw	0
 18512  004524  6E34               	movwf	?i2_ldexp,c
 18513  004526  0E00               	movlw	0
 18514  004528  6E35               	movwf	?i2_ldexp+1,c
 18515  00452A  0E00               	movlw	0
 18516  00452C  6E36               	movwf	?i2_ldexp+2,c
 18517  00452E  0012               	return	
 18518  004530                     i2l5222:
 18519  004530  5036               	movf	i2ldexp@value+2,w,c
 18520  004532  0B7F               	andlw	127
 18521  004534  6E39               	movwf	??i2_ldexp& (0+255),c
 18522  004536  6A3A               	clrf	(??i2_ldexp+1)& (0+255),c
 18523  004538  90D8               	bcf	status,0,c
 18524  00453A  3639               	rlcf	??i2_ldexp,f,c
 18525  00453C  363A               	rlcf	??i2_ldexp+1,f,c
 18526  00453E  5039               	movf	??i2_ldexp,w,c
 18527  004540  2637               	addwf	i2ldexp@newexp,f,c
 18528  004542  503A               	movf	??i2_ldexp+1,w,c
 18529  004544  2238               	addwfc	i2ldexp@newexp+1,f,c
 18530  004546  AE35               	btfss	i2ldexp@value+1,7,c
 18531  004548  D003               	goto	i2u500_40
 18532  00454A  6A39               	clrf	??i2_ldexp& (0+255),c
 18533  00454C  2A39               	incf	??i2_ldexp& (0+255),f,c
 18534  00454E  D001               	goto	i2u500_48
 18535  004550                     i2u500_40:
 18536  004550  6A39               	clrf	??i2_ldexp& (0+255),c
 18537  004552                     i2u500_48:
 18538  004552  5039               	movf	??i2_ldexp,w,c
 18539  004554  2637               	addwf	i2ldexp@newexp,f,c
 18540  004556  0E00               	movlw	0
 18541  004558  2238               	addwfc	i2ldexp@newexp+1,f,c
 18542  00455A  AE38               	btfss	i2ldexp@newexp+1,7,c
 18543  00455C  D00C               	goto	i2l5230
 18544  00455E  0E00               	movlw	0
 18545  004560  0101               	movlb	1	; () banked
 18546  004562  6F30               	movwf	(_errno+1)& (0+255),b
 18547  004564  0E22               	movlw	34
 18548  004566  6F2F               	movwf	_errno& (0+255),b
 18549  004568  0E00               	movlw	0
 18550  00456A  6E34               	movwf	?i2_ldexp,c
 18551  00456C  0E00               	movlw	0
 18552  00456E  6E35               	movwf	?i2_ldexp+1,c
 18553  004570  0E00               	movlw	0
 18554  004572                     L26:
 18555  004572  6E36               	movwf	?i2_ldexp+2,c
 18556                           
 18557                           ; BSR set to: 1
 18558  004574  0012               	return	
 18559  004576                     i2l5230:
 18560  004576  BE38               	btfsc	i2ldexp@newexp+1,7,c
 18561  004578  D016               	goto	i2l5246
 18562  00457A  0438               	decf	i2ldexp@newexp+1,w,c
 18563  00457C  A0D8               	btfss	status,0,c
 18564  00457E  D013               	goto	i2l5246
 18565  004580  0E00               	movlw	0
 18566  004582  0101               	movlb	1	; () banked
 18567  004584  6F30               	movwf	(_errno+1)& (0+255),b
 18568  004586  0E22               	movlw	34
 18569  004588  6F2F               	movwf	_errno& (0+255),b
 18570                           
 18571                           ; BSR set to: 1
 18572  00458A  AE36               	btfss	i2ldexp@value+2,7,c
 18573  00458C  D006               	goto	i2l5242
 18574                           
 18575                           ; BSR set to: 1
 18576  00458E  0EFF               	movlw	255
 18577  004590  6E34               	movwf	?i2_ldexp,c
 18578  004592  0E7F               	movlw	127
 18579  004594  6E35               	movwf	?i2_ldexp+1,c
 18580  004596  0EFF               	movlw	255
 18581  004598  D7EC               	goto	L26
 18582  00459A                     i2l5242:
 18583                           
 18584                           ; BSR set to: 1
 18585  00459A  0EFF               	movlw	255
 18586  00459C  6E34               	movwf	?i2_ldexp,c
 18587  00459E  0E7F               	movlw	127
 18588  0045A0  6E35               	movwf	?i2_ldexp+1,c
 18589  0045A2  0E7F               	movlw	127
 18590  0045A4  D7E6               	goto	L26
 18591  0045A6                     i2l5246:
 18592  0045A6  3438               	rlcf	i2ldexp@newexp+1,w,c
 18593  0045A8  3038               	rrcf	i2ldexp@newexp+1,w,c
 18594  0045AA  6E3A               	movwf	(??i2_ldexp+1)& (0+255),c
 18595  0045AC  3037               	rrcf	i2ldexp@newexp,w,c
 18596  0045AE  6E39               	movwf	??i2_ldexp& (0+255),c
 18597  0045B0  5036               	movf	i2ldexp@value+2,w,c
 18598  0045B2  1839               	xorwf	??i2_ldexp,w,c
 18599  0045B4  0B80               	andlw	-128
 18600  0045B6  1839               	xorwf	??i2_ldexp,w,c
 18601  0045B8  6E36               	movwf	i2ldexp@value+2,c
 18602  0045BA  C037  F039         	movff	i2ldexp@newexp,??i2_ldexp
 18603  0045BE  0E01               	movlw	1
 18604  0045C0  1639               	andwf	??i2_ldexp,f,c
 18605  0045C2  3239               	rrcf	??i2_ldexp,f,c
 18606  0045C4  3239               	rrcf	??i2_ldexp,f,c
 18607  0045C6  5035               	movf	i2ldexp@value+1,w,c
 18608  0045C8  1839               	xorwf	??i2_ldexp,w,c
 18609  0045CA  0B7F               	andlw	-129
 18610  0045CC  1839               	xorwf	??i2_ldexp,w,c
 18611  0045CE  6E35               	movwf	i2ldexp@value+1,c
 18612  0045D0  C034  F034         	movff	i2ldexp@value,?i2_ldexp
 18613  0045D4  C035  F035         	movff	i2ldexp@value+1,?i2_ldexp+1
 18614  0045D8  C036  F036         	movff	i2ldexp@value+2,?i2_ldexp+2
 18615  0045DC  0012               	return	
 18616  0045DE                     __end_ofi2_ldexp:
 18617                           	opt stack 0
 18618                           pclatu	equ	0xFFB
 18619                           pclath	equ	0xFFA
 18620                           tblptru	equ	0xFF8
 18621                           tblptrh	equ	0xFF7
 18622                           tblptrl	equ	0xFF6
 18623                           tablat	equ	0xFF5
 18624                           prodh	equ	0xFF4
 18625                           prodl	equ	0xFF3
 18626                           intcon	equ	0xFF2
 18627                           intcon2	equ	0xFF1
 18628                           intcon3	equ	0xFF0
 18629                           postinc0	equ	0xFEE
 18630                           fsr0h	equ	0xFEA
 18631                           fsr0l	equ	0xFE9
 18632                           wreg	equ	0xFE8
 18633                           postdec1	equ	0xFE5
 18634                           fsr1h	equ	0xFE2
 18635                           fsr1l	equ	0xFE1
 18636                           indf2	equ	0xFDF
 18637                           postinc2	equ	0xFDE
 18638                           postdec2	equ	0xFDD
 18639                           fsr2h	equ	0xFDA
 18640                           fsr2l	equ	0xFD9
 18641                           status	equ	0xFD8
 18642                           
 18643 ;; *************** function i2_floor *****************
 18644 ;; Defined at:
 18645 ;;		line 13 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\floor.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;  x               3   64[COMRAM] int 
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;  floor           3   69[COMRAM] int 
 18650 ;;  floor           2   67[COMRAM] int 
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  3   64[COMRAM] int 
 18653 ;; Registers used:
 18654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18660 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18661 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18664 ;;Total ram usage:        8 bytes
 18665 ;; Hardware stack levels used:    1
 18666 ;; Hardware stack levels required when called:    2
 18667 ;; This function calls:
 18668 ;;		i2___altoft
 18669 ;;		i2___ftadd
 18670 ;;		i2___ftge
 18671 ;;		i2___fttol
 18672 ;;		i2_frexp
 18673 ;; This function is called by:
 18674 ;;		i2_exp
 18675 ;; This function uses a non-reentrant model
 18676 ;;
 18677                           
 18678                           	psect	text79
 18679  0040F8                     __ptext79:
 18680                           	opt stack 0
 18681  0040F8                     i2_floor:
 18682                           	opt stack 17
 18683                           
 18684                           ;incstack = 0
 18685  0040F8  C041  F001         	movff	i2floor@x,i2frexp@value
 18686  0040FC  C042  F002         	movff	i2floor@x+1,i2frexp@value+1
 18687  004100  C043  F003         	movff	i2floor@x+2,i2frexp@value+2
 18688  004104  0E44               	movlw	low i2floor@expon
 18689  004106  6E04               	movwf	i2frexp@eptr,c
 18690  004108  0E00               	movlw	high i2floor@expon
 18691  00410A  6E05               	movwf	i2frexp@eptr+1,c
 18692  00410C  ECFA  F024         	call	i2_frexp	;wreg free
 18693  004110  AE45               	btfss	i2floor@expon+1,7,c
 18694  004112  D010               	goto	i2l5206
 18695  004114  AE43               	btfss	i2floor@x+2,7,c
 18696  004116  D007               	goto	i2l5202
 18697  004118  0E00               	movlw	0
 18698  00411A  6E41               	movwf	?i2_floor,c
 18699  00411C  0E80               	movlw	128
 18700  00411E  6E42               	movwf	?i2_floor+1,c
 18701  004120  0EBF               	movlw	191
 18702  004122  6E43               	movwf	?i2_floor+2,c
 18703  004124  0012               	return	
 18704  004126                     i2l5202:
 18705  004126  0E00               	movlw	0
 18706  004128  6E41               	movwf	?i2_floor,c
 18707  00412A  0E00               	movlw	0
 18708  00412C  6E42               	movwf	?i2_floor+1,c
 18709  00412E  0E00               	movlw	0
 18710  004130  6E43               	movwf	?i2_floor+2,c
 18711  004132  0012               	return	
 18712  004134                     i2l5206:
 18713  004134  5045               	movf	i2floor@expon+1,w,c
 18714  004136  E104               	bnz	i2u497_40
 18715  004138  0E15               	movlw	21
 18716  00413A  5C44               	subwf	i2floor@expon,w,c
 18717  00413C  A0D8               	btfss	status,0,c
 18718  00413E  D007               	goto	i2l5210
 18719  004140                     i2u497_40:
 18720  004140  C041  F041         	movff	i2floor@x,?i2_floor
 18721  004144  C042  F042         	movff	i2floor@x+1,?i2_floor+1
 18722  004148  C043  F043         	movff	i2floor@x+2,?i2_floor+2
 18723  00414C  0012               	return	
 18724  00414E                     i2l5210:
 18725  00414E  C041  F028         	movff	i2floor@x,i2___fttol@f1
 18726  004152  C042  F029         	movff	i2floor@x+1,i2___fttol@f1+1
 18727  004156  C043  F02A         	movff	i2floor@x+2,i2___fttol@f1+2
 18728  00415A  EC9F  F01E         	call	i2___fttol	;wreg free
 18729  00415E  C028  F037         	movff	?i2___fttol,i2___altoft@c
 18730  004162  C029  F038         	movff	?i2___fttol+1,i2___altoft@c+1
 18731  004166  C02A  F039         	movff	?i2___fttol+2,i2___altoft@c+2
 18732  00416A  C02B  F03A         	movff	?i2___fttol+3,i2___altoft@c+3
 18733  00416E  EC46  F026         	call	i2___altoft	;wreg free
 18734  004172  C037  F046         	movff	?i2___altoft,i2floor@i
 18735  004176  C038  F047         	movff	?i2___altoft+1,i2floor@i+1
 18736  00417A  C039  F048         	movff	?i2___altoft+2,i2floor@i+2
 18737  00417E  C041  F001         	movff	i2floor@x,i2___ftge@ff1
 18738  004182  C042  F002         	movff	i2floor@x+1,i2___ftge@ff1+1
 18739  004186  C043  F003         	movff	i2floor@x+2,i2___ftge@ff1+2
 18740  00418A  C046  F004         	movff	i2floor@i,i2___ftge@ff2
 18741  00418E  C047  F005         	movff	i2floor@i+1,i2___ftge@ff2+1
 18742  004192  C048  F006         	movff	i2floor@i+2,i2___ftge@ff2+2
 18743  004196  EC42  F025         	call	i2___ftge	;wreg free
 18744  00419A  B0D8               	btfsc	status,0,c
 18745  00419C  D015               	goto	i2l1288
 18746  00419E  C046  F01C         	movff	i2floor@i,i2___ftadd@f1
 18747  0041A2  C047  F01D         	movff	i2floor@i+1,i2___ftadd@f1+1
 18748  0041A6  C048  F01E         	movff	i2floor@i+2,i2___ftadd@f1+2
 18749  0041AA  0E00               	movlw	0
 18750  0041AC  6E1F               	movwf	i2___ftadd@f2,c
 18751  0041AE  0E80               	movlw	128
 18752  0041B0  6E20               	movwf	i2___ftadd@f2+1,c
 18753  0041B2  0EBF               	movlw	191
 18754  0041B4  6E21               	movwf	i2___ftadd@f2+2,c
 18755  0041B6  ECC2  F013         	call	i2___ftadd	;wreg free
 18756  0041BA  C01C  F041         	movff	?i2___ftadd,?i2_floor
 18757  0041BE  C01D  F042         	movff	?i2___ftadd+1,?i2_floor+1
 18758  0041C2  C01E  F043         	movff	?i2___ftadd+2,?i2_floor+2
 18759  0041C6  0012               	return	
 18760  0041C8                     i2l1288:
 18761  0041C8  C046  F041         	movff	i2floor@i,?i2_floor
 18762  0041CC  C047  F042         	movff	i2floor@i+1,?i2_floor+1
 18763  0041D0  C048  F043         	movff	i2floor@i+2,?i2_floor+2
 18764  0041D4  0012               	return		;funcret
 18765  0041D6                     __end_ofi2_floor:
 18766                           	opt stack 0
 18767                           pclatu	equ	0xFFB
 18768                           pclath	equ	0xFFA
 18769                           tblptru	equ	0xFF8
 18770                           tblptrh	equ	0xFF7
 18771                           tblptrl	equ	0xFF6
 18772                           tablat	equ	0xFF5
 18773                           prodh	equ	0xFF4
 18774                           prodl	equ	0xFF3
 18775                           intcon	equ	0xFF2
 18776                           intcon2	equ	0xFF1
 18777                           intcon3	equ	0xFF0
 18778                           postinc0	equ	0xFEE
 18779                           fsr0h	equ	0xFEA
 18780                           fsr0l	equ	0xFE9
 18781                           wreg	equ	0xFE8
 18782                           postdec1	equ	0xFE5
 18783                           fsr1h	equ	0xFE2
 18784                           fsr1l	equ	0xFE1
 18785                           indf2	equ	0xFDF
 18786                           postinc2	equ	0xFDE
 18787                           postdec2	equ	0xFDD
 18788                           fsr2h	equ	0xFDA
 18789                           fsr2l	equ	0xFD9
 18790                           status	equ	0xFD8
 18791                           
 18792 ;; *************** function i2_frexp *****************
 18793 ;; Defined at:
 18794 ;;		line 254 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
 18795 ;; Parameters:    Size  Location     Type
 18796 ;;  value           3    0[COMRAM] int 
 18797 ;;  eptr            2    3[COMRAM] PTR int 
 18798 ;;		 -> log@exponent(2), floor@expon(2), 
 18799 ;; Auto vars:     Size  Location     Type
 18800 ;;		None
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  3    0[COMRAM] PTR int 
 18803 ;; Registers used:
 18804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18810 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;Total ram usage:        7 bytes
 18815 ;; Hardware stack levels used:    1
 18816 ;; This function calls:
 18817 ;;		Nothing
 18818 ;; This function is called by:
 18819 ;;		i2_floor
 18820 ;;		i2_log
 18821 ;; This function uses a non-reentrant model
 18822 ;;
 18823                           
 18824                           	psect	text80
 18825  0049F4                     __ptext80:
 18826                           	opt stack 0
 18827  0049F4                     i2_frexp:
 18828                           	opt stack 19
 18829                           
 18830                           ;incstack = 0
 18831  0049F4  5001               	movf	i2frexp@value,w,c
 18832  0049F6  1002               	iorwf	i2frexp@value+1,w,c
 18833  0049F8  1003               	iorwf	i2frexp@value+2,w,c
 18834  0049FA  A4D8               	btfss	status,2,c
 18835  0049FC  D00F               	goto	i2l5012
 18836  0049FE  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18837  004A02  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18838  004A06  0E00               	movlw	0
 18839  004A08  6EDE               	movwf	postinc2,c
 18840  004A0A  0E00               	movlw	0
 18841  004A0C  6EDD               	movwf	postdec2,c
 18842  004A0E  0E00               	movlw	0
 18843  004A10  6E01               	movwf	?i2_frexp,c
 18844  004A12  0E00               	movlw	0
 18845  004A14  6E02               	movwf	?i2_frexp+1,c
 18846  004A16  0E00               	movlw	0
 18847  004A18  6E03               	movwf	?i2_frexp+2,c
 18848  004A1A  0012               	return	
 18849  004A1C                     i2l5012:
 18850  004A1C  5003               	movf	i2frexp@value+2,w,c
 18851  004A1E  0B7F               	andlw	127
 18852  004A20  6E06               	movwf	??i2_frexp& (0+255),c
 18853  004A22  6A07               	clrf	(??i2_frexp+1)& (0+255),c
 18854  004A24  90D8               	bcf	status,0,c
 18855  004A26  3606               	rlcf	??i2_frexp,f,c
 18856  004A28  3607               	rlcf	??i2_frexp+1,f,c
 18857  004A2A  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18858  004A2E  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18859  004A32  C006  FFDE         	movff	??i2_frexp,postinc2
 18860  004A36  C007  FFDD         	movff	??i2_frexp+1,postdec2
 18861  004A3A  AE02               	btfss	i2frexp@value+1,7,c
 18862  004A3C  D003               	goto	i2u473_40
 18863  004A3E  6A06               	clrf	??i2_frexp& (0+255),c
 18864  004A40  2A06               	incf	??i2_frexp& (0+255),f,c
 18865  004A42  D001               	goto	i2u473_48
 18866  004A44                     i2u473_40:
 18867  004A44  6A06               	clrf	??i2_frexp& (0+255),c
 18868  004A46                     i2u473_48:
 18869  004A46  5006               	movf	??i2_frexp,w,c
 18870  004A48  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18871  004A4C  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18872  004A50  12DE               	iorwf	postinc2,f,c
 18873  004A52  0E00               	movlw	0
 18874  004A54  12DD               	iorwf	postdec2,f,c
 18875  004A56  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18876  004A5A  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18877  004A5E  0E82               	movlw	130
 18878  004A60  26DE               	addwf	postinc2,f,c
 18879  004A62  0EFF               	movlw	255
 18880  004A64  22DD               	addwfc	postdec2,f,c
 18881  004A66  8003               	bsf	i2frexp@value+2,0,c
 18882  004A68  8203               	bsf	i2frexp@value+2,1,c
 18883  004A6A  8403               	bsf	i2frexp@value+2,2,c
 18884  004A6C  8603               	bsf	i2frexp@value+2,3,c
 18885  004A6E  8803               	bsf	i2frexp@value+2,4,c
 18886  004A70  8A03               	bsf	i2frexp@value+2,5,c
 18887  004A72  9C03               	bcf	i2frexp@value+2,6,c
 18888  004A74  9E02               	bcf	i2frexp@value+1,7,c
 18889  004A76  C001  F001         	movff	i2frexp@value,?i2_frexp
 18890  004A7A  C002  F002         	movff	i2frexp@value+1,?i2_frexp+1
 18891  004A7E  C003  F003         	movff	i2frexp@value+2,?i2_frexp+2
 18892  004A82  0012               	return	
 18893  004A84                     __end_ofi2_frexp:
 18894                           	opt stack 0
 18895                           pclatu	equ	0xFFB
 18896                           pclath	equ	0xFFA
 18897                           tblptru	equ	0xFF8
 18898                           tblptrh	equ	0xFF7
 18899                           tblptrl	equ	0xFF6
 18900                           tablat	equ	0xFF5
 18901                           prodh	equ	0xFF4
 18902                           prodl	equ	0xFF3
 18903                           intcon	equ	0xFF2
 18904                           intcon2	equ	0xFF1
 18905                           intcon3	equ	0xFF0
 18906                           postinc0	equ	0xFEE
 18907                           fsr0h	equ	0xFEA
 18908                           fsr0l	equ	0xFE9
 18909                           wreg	equ	0xFE8
 18910                           postdec1	equ	0xFE5
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           indf2	equ	0xFDF
 18914                           postinc2	equ	0xFDE
 18915                           postdec2	equ	0xFDD
 18916                           fsr2h	equ	0xFDA
 18917                           fsr2l	equ	0xFD9
 18918                           status	equ	0xFD8
 18919                           
 18920 ;; *************** function i2___fttol *****************
 18921 ;; Defined at:
 18922 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 18923 ;; Parameters:    Size  Location     Type
 18924 ;;  f1              3   39[COMRAM] float 
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;  __fttol         4   49[COMRAM] unsigned long 
 18927 ;;  __fttol         1   53[COMRAM] unsigned char 
 18928 ;;  __fttol         1   48[COMRAM] unsigned char 
 18929 ;; Return value:  Size  Location     Type
 18930 ;;                  4   39[COMRAM] long 
 18931 ;; Registers used:
 18932 ;;		wreg, status,2, status,0
 18933 ;; Tracked objects:
 18934 ;;		On entry : 0/0
 18935 ;;		On exit  : 0/0
 18936 ;;		Unchanged: 0/0
 18937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18938 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18940 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18941 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18942 ;;Total ram usage:       15 bytes
 18943 ;; Hardware stack levels used:    1
 18944 ;; This function calls:
 18945 ;;		Nothing
 18946 ;; This function is called by:
 18947 ;;		i2_dec_to_hex
 18948 ;;		i2_pow
 18949 ;;		i2_exp
 18950 ;;		i2_floor
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text81
 18955  003D3E                     __ptext81:
 18956                           	opt stack 0
 18957  003D3E                     i2___fttol:
 18958                           	opt stack 18
 18959                           
 18960                           ;incstack = 0
 18961  003D3E  C02A  F02C         	movff	i2___fttol@f1+2,??i2___fttol
 18962  003D42  6A2D               	clrf	(??i2___fttol+1)& (0+255),c
 18963  003D44  6A2E               	clrf	(??i2___fttol+2)& (0+255),c
 18964  003D46  3429               	rlcf	i2___fttol@f1+1,w,c
 18965  003D48  362C               	rlcf	??i2___fttol& (0+255),f,c
 18966  003D4A  E301               	bnc	u464_41
 18967  003D4C  802D               	bsf	(??i2___fttol+1)& (0+255),0,c
 18968  003D4E                     u464_41:
 18969  003D4E  502C               	movf	??i2___fttol,w,c
 18970  003D50  6E36               	movwf	i2___fttol@exp1,c
 18971  003D52  5036               	movf	i2___fttol@exp1,w,c
 18972  003D54  A4D8               	btfss	status,2,c
 18973  003D56  D009               	goto	i2l4964
 18974  003D58  0E00               	movlw	0
 18975  003D5A  6E28               	movwf	?i2___fttol,c
 18976  003D5C  0E00               	movlw	0
 18977  003D5E  6E29               	movwf	?i2___fttol+1,c
 18978  003D60  0E00               	movlw	0
 18979  003D62  6E2A               	movwf	?i2___fttol+2,c
 18980  003D64  0E00               	movlw	0
 18981  003D66  6E2B               	movwf	?i2___fttol+3,c
 18982  003D68  0012               	return	
 18983  003D6A                     i2l4964:
 18984  003D6A  0E17               	movlw	23
 18985  003D6C  6E2C               	movwf	??i2___fttol& (0+255),c
 18986  003D6E  C028  F02D         	movff	i2___fttol@f1,??i2___fttol+1
 18987  003D72  C029  F02E         	movff	i2___fttol@f1+1,??i2___fttol+2
 18988  003D76  C02A  F02F         	movff	i2___fttol@f1+2,??i2___fttol+3
 18989  003D7A  282C               	incf	??i2___fttol,w,c
 18990  003D7C  6E30               	movwf	(??i2___fttol+4)& (0+255),c
 18991  003D7E  D004               	goto	i2u466_40
 18992  003D80                     i2u466_45:
 18993  003D80  90D8               	bcf	status,0,c
 18994  003D82  322F               	rrcf	??i2___fttol+3,f,c
 18995  003D84  322E               	rrcf	??i2___fttol+2,f,c
 18996  003D86  322D               	rrcf	??i2___fttol+1,f,c
 18997  003D88                     i2u466_40:
 18998  003D88  2E30               	decfsz	(??i2___fttol+4)& (0+255),f,c
 18999  003D8A  D7FA               	goto	i2u466_45
 19000  003D8C  502D               	movf	??i2___fttol+1,w,c
 19001  003D8E  6E31               	movwf	i2___fttol@sign1,c
 19002  003D90  8E29               	bsf	i2___fttol@f1+1,7,c
 19003  003D92  0EFF               	movlw	255
 19004  003D94  1628               	andwf	i2___fttol@f1,f,c
 19005  003D96  0EFF               	movlw	255
 19006  003D98  1629               	andwf	i2___fttol@f1+1,f,c
 19007  003D9A  0E00               	movlw	0
 19008  003D9C  162A               	andwf	i2___fttol@f1+2,f,c
 19009  003D9E  5028               	movf	i2___fttol@f1,w,c
 19010  003DA0  6E32               	movwf	i2___fttol@lval,c
 19011  003DA2  5029               	movf	i2___fttol@f1+1,w,c
 19012  003DA4  6E33               	movwf	i2___fttol@lval+1,c
 19013  003DA6  502A               	movf	i2___fttol@f1+2,w,c
 19014  003DA8  6E34               	movwf	i2___fttol@lval+2,c
 19015  003DAA  6A35               	clrf	i2___fttol@lval+3,c
 19016  003DAC  0E8E               	movlw	142
 19017  003DAE  5E36               	subwf	i2___fttol@exp1,f,c
 19018  003DB0  AE36               	btfss	i2___fttol@exp1,7,c
 19019  003DB2  D016               	goto	i2l4986
 19020  003DB4  5036               	movf	i2___fttol@exp1,w,c
 19021  003DB6  0A80               	xorlw	128
 19022  003DB8  0F8F               	addlw	143
 19023  003DBA  B0D8               	btfsc	status,0,c
 19024  003DBC  D009               	goto	i2l4982
 19025  003DBE  0E00               	movlw	0
 19026  003DC0  6E28               	movwf	?i2___fttol,c
 19027  003DC2  0E00               	movlw	0
 19028  003DC4  6E29               	movwf	?i2___fttol+1,c
 19029  003DC6  0E00               	movlw	0
 19030  003DC8  6E2A               	movwf	?i2___fttol+2,c
 19031  003DCA  0E00               	movlw	0
 19032  003DCC  6E2B               	movwf	?i2___fttol+3,c
 19033  003DCE  0012               	return	
 19034  003DD0                     i2l4982:
 19035  003DD0  90D8               	bcf	status,0,c
 19036  003DD2  3235               	rrcf	i2___fttol@lval+3,f,c
 19037  003DD4  3234               	rrcf	i2___fttol@lval+2,f,c
 19038  003DD6  3233               	rrcf	i2___fttol@lval+1,f,c
 19039  003DD8  3232               	rrcf	i2___fttol@lval,f,c
 19040  003DDA  3E36               	incfsz	i2___fttol@exp1,f,c
 19041  003DDC  D7F9               	goto	i2l4982
 19042  003DDE  D015               	goto	i2l4996
 19043  003DE0                     i2l4986:
 19044  003DE0  0E17               	movlw	23
 19045  003DE2  6436               	cpfsgt	i2___fttol@exp1,c
 19046  003DE4  D00F               	goto	i2l4994
 19047  003DE6  0E00               	movlw	0
 19048  003DE8  6E28               	movwf	?i2___fttol,c
 19049  003DEA  0E00               	movlw	0
 19050  003DEC  6E29               	movwf	?i2___fttol+1,c
 19051  003DEE  0E00               	movlw	0
 19052  003DF0  6E2A               	movwf	?i2___fttol+2,c
 19053  003DF2  0E00               	movlw	0
 19054  003DF4  6E2B               	movwf	?i2___fttol+3,c
 19055  003DF6  0012               	return	
 19056  003DF8                     i2l4992:
 19057  003DF8  90D8               	bcf	status,0,c
 19058  003DFA  3632               	rlcf	i2___fttol@lval,f,c
 19059  003DFC  3633               	rlcf	i2___fttol@lval+1,f,c
 19060  003DFE  3634               	rlcf	i2___fttol@lval+2,f,c
 19061  003E00  3635               	rlcf	i2___fttol@lval+3,f,c
 19062  003E02  0636               	decf	i2___fttol@exp1,f,c
 19063  003E04                     i2l4994:
 19064  003E04  5036               	movf	i2___fttol@exp1,w,c
 19065  003E06  A4D8               	btfss	status,2,c
 19066  003E08  D7F7               	goto	i2l4992
 19067  003E0A                     i2l4996:
 19068  003E0A  5031               	movf	i2___fttol@sign1,w,c
 19069  003E0C  B4D8               	btfsc	status,2,c
 19070  003E0E  D008               	goto	i2l5000
 19071  003E10  1E35               	comf	i2___fttol@lval+3,f,c
 19072  003E12  1E34               	comf	i2___fttol@lval+2,f,c
 19073  003E14  1E33               	comf	i2___fttol@lval+1,f,c
 19074  003E16  6C32               	negf	i2___fttol@lval,c
 19075  003E18  0E00               	movlw	0
 19076  003E1A  2233               	addwfc	i2___fttol@lval+1,f,c
 19077  003E1C  2234               	addwfc	i2___fttol@lval+2,f,c
 19078  003E1E  2235               	addwfc	i2___fttol@lval+3,f,c
 19079  003E20                     i2l5000:
 19080  003E20  C032  F028         	movff	i2___fttol@lval,?i2___fttol
 19081  003E24  C033  F029         	movff	i2___fttol@lval+1,?i2___fttol+1
 19082  003E28  C034  F02A         	movff	i2___fttol@lval+2,?i2___fttol+2
 19083  003E2C  C035  F02B         	movff	i2___fttol@lval+3,?i2___fttol+3
 19084  003E30  0012               	return	
 19085  003E32                     __end_ofi2___fttol:
 19086                           	opt stack 0
 19087                           pclatu	equ	0xFFB
 19088                           pclath	equ	0xFFA
 19089                           tblptru	equ	0xFF8
 19090                           tblptrh	equ	0xFF7
 19091                           tblptrl	equ	0xFF6
 19092                           tablat	equ	0xFF5
 19093                           prodh	equ	0xFF4
 19094                           prodl	equ	0xFF3
 19095                           intcon	equ	0xFF2
 19096                           intcon2	equ	0xFF1
 19097                           intcon3	equ	0xFF0
 19098                           postinc0	equ	0xFEE
 19099                           fsr0h	equ	0xFEA
 19100                           fsr0l	equ	0xFE9
 19101                           wreg	equ	0xFE8
 19102                           postdec1	equ	0xFE5
 19103                           fsr1h	equ	0xFE2
 19104                           fsr1l	equ	0xFE1
 19105                           indf2	equ	0xFDF
 19106                           postinc2	equ	0xFDE
 19107                           postdec2	equ	0xFDD
 19108                           fsr2h	equ	0xFDA
 19109                           fsr2l	equ	0xFD9
 19110                           status	equ	0xFD8
 19111                           
 19112 ;; *************** function i2___ftge *****************
 19113 ;; Defined at:
 19114 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 19115 ;; Parameters:    Size  Location     Type
 19116 ;;  ff1             3    0[COMRAM] float 
 19117 ;;  ff2             3    3[COMRAM] float 
 19118 ;; Auto vars:     Size  Location     Type
 19119 ;;		None
 19120 ;; Return value:  Size  Location     Type
 19121 ;;		None               void
 19122 ;; Registers used:
 19123 ;;		wreg, status,2, status,0
 19124 ;; Tracked objects:
 19125 ;;		On entry : 0/0
 19126 ;;		On exit  : 0/0
 19127 ;;		Unchanged: 0/0
 19128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19131 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19132 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19133 ;;Total ram usage:        9 bytes
 19134 ;; Hardware stack levels used:    1
 19135 ;; This function calls:
 19136 ;;		Nothing
 19137 ;; This function is called by:
 19138 ;;		i2_pow
 19139 ;;		i2_exp
 19140 ;;		i2_floor
 19141 ;; This function uses a non-reentrant model
 19142 ;;
 19143                           
 19144                           	psect	text82
 19145  004A84                     __ptext82:
 19146                           	opt stack 0
 19147  004A84                     i2___ftge:
 19148                           	opt stack 18
 19149                           
 19150                           ;incstack = 0
 19151  004A84  AE03               	btfss	i2___ftge@ff1+2,7,c
 19152  004A86  D016               	goto	i2l4896
 19153  004A88  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 19154  004A8C  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 19155  004A90  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 19156  004A94  1E07               	comf	??i2___ftge,f,c
 19157  004A96  1E08               	comf	??i2___ftge+1,f,c
 19158  004A98  1E09               	comf	??i2___ftge+2,f,c
 19159  004A9A  2A07               	incf	??i2___ftge,f,c
 19160  004A9C  0E00               	movlw	0
 19161  004A9E  2208               	addwfc	??i2___ftge+1,f,c
 19162  004AA0  2209               	addwfc	??i2___ftge+2,f,c
 19163  004AA2  0E00               	movlw	0
 19164  004AA4  2407               	addwf	??i2___ftge,w,c
 19165  004AA6  6E01               	movwf	i2___ftge@ff1,c
 19166  004AA8  0E00               	movlw	0
 19167  004AAA  2008               	addwfc	??i2___ftge+1,w,c
 19168  004AAC  6E02               	movwf	i2___ftge@ff1+1,c
 19169  004AAE  0E80               	movlw	128
 19170  004AB0  2009               	addwfc	??i2___ftge+2,w,c
 19171  004AB2  6E03               	movwf	i2___ftge@ff1+2,c
 19172  004AB4                     i2l4896:
 19173  004AB4  AE06               	btfss	i2___ftge@ff2+2,7,c
 19174  004AB6  D016               	goto	i2l4900
 19175  004AB8  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 19176  004ABC  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 19177  004AC0  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 19178  004AC4  1E07               	comf	??i2___ftge,f,c
 19179  004AC6  1E08               	comf	??i2___ftge+1,f,c
 19180  004AC8  1E09               	comf	??i2___ftge+2,f,c
 19181  004ACA  2A07               	incf	??i2___ftge,f,c
 19182  004ACC  0E00               	movlw	0
 19183  004ACE  2208               	addwfc	??i2___ftge+1,f,c
 19184  004AD0  2209               	addwfc	??i2___ftge+2,f,c
 19185  004AD2  0E00               	movlw	0
 19186  004AD4  2407               	addwf	??i2___ftge,w,c
 19187  004AD6  6E04               	movwf	i2___ftge@ff2,c
 19188  004AD8  0E00               	movlw	0
 19189  004ADA  2008               	addwfc	??i2___ftge+1,w,c
 19190  004ADC  6E05               	movwf	i2___ftge@ff2+1,c
 19191  004ADE  0E80               	movlw	128
 19192  004AE0  2009               	addwfc	??i2___ftge+2,w,c
 19193  004AE2  6E06               	movwf	i2___ftge@ff2+2,c
 19194  004AE4                     i2l4900:
 19195  004AE4  0E00               	movlw	0
 19196  004AE6  1A01               	xorwf	i2___ftge@ff1,f,c
 19197  004AE8  0E00               	movlw	0
 19198  004AEA  1A02               	xorwf	i2___ftge@ff1+1,f,c
 19199  004AEC  0E80               	movlw	128
 19200  004AEE  1A03               	xorwf	i2___ftge@ff1+2,f,c
 19201  004AF0  0E00               	movlw	0
 19202  004AF2  1A04               	xorwf	i2___ftge@ff2,f,c
 19203  004AF4  0E00               	movlw	0
 19204  004AF6  1A05               	xorwf	i2___ftge@ff2+1,f,c
 19205  004AF8  0E80               	movlw	128
 19206  004AFA  1A06               	xorwf	i2___ftge@ff2+2,f,c
 19207  004AFC  5004               	movf	i2___ftge@ff2,w,c
 19208  004AFE  5C01               	subwf	i2___ftge@ff1,w,c
 19209  004B00  5005               	movf	i2___ftge@ff2+1,w,c
 19210  004B02  5802               	subwfb	i2___ftge@ff1+1,w,c
 19211  004B04  5006               	movf	i2___ftge@ff2+2,w,c
 19212  004B06  5803               	subwfb	i2___ftge@ff1+2,w,c
 19213  004B08  B0D8               	btfsc	status,0,c
 19214  004B0A  D002               	goto	i2l4906
 19215  004B0C  90D8               	bcf	status,0,c
 19216  004B0E  0012               	return	
 19217  004B10                     i2l4906:
 19218  004B10  80D8               	bsf	status,0,c
 19219  004B12  0012               	return	
 19220  004B14                     __end_ofi2___ftge:
 19221                           	opt stack 0
 19222                           pclatu	equ	0xFFB
 19223                           pclath	equ	0xFFA
 19224                           tblptru	equ	0xFF8
 19225                           tblptrh	equ	0xFF7
 19226                           tblptrl	equ	0xFF6
 19227                           tablat	equ	0xFF5
 19228                           prodh	equ	0xFF4
 19229                           prodl	equ	0xFF3
 19230                           intcon	equ	0xFF2
 19231                           intcon2	equ	0xFF1
 19232                           intcon3	equ	0xFF0
 19233                           postinc0	equ	0xFEE
 19234                           fsr0h	equ	0xFEA
 19235                           fsr0l	equ	0xFE9
 19236                           wreg	equ	0xFE8
 19237                           postdec1	equ	0xFE5
 19238                           fsr1h	equ	0xFE2
 19239                           fsr1l	equ	0xFE1
 19240                           indf2	equ	0xFDF
 19241                           postinc2	equ	0xFDE
 19242                           postdec2	equ	0xFDD
 19243                           fsr2h	equ	0xFDA
 19244                           fsr2l	equ	0xFD9
 19245                           status	equ	0xFD8
 19246                           
 19247 ;; *************** function i2___altoft *****************
 19248 ;; Defined at:
 19249 ;;		line 42 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
 19250 ;; Parameters:    Size  Location     Type
 19251 ;;  c               4   54[COMRAM] long 
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;  __altoft        1   63[COMRAM] unsigned char 
 19254 ;;  __altoft        1   62[COMRAM] unsigned char 
 19255 ;; Return value:  Size  Location     Type
 19256 ;;                  3   54[COMRAM] float 
 19257 ;; Registers used:
 19258 ;;		wreg, status,2, status,0, cstack
 19259 ;; Tracked objects:
 19260 ;;		On entry : 0/0
 19261 ;;		On exit  : 0/0
 19262 ;;		Unchanged: 0/0
 19263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19267 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19268 ;;Total ram usage:       10 bytes
 19269 ;; Hardware stack levels used:    1
 19270 ;; Hardware stack levels required when called:    1
 19271 ;; This function calls:
 19272 ;;		i2___ftpack
 19273 ;; This function is called by:
 19274 ;;		i2_floor
 19275 ;; This function uses a non-reentrant model
 19276 ;;
 19277                           
 19278                           	psect	text83
 19279  004C8C                     __ptext83:
 19280                           	opt stack 0
 19281  004C8C                     i2___altoft:
 19282                           	opt stack 17
 19283                           
 19284                           ;incstack = 0
 19285  004C8C  0E00               	movlw	0
 19286  004C8E  6E40               	movwf	i2___altoft@sign,c
 19287  004C90  0E8E               	movlw	142
 19288  004C92  6E3F               	movwf	i2___altoft@exp,c
 19289  004C94  AE3A               	btfss	i2___altoft@c+3,7,c
 19290  004C96  D011               	goto	i2l4816
 19291  004C98  1E3A               	comf	i2___altoft@c+3,f,c
 19292  004C9A  1E39               	comf	i2___altoft@c+2,f,c
 19293  004C9C  1E38               	comf	i2___altoft@c+1,f,c
 19294  004C9E  6C37               	negf	i2___altoft@c,c
 19295  004CA0  0E00               	movlw	0
 19296  004CA2  2238               	addwfc	i2___altoft@c+1,f,c
 19297  004CA4  2239               	addwfc	i2___altoft@c+2,f,c
 19298  004CA6  223A               	addwfc	i2___altoft@c+3,f,c
 19299  004CA8  0E01               	movlw	1
 19300  004CAA  6E40               	movwf	i2___altoft@sign,c
 19301  004CAC  D006               	goto	i2l4816
 19302  004CAE                     i2l4814:
 19303  004CAE  90D8               	bcf	status,0,c
 19304  004CB0  323A               	rrcf	i2___altoft@c+3,f,c
 19305  004CB2  3239               	rrcf	i2___altoft@c+2,f,c
 19306  004CB4  3238               	rrcf	i2___altoft@c+1,f,c
 19307  004CB6  3237               	rrcf	i2___altoft@c,f,c
 19308  004CB8  2A3F               	incf	i2___altoft@exp,f,c
 19309  004CBA                     i2l4816:
 19310  004CBA  0E00               	movlw	0
 19311  004CBC  1437               	andwf	i2___altoft@c,w,c
 19312  004CBE  6E3B               	movwf	??i2___altoft& (0+255),c
 19313  004CC0  0E00               	movlw	0
 19314  004CC2  1438               	andwf	i2___altoft@c+1,w,c
 19315  004CC4  6E3C               	movwf	(??i2___altoft+1)& (0+255),c
 19316  004CC6  0E00               	movlw	0
 19317  004CC8  1439               	andwf	i2___altoft@c+2,w,c
 19318  004CCA  6E3D               	movwf	(??i2___altoft+2)& (0+255),c
 19319  004CCC  0EFF               	movlw	255
 19320  004CCE  143A               	andwf	i2___altoft@c+3,w,c
 19321  004CD0  6E3E               	movwf	(??i2___altoft+3)& (0+255),c
 19322  004CD2  503B               	movf	??i2___altoft,w,c
 19323  004CD4  103C               	iorwf	??i2___altoft+1,w,c
 19324  004CD6  103D               	iorwf	??i2___altoft+2,w,c
 19325  004CD8  103E               	iorwf	??i2___altoft+3,w,c
 19326  004CDA  A4D8               	btfss	status,2,c
 19327  004CDC  D7E8               	goto	i2l4814
 19328  004CDE  C037  F001         	movff	i2___altoft@c,i2___ftpack@arg
 19329  004CE2  C038  F002         	movff	i2___altoft@c+1,i2___ftpack@arg+1
 19330  004CE6  C039  F003         	movff	i2___altoft@c+2,i2___ftpack@arg+2
 19331  004CEA  C03F  F004         	movff	i2___altoft@exp,i2___ftpack@exp
 19332  004CEE  C040  F005         	movff	i2___altoft@sign,i2___ftpack@sign
 19333  004CF2  EC03  F024         	call	i2___ftpack	;wreg free
 19334  004CF6  C001  F037         	movff	?i2___ftpack,?i2___altoft
 19335  004CFA  C002  F038         	movff	?i2___ftpack+1,?i2___altoft+1
 19336  004CFE  C003  F039         	movff	?i2___ftpack+2,?i2___altoft+2
 19337  004D02  0012               	return	
 19338  004D04                     __end_ofi2___altoft:
 19339                           	opt stack 0
 19340                           pclatu	equ	0xFFB
 19341                           pclath	equ	0xFFA
 19342                           tblptru	equ	0xFF8
 19343                           tblptrh	equ	0xFF7
 19344                           tblptrl	equ	0xFF6
 19345                           tablat	equ	0xFF5
 19346                           prodh	equ	0xFF4
 19347                           prodl	equ	0xFF3
 19348                           intcon	equ	0xFF2
 19349                           intcon2	equ	0xFF1
 19350                           intcon3	equ	0xFF0
 19351                           postinc0	equ	0xFEE
 19352                           fsr0h	equ	0xFEA
 19353                           fsr0l	equ	0xFE9
 19354                           wreg	equ	0xFE8
 19355                           postdec1	equ	0xFE5
 19356                           fsr1h	equ	0xFE2
 19357                           fsr1l	equ	0xFE1
 19358                           indf2	equ	0xFDF
 19359                           postinc2	equ	0xFDE
 19360                           postdec2	equ	0xFDD
 19361                           fsr2h	equ	0xFDA
 19362                           fsr2l	equ	0xFD9
 19363                           status	equ	0xFD8
 19364                           
 19365 ;; *************** function i2_eval_poly *****************
 19366 ;; Defined at:
 19367 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\evalpoly.c"
 19368 ;; Parameters:    Size  Location     Type
 19369 ;;  x               3   39[COMRAM] float 
 19370 ;;  d               2   42[COMRAM] PTR const 
 19371 ;;		 -> log@coeff(27), exp@coeff(30), 
 19372 ;;  n               2   44[COMRAM] int 
 19373 ;; Auto vars:     Size  Location     Type
 19374 ;;  eval_poly       3   48[COMRAM] int 
 19375 ;; Return value:  Size  Location     Type
 19376 ;;                  3   39[COMRAM] int 
 19377 ;; Registers used:
 19378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19379 ;; Tracked objects:
 19380 ;;		On entry : 0/0
 19381 ;;		On exit  : 0/0
 19382 ;;		Unchanged: 0/0
 19383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19384 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19385 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19387 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19388 ;;Total ram usage:       12 bytes
 19389 ;; Hardware stack levels used:    1
 19390 ;; Hardware stack levels required when called:    2
 19391 ;; This function calls:
 19392 ;;		i2___ftadd
 19393 ;;		i2___ftmul
 19394 ;;		i2___wmul
 19395 ;; This function is called by:
 19396 ;;		i2_exp
 19397 ;;		i2_log
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text84
 19402  00437E                     __ptext84:
 19403                           	opt stack 0
 19404  00437E                     i2_eval_poly:
 19405                           	opt stack 17
 19406                           
 19407                           ;incstack = 0
 19408  00437E  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 19409  004382  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 19410  004386  0E00               	movlw	0
 19411  004388  6E04               	movwf	i2___wmul@multiplicand+1,c
 19412  00438A  0E03               	movlw	3
 19413  00438C  6E03               	movwf	i2___wmul@multiplicand,c
 19414  00438E  ECDC  F029         	call	i2___wmul	;wreg free
 19415  004392  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 19416  004396  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 19417  00439A  5001               	movf	?i2___wmul,w,c
 19418  00439C  262F               	addwf	??i2_eval_poly,f,c
 19419  00439E  5002               	movf	?i2___wmul+1,w,c
 19420  0043A0  2230               	addwfc	??i2_eval_poly+1,f,c
 19421  0043A2  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 19422  0043A6  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 19423  0043AA                     	if	0	;tblptru may be non-zero
 19424  0043AA                     	endif
 19425  0043AA                     	if	0	;tblptru may be non-zero
 19426  0043AA                     	endif
 19427  0043AA  0009               	tblrd		*+
 19428  0043AC  CFF5 F031          	movff	tablat,i2eval_poly@res
 19429  0043B0  0009               	tblrd		*+
 19430  0043B2  CFF5 F032          	movff	tablat,i2eval_poly@res+1
 19431  0043B6  000A               	tblrd		*-
 19432  0043B8  CFF5 F033          	movff	tablat,i2eval_poly@res+2
 19433  0043BC  D03E               	goto	i2l5256
 19434  0043BE                     i2l5254:
 19435  0043BE  C031  F010         	movff	i2eval_poly@res,i2___ftmul@f2
 19436  0043C2  C032  F011         	movff	i2eval_poly@res+1,i2___ftmul@f2+1
 19437  0043C6  C033  F012         	movff	i2eval_poly@res+2,i2___ftmul@f2+2
 19438  0043CA  C028  F00D         	movff	i2eval_poly@x,i2___ftmul@f1
 19439  0043CE  C029  F00E         	movff	i2eval_poly@x+1,i2___ftmul@f1+1
 19440  0043D2  C02A  F00F         	movff	i2eval_poly@x+2,i2___ftmul@f1+2
 19441  0043D6  EC19  F01F         	call	i2___ftmul	;wreg free
 19442  0043DA  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 19443  0043DE  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 19444  0043E2  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 19445  0043E6  0E00               	movlw	0
 19446  0043E8  6E04               	movwf	i2___wmul@multiplicand+1,c
 19447  0043EA  0E03               	movlw	3
 19448  0043EC  6E03               	movwf	i2___wmul@multiplicand,c
 19449  0043EE  062D               	decf	i2eval_poly@n,f,c
 19450  0043F0  A0D8               	btfss	status,0,c
 19451  0043F2  062E               	decf	i2eval_poly@n+1,f,c
 19452  0043F4  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 19453  0043F8  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 19454  0043FC  ECDC  F029         	call	i2___wmul	;wreg free
 19455  004400  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 19456  004404  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 19457  004408  5001               	movf	?i2___wmul,w,c
 19458  00440A  262F               	addwf	??i2_eval_poly,f,c
 19459  00440C  5002               	movf	?i2___wmul+1,w,c
 19460  00440E  2230               	addwfc	??i2_eval_poly+1,f,c
 19461  004410  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 19462  004414  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 19463  004418                     	if	0	;tblptru may be non-zero
 19464  004418                     	endif
 19465  004418                     	if	0	;tblptru may be non-zero
 19466  004418                     	endif
 19467  004418  0009               	tblrd		*+
 19468  00441A  CFF5 F01F          	movff	tablat,i2___ftadd@f2
 19469  00441E  0009               	tblrd		*+
 19470  004420  CFF5 F020          	movff	tablat,i2___ftadd@f2+1
 19471  004424  000A               	tblrd		*-
 19472  004426  CFF5 F021          	movff	tablat,i2___ftadd@f2+2
 19473  00442A  ECC2  F013         	call	i2___ftadd	;wreg free
 19474  00442E  C01C  F031         	movff	?i2___ftadd,i2eval_poly@res
 19475  004432  C01D  F032         	movff	?i2___ftadd+1,i2eval_poly@res+1
 19476  004436  C01E  F033         	movff	?i2___ftadd+2,i2eval_poly@res+2
 19477  00443A                     i2l5256:
 19478  00443A  502D               	movf	i2eval_poly@n,w,c
 19479  00443C  102E               	iorwf	i2eval_poly@n+1,w,c
 19480  00443E  A4D8               	btfss	status,2,c
 19481  004440  D7BE               	goto	i2l5254
 19482  004442  C031  F028         	movff	i2eval_poly@res,?i2_eval_poly
 19483  004446  C032  F029         	movff	i2eval_poly@res+1,?i2_eval_poly+1
 19484  00444A  C033  F02A         	movff	i2eval_poly@res+2,?i2_eval_poly+2
 19485  00444E  0012               	return		;funcret
 19486  004450                     __end_ofi2_eval_poly:
 19487                           	opt stack 0
 19488                           pclatu	equ	0xFFB
 19489                           pclath	equ	0xFFA
 19490                           tblptru	equ	0xFF8
 19491                           tblptrh	equ	0xFF7
 19492                           tblptrl	equ	0xFF6
 19493                           tablat	equ	0xFF5
 19494                           prodh	equ	0xFF4
 19495                           prodl	equ	0xFF3
 19496                           intcon	equ	0xFF2
 19497                           intcon2	equ	0xFF1
 19498                           intcon3	equ	0xFF0
 19499                           postinc0	equ	0xFEE
 19500                           fsr0h	equ	0xFEA
 19501                           fsr0l	equ	0xFE9
 19502                           wreg	equ	0xFE8
 19503                           postdec1	equ	0xFE5
 19504                           fsr1h	equ	0xFE2
 19505                           fsr1l	equ	0xFE1
 19506                           indf2	equ	0xFDF
 19507                           postinc2	equ	0xFDE
 19508                           postdec2	equ	0xFDD
 19509                           fsr2h	equ	0xFDA
 19510                           fsr2l	equ	0xFD9
 19511                           status	equ	0xFD8
 19512                           
 19513 ;; *************** function i2___wmul *****************
 19514 ;; Defined at:
 19515 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 19516 ;; Parameters:    Size  Location     Type
 19517 ;;  multiplier      2    0[COMRAM] unsigned int 
 19518 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19519 ;; Auto vars:     Size  Location     Type
 19520 ;;  __wmul          2    4[COMRAM] unsigned int 
 19521 ;; Return value:  Size  Location     Type
 19522 ;;                  2    0[COMRAM] unsigned int 
 19523 ;; Registers used:
 19524 ;;		wreg, status,2, status,0, prodl, prodh
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/0
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19533 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19534 ;;Total ram usage:        6 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; This function calls:
 19537 ;;		Nothing
 19538 ;; This function is called by:
 19539 ;;		_isr
 19540 ;;		i2_printf
 19541 ;;		i2_eval_poly
 19542 ;; This function uses a non-reentrant model
 19543 ;;
 19544                           
 19545                           	psect	text85
 19546  0053B8                     __ptext85:
 19547                           	opt stack 0
 19548  0053B8                     i2___wmul:
 19549                           	opt stack 21
 19550                           
 19551                           ;incstack = 0
 19552  0053B8  5001               	movf	i2___wmul@multiplier,w,c
 19553  0053BA  0203               	mulwf	i2___wmul@multiplicand,c
 19554  0053BC  CFF3 F005          	movff	prodl,i2___wmul@product
 19555  0053C0  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19556  0053C4  5001               	movf	i2___wmul@multiplier,w,c
 19557  0053C6  0204               	mulwf	i2___wmul@multiplicand+1,c
 19558  0053C8  50F3               	movf	prodl,w,c
 19559  0053CA  2606               	addwf	i2___wmul@product+1,f,c
 19560  0053CC  5002               	movf	i2___wmul@multiplier+1,w,c
 19561  0053CE  0203               	mulwf	i2___wmul@multiplicand,c
 19562  0053D0  50F3               	movf	prodl,w,c
 19563  0053D2  2606               	addwf	i2___wmul@product+1,f,c
 19564  0053D4  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19565  0053D8  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19566  0053DC  0012               	return	
 19567  0053DE                     __end_ofi2___wmul:
 19568                           	opt stack 0
 19569                           pclatu	equ	0xFFB
 19570                           pclath	equ	0xFFA
 19571                           tblptru	equ	0xFF8
 19572                           tblptrh	equ	0xFF7
 19573                           tblptrl	equ	0xFF6
 19574                           tablat	equ	0xFF5
 19575                           prodh	equ	0xFF4
 19576                           prodl	equ	0xFF3
 19577                           intcon	equ	0xFF2
 19578                           intcon2	equ	0xFF1
 19579                           intcon3	equ	0xFF0
 19580                           postinc0	equ	0xFEE
 19581                           fsr0h	equ	0xFEA
 19582                           fsr0l	equ	0xFE9
 19583                           wreg	equ	0xFE8
 19584                           postdec1	equ	0xFE5
 19585                           fsr1h	equ	0xFE2
 19586                           fsr1l	equ	0xFE1
 19587                           indf2	equ	0xFDF
 19588                           postinc2	equ	0xFDE
 19589                           postdec2	equ	0xFDD
 19590                           fsr2h	equ	0xFDA
 19591                           fsr2l	equ	0xFD9
 19592                           status	equ	0xFD8
 19593                           
 19594 ;; *************** function i2___ftmul *****************
 19595 ;; Defined at:
 19596 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;  f1              3   12[COMRAM] float 
 19599 ;;  f2              3   15[COMRAM] float 
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;  __ftmul         3   22[COMRAM] unsigned um
 19602 ;;  __ftmul         1   26[COMRAM] unsigned char 
 19603 ;;  __ftmul         1   25[COMRAM] unsigned char 
 19604 ;;  __ftmul         1   21[COMRAM] unsigned char 
 19605 ;; Return value:  Size  Location     Type
 19606 ;;                  3   12[COMRAM] float 
 19607 ;; Registers used:
 19608 ;;		wreg, status,2, status,0, cstack
 19609 ;; Tracked objects:
 19610 ;;		On entry : 0/0
 19611 ;;		On exit  : 0/0
 19612 ;;		Unchanged: 0/0
 19613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19615 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19616 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19617 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19618 ;;Total ram usage:       15 bytes
 19619 ;; Hardware stack levels used:    1
 19620 ;; Hardware stack levels required when called:    1
 19621 ;; This function calls:
 19622 ;;		i2___ftpack
 19623 ;; This function is called by:
 19624 ;;		i2_dec_to_hex
 19625 ;;		i2_pow
 19626 ;;		i2_exp
 19627 ;;		i2_log
 19628 ;;		i2_eval_poly
 19629 ;; This function uses a non-reentrant model
 19630 ;;
 19631                           
 19632                           	psect	text86
 19633  003E32                     __ptext86:
 19634                           	opt stack 0
 19635  003E32                     i2___ftmul:
 19636                           	opt stack 17
 19637                           
 19638                           ;incstack = 0
 19639  003E32  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
 19640  003E36  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 19641  003E38  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 19642  003E3A  340E               	rlcf	i2___ftmul@f1+1,w,c
 19643  003E3C  3613               	rlcf	??i2___ftmul& (0+255),f,c
 19644  003E3E  E301               	bnc	u458_41
 19645  003E40  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19646  003E42                     u458_41:
 19647  003E42  5013               	movf	??i2___ftmul,w,c
 19648  003E44  6E16               	movwf	i2___ftmul@exp,c
 19649  003E46  5016               	movf	i2___ftmul@exp,w,c
 19650  003E48  A4D8               	btfss	status,2,c
 19651  003E4A  D007               	goto	i2l4916
 19652  003E4C  0E00               	movlw	0
 19653  003E4E  6E0D               	movwf	?i2___ftmul,c
 19654  003E50  0E00               	movlw	0
 19655  003E52  6E0E               	movwf	?i2___ftmul+1,c
 19656  003E54  0E00               	movlw	0
 19657  003E56  6E0F               	movwf	?i2___ftmul+2,c
 19658  003E58  0012               	return	
 19659  003E5A                     i2l4916:
 19660  003E5A  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
 19661  003E5E  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 19662  003E60  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 19663  003E62  3411               	rlcf	i2___ftmul@f2+1,w,c
 19664  003E64  3613               	rlcf	??i2___ftmul& (0+255),f,c
 19665  003E66  E301               	bnc	u460_41
 19666  003E68  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19667  003E6A                     u460_41:
 19668  003E6A  5013               	movf	??i2___ftmul,w,c
 19669  003E6C  6E1B               	movwf	i2___ftmul@sign,c
 19670  003E6E  501B               	movf	i2___ftmul@sign,w,c
 19671  003E70  A4D8               	btfss	status,2,c
 19672  003E72  D007               	goto	i2l4922
 19673  003E74  0E00               	movlw	0
 19674  003E76  6E0D               	movwf	?i2___ftmul,c
 19675  003E78  0E00               	movlw	0
 19676  003E7A  6E0E               	movwf	?i2___ftmul+1,c
 19677  003E7C  0E00               	movlw	0
 19678  003E7E  6E0F               	movwf	?i2___ftmul+2,c
 19679  003E80  0012               	return	
 19680  003E82                     i2l4922:
 19681  003E82  501B               	movf	i2___ftmul@sign,w,c
 19682  003E84  0F7B               	addlw	123
 19683  003E86  2616               	addwf	i2___ftmul@exp,f,c
 19684  003E88  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 19685  003E8C  5012               	movf	i2___ftmul@f2+2,w,c
 19686  003E8E  1A1B               	xorwf	i2___ftmul@sign,f,c
 19687  003E90  0E80               	movlw	128
 19688  003E92  161B               	andwf	i2___ftmul@sign,f,c
 19689  003E94  8E0E               	bsf	i2___ftmul@f1+1,7,c
 19690  003E96  8E11               	bsf	i2___ftmul@f2+1,7,c
 19691  003E98  0EFF               	movlw	255
 19692  003E9A  1610               	andwf	i2___ftmul@f2,f,c
 19693  003E9C  0EFF               	movlw	255
 19694  003E9E  1611               	andwf	i2___ftmul@f2+1,f,c
 19695  003EA0  0E00               	movlw	0
 19696  003EA2  1612               	andwf	i2___ftmul@f2+2,f,c
 19697  003EA4  0E00               	movlw	0
 19698  003EA6  6E17               	movwf	i2___ftmul@f3_as_product,c
 19699  003EA8  0E00               	movlw	0
 19700  003EAA  6E18               	movwf	i2___ftmul@f3_as_product+1,c
 19701  003EAC  0E00               	movlw	0
 19702  003EAE  6E19               	movwf	i2___ftmul@f3_as_product+2,c
 19703  003EB0  0E07               	movlw	7
 19704  003EB2  6E1A               	movwf	i2___ftmul@cntr,c
 19705  003EB4                     i2l4936:
 19706  003EB4  A00D               	btfss	i2___ftmul@f1,0,c
 19707  003EB6  D006               	goto	i2l4940
 19708  003EB8  5010               	movf	i2___ftmul@f2,w,c
 19709  003EBA  2617               	addwf	i2___ftmul@f3_as_product,f,c
 19710  003EBC  5011               	movf	i2___ftmul@f2+1,w,c
 19711  003EBE  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19712  003EC0  5012               	movf	i2___ftmul@f2+2,w,c
 19713  003EC2  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19714  003EC4                     i2l4940:
 19715  003EC4  90D8               	bcf	status,0,c
 19716  003EC6  320F               	rrcf	i2___ftmul@f1+2,f,c
 19717  003EC8  320E               	rrcf	i2___ftmul@f1+1,f,c
 19718  003ECA  320D               	rrcf	i2___ftmul@f1,f,c
 19719  003ECC  90D8               	bcf	status,0,c
 19720  003ECE  3610               	rlcf	i2___ftmul@f2,f,c
 19721  003ED0  3611               	rlcf	i2___ftmul@f2+1,f,c
 19722  003ED2  3612               	rlcf	i2___ftmul@f2+2,f,c
 19723  003ED4  2E1A               	decfsz	i2___ftmul@cntr,f,c
 19724  003ED6  D7EE               	goto	i2l4936
 19725  003ED8  0E09               	movlw	9
 19726  003EDA  6E1A               	movwf	i2___ftmul@cntr,c
 19727  003EDC                     i2l4946:
 19728  003EDC  A00D               	btfss	i2___ftmul@f1,0,c
 19729  003EDE  D006               	goto	i2l4950
 19730  003EE0  5010               	movf	i2___ftmul@f2,w,c
 19731  003EE2  2617               	addwf	i2___ftmul@f3_as_product,f,c
 19732  003EE4  5011               	movf	i2___ftmul@f2+1,w,c
 19733  003EE6  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19734  003EE8  5012               	movf	i2___ftmul@f2+2,w,c
 19735  003EEA  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19736  003EEC                     i2l4950:
 19737  003EEC  90D8               	bcf	status,0,c
 19738  003EEE  320F               	rrcf	i2___ftmul@f1+2,f,c
 19739  003EF0  320E               	rrcf	i2___ftmul@f1+1,f,c
 19740  003EF2  320D               	rrcf	i2___ftmul@f1,f,c
 19741  003EF4  90D8               	bcf	status,0,c
 19742  003EF6  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
 19743  003EF8  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
 19744  003EFA  3217               	rrcf	i2___ftmul@f3_as_product,f,c
 19745  003EFC  2E1A               	decfsz	i2___ftmul@cntr,f,c
 19746  003EFE  D7EE               	goto	i2l4946
 19747  003F00  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 19748  003F04  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 19749  003F08  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 19750  003F0C  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 19751  003F10  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 19752  003F14  EC03  F024         	call	i2___ftpack	;wreg free
 19753  003F18  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
 19754  003F1C  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
 19755  003F20  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
 19756  003F24  0012               	return	
 19757  003F26                     __end_ofi2___ftmul:
 19758                           	opt stack 0
 19759                           pclatu	equ	0xFFB
 19760                           pclath	equ	0xFFA
 19761                           tblptru	equ	0xFF8
 19762                           tblptrh	equ	0xFF7
 19763                           tblptrl	equ	0xFF6
 19764                           tablat	equ	0xFF5
 19765                           prodh	equ	0xFF4
 19766                           prodl	equ	0xFF3
 19767                           intcon	equ	0xFF2
 19768                           intcon2	equ	0xFF1
 19769                           intcon3	equ	0xFF0
 19770                           postinc0	equ	0xFEE
 19771                           fsr0h	equ	0xFEA
 19772                           fsr0l	equ	0xFE9
 19773                           wreg	equ	0xFE8
 19774                           postdec1	equ	0xFE5
 19775                           fsr1h	equ	0xFE2
 19776                           fsr1l	equ	0xFE1
 19777                           indf2	equ	0xFDF
 19778                           postinc2	equ	0xFDE
 19779                           postdec2	equ	0xFDD
 19780                           fsr2h	equ	0xFDA
 19781                           fsr2l	equ	0xFD9
 19782                           status	equ	0xFD8
 19783                           
 19784 ;; *************** function i2___ftsub *****************
 19785 ;; Defined at:
 19786 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 19787 ;; Parameters:    Size  Location     Type
 19788 ;;  f1              3   39[COMRAM] float 
 19789 ;;  f2              3   42[COMRAM] float 
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;		None
 19792 ;; Return value:  Size  Location     Type
 19793 ;;                  3   39[COMRAM] float 
 19794 ;; Registers used:
 19795 ;;		wreg, status,2, status,0, cstack
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19801 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19805 ;;Total ram usage:        6 bytes
 19806 ;; Hardware stack levels used:    1
 19807 ;; Hardware stack levels required when called:    2
 19808 ;; This function calls:
 19809 ;;		i2___ftadd
 19810 ;; This function is called by:
 19811 ;;		i2_exp
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           	psect	text87
 19816  005174                     __ptext87:
 19817                           	opt stack 0
 19818  005174                     i2___ftsub:
 19819                           	opt stack 17
 19820                           
 19821                           ;incstack = 0
 19822  005174  502B               	movf	i2___ftsub@f2,w,c
 19823  005176  102C               	iorwf	i2___ftsub@f2+1,w,c
 19824  005178  102D               	iorwf	i2___ftsub@f2+2,w,c
 19825  00517A  B4D8               	btfsc	status,2,c
 19826  00517C  D006               	goto	i2l5188
 19827  00517E  0E00               	movlw	0
 19828  005180  1A2B               	xorwf	i2___ftsub@f2,f,c
 19829  005182  0E00               	movlw	0
 19830  005184  1A2C               	xorwf	i2___ftsub@f2+1,f,c
 19831  005186  0E80               	movlw	128
 19832  005188  1A2D               	xorwf	i2___ftsub@f2+2,f,c
 19833  00518A                     i2l5188:
 19834  00518A  C028  F01C         	movff	i2___ftsub@f1,i2___ftadd@f1
 19835  00518E  C029  F01D         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 19836  005192  C02A  F01E         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 19837  005196  C02B  F01F         	movff	i2___ftsub@f2,i2___ftadd@f2
 19838  00519A  C02C  F020         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 19839  00519E  C02D  F021         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 19840  0051A2  ECC2  F013         	call	i2___ftadd	;wreg free
 19841  0051A6  C01C  F028         	movff	?i2___ftadd,?i2___ftsub
 19842  0051AA  C01D  F029         	movff	?i2___ftadd+1,?i2___ftsub+1
 19843  0051AE  C01E  F02A         	movff	?i2___ftadd+2,?i2___ftsub+2
 19844  0051B2  0012               	return	
 19845  0051B4                     __end_ofi2___ftsub:
 19846                           	opt stack 0
 19847                           pclatu	equ	0xFFB
 19848                           pclath	equ	0xFFA
 19849                           tblptru	equ	0xFF8
 19850                           tblptrh	equ	0xFF7
 19851                           tblptrl	equ	0xFF6
 19852                           tablat	equ	0xFF5
 19853                           prodh	equ	0xFF4
 19854                           prodl	equ	0xFF3
 19855                           intcon	equ	0xFF2
 19856                           intcon2	equ	0xFF1
 19857                           intcon3	equ	0xFF0
 19858                           postinc0	equ	0xFEE
 19859                           fsr0h	equ	0xFEA
 19860                           fsr0l	equ	0xFE9
 19861                           wreg	equ	0xFE8
 19862                           postdec1	equ	0xFE5
 19863                           fsr1h	equ	0xFE2
 19864                           fsr1l	equ	0xFE1
 19865                           indf2	equ	0xFDF
 19866                           postinc2	equ	0xFDE
 19867                           postdec2	equ	0xFDD
 19868                           fsr2h	equ	0xFDA
 19869                           fsr2l	equ	0xFD9
 19870                           status	equ	0xFD8
 19871                           
 19872 ;; *************** function i2___ftadd *****************
 19873 ;; Defined at:
 19874 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;  f1              3   27[COMRAM] float 
 19877 ;;  f2              3   30[COMRAM] float 
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;  __ftadd         1   38[COMRAM] unsigned char 
 19880 ;;  __ftadd         1   37[COMRAM] unsigned char 
 19881 ;;  __ftadd         1   36[COMRAM] unsigned char 
 19882 ;; Return value:  Size  Location     Type
 19883 ;;                  3   27[COMRAM] float 
 19884 ;; Registers used:
 19885 ;;		wreg, status,2, status,0, cstack
 19886 ;; Tracked objects:
 19887 ;;		On entry : 0/0
 19888 ;;		On exit  : 0/0
 19889 ;;		Unchanged: 0/0
 19890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19891 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19892 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19893 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;Total ram usage:       12 bytes
 19896 ;; Hardware stack levels used:    1
 19897 ;; Hardware stack levels required when called:    1
 19898 ;; This function calls:
 19899 ;;		i2___ftpack
 19900 ;; This function is called by:
 19901 ;;		i2_dec_to_hex
 19902 ;;		i2___ftsub
 19903 ;;		i2_floor
 19904 ;;		i2_log
 19905 ;;		i2_eval_poly
 19906 ;; This function uses a non-reentrant model
 19907 ;;
 19908                           
 19909                           	psect	text88
 19910  002784                     __ptext88:
 19911                           	opt stack 0
 19912  002784                     i2___ftadd:
 19913                           	opt stack 17
 19914                           
 19915                           ;incstack = 0
 19916  002784  C01E  F022         	movff	i2___ftadd@f1+2,??i2___ftadd
 19917  002788  6A23               	clrf	(??i2___ftadd+1)& (0+255),c
 19918  00278A  6A24               	clrf	(??i2___ftadd+2)& (0+255),c
 19919  00278C  341D               	rlcf	i2___ftadd@f1+1,w,c
 19920  00278E  3622               	rlcf	??i2___ftadd& (0+255),f,c
 19921  002790  E301               	bnc	u434_41
 19922  002792  8023               	bsf	(??i2___ftadd+1)& (0+255),0,c
 19923  002794                     u434_41:
 19924  002794  5022               	movf	??i2___ftadd,w,c
 19925  002796  6E27               	movwf	i2___ftadd@exp1,c
 19926  002798  C021  F022         	movff	i2___ftadd@f2+2,??i2___ftadd
 19927  00279C  6A23               	clrf	(??i2___ftadd+1)& (0+255),c
 19928  00279E  6A24               	clrf	(??i2___ftadd+2)& (0+255),c
 19929  0027A0  3420               	rlcf	i2___ftadd@f2+1,w,c
 19930  0027A2  3622               	rlcf	??i2___ftadd& (0+255),f,c
 19931  0027A4  E301               	bnc	u435_41
 19932  0027A6  8023               	bsf	(??i2___ftadd+1)& (0+255),0,c
 19933  0027A8                     u435_41:
 19934  0027A8  5022               	movf	??i2___ftadd,w,c
 19935  0027AA  6E26               	movwf	i2___ftadd@exp2,c
 19936  0027AC  5027               	movf	i2___ftadd@exp1,w,c
 19937  0027AE  B4D8               	btfsc	status,2,c
 19938  0027B0  D00B               	goto	i2l922
 19939  0027B2  5026               	movf	i2___ftadd@exp2,w,c
 19940  0027B4  5C27               	subwf	i2___ftadd@exp1,w,c
 19941  0027B6  B0D8               	btfsc	status,0,c
 19942  0027B8  D00E               	goto	i2l4830
 19943  0027BA  5027               	movf	i2___ftadd@exp1,w,c
 19944  0027BC  0800               	sublw	0
 19945  0027BE  2426               	addwf	i2___ftadd@exp2,w,c
 19946  0027C0  6E22               	movwf	??i2___ftadd& (0+255),c
 19947  0027C2  0E18               	movlw	24
 19948  0027C4  6422               	cpfsgt	??i2___ftadd,c
 19949  0027C6  D007               	goto	i2l4830
 19950  0027C8                     i2l922:
 19951  0027C8  C01F  F01C         	movff	i2___ftadd@f2,?i2___ftadd
 19952  0027CC  C020  F01D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 19953  0027D0  C021  F01E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 19954  0027D4  0012               	return	
 19955  0027D6                     i2l4830:
 19956  0027D6  5026               	movf	i2___ftadd@exp2,w,c
 19957  0027D8  B4D8               	btfsc	status,2,c
 19958  0027DA  D00B               	goto	i2l926
 19959  0027DC  5027               	movf	i2___ftadd@exp1,w,c
 19960  0027DE  5C26               	subwf	i2___ftadd@exp2,w,c
 19961  0027E0  B0D8               	btfsc	status,0,c
 19962  0027E2  D00E               	goto	i2l4836
 19963  0027E4  5026               	movf	i2___ftadd@exp2,w,c
 19964  0027E6  0800               	sublw	0
 19965  0027E8  2427               	addwf	i2___ftadd@exp1,w,c
 19966  0027EA  6E22               	movwf	??i2___ftadd& (0+255),c
 19967  0027EC  0E18               	movlw	24
 19968  0027EE  6422               	cpfsgt	??i2___ftadd,c
 19969  0027F0  D007               	goto	i2l4836
 19970  0027F2                     i2l926:
 19971  0027F2  C01C  F01C         	movff	i2___ftadd@f1,?i2___ftadd
 19972  0027F6  C01D  F01D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 19973  0027FA  C01E  F01E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 19974  0027FE  0012               	return	
 19975  002800                     i2l4836:
 19976  002800  0E06               	movlw	6
 19977  002802  6E25               	movwf	i2___ftadd@sign,c
 19978  002804  BE1E               	btfsc	i2___ftadd@f1+2,7,c
 19979  002806  8E25               	bsf	i2___ftadd@sign,7,c
 19980  002808  BE21               	btfsc	i2___ftadd@f2+2,7,c
 19981  00280A  8C25               	bsf	i2___ftadd@sign,6,c
 19982  00280C  8E1D               	bsf	i2___ftadd@f1+1,7,c
 19983  00280E  0EFF               	movlw	255
 19984  002810  161C               	andwf	i2___ftadd@f1,f,c
 19985  002812  0EFF               	movlw	255
 19986  002814  161D               	andwf	i2___ftadd@f1+1,f,c
 19987  002816  0E00               	movlw	0
 19988  002818  161E               	andwf	i2___ftadd@f1+2,f,c
 19989  00281A  8E20               	bsf	i2___ftadd@f2+1,7,c
 19990  00281C  0EFF               	movlw	255
 19991  00281E  161F               	andwf	i2___ftadd@f2,f,c
 19992  002820  0EFF               	movlw	255
 19993  002822  1620               	andwf	i2___ftadd@f2+1,f,c
 19994  002824  0E00               	movlw	0
 19995  002826  1621               	andwf	i2___ftadd@f2+2,f,c
 19996  002828  5026               	movf	i2___ftadd@exp2,w,c
 19997  00282A  5C27               	subwf	i2___ftadd@exp1,w,c
 19998  00282C  B0D8               	btfsc	status,0,c
 19999  00282E  D01B               	goto	i2l4862
 20000  002830                     i2l4852:
 20001  002830  90D8               	bcf	status,0,c
 20002  002832  361F               	rlcf	i2___ftadd@f2,f,c
 20003  002834  3620               	rlcf	i2___ftadd@f2+1,f,c
 20004  002836  3621               	rlcf	i2___ftadd@f2+2,f,c
 20005  002838  0626               	decf	i2___ftadd@exp2,f,c
 20006  00283A  5027               	movf	i2___ftadd@exp1,w,c
 20007  00283C  1826               	xorwf	i2___ftadd@exp2,w,c
 20008  00283E  B4D8               	btfsc	status,2,c
 20009  002840  D00D               	goto	i2l4860
 20010  002842  0625               	decf	i2___ftadd@sign,f,c
 20011  002844  C025  F022         	movff	i2___ftadd@sign,??i2___ftadd
 20012  002848  0E07               	movlw	7
 20013  00284A  1622               	andwf	??i2___ftadd,f,c
 20014  00284C  B4D8               	btfsc	status,2,c
 20015  00284E  D006               	goto	i2l4860
 20016  002850  D7EF               	goto	i2l4852
 20017  002852                     i2l4858:
 20018  002852  90D8               	bcf	status,0,c
 20019  002854  321E               	rrcf	i2___ftadd@f1+2,f,c
 20020  002856  321D               	rrcf	i2___ftadd@f1+1,f,c
 20021  002858  321C               	rrcf	i2___ftadd@f1,f,c
 20022  00285A  2A27               	incf	i2___ftadd@exp1,f,c
 20023  00285C                     i2l4860:
 20024  00285C  5026               	movf	i2___ftadd@exp2,w,c
 20025  00285E  1827               	xorwf	i2___ftadd@exp1,w,c
 20026  002860  B4D8               	btfsc	status,2,c
 20027  002862  D01F               	goto	i2l937
 20028  002864  D7F6               	goto	i2l4858
 20029  002866                     i2l4862:
 20030  002866  5027               	movf	i2___ftadd@exp1,w,c
 20031  002868  5C26               	subwf	i2___ftadd@exp2,w,c
 20032  00286A  B0D8               	btfsc	status,0,c
 20033  00286C  D01A               	goto	i2l937
 20034  00286E                     i2l4864:
 20035  00286E  90D8               	bcf	status,0,c
 20036  002870  361C               	rlcf	i2___ftadd@f1,f,c
 20037  002872  361D               	rlcf	i2___ftadd@f1+1,f,c
 20038  002874  361E               	rlcf	i2___ftadd@f1+2,f,c
 20039  002876  0627               	decf	i2___ftadd@exp1,f,c
 20040  002878  5027               	movf	i2___ftadd@exp1,w,c
 20041  00287A  1826               	xorwf	i2___ftadd@exp2,w,c
 20042  00287C  B4D8               	btfsc	status,2,c
 20043  00287E  D00D               	goto	i2l4872
 20044  002880  0625               	decf	i2___ftadd@sign,f,c
 20045  002882  C025  F022         	movff	i2___ftadd@sign,??i2___ftadd
 20046  002886  0E07               	movlw	7
 20047  002888  1622               	andwf	??i2___ftadd,f,c
 20048  00288A  B4D8               	btfsc	status,2,c
 20049  00288C  D006               	goto	i2l4872
 20050  00288E  D7EF               	goto	i2l4864
 20051  002890                     i2l4870:
 20052  002890  90D8               	bcf	status,0,c
 20053  002892  3221               	rrcf	i2___ftadd@f2+2,f,c
 20054  002894  3220               	rrcf	i2___ftadd@f2+1,f,c
 20055  002896  321F               	rrcf	i2___ftadd@f2,f,c
 20056  002898  2A26               	incf	i2___ftadd@exp2,f,c
 20057  00289A                     i2l4872:
 20058  00289A  5026               	movf	i2___ftadd@exp2,w,c
 20059  00289C  1827               	xorwf	i2___ftadd@exp1,w,c
 20060  00289E  A4D8               	btfss	status,2,c
 20061  0028A0  D7F7               	goto	i2l4870
 20062  0028A2                     i2l937:
 20063  0028A2  AE25               	btfss	i2___ftadd@sign,7,c
 20064  0028A4  D00C               	goto	i2l946
 20065  0028A6  0EFF               	movlw	255
 20066  0028A8  1A1C               	xorwf	i2___ftadd@f1,f,c
 20067  0028AA  0EFF               	movlw	255
 20068  0028AC  1A1D               	xorwf	i2___ftadd@f1+1,f,c
 20069  0028AE  0EFF               	movlw	255
 20070  0028B0  1A1E               	xorwf	i2___ftadd@f1+2,f,c
 20071  0028B2  0E01               	movlw	1
 20072  0028B4  261C               	addwf	i2___ftadd@f1,f,c
 20073  0028B6  0E00               	movlw	0
 20074  0028B8  221D               	addwfc	i2___ftadd@f1+1,f,c
 20075  0028BA  0E00               	movlw	0
 20076  0028BC  221E               	addwfc	i2___ftadd@f1+2,f,c
 20077  0028BE                     i2l946:
 20078  0028BE  AC25               	btfss	i2___ftadd@sign,6,c
 20079  0028C0  D00C               	goto	i2l4878
 20080  0028C2  0EFF               	movlw	255
 20081  0028C4  1A1F               	xorwf	i2___ftadd@f2,f,c
 20082  0028C6  0EFF               	movlw	255
 20083  0028C8  1A20               	xorwf	i2___ftadd@f2+1,f,c
 20084  0028CA  0EFF               	movlw	255
 20085  0028CC  1A21               	xorwf	i2___ftadd@f2+2,f,c
 20086  0028CE  0E01               	movlw	1
 20087  0028D0  261F               	addwf	i2___ftadd@f2,f,c
 20088  0028D2  0E00               	movlw	0
 20089  0028D4  2220               	addwfc	i2___ftadd@f2+1,f,c
 20090  0028D6  0E00               	movlw	0
 20091  0028D8  2221               	addwfc	i2___ftadd@f2+2,f,c
 20092  0028DA                     i2l4878:
 20093  0028DA  0E00               	movlw	0
 20094  0028DC  6E25               	movwf	i2___ftadd@sign,c
 20095  0028DE  501C               	movf	i2___ftadd@f1,w,c
 20096  0028E0  261F               	addwf	i2___ftadd@f2,f,c
 20097  0028E2  501D               	movf	i2___ftadd@f1+1,w,c
 20098  0028E4  2220               	addwfc	i2___ftadd@f2+1,f,c
 20099  0028E6  501E               	movf	i2___ftadd@f1+2,w,c
 20100  0028E8  2221               	addwfc	i2___ftadd@f2+2,f,c
 20101  0028EA  AE21               	btfss	i2___ftadd@f2+2,7,c
 20102  0028EC  D00E               	goto	i2l4888
 20103  0028EE  0EFF               	movlw	255
 20104  0028F0  1A1F               	xorwf	i2___ftadd@f2,f,c
 20105  0028F2  0EFF               	movlw	255
 20106  0028F4  1A20               	xorwf	i2___ftadd@f2+1,f,c
 20107  0028F6  0EFF               	movlw	255
 20108  0028F8  1A21               	xorwf	i2___ftadd@f2+2,f,c
 20109  0028FA  0E01               	movlw	1
 20110  0028FC  261F               	addwf	i2___ftadd@f2,f,c
 20111  0028FE  0E00               	movlw	0
 20112  002900  2220               	addwfc	i2___ftadd@f2+1,f,c
 20113  002902  0E00               	movlw	0
 20114  002904  2221               	addwfc	i2___ftadd@f2+2,f,c
 20115  002906  0E01               	movlw	1
 20116  002908  6E25               	movwf	i2___ftadd@sign,c
 20117  00290A                     i2l4888:
 20118  00290A  C01F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 20119  00290E  C020  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 20120  002912  C021  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 20121  002916  C027  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 20122  00291A  C025  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 20123  00291E  EC03  F024         	call	i2___ftpack	;wreg free
 20124  002922  C001  F01C         	movff	?i2___ftpack,?i2___ftadd
 20125  002926  C002  F01D         	movff	?i2___ftpack+1,?i2___ftadd+1
 20126  00292A  C003  F01E         	movff	?i2___ftpack+2,?i2___ftadd+2
 20127  00292E  0012               	return	
 20128  002930                     __end_ofi2___ftadd:
 20129                           	opt stack 0
 20130                           pclatu	equ	0xFFB
 20131                           pclath	equ	0xFFA
 20132                           tblptru	equ	0xFF8
 20133                           tblptrh	equ	0xFF7
 20134                           tblptrl	equ	0xFF6
 20135                           tablat	equ	0xFF5
 20136                           prodh	equ	0xFF4
 20137                           prodl	equ	0xFF3
 20138                           intcon	equ	0xFF2
 20139                           intcon2	equ	0xFF1
 20140                           intcon3	equ	0xFF0
 20141                           postinc0	equ	0xFEE
 20142                           fsr0h	equ	0xFEA
 20143                           fsr0l	equ	0xFE9
 20144                           wreg	equ	0xFE8
 20145                           postdec1	equ	0xFE5
 20146                           fsr1h	equ	0xFE2
 20147                           fsr1l	equ	0xFE1
 20148                           indf2	equ	0xFDF
 20149                           postinc2	equ	0xFDE
 20150                           postdec2	equ	0xFDD
 20151                           fsr2h	equ	0xFDA
 20152                           fsr2l	equ	0xFD9
 20153                           status	equ	0xFD8
 20154                           
 20155 ;; *************** function i2___ftneg *****************
 20156 ;; Defined at:
 20157 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 20158 ;; Parameters:    Size  Location     Type
 20159 ;;  f1              3    0[COMRAM] float 
 20160 ;; Auto vars:     Size  Location     Type
 20161 ;;		None
 20162 ;; Return value:  Size  Location     Type
 20163 ;;                  3    0[COMRAM] float 
 20164 ;; Registers used:
 20165 ;;		wreg, status,2, status,0
 20166 ;; Tracked objects:
 20167 ;;		On entry : 0/0
 20168 ;;		On exit  : 0/0
 20169 ;;		Unchanged: 0/0
 20170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20175 ;;Total ram usage:        3 bytes
 20176 ;; Hardware stack levels used:    1
 20177 ;; This function calls:
 20178 ;;		Nothing
 20179 ;; This function is called by:
 20180 ;;		i2_pow
 20181 ;;		i2_exp
 20182 ;; This function uses a non-reentrant model
 20183 ;;
 20184                           
 20185                           	psect	text89
 20186  0053DE                     __ptext89:
 20187                           	opt stack 0
 20188  0053DE                     i2___ftneg:
 20189                           	opt stack 19
 20190                           
 20191                           ;incstack = 0
 20192  0053DE  5001               	movf	i2___ftneg@f1,w,c
 20193  0053E0  1002               	iorwf	i2___ftneg@f1+1,w,c
 20194  0053E2  1003               	iorwf	i2___ftneg@f1+2,w,c
 20195  0053E4  B4D8               	btfsc	status,2,c
 20196  0053E6  D006               	goto	i2l979
 20197  0053E8  0E00               	movlw	0
 20198  0053EA  1A01               	xorwf	i2___ftneg@f1,f,c
 20199  0053EC  0E00               	movlw	0
 20200  0053EE  1A02               	xorwf	i2___ftneg@f1+1,f,c
 20201  0053F0  0E80               	movlw	128
 20202  0053F2  1A03               	xorwf	i2___ftneg@f1+2,f,c
 20203  0053F4                     i2l979:
 20204  0053F4  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 20205  0053F8  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 20206  0053FC  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 20207  005400  0012               	return		;funcret
 20208  005402                     __end_ofi2___ftneg:
 20209                           	opt stack 0
 20210                           pclatu	equ	0xFFB
 20211                           pclath	equ	0xFFA
 20212                           tblptru	equ	0xFF8
 20213                           tblptrh	equ	0xFF7
 20214                           tblptrl	equ	0xFF6
 20215                           tablat	equ	0xFF5
 20216                           prodh	equ	0xFF4
 20217                           prodl	equ	0xFF3
 20218                           intcon	equ	0xFF2
 20219                           intcon2	equ	0xFF1
 20220                           intcon3	equ	0xFF0
 20221                           postinc0	equ	0xFEE
 20222                           fsr0h	equ	0xFEA
 20223                           fsr0l	equ	0xFE9
 20224                           wreg	equ	0xFE8
 20225                           postdec1	equ	0xFE5
 20226                           fsr1h	equ	0xFE2
 20227                           fsr1l	equ	0xFE1
 20228                           indf2	equ	0xFDF
 20229                           postinc2	equ	0xFDE
 20230                           postdec2	equ	0xFDD
 20231                           fsr2h	equ	0xFDA
 20232                           fsr2l	equ	0xFD9
 20233                           status	equ	0xFD8
 20234                           
 20235 ;; *************** function i2___ftdiv *****************
 20236 ;; Defined at:
 20237 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
 20238 ;; Parameters:    Size  Location     Type
 20239 ;;  f1              3    8[COMRAM] float 
 20240 ;;  f2              3   11[COMRAM] float 
 20241 ;; Auto vars:     Size  Location     Type
 20242 ;;  __ftdiv         3   18[COMRAM] float 
 20243 ;;  __ftdiv         1   22[COMRAM] unsigned char 
 20244 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 20245 ;;  __ftdiv         1   17[COMRAM] unsigned char 
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  3    8[COMRAM] float 
 20248 ;; Registers used:
 20249 ;;		wreg, status,2, status,0, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20255 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20256 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20257 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20258 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20259 ;;Total ram usage:       15 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:    1
 20262 ;; This function calls:
 20263 ;;		i2___ftpack
 20264 ;; This function is called by:
 20265 ;;		i2_exp
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text90
 20270  004012                     __ptext90:
 20271                           	opt stack 0
 20272  004012                     i2___ftdiv:
 20273                           	opt stack 18
 20274                           
 20275                           ;incstack = 0
 20276  004012  C00B  F00F         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 20277  004016  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 20278  004018  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 20279  00401A  340A               	rlcf	i2___ftdiv@f1+1,w,c
 20280  00401C  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 20281  00401E  E301               	bnc	u488_41
 20282  004020  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 20283  004022                     u488_41:
 20284  004022  500F               	movf	??i2___ftdiv,w,c
 20285  004024  6E16               	movwf	i2___ftdiv@exp,c
 20286  004026  5016               	movf	i2___ftdiv@exp,w,c
 20287  004028  A4D8               	btfss	status,2,c
 20288  00402A  D007               	goto	i2l5140
 20289  00402C  0E00               	movlw	0
 20290  00402E  6E09               	movwf	?i2___ftdiv,c
 20291  004030  0E00               	movlw	0
 20292  004032  6E0A               	movwf	?i2___ftdiv+1,c
 20293  004034  0E00               	movlw	0
 20294  004036  6E0B               	movwf	?i2___ftdiv+2,c
 20295  004038  0012               	return	
 20296  00403A                     i2l5140:
 20297  00403A  C00E  F00F         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 20298  00403E  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 20299  004040  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 20300  004042  340D               	rlcf	i2___ftdiv@f2+1,w,c
 20301  004044  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 20302  004046  E301               	bnc	u490_41
 20303  004048  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 20304  00404A                     u490_41:
 20305  00404A  500F               	movf	??i2___ftdiv,w,c
 20306  00404C  6E17               	movwf	i2___ftdiv@sign,c
 20307  00404E  5017               	movf	i2___ftdiv@sign,w,c
 20308  004050  A4D8               	btfss	status,2,c
 20309  004052  D007               	goto	i2l5146
 20310  004054  0E00               	movlw	0
 20311  004056  6E09               	movwf	?i2___ftdiv,c
 20312  004058  0E00               	movlw	0
 20313  00405A  6E0A               	movwf	?i2___ftdiv+1,c
 20314  00405C  0E00               	movlw	0
 20315  00405E  6E0B               	movwf	?i2___ftdiv+2,c
 20316  004060  0012               	return	
 20317  004062                     i2l5146:
 20318  004062  0E00               	movlw	0
 20319  004064  6E13               	movwf	i2___ftdiv@f3,c
 20320  004066  0E00               	movlw	0
 20321  004068  6E14               	movwf	i2___ftdiv@f3+1,c
 20322  00406A  0E00               	movlw	0
 20323  00406C  6E15               	movwf	i2___ftdiv@f3+2,c
 20324  00406E  5017               	movf	i2___ftdiv@sign,w,c
 20325  004070  0F89               	addlw	137
 20326  004072  5E16               	subwf	i2___ftdiv@exp,f,c
 20327  004074  C00B  F017         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 20328  004078  500E               	movf	i2___ftdiv@f2+2,w,c
 20329  00407A  1A17               	xorwf	i2___ftdiv@sign,f,c
 20330  00407C  0E80               	movlw	128
 20331  00407E  1617               	andwf	i2___ftdiv@sign,f,c
 20332  004080  8E0A               	bsf	i2___ftdiv@f1+1,7,c
 20333  004082  0EFF               	movlw	255
 20334  004084  1609               	andwf	i2___ftdiv@f1,f,c
 20335  004086  0EFF               	movlw	255
 20336  004088  160A               	andwf	i2___ftdiv@f1+1,f,c
 20337  00408A  0E00               	movlw	0
 20338  00408C  160B               	andwf	i2___ftdiv@f1+2,f,c
 20339  00408E  8E0D               	bsf	i2___ftdiv@f2+1,7,c
 20340  004090  0EFF               	movlw	255
 20341  004092  160C               	andwf	i2___ftdiv@f2,f,c
 20342  004094  0EFF               	movlw	255
 20343  004096  160D               	andwf	i2___ftdiv@f2+1,f,c
 20344  004098  0E00               	movlw	0
 20345  00409A  160E               	andwf	i2___ftdiv@f2+2,f,c
 20346  00409C  0E18               	movlw	24
 20347  00409E  6E12               	movwf	i2___ftdiv@cntr,c
 20348  0040A0                     i2l5166:
 20349  0040A0  90D8               	bcf	status,0,c
 20350  0040A2  3613               	rlcf	i2___ftdiv@f3,f,c
 20351  0040A4  3614               	rlcf	i2___ftdiv@f3+1,f,c
 20352  0040A6  3615               	rlcf	i2___ftdiv@f3+2,f,c
 20353  0040A8  500C               	movf	i2___ftdiv@f2,w,c
 20354  0040AA  5C09               	subwf	i2___ftdiv@f1,w,c
 20355  0040AC  500D               	movf	i2___ftdiv@f2+1,w,c
 20356  0040AE  580A               	subwfb	i2___ftdiv@f1+1,w,c
 20357  0040B0  500E               	movf	i2___ftdiv@f2+2,w,c
 20358  0040B2  580B               	subwfb	i2___ftdiv@f1+2,w,c
 20359  0040B4  A0D8               	btfss	status,0,c
 20360  0040B6  D007               	goto	i2l957
 20361  0040B8  500C               	movf	i2___ftdiv@f2,w,c
 20362  0040BA  5E09               	subwf	i2___ftdiv@f1,f,c
 20363  0040BC  500D               	movf	i2___ftdiv@f2+1,w,c
 20364  0040BE  5A0A               	subwfb	i2___ftdiv@f1+1,f,c
 20365  0040C0  500E               	movf	i2___ftdiv@f2+2,w,c
 20366  0040C2  5A0B               	subwfb	i2___ftdiv@f1+2,f,c
 20367  0040C4  8013               	bsf	i2___ftdiv@f3,0,c
 20368  0040C6                     i2l957:
 20369  0040C6  90D8               	bcf	status,0,c
 20370  0040C8  3609               	rlcf	i2___ftdiv@f1,f,c
 20371  0040CA  360A               	rlcf	i2___ftdiv@f1+1,f,c
 20372  0040CC  360B               	rlcf	i2___ftdiv@f1+2,f,c
 20373  0040CE  2E12               	decfsz	i2___ftdiv@cntr,f,c
 20374  0040D0  D7E7               	goto	i2l5166
 20375  0040D2  C013  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 20376  0040D6  C014  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 20377  0040DA  C015  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 20378  0040DE  C016  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 20379  0040E2  C017  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 20380  0040E6  EC03  F024         	call	i2___ftpack	;wreg free
 20381  0040EA  C001  F009         	movff	?i2___ftpack,?i2___ftdiv
 20382  0040EE  C002  F00A         	movff	?i2___ftpack+1,?i2___ftdiv+1
 20383  0040F2  C003  F00B         	movff	?i2___ftpack+2,?i2___ftdiv+2
 20384  0040F6  0012               	return	
 20385  0040F8                     __end_ofi2___ftdiv:
 20386                           	opt stack 0
 20387                           pclatu	equ	0xFFB
 20388                           pclath	equ	0xFFA
 20389                           tblptru	equ	0xFF8
 20390                           tblptrh	equ	0xFF7
 20391                           tblptrl	equ	0xFF6
 20392                           tablat	equ	0xFF5
 20393                           prodh	equ	0xFF4
 20394                           prodl	equ	0xFF3
 20395                           intcon	equ	0xFF2
 20396                           intcon2	equ	0xFF1
 20397                           intcon3	equ	0xFF0
 20398                           postinc0	equ	0xFEE
 20399                           fsr0h	equ	0xFEA
 20400                           fsr0l	equ	0xFE9
 20401                           wreg	equ	0xFE8
 20402                           postdec1	equ	0xFE5
 20403                           fsr1h	equ	0xFE2
 20404                           fsr1l	equ	0xFE1
 20405                           indf2	equ	0xFDF
 20406                           postinc2	equ	0xFDE
 20407                           postdec2	equ	0xFDD
 20408                           fsr2h	equ	0xFDA
 20409                           fsr2l	equ	0xFD9
 20410                           status	equ	0xFD8
 20411                           
 20412 ;; *************** function i2___awtoft *****************
 20413 ;; Defined at:
 20414 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
 20415 ;; Parameters:    Size  Location     Type
 20416 ;;  c               2    8[COMRAM] int 
 20417 ;; Auto vars:     Size  Location     Type
 20418 ;;  __awtoft        1   11[COMRAM] unsigned char 
 20419 ;; Return value:  Size  Location     Type
 20420 ;;                  3    8[COMRAM] float 
 20421 ;; Registers used:
 20422 ;;		wreg, status,2, status,0, cstack
 20423 ;; Tracked objects:
 20424 ;;		On entry : 0/0
 20425 ;;		On exit  : 0/0
 20426 ;;		Unchanged: 0/0
 20427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20432 ;;Total ram usage:        4 bytes
 20433 ;; Hardware stack levels used:    1
 20434 ;; Hardware stack levels required when called:    1
 20435 ;; This function calls:
 20436 ;;		i2___ftpack
 20437 ;; This function is called by:
 20438 ;;		i2_dec_to_hex
 20439 ;;		i2_exp
 20440 ;;		i2_log
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text91
 20445  0051EE                     __ptext91:
 20446                           	opt stack 0
 20447  0051EE                     i2___awtoft:
 20448                           	opt stack 18
 20449                           
 20450                           ;incstack = 0
 20451  0051EE  0E00               	movlw	0
 20452  0051F0  6E0C               	movwf	i2___awtoft@sign,c
 20453  0051F2  AE0A               	btfss	i2___awtoft@c+1,7,c
 20454  0051F4  D006               	goto	i2l5130
 20455  0051F6  6C09               	negf	i2___awtoft@c,c
 20456  0051F8  1E0A               	comf	i2___awtoft@c+1,f,c
 20457  0051FA  B0D8               	btfsc	status,0,c
 20458  0051FC  2A0A               	incf	i2___awtoft@c+1,f,c
 20459  0051FE  0E01               	movlw	1
 20460  005200  6E0C               	movwf	i2___awtoft@sign,c
 20461  005202                     i2l5130:
 20462  005202  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 20463  005206  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 20464  00520A  6A03               	clrf	i2___ftpack@arg+2,c
 20465  00520C  0E8E               	movlw	142
 20466  00520E  6E04               	movwf	i2___ftpack@exp,c
 20467  005210  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 20468  005214  EC03  F024         	call	i2___ftpack	;wreg free
 20469  005218  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 20470  00521C  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 20471  005220  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 20472  005224  0012               	return	
 20473  005226                     __end_ofi2___awtoft:
 20474                           	opt stack 0
 20475                           pclatu	equ	0xFFB
 20476                           pclath	equ	0xFFA
 20477                           tblptru	equ	0xFF8
 20478                           tblptrh	equ	0xFF7
 20479                           tblptrl	equ	0xFF6
 20480                           tablat	equ	0xFF5
 20481                           prodh	equ	0xFF4
 20482                           prodl	equ	0xFF3
 20483                           intcon	equ	0xFF2
 20484                           intcon2	equ	0xFF1
 20485                           intcon3	equ	0xFF0
 20486                           postinc0	equ	0xFEE
 20487                           fsr0h	equ	0xFEA
 20488                           fsr0l	equ	0xFE9
 20489                           wreg	equ	0xFE8
 20490                           postdec1	equ	0xFE5
 20491                           fsr1h	equ	0xFE2
 20492                           fsr1l	equ	0xFE1
 20493                           indf2	equ	0xFDF
 20494                           postinc2	equ	0xFDE
 20495                           postdec2	equ	0xFDD
 20496                           fsr2h	equ	0xFDA
 20497                           fsr2l	equ	0xFD9
 20498                           status	equ	0xFD8
 20499                           
 20500 ;; *************** function i2___lltoft *****************
 20501 ;; Defined at:
 20502 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;  c               4    8[COMRAM] unsigned long 
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;  __lltoft        1   16[COMRAM] unsigned char 
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  3    8[COMRAM] float 
 20509 ;; Registers used:
 20510 ;;		wreg, status,2, status,0, cstack
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20519 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;Total ram usage:        9 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:    1
 20523 ;; This function calls:
 20524 ;;		i2___ftpack
 20525 ;; This function is called by:
 20526 ;;		i2_pow
 20527 ;; This function uses a non-reentrant model
 20528 ;;
 20529                           
 20530                           	psect	text92
 20531  004F04                     __ptext92:
 20532                           	opt stack 0
 20533  004F04                     i2___lltoft:
 20534                           	opt stack 19
 20535                           
 20536                           ;incstack = 0
 20537  004F04  0E8E               	movlw	142
 20538  004F06  6E11               	movwf	i2___lltoft@exp,c
 20539  004F08  D006               	goto	i2l5476
 20540  004F0A                     i2l5474:
 20541  004F0A  90D8               	bcf	status,0,c
 20542  004F0C  320C               	rrcf	i2___lltoft@c+3,f,c
 20543  004F0E  320B               	rrcf	i2___lltoft@c+2,f,c
 20544  004F10  320A               	rrcf	i2___lltoft@c+1,f,c
 20545  004F12  3209               	rrcf	i2___lltoft@c,f,c
 20546  004F14  2A11               	incf	i2___lltoft@exp,f,c
 20547  004F16                     i2l5476:
 20548  004F16  0E00               	movlw	0
 20549  004F18  1409               	andwf	i2___lltoft@c,w,c
 20550  004F1A  6E0D               	movwf	??i2___lltoft& (0+255),c
 20551  004F1C  0E00               	movlw	0
 20552  004F1E  140A               	andwf	i2___lltoft@c+1,w,c
 20553  004F20  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 20554  004F22  0E00               	movlw	0
 20555  004F24  140B               	andwf	i2___lltoft@c+2,w,c
 20556  004F26  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 20557  004F28  0EFF               	movlw	255
 20558  004F2A  140C               	andwf	i2___lltoft@c+3,w,c
 20559  004F2C  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 20560  004F2E  500D               	movf	??i2___lltoft,w,c
 20561  004F30  100E               	iorwf	??i2___lltoft+1,w,c
 20562  004F32  100F               	iorwf	??i2___lltoft+2,w,c
 20563  004F34  1010               	iorwf	??i2___lltoft+3,w,c
 20564  004F36  A4D8               	btfss	status,2,c
 20565  004F38  D7E8               	goto	i2l5474
 20566  004F3A  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 20567  004F3E  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 20568  004F42  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 20569  004F46  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 20570  004F4A  0E00               	movlw	0
 20571  004F4C  6E05               	movwf	i2___ftpack@sign,c
 20572  004F4E  EC03  F024         	call	i2___ftpack	;wreg free
 20573  004F52  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 20574  004F56  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 20575  004F5A  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 20576  004F5E  0012               	return	
 20577  004F60                     __end_ofi2___lltoft:
 20578                           	opt stack 0
 20579                           pclatu	equ	0xFFB
 20580                           pclath	equ	0xFFA
 20581                           tblptru	equ	0xFF8
 20582                           tblptrh	equ	0xFF7
 20583                           tblptrl	equ	0xFF6
 20584                           tablat	equ	0xFF5
 20585                           prodh	equ	0xFF4
 20586                           prodl	equ	0xFF3
 20587                           intcon	equ	0xFF2
 20588                           intcon2	equ	0xFF1
 20589                           intcon3	equ	0xFF0
 20590                           postinc0	equ	0xFEE
 20591                           fsr0h	equ	0xFEA
 20592                           fsr0l	equ	0xFE9
 20593                           wreg	equ	0xFE8
 20594                           postdec1	equ	0xFE5
 20595                           fsr1h	equ	0xFE2
 20596                           fsr1l	equ	0xFE1
 20597                           indf2	equ	0xFDF
 20598                           postinc2	equ	0xFDE
 20599                           postdec2	equ	0xFDD
 20600                           fsr2h	equ	0xFDA
 20601                           fsr2l	equ	0xFD9
 20602                           status	equ	0xFD8
 20603                           
 20604 ;; *************** function i2___ftpack *****************
 20605 ;; Defined at:
 20606 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 20607 ;; Parameters:    Size  Location     Type
 20608 ;;  arg             3    0[COMRAM] unsigned um
 20609 ;;  exp             1    3[COMRAM] unsigned char 
 20610 ;;  sign            1    4[COMRAM] unsigned char 
 20611 ;; Auto vars:     Size  Location     Type
 20612 ;;		None
 20613 ;; Return value:  Size  Location     Type
 20614 ;;                  3    0[COMRAM] float 
 20615 ;; Registers used:
 20616 ;;		wreg, status,2, status,0
 20617 ;; Tracked objects:
 20618 ;;		On entry : 0/0
 20619 ;;		On exit  : 0/0
 20620 ;;		Unchanged: 0/0
 20621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20622 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20626 ;;Total ram usage:        8 bytes
 20627 ;; Hardware stack levels used:    1
 20628 ;; This function calls:
 20629 ;;		Nothing
 20630 ;; This function is called by:
 20631 ;;		i2___altoft
 20632 ;;		i2___awtoft
 20633 ;;		i2___ftadd
 20634 ;;		i2___ftdiv
 20635 ;;		i2___ftmul
 20636 ;;		i2___lltoft
 20637 ;; This function uses a non-reentrant model
 20638 ;;
 20639                           
 20640                           	psect	text93
 20641  004806                     __ptext93:
 20642                           	opt stack 0
 20643  004806                     i2___ftpack:
 20644                           	opt stack 17
 20645                           
 20646                           ;incstack = 0
 20647  004806  5004               	movf	i2___ftpack@exp,w,c
 20648  004808  B4D8               	btfsc	status,2,c
 20649  00480A  D005               	goto	i2l4632
 20650  00480C  5001               	movf	i2___ftpack@arg,w,c
 20651  00480E  1002               	iorwf	i2___ftpack@arg+1,w,c
 20652  004810  1003               	iorwf	i2___ftpack@arg+2,w,c
 20653  004812  A4D8               	btfss	status,2,c
 20654  004814  D00C               	goto	i2l4638
 20655  004816                     i2l4632:
 20656  004816  0E00               	movlw	0
 20657  004818  6E01               	movwf	?i2___ftpack,c
 20658  00481A  0E00               	movlw	0
 20659  00481C  6E02               	movwf	?i2___ftpack+1,c
 20660  00481E  0E00               	movlw	0
 20661  004820  6E03               	movwf	?i2___ftpack+2,c
 20662  004822  0012               	return	
 20663  004824                     i2l4636:
 20664  004824  2A04               	incf	i2___ftpack@exp,f,c
 20665  004826  90D8               	bcf	status,0,c
 20666  004828  3203               	rrcf	i2___ftpack@arg+2,f,c
 20667  00482A  3202               	rrcf	i2___ftpack@arg+1,f,c
 20668  00482C  3201               	rrcf	i2___ftpack@arg,f,c
 20669  00482E                     i2l4638:
 20670  00482E  0E00               	movlw	0
 20671  004830  1401               	andwf	i2___ftpack@arg,w,c
 20672  004832  6E06               	movwf	??i2___ftpack& (0+255),c
 20673  004834  0E00               	movlw	0
 20674  004836  1402               	andwf	i2___ftpack@arg+1,w,c
 20675  004838  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20676  00483A  0EFE               	movlw	254
 20677  00483C  1403               	andwf	i2___ftpack@arg+2,w,c
 20678  00483E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20679  004840  5006               	movf	??i2___ftpack,w,c
 20680  004842  1007               	iorwf	??i2___ftpack+1,w,c
 20681  004844  1008               	iorwf	??i2___ftpack+2,w,c
 20682  004846  B4D8               	btfsc	status,2,c
 20683  004848  D00C               	goto	i2l4644
 20684  00484A  D7EC               	goto	i2l4636
 20685  00484C                     i2l4640:
 20686  00484C  2A04               	incf	i2___ftpack@exp,f,c
 20687  00484E  0E01               	movlw	1
 20688  004850  2601               	addwf	i2___ftpack@arg,f,c
 20689  004852  0E00               	movlw	0
 20690  004854  2202               	addwfc	i2___ftpack@arg+1,f,c
 20691  004856  0E00               	movlw	0
 20692  004858  2203               	addwfc	i2___ftpack@arg+2,f,c
 20693  00485A  90D8               	bcf	status,0,c
 20694  00485C  3203               	rrcf	i2___ftpack@arg+2,f,c
 20695  00485E  3202               	rrcf	i2___ftpack@arg+1,f,c
 20696  004860  3201               	rrcf	i2___ftpack@arg,f,c
 20697  004862                     i2l4644:
 20698  004862  0E00               	movlw	0
 20699  004864  1401               	andwf	i2___ftpack@arg,w,c
 20700  004866  6E06               	movwf	??i2___ftpack& (0+255),c
 20701  004868  0E00               	movlw	0
 20702  00486A  1402               	andwf	i2___ftpack@arg+1,w,c
 20703  00486C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20704  00486E  0EFF               	movlw	255
 20705  004870  1403               	andwf	i2___ftpack@arg+2,w,c
 20706  004872  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20707  004874  5006               	movf	??i2___ftpack,w,c
 20708  004876  1007               	iorwf	??i2___ftpack+1,w,c
 20709  004878  1008               	iorwf	??i2___ftpack+2,w,c
 20710  00487A  B4D8               	btfsc	status,2,c
 20711  00487C  D006               	goto	i2l4648
 20712  00487E  D7E6               	goto	i2l4640
 20713  004880                     i2l4646:
 20714  004880  0604               	decf	i2___ftpack@exp,f,c
 20715  004882  90D8               	bcf	status,0,c
 20716  004884  3601               	rlcf	i2___ftpack@arg,f,c
 20717  004886  3602               	rlcf	i2___ftpack@arg+1,f,c
 20718  004888  3603               	rlcf	i2___ftpack@arg+2,f,c
 20719  00488A                     i2l4648:
 20720  00488A  BE02               	btfsc	i2___ftpack@arg+1,7,c
 20721  00488C  D003               	goto	i2l899
 20722  00488E  0E02               	movlw	2
 20723  004890  6004               	cpfslt	i2___ftpack@exp,c
 20724  004892  D7F6               	goto	i2l4646
 20725  004894                     i2l899:
 20726  004894  A004               	btfss	i2___ftpack@exp,0,c
 20727  004896  9E02               	bcf	i2___ftpack@arg+1,7,c
 20728  004898  90D8               	bcf	status,0,c
 20729  00489A  3204               	rrcf	i2___ftpack@exp,f,c
 20730  00489C  5004               	movf	i2___ftpack@exp,w,c
 20731  00489E  1203               	iorwf	i2___ftpack@arg+2,f,c
 20732  0048A0  5005               	movf	i2___ftpack@sign,w,c
 20733  0048A2  A4D8               	btfss	status,2,c
 20734  0048A4  8E03               	bsf	i2___ftpack@arg+2,7,c
 20735  0048A6  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 20736  0048AA  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 20737  0048AE  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 20738  0048B2  0012               	return	
 20739  0048B4                     __end_ofi2___ftpack:
 20740                           	opt stack 0
 20741                           pclatu	equ	0xFFB
 20742                           pclath	equ	0xFFA
 20743                           tblptru	equ	0xFF8
 20744                           tblptrh	equ	0xFF7
 20745                           tblptrl	equ	0xFF6
 20746                           tablat	equ	0xFF5
 20747                           prodh	equ	0xFF4
 20748                           prodl	equ	0xFF3
 20749                           intcon	equ	0xFF2
 20750                           intcon2	equ	0xFF1
 20751                           intcon3	equ	0xFF0
 20752                           postinc0	equ	0xFEE
 20753                           fsr0h	equ	0xFEA
 20754                           fsr0l	equ	0xFE9
 20755                           wreg	equ	0xFE8
 20756                           postdec1	equ	0xFE5
 20757                           fsr1h	equ	0xFE2
 20758                           fsr1l	equ	0xFE1
 20759                           indf2	equ	0xFDF
 20760                           postinc2	equ	0xFDE
 20761                           postdec2	equ	0xFDD
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function i2___awdiv *****************
 20767 ;; Defined at:
 20768 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  dividend        2    0[COMRAM] int 
 20771 ;;  divisor         2    2[COMRAM] int 
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;  __awdiv         2    6[COMRAM] int 
 20774 ;;  __awdiv         1    5[COMRAM] unsigned char 
 20775 ;;  __awdiv         1    4[COMRAM] unsigned char 
 20776 ;; Return value:  Size  Location     Type
 20777 ;;                  2    0[COMRAM] int 
 20778 ;; Registers used:
 20779 ;;		wreg, status,2, status,0
 20780 ;; Tracked objects:
 20781 ;;		On entry : 0/0
 20782 ;;		On exit  : 0/0
 20783 ;;		Unchanged: 0/0
 20784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20786 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20788 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20789 ;;Total ram usage:        8 bytes
 20790 ;; Hardware stack levels used:    1
 20791 ;; This function calls:
 20792 ;;		Nothing
 20793 ;; This function is called by:
 20794 ;;		i2_dec_to_hex
 20795 ;; This function uses a non-reentrant model
 20796 ;;
 20797                           
 20798                           	psect	text94
 20799  004B14                     __ptext94:
 20800                           	opt stack 0
 20801  004B14                     i2___awdiv:
 20802                           	opt stack 21
 20803                           
 20804                           ;incstack = 0
 20805  004B14  0E00               	movlw	0
 20806  004B16  6E06               	movwf	i2___awdiv@sign,c
 20807  004B18  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20808  004B1A  D006               	goto	i2l5864
 20809  004B1C  6C03               	negf	i2___awdiv@divisor,c
 20810  004B1E  1E04               	comf	i2___awdiv@divisor+1,f,c
 20811  004B20  B0D8               	btfsc	status,0,c
 20812  004B22  2A04               	incf	i2___awdiv@divisor+1,f,c
 20813  004B24  0E01               	movlw	1
 20814  004B26  6E06               	movwf	i2___awdiv@sign,c
 20815  004B28                     i2l5864:
 20816  004B28  AE02               	btfss	i2___awdiv@dividend+1,7,c
 20817  004B2A  D006               	goto	i2l5870
 20818  004B2C  6C01               	negf	i2___awdiv@dividend,c
 20819  004B2E  1E02               	comf	i2___awdiv@dividend+1,f,c
 20820  004B30  B0D8               	btfsc	status,0,c
 20821  004B32  2A02               	incf	i2___awdiv@dividend+1,f,c
 20822  004B34  0E01               	movlw	1
 20823  004B36  1A06               	xorwf	i2___awdiv@sign,f,c
 20824  004B38                     i2l5870:
 20825  004B38  0E00               	movlw	0
 20826  004B3A  6E08               	movwf	i2___awdiv@quotient+1,c
 20827  004B3C  0E00               	movlw	0
 20828  004B3E  6E07               	movwf	i2___awdiv@quotient,c
 20829  004B40  5003               	movf	i2___awdiv@divisor,w,c
 20830  004B42  1004               	iorwf	i2___awdiv@divisor+1,w,c
 20831  004B44  B4D8               	btfsc	status,2,c
 20832  004B46  D01C               	goto	i2l5892
 20833  004B48  0E01               	movlw	1
 20834  004B4A  6E05               	movwf	i2___awdiv@counter,c
 20835  004B4C  D004               	goto	i2l5878
 20836  004B4E                     i2l5876:
 20837  004B4E  90D8               	bcf	status,0,c
 20838  004B50  3603               	rlcf	i2___awdiv@divisor,f,c
 20839  004B52  3604               	rlcf	i2___awdiv@divisor+1,f,c
 20840  004B54  2A05               	incf	i2___awdiv@counter,f,c
 20841  004B56                     i2l5878:
 20842  004B56  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20843  004B58  D7FA               	goto	i2l5876
 20844  004B5A                     i2l5880:
 20845  004B5A  90D8               	bcf	status,0,c
 20846  004B5C  3607               	rlcf	i2___awdiv@quotient,f,c
 20847  004B5E  3608               	rlcf	i2___awdiv@quotient+1,f,c
 20848  004B60  5003               	movf	i2___awdiv@divisor,w,c
 20849  004B62  5C01               	subwf	i2___awdiv@dividend,w,c
 20850  004B64  5004               	movf	i2___awdiv@divisor+1,w,c
 20851  004B66  5802               	subwfb	i2___awdiv@dividend+1,w,c
 20852  004B68  A0D8               	btfss	status,0,c
 20853  004B6A  D005               	goto	i2l5888
 20854  004B6C  5003               	movf	i2___awdiv@divisor,w,c
 20855  004B6E  5E01               	subwf	i2___awdiv@dividend,f,c
 20856  004B70  5004               	movf	i2___awdiv@divisor+1,w,c
 20857  004B72  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 20858  004B74  8007               	bsf	i2___awdiv@quotient,0,c
 20859  004B76                     i2l5888:
 20860  004B76  90D8               	bcf	status,0,c
 20861  004B78  3204               	rrcf	i2___awdiv@divisor+1,f,c
 20862  004B7A  3203               	rrcf	i2___awdiv@divisor,f,c
 20863  004B7C  2E05               	decfsz	i2___awdiv@counter,f,c
 20864  004B7E  D7ED               	goto	i2l5880
 20865  004B80                     i2l5892:
 20866  004B80  5006               	movf	i2___awdiv@sign,w,c
 20867  004B82  B4D8               	btfsc	status,2,c
 20868  004B84  D004               	goto	i2l5896
 20869  004B86  6C07               	negf	i2___awdiv@quotient,c
 20870  004B88  1E08               	comf	i2___awdiv@quotient+1,f,c
 20871  004B8A  B0D8               	btfsc	status,0,c
 20872  004B8C  2A08               	incf	i2___awdiv@quotient+1,f,c
 20873  004B8E                     i2l5896:
 20874  004B8E  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 20875  004B92  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 20876  004B96  0012               	return	
 20877  004B98                     __end_ofi2___awdiv:
 20878                           	opt stack 0
 20879                           pclatu	equ	0xFFB
 20880                           pclath	equ	0xFFA
 20881                           tblptru	equ	0xFF8
 20882                           tblptrh	equ	0xFF7
 20883                           tblptrl	equ	0xFF6
 20884                           tablat	equ	0xFF5
 20885                           prodh	equ	0xFF4
 20886                           prodl	equ	0xFF3
 20887                           intcon	equ	0xFF2
 20888                           intcon2	equ	0xFF1
 20889                           intcon3	equ	0xFF0
 20890                           postinc0	equ	0xFEE
 20891                           fsr0h	equ	0xFEA
 20892                           fsr0l	equ	0xFE9
 20893                           wreg	equ	0xFE8
 20894                           postdec1	equ	0xFE5
 20895                           fsr1h	equ	0xFE2
 20896                           fsr1l	equ	0xFE1
 20897                           indf2	equ	0xFDF
 20898                           postinc2	equ	0xFDE
 20899                           postdec2	equ	0xFDD
 20900                           fsr2h	equ	0xFDA
 20901                           fsr2l	equ	0xFD9
 20902                           status	equ	0xFD8
 20903                           pclatu	equ	0xFFB
 20904                           pclath	equ	0xFFA
 20905                           tblptru	equ	0xFF8
 20906                           tblptrh	equ	0xFF7
 20907                           tblptrl	equ	0xFF6
 20908                           tablat	equ	0xFF5
 20909                           prodh	equ	0xFF4
 20910                           prodl	equ	0xFF3
 20911                           intcon	equ	0xFF2
 20912                           intcon2	equ	0xFF1
 20913                           intcon3	equ	0xFF0
 20914                           postinc0	equ	0xFEE
 20915                           fsr0h	equ	0xFEA
 20916                           fsr0l	equ	0xFE9
 20917                           wreg	equ	0xFE8
 20918                           postdec1	equ	0xFE5
 20919                           fsr1h	equ	0xFE2
 20920                           fsr1l	equ	0xFE1
 20921                           indf2	equ	0xFDF
 20922                           postinc2	equ	0xFDE
 20923                           postdec2	equ	0xFDD
 20924                           fsr2h	equ	0xFDA
 20925                           fsr2l	equ	0xFD9
 20926                           status	equ	0xFD8
 20927                           
 20928                           	psect	rparam
 20929  0000                     pclatu	equ	0xFFB
 20930                           pclath	equ	0xFFA
 20931                           tblptru	equ	0xFF8
 20932                           tblptrh	equ	0xFF7
 20933                           tblptrl	equ	0xFF6
 20934                           tablat	equ	0xFF5
 20935                           prodh	equ	0xFF4
 20936                           prodl	equ	0xFF3
 20937                           intcon	equ	0xFF2
 20938                           intcon2	equ	0xFF1
 20939                           intcon3	equ	0xFF0
 20940                           postinc0	equ	0xFEE
 20941                           fsr0h	equ	0xFEA
 20942                           fsr0l	equ	0xFE9
 20943                           wreg	equ	0xFE8
 20944                           postdec1	equ	0xFE5
 20945                           fsr1h	equ	0xFE2
 20946                           fsr1l	equ	0xFE1
 20947                           indf2	equ	0xFDF
 20948                           postinc2	equ	0xFDE
 20949                           postdec2	equ	0xFDD
 20950                           fsr2h	equ	0xFDA
 20951                           fsr2l	equ	0xFD9
 20952                           status	equ	0xFD8
 20953                           
 20954                           	psect	temp
 20955  00007F                     btemp:
 20956                           	opt stack 0
 20957  00007F                     	ds	1
 20958  0000                     int$flags	set	btemp
 20959                           pclatu	equ	0xFFB
 20960                           pclath	equ	0xFFA
 20961                           tblptru	equ	0xFF8
 20962                           tblptrh	equ	0xFF7
 20963                           tblptrl	equ	0xFF6
 20964                           tablat	equ	0xFF5
 20965                           prodh	equ	0xFF4
 20966                           prodl	equ	0xFF3
 20967                           intcon	equ	0xFF2
 20968                           intcon2	equ	0xFF1
 20969                           intcon3	equ	0xFF0
 20970                           postinc0	equ	0xFEE
 20971                           fsr0h	equ	0xFEA
 20972                           fsr0l	equ	0xFE9
 20973                           wreg	equ	0xFE8
 20974                           postdec1	equ	0xFE5
 20975                           fsr1h	equ	0xFE2
 20976                           fsr1l	equ	0xFE1
 20977                           indf2	equ	0xFDF
 20978                           postinc2	equ	0xFDE
 20979                           postdec2	equ	0xFDD
 20980                           fsr2h	equ	0xFDA
 20981                           fsr2l	equ	0xFD9
 20982                           status	equ	0xFD8


Data Sizes:
    Strings     425
    Constant    99
    Data        10
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     126
    BANK0           128     95     111
    BANK1           256     41     124
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_47(CODE[15]), STR_46(CODE[16]), STR_45(CODE[18]), STR_44(CODE[23]), 
		 -> STR_43(CODE[16]), STR_42(CODE[17]), STR_41(CODE[17]), STR_40(CODE[17]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[19]), STR_36(CODE[16]), 
		 -> STR_35(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[17]), STR_30(CODE[19]), STR_29(CODE[16]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[19]), STR_22(CODE[16]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[19]), 
		 -> STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[23]), 
		 -> STR_7(CODE[23]), STR_6(CODE[9]), STR_5(CODE[18]), STR_4(CODE[13]), 
		 -> STR_3(CODE[24]), STR_2(CODE[24]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->i2_dec_to_hex
    i2_savedata->i2_eeprom_writebyte
    i2_eeprom_writebyte->i2_eeprom_readbyte
    i2_read_time->i2_I2C_Master_Read
    i2_read_time->i2_I2C_Master_Write
    i2_read_colorsensor->i2_I2C_Master_Read
    i2_read_colorsensor->i2_I2C_Master_Write
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    i2_I2C_Master_Read->i2_I2C_Master_Wait
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble
    i2_dec_to_hex->i2_pow
    i2_pow->i2_exp
    i2_log->i2_eval_poly
    i2_exp->i2_floor
    i2_ldexp->i2_eval_poly
    i2_floor->i2___altoft
    i2___fttol->i2___ftadd
    i2___altoft->i2___fttol
    i2_eval_poly->i2___ftadd
    i2___ftmul->i2___awtoft
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___ftmul
    i2___ftdiv->i2___ftpack
    i2___awtoft->i2___ftpack
    i2___lltoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_operation
    _standby->_printf
    _operationend->_printf
    _operation->_dec_to_hex
    _savedata->_eeprom_writebyte
    _eeprom_writebyte->_eeprom_readbyte
    _read_time->_I2C_Master_Read
    _read_time->_I2C_Master_Write
    _read_colorsensor->_I2C_Master_Read
    _read_colorsensor->_I2C_Master_Write
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___ftge->___ftdiv
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    _initLCD->_lcdInst
    _emergencystop->_printf
    _date_time->_printf
    _I2C_Master_Read->_I2C_Master_Wait
    _bottle_time->_printf
    _bottle_count4->_printf
    _bottle_count3->_printf
    _bottle_count2->_printf
    _bottle_count1->_printf
    _bottle_count->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv
    _I2C_ColorSens_Init->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_operation
    _operation->_dec_to_hex
    _dec_to_hex->_pow
    _pow->_exp

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  204745
                                             39 BANK1      2     2      0
                 _I2C_ColorSens_Init
                    _I2C_Master_Init
                       _bottle_count
                      _bottle_count1
                      _bottle_count2
                      _bottle_count3
                      _bottle_count4
                        _bottle_time
                          _date_time
                   _eeprom_writebyte
                      _emergencystop
                            _initLCD
                          _operation
                       _operationend
                            _standby
 ---------------------------------------------------------------------------------
 (1) _standby                                              0     0      0    9615
                            _lcdInst
                             _printf
                   _read_colorsensor
 ---------------------------------------------------------------------------------
 (1) _operationend                                         0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _operation                                            6     6      0  114438
                                             93 BANK0      2     2      0
                                             37 BANK1      2     2      0
                            ___ftdiv
                             ___ftge
                           ___lwtoft
                             ___wmul
                         _dec_to_hex
                            _lcdInst
                   _read_colorsensor
                          _read_time
                           _savedata
 ---------------------------------------------------------------------------------
 (2) _savedata                                             0     0      0    6749
                    _eeprom_readbyte
                   _eeprom_writebyte
 ---------------------------------------------------------------------------------
 (3) _eeprom_writebyte                                     3     0      3    4097
                                             18 BANK0      3     0      3
                    _eeprom_readbyte (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_readbyte                                      2     0      2    2652
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _read_time                                            1     1      0    2274
                                             19 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _read_colorsensor                                     2     2      0    2175
                                             19 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _dec_to_hex                                          16    14      2   92896
                                             91 BANK0      2     0      2
                                             23 BANK1     14    14      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   78284
                                              6 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   24654
                                             67 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   43139
                                             88 BANK0      3     0      3
                                              0 BANK1      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     525
                                             67 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   11360
                                             80 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     642
                                             16 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     679
                                             55 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6    1738
                                             39 BANK0      9     3      6
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2925
                                             70 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11251
                                             55 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    4284
                                             28 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5271
                                             55 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             12     6      6    4907
                                             43 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     296
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3948
                                             24 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3162
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2823
                                             24 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     599
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2983
                                             24 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2644
                                             16 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     195
                                             19 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _emergencystop                                        0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _date_time                                            1     1      0    9714
                                             50 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                             17 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _bottle_time                                          0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count4                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count3                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count2                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count1                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count                                         0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    23      8    7245
                                             28 BANK0     22    14      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     195
                                             18 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1344
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             23 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     195
                                             18 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     164
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     936
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             29 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_ColorSens_Init                                   1     1      0    2110
                                             19 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2110
                                             17 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                 25    25      0   39687
                                            114 COMRAM     3     3      0
                                              0 BANK0     16    16      0
                           i2___wmul
                       i2_dec_to_hex
                  i2_eeprom_readbyte
                          i2_lcdInst
                           i2_printf
                 i2_read_colorsensor
                        i2_read_time
                         i2_savedata
 ---------------------------------------------------------------------------------
 (9) i2_savedata                                           0     0      0    2580
                  i2_eeprom_readbyte
                 i2_eeprom_writebyte
 ---------------------------------------------------------------------------------
 (10) i2_eeprom_writebyte                                  3     0      3    1366
                                              2 COMRAM     3     0      3
                  i2_eeprom_readbyte (ARG)
 ---------------------------------------------------------------------------------
 (10) i2_eeprom_readbyte                                   2     0      2    1214
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_read_time                                          1     1      0     239
                                              3 COMRAM     1     1      0
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_read_colorsensor                                   2     2      0     171
                                              3 COMRAM     2     2      0
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Write                                  2     0      2     126
                                              1 COMRAM     2     0      2
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Stop                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Start                                  0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Read                                   2     2      0      45
                                              1 COMRAM     2     2      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Master_Wait                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_printf                                            29    23      6    2303
                                             12 COMRAM    20    14      6
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (9) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (11) i2_lcdNibble                                         2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_dec_to_hex                                        16    14      2   32110
                                             98 COMRAM    16    14      2
                          i2___awdiv
                         i2___awtoft
                          i2___ftadd
                          i2___ftmul
                          i2___fttol
                              i2_pow
 ---------------------------------------------------------------------------------
 (10) i2_pow                                              17    11      6   26857
                                             81 COMRAM    17    11      6
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
                         i2___lltoft
                              i2_exp
                              i2_log
 ---------------------------------------------------------------------------------
 (11) i2_log                                               5     2      3    8658
                                             51 COMRAM     5     2      3
                         i2___awtoft
                          i2___ftadd
                          i2___ftmul
                        i2_eval_poly
                            i2_frexp
 ---------------------------------------------------------------------------------
 (11) i2_exp                                               9     6      3   14834
                                             72 COMRAM     9     6      3
                         i2___awtoft
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                        i2_eval_poly
                            i2_floor
                            i2_ldexp
 ---------------------------------------------------------------------------------
 (12) i2_ldexp                                             7     2      5     296
                                             51 COMRAM     7     2      5
                        i2_eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_floor                                             8     5      3    4007
                                             64 COMRAM     8     5      3
                         i2___altoft
                          i2___ftadd
                           i2___ftge
                          i2___fttol
                            i2_frexp
 ---------------------------------------------------------------------------------
 (12) i2_frexp                                             7     2      5     324
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (13) i2___fttol                                          15    11      4     356
                                             39 COMRAM    15    11      4
                         i2___awtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___ftge                                            9     3      6     344
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (13) i2___altoft                                         10     6      4     863
                                             54 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_eval_poly                                        12     5      7    4043
                                             39 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     521
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2___ftmul                                          15     9      6    1337
                                             12 COMRAM    15     9      6
                         i2___awtoft (ARG)
                         i2___ftpack
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftsub                                           6     0      6    1970
                                             39 COMRAM     6     0      6
                         i2___awtoft (ARG)
                          i2___ftadd
 ---------------------------------------------------------------------------------
 (13) i2___ftadd                                          12     6      6    1851
                                             27 COMRAM    12     6      6
                         i2___awtoft (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftneg                                           3     0      3     123
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (12) i2___ftdiv                                          15     9      6    1031
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___awtoft                                          4     1      3     920
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___lltoft                                          9     5      4     794
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___ftpack                                          8     3      5     699
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ColorSens_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _bottle_count
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count1
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count2
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count3
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count4
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_time
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _date_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _eeprom_writebyte
     _eeprom_readbyte (ARG)
   _emergencystop
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _operation
     ___ftdiv
       ___ftpack
     ___ftge
       ___ftdiv (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     ___wmul
     _dec_to_hex
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
           ___ftdiv (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
             ___ftdiv (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
               ___ftdiv (ARG)
                 ___ftpack
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _lcdInst
       _lcdNibble
     _read_colorsensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _read_time
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _savedata
       _eeprom_readbyte
       _eeprom_writebyte
         _eeprom_readbyte (ARG)
   _operationend
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _standby
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
     _read_colorsensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait

 _isr (ROOT)
   i2___wmul
   i2_dec_to_hex
     i2___awdiv
     i2___awtoft
       i2___ftpack
     i2___ftadd
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftmul (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
       i2_frexp (ARG)
     i2___ftmul
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2_frexp (ARG)
     i2___fttol
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
         i2_frexp (ARG)
       i2___ftmul (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
     i2_pow
       i2___ftge
       i2___ftmul
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
       i2___ftneg
       i2___fttol
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftadd (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
       i2___lltoft
         i2___ftpack
       i2_exp
         i2___awtoft
           i2___ftpack
         i2___ftdiv
           i2___ftpack
         i2___ftge
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___ftneg
         i2___ftsub
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_eval_poly
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___wmul
         i2_floor
           i2___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftge
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2_frexp
         i2_ldexp
           i2_eval_poly (ARG)
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___wmul
       i2_log
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2_eval_poly
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___wmul
         i2_frexp
   i2_eeprom_readbyte
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2___wmul
     i2_isdigit
     i2_putch
       i2_lcdNibble
   i2_read_colorsensor
     i2_I2C_Master_Read
       i2_I2C_Master_Wait
     i2_I2C_Master_Start
       i2_I2C_Master_Wait
     i2_I2C_Master_Stop
       i2_I2C_Master_Wait
     i2_I2C_Master_Write
       i2_I2C_Master_Wait
   i2_read_time
     i2_I2C_Master_Read
       i2_I2C_Master_Wait
     i2_I2C_Master_Start
       i2_I2C_Master_Wait
     i2_I2C_Master_Stop
       i2_I2C_Master_Wait
     i2_I2C_Master_Write
       i2_I2C_Master_Wait
   i2_savedata
     i2_eeprom_readbyte
     i2_eeprom_writebyte
       i2_eeprom_readbyte (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      7C       7       48.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5F      6F       5       86.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     169      34        0.0%
DATA                 0      0     169       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Apr 11 11:21:13 2017

               ___altoft@exp 00CE                            _b 011F                            _i 00EB  
                          _j 0078                            _r 0125           i2_I2C_Master_Start 551C  
         i2_I2C_Master_Write 54FA                ___altoft@sign 00CF                           l34 5488  
             ?_emergencystop 0001                 ___awdiv@sign 0095                   i2___altoft 4C8C  
        ___wmul@multiplicand 0092           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
                 i2___awtoft 51EE                   i2___ftpack 4806                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                 ___ftadd@exp1 00B6                 ___ftadd@exp2 00B5  
                 i2___lltoft 4F04                 ___ftadd@sign 00B4                          l518 0C20  
                        l528 0DDA                          l590 546A                          l559 5422  
                        l922 1D54                          l596 5362                          l926 1D8E  
                        l928 1DB6                          l937 1E8C                          l946 1EB6  
                        l957 2E6A                          l899 3406                          l979 52B4  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _PEN 007E2A  
               __CFG_CPD$OFF 000000                          _SEN 007E28                          _PSA 007EAB  
        ?i2_I2C_Master_Start 0001                          _b_p 0122          ?i2_I2C_Master_Write 0002  
                 i2_exp$1679 004C                          _exp 21AE                          _log 2C04  
                        _r_p 0128                          _isr 0008                          _pow 25D0  
               ___awmod@sign 0095                          prod 000FF3                          wreg 000FE8  
         i2dec_to_hex@hexnum 006F                 ?_bottle_time 0001                 __CFG_LVP$OFF 000000  
               ___ftdiv@cntr 00A1                 ___ftdiv@sign 00A6                 __CFG_WDT$OFF 000000  
                       l1114 2618                         l1029 4746                         l1119 2776  
                       l1082 4C82                         l1092 4E3A                         l1277 2294  
                       l1278 23DA                         l1288 3A3E                         l5420 4C3E  
                       l5430 4C74                         l5422 4C44                         l5440 4E02  
                       l8000 1084                         l5418 4C32                         l5442 4E08  
                       l5364 533A                         l8100 131E                         l8020 113A  
                       l5446 4E2C                         l5438 4DF6                         l8014 112C  
                       l8022 1172                         l8006 10B4                         l8104 1332  
                       l8040 11D4                         l8016 1132                         l8120 13FE  
                       l8106 1338                         l8114 13D2                         l8034 11B2  
                       l7402 1D9C                         l8108 1384                         l8116 13EA  
                       l8052 120A                         l7340 336A                         ?_exp 00D8  
                       ?_log 00C3                         l8118 13F2                         l8054 1210  
                       l8070 125E                         l8038 11CE                         l7350 33F8  
                       l7342 339A                         l7334 3348                         l7430 1E44  
                       l7510 4490                         l8126 3238                         l8302 0CAC  
                       l5760 492A                         l5752 48F4                         l5744 48D0  
                       l8080 12B8                         l7424 1E1C                         l7408 1DAC  
                       l7520 4514                         l8320 0DE4                         l8304 0CB6  
                       l5754 4900                         l8082 12C2                         l7362 342C  
                       l7346 33BA                         l7338 335C                         l7602 2DC8  
                       l7426 1E2A                         l7418 1DEE                         l7514 44D0  
                       l7530 2EDA                         l8138 3318                         l8330 0EA6  
                       l8314 0D78                         l5780 46DA                         l5756 4906  
                       l5764 4938                         l5748 48E0                         l8076 1280  
                       l8068 1246                         l8500 36B8                         l8404 42E8  
                       l7356 3410                         l7348 33EA                         l7444 1EE0  
                       l7436 1E72                         l7428 1E38                         l7380 4982  
                       ?_isr 0001                         l5790 4734                         l5782 46E0  
                       l8094 12F8                         l8430 3882                         l8414 4312  
                       l7622 2E28                         l7454 1F2E                         l7438 1E80  
                       l7470 2B1A                         l7382 4992                         l8334 0EF4  
                       l8318 0DC6                         l8270 0BDE                         l5768 494C  
                       l8096 1304                         l8088 12DC                         l8424 384C  
                       l8512 370E                         l8520 3540                         l8408 42F2  
                       l7640 50C4                         l7464 2AE0                         l7560 2FAC  
                       l7552 2F80                         l7720 31CA                         l7704 318C  
                       l8360 0F9E                         l8352 0F76                         l8336 0F0A  
                       l8280 0C1A                         l5778 46CA                         l8442 38FE  
                       l8506 36F6                         l7562 2FB6                         l8370 0FCC  
                       l8274 0BF4                         l8436 38C0                         l8532 35B4  
                       l7652 510A                         l7396 1D62                         l7484 2B68  
                       l7548 2F6C                         l7716 31BA                         l7820 23AA  
                       l8364 0FAE                         l8356 0F86                         l8700 1B80  
                       l8462 377E                         l8526 3576                         l7750 4BA0  
                       l7494 2BA6                         l7566 2FD2                         l7558 2F9C  
                       l7670 398A                         l7910 26EE                         l8374 0FDC  
                       l8390 1042                         l8702 1B86                         l8448 3916  
                       l8456 3748                         l8480 3812                         l8544 360A  
                       l8552 343C                         l7752 4BB0                         l7488 2B86  
                       l8384 1010                         l8720 1C04                         l8712 1BC4  
                       l8474 37FA                         l8538 35F2                         l8570 34EE  
                       l7930 45FA                         l7498 2BC4                         l7578 478C  
                       l7674 399E                         l7770 2C56                         l7906 26C8  
                       l8386 1026                         l8298 0C8C                         l8468 37BC  
                       l8564 34B0                         l7844 52E8                         l7596 2D8E  
                       l7764 2C28                         l8732 1C64                         l8724 1C24  
                       l8716 1BE4                         l8708 1BA4                         l8494 367A  
                       l8558 3472                         l7942 462E                         l7686 3F70  
                       l7678 39BC                         l8742 1CA4                         l8488 3644  
                       l8576 3506                         l7944 463A                         l7936 4610  
                       l7688 3FF8                         l7696 3126                         l7792 2218  
                       l8736 1C84                         l8728 1C44                         l8672 1AE2  
                       l7962 4692                         l7954 4670                         l7946 4640  
                       l7786 21D2                         l8682 1B1E                         l7892 262C  
                       l8684 1B28                         l8676 1AF8                         ?_pow 014F  
                       l7990 1054                         l7958 467E                         l7798 225E  
                       l7974 4D40                         l8694 1B58                   i2_pow$1677 0058  
                 i2_pow$1678 005B                         l7984 4D6A                         l8696 1B60  
                       l8688 1B3E                         l7994 1068                         l7898 2650  
                       l7978 4D4A                         l7996 107A           i2_read_colorsensor 41D6  
                       STR_1 FFF7                         STR_2 FE6E                         STR_3 FE56  
                       STR_4 FFE1                         STR_5 FF17                         STR_6 FFEE  
                       STR_7 FE9D                         STR_8 FEB4                         STR_9 FF5D  
                       _T0CS 007EAD                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                       u6015 4ED4                         _PEIE 007F96                         u7201 1D02  
                       u7211 1D20                         _RCEN 007E2B                         i2l34 549C  
                       u7411 2ABC                         u7501 2EB6                         u7431 2AF6  
                       u7520 2F00                         u7601 2D6A                         u8410 0CC6  
                       u8330 0AEA                         u7700 39AE                         u7621 2DA4  
                       u7525 2EF6                         u8600 103A                         u8520 0F2C  
                       u8360 0C56                         u7740 3158                         u8461 0DF2  
                       u7910 52E6                         u7590 47BE                         u8707 1B92  
                       u7748 315C                         u7860 2268                         u8717 1B9C  
                       u7598 47C2                         u7870 226A                         u8807 0AF8  
                       u8727 1BB6                         u8817 500C                         u8737 1BD6  
                       u8827 5048                         u8747 1BF6                         u8837 4E64  
                       u8757 1C16                         u7990 26AA                         u8847 4E6C  
                       u8767 1C36                         u8857 4E96                         u8777 1C56  
                       u8697 1B72                         u8867 4E9E                         u8787 1C76  
                       u8877 3A86                         u8797 1C96                         _TMR0 000FD6  
                       _TMR1 000FCE                         _TMR3 000FB2                         _RSEN 007E29  
  __size_of_eeprom_writebyte 0028                         _main 1A24                 ___ftpack@arg 0090  
               i2___altoft@c 0037                         _keys FDF3                 ___ftpack@exp 0093  
                       _temp 007C                         _time 0110                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 007F                         exp@x 00D8  
                       log@x 00C3                         isr@i 0073                 i2___ftadd@f1 001C  
               i2___ftadd@f2 001F         ??i2_I2C_Master_Start 0002                 i2___ftge@ff1 0001  
               i2___ftge@ff2 0004         ??i2_I2C_Master_Write 0004                         pow@x 014F  
                       pow@y 0152                         prodh 000FF4                         prodl 000FF3  
                       start 000E          ?i2_read_colorsensor 0001                __CFG_IESO$OFF 000000  
            __end_ofi2_floor 41D6              __end_ofi2_ldexp 45DE                 i2___ftdiv@f1 0009  
               i2___ftdiv@f2 000C                 i2___ftdiv@f3 0013              __end_ofi2_frexp 4A84  
      __size_ofi2_dec_to_hex 00FC                 i2___ftneg@f1 0001                   i2_savedata 1F54  
            __end_ofi2_putch 54DA                 i2___awtoft@c 0009                __CFG_MCLRE$ON 000000  
               ___ftmul@cntr 00A9                 i2___ftmul@f1 000D                 i2___ftmul@f2 0010  
               ___param_bank 000000                 ___ftmul@sign 00AA                 i2___ftsub@f1 0028  
               i2___ftsub@f2 002B                 i2___fttol@f1 0028                  i2_lcdNibble 5054  
              ?_bottle_count 0001                 ___fttol@exp1 00C5                 i2___lltoft@c 0009  
                      ??_exp 00DB                        ??_log 00C6                 ___fttol@lval 00C1  
                      ??_isr 0080                        ??_pow 00DB             ?_I2C_Master_Init 009D  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
              _bottle_count1 3746                _bottle_count2 3642                _bottle_count3 353E  
              _bottle_count4 343A                        ?_main 0001                        _ACKEN 007E2C  
                      _ACKDT 007E2D              __end_of___awdiv 469C                        _EEADR 000FA9  
            __end_of___ftadd 1F54                        STR_10 FF4C                        STR_11 FF6E  
                      STR_20 FF90                        STR_12 FF7F                        STR_21 FFA1  
                      STR_13 FF90                        STR_22 FFC2                        STR_14 FFA1  
                      STR_30 FEF1                        STR_31 FF4C                        STR_15 FFC2  
                      STR_23 FEDE                        STR_24 FF4C                        STR_32 FF6E  
                      STR_40 FF7F                        STR_16 FECB                        STR_17 FF4C  
                      STR_25 FF6E                        STR_33 FF7F                        STR_41 FF90  
                      STR_18 FF6E                        STR_26 FF7F                        STR_34 FF90  
                      STR_42 FFA1                        STR_19 FF7F                        STR_27 FF90  
                      STR_35 FFA1                        STR_43 FFC2                        STR_28 FFA1  
                      STR_36 FFC2                        STR_44 FE86              __end_of___awmod 4956  
                      STR_29 FFC2                        STR_45 FF29                        STR_37 FF04  
                      STR_38 FF4C                        STR_46 FFB2                        STR_39 FF6E  
                      STR_47 FFD2                        STR_48 FF3B              __end_of___ftdiv 2EA0  
            __end_of___ftneg 52C2              __end_of___lldiv 4758              __end_of___ftmul 2C04  
            ___awdiv@divisor 0092                        _T1CON 000FCD              __end_of___ftsub 50EE  
            __end_of___fttol 2FE4                        _T3CON 000FB1                        _T0PS0 007EA8  
                      _T0PS1 007EA9                        _T0PS2 007EAA              __end_of___lwdiv 4C8C  
            __end_of___lwmod 4E44                        i2l411 093A                        i2l412 0912  
                      i2l405 08F8                        i2l406 08D2                        i2l352 08BA  
                      i2l370 02C8                        i2l354 0054                        i2l428 0A98  
                      i2l357 08B6                        i2l382 04AC                        i2l358 0118  
                      i2l376 03BA                        i2l394 0690                        i2l388 059E  
                      i2l590 5480                        i2l398 07DC                        i2l922 27C8  
                      i2l596 5388                        i2l926 27F2                        i2l937 28A2  
                      i2l946 28BE              ___awdiv@counter 0094                        i2l957 40C6  
                      i2l899 4894                        i2l979 53F4         ??i2_read_colorsensor 0004  
                      _PORTB 000F81                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      i2_exp 23E8                        i2_log 2FE4                __CFG_PWRT$OFF 000000  
                      i2_pow 2930                  i2_eval_poly 437E                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
               ___lltoft@exp 00A0              __end_of_lcdInst 54CE               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                        _nRBPU 007F8F                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 5054  
             __CFG_EBTRB$OFF 000000                   i2isdigit@c 0003                ___awtoft@sign 009B  
            __end_of_dpowers FE0E                        _color 0100                        _floor 394E  
                      _etime 0131                        _ldexp 3102                        _frexp 4758  
                      _errno 012F              __end_of_isdigit 5344                ___ftpack@sign 0094  
                      _putch 54AE                        _stime 0147                  i2_read_time 4D7A  
               i2_dec_to_hex 3B4A                        pclath 000FFA                        tablat 000FF5  
           __end_ofi2___ftge 4B14                        pow@yi 015C              __end_of_timeset FE1D  
           __end_ofi2___wmul 53DE              __end_of_standby 51EE                        status 000FD8  
              i2___ftdiv@exp 0016           __size_ofi2___awdiv 0084           __size_ofi2___ftadd 01AC  
             __CFG_PBADEN$ON 000000                i2printf@width 001E           __size_ofi2___ftdiv 00E6  
                exp@exponent 014C           __size_ofi2___ftneg 0024           __size_ofi2___ftmul 00F4  
         __size_ofi2___ftsub 0040           __size_ofi2___fttol 00F4             __end_ofi2_printf 1748  
         __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042                  ldexp@newexp 00C6  
            __initialization 4F60                  log@exponent 00C6           __size_ofi2_lcdInst 000C  
            ??_emergencystop 00B2               ??_bottle_count 00B2                 __end_of_main 1CEC  
               __end_of_keys FE04                i2___ftmul@exp 0016                   i2printf@ap 0018  
         __size_ofi2_isdigit 001E                  ?i2___altoft 0037               ?_bottle_count1 0001  
             ?_bottle_count2 0001               ?_bottle_count3 0001               ?_bottle_count4 0001  
                ?i2___awtoft 0009                  ?i2___ftpack 0001                  ?i2___lltoft 0009  
                     ??_main 0170       i2eeprom_writebyte@data 0005                ___fttol@sign1 00C0  
              __activetblptr 000002                       ?i2_exp 0049                       ?i2_log 0034  
                     ?i2_pow 0052            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0091  
         ??_I2C_Master_Start 0091                       _ADCON0 000FC2                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0093                       ?_floor 00D0                       ?_ldexp 00C3  
                     ?_frexp 0090             __end_of___altoft 49F4                       _EEADRH 000FAA  
                     _EEDATA 000FA8                       _EECON2 000FA7                       _T08BIT 007EAE  
           ___awdiv@dividend 0090              i2lcdNibble@data 0002             __end_of___awtoft 5132  
                     ?_putch 0001             __end_of___ftpack 343A         i2dec_to_hex@quotient 0071  
            i2lcdNibble@temp 0001             __end_of___lltoft 4C14                       _INT0IE 007F94  
                     _INT1IE 007F83                       _INT1IF 007F80                       _INT2IE 007F84  
                     i2l1114 2968                       i2l1119 2A98                       i2l1082 4FFA  
                     i2l1092 516A                       i2l1277 249E                       i2l1278 25C2  
                     i2l5000 3E20                       i2l1288 41C8                       i2l5012 4A1C  
                     i2l5130 5202                       i2l5210 414E                       i2l5202 4126  
                     i2l5140 403A                       i2l5206 4134                       i2l5230 4576  
                     i2l5222 4530                       i2l5146 4062                       i2l5242 459A  
                     i2l7002 0764                       i2l5500 2470                       i2l7012 0792  
                     i2l5166 40A0                       i2l5254 43BE                       i2l5246 45A6  
                     i2l7110 0A60                       i2l7022 07EC                       i2l4640 484C  
                     i2l4632 4816                       i2l5256 443A                       i2l7104 0A4E  
                     i2l7112 0A64                       i2l7024 07F6                       i2l7008 078A  
                     i2l5522 2598                       i2l7122 0A82                       i2l7034 0832  
                     i2l7042 0848                       i2l4644 4862                       i2l4636 4824  
                     i2l5188 518A                       i2l4900 4AE4                       i2l5532 3000  
                     i2l7108 0A5A                       i2l7036 083A                       i2l7028 080C  
                     i2l4646 4880                       i2l4638 482E                       i2l4830 27D6  
                     i2l4814 4CAE                       i2l6510 14D6                       i2l6502 1478  
                     i2l7118 0A7A                       i2l7054 08E8                       i2l7038 0842  
                     i2l4648 488A                       i2l4816 4CBA                       i2l6600 167A  
                     i2l6512 14DA                       i2l5474 4F0A                       i2l4922 3E82  
                     i2l4906 4B10                       i2l5538 3022                       i2l6450 3C34  
                     i2l6602 1680                       i2l6610 170A                       i2l6530 154A  
                     i2l5476 4F16                       i2l4860 285C                       i2l4852 2830  
                     i2l4836 2800                       i2l4940 3EC4                       i2l4916 3E5A  
                     i2l6604 16C4                       i2l6612 1720                       i2l6516 14E0  
                     i2l6460 4DB6                       i2l7068 0928                       i2l4870 2890  
                     i2l4862 2866                       i2l4950 3EEC                       i2l5494 2438  
                     i2l6438 3B64                       i2l6614 1726                       i2l6550 1598  
                     i2l6534 1564                       i2l6518 1514                       i2l7094 0A12  
                  ??i2_floor 0044                       i2l4872 289A                       i2l4864 286E  
                     i2l4936 3EB4                       i2l5488 2400                       i2l5920 4FD0  
                     i2l6536 1568                       i2l6616 172E                       i2l6456 4DAE  
                     i2l6800 00E0                       i2l4858 2852                       i2l4946 3EDC  
                     i2l5930 4FF0                       i2l5922 4FD4                       i2l6490 1436  
                     i2l5818 53B2                       i2l6466 4DD2                       i2l7098 0A28  
                     i2l4964 3D6A                       i2l5940 5148                       i2l5908 543A  
                     i2l6572 15F4                       i2l6548 1594                       i2l6564 15C4  
                     i2l6492 1444                       i2l6812 012A                       i2l5870 4B38  
                     i2l4878 28DA                       i2l4982 3DD0                       i2l5918 4FC8  
                     i2l5942 514C                       i2l6590 164C                       i2l6566 15DA  
                     i2l6486 1426                       i2l6902 03E2                       i2l6822 0166  
                  ??i2_ldexp 0039                       i2l5880 4B5A                       i2l5864 4B28  
                     i2l4888 290A                       i2l4896 4AB4                       i2l4992 3DF8  
                     i2l5960 2976                       i2l6592 1654                       i2l6584 1636  
                     i2l6576 1618                       i2l6496 144A                       i2l6816 0140  
                     i2l4994 3E04                       i2l4986 3DE0                       i2l5946 5160  
                     i2l5938 5140                       i2l6578 1620                       i2l6930 04D4  
                     i2l6922 04A0                       i2l6842 023E                       i2l5876 4B4E  
                     i2l5892 4B80                       i2l4996 3E0A                       i2l6596 1668  
                     i2l6908 0408                       i2l6860 029E                       i2l6852 027A  
                     i2l6836 01FE                       i2l5878 4B56                       i2l5974 29F2  
                     i2l5966 298E                       i2l6950 0592                       i2l6926 04BE  
                     i2l6870 02DA                       i2l6854 027E                       i2l6846 0254  
                     i2l6838 020A                       i2l6790 0086                       i2l5896 4B8E  
                     i2l5888 4B76                       i2l6936 04FA                       i2l6880 0316  
                     i2l6856 0288                       i2l5978 2A14                       i2l6954 05B0  
                     i2l6874 02F0                       i2l6866 02C4                       i2l6794 009C  
                     i2l6964 05EC                       i2l6958 05C6                       i2l6894 03AE  
                  ??i2_frexp 0006                       i2l6978 0684                       i2l6898 03CC  
                     i2l6998 074E             __end_of___lwtoft 531A                       u434_41 2794  
                     u435_41 27A8                       u460_41 3E6A                       u464_41 3D4E  
                     u490_41 404A                       u458_41 3E42                       u488_41 4022  
                     _TMR0IE 007F95                       _TMR0IF 007F92                    ??i2_putch 0003  
                     _TMR1IE 007CE8                       _TMR1IF 007CF0                       _TMR1CS 007E69  
                     _TMR3IE 007D01                       _TMR3IF 007D09                       _TMR3CS 007D89  
                     _TMR0ON 007EAF                       _TMR1ON 007E68                       _TMR3ON 007D88  
                     _SSPADD 000FC8                       _TRISC3 007CA3                       _TRISC4 007CA4  
                     _SSPBUF 000FC9                  i2frexp@eptr 0004                       i2exp@x 0049  
                     i2log@x 0034                       i2pow@x 0052                       i2pow@y 0055  
                ?i2_savedata 0001               __CFG_XINST$OFF 000000     __size_of_eeprom_readbyte 0018  
          ?_read_colorsensor 0001                       ___ftge 4450                       ___wmul 525C  
         ??_read_colorsensor 0093                    ??___awdiv 0094                    ??___ftadd 00B1  
             __CFG_STVREN$ON 000000                    ??___awmod 0094                    ??___ftdiv 009E  
                  ??___ftneg 0093                    ??___lldiv 0098                    ??___ftmul 00A2  
                  ??___ftsub 00BD                    ??___fttol 00BB                    ??___lwdiv 0094  
                  ??___lwmod 009B                dec_to_hex@num 00DB               i2___altoft@exp 003F  
                     clear_0 4F86                       clear_1 4F92                       clear_2 4F9E  
           ___awdiv@quotient 0096              ___awmod@divisor 0092              ___awmod@counter 0094  
                  ??_lcdInst 0092                       _printf 1046               i2___awdiv@sign 0006  
                     floor@i 00D3                       floor@x 00D0        ___ftmul@f3_as_product 00A6  
                  ??_initLCD 0093             __end_of_savedata 1A24                    ??_isdigit 0090  
          __end_ofi2___awdiv 4B98            __end_ofi2___ftadd 2930            __end_ofi2___ftdiv 40F8  
             i2___ftadd@exp1 0027               i2___ftadd@exp2 0026            __end_ofi2___ftneg 5402  
          __end_ofi2___ftmul 3F26            __end_ofi2___ftsub 51B4            __end_ofi2___fttol 3E32  
             i2___ftadd@sign 0025            __end_ofi2___lwdiv 5004                 __mediumconst FDF2  
          __end_ofi2___lwmod 5174                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_standby 00B2            __end_ofi2_lcdInst 54E6  
          __end_ofi2_isdigit 5442             __end_ofexp@coeff FE3B         __size_of_bottle_time 0036  
           __end_oflog@coeff FE56             _eeprom_writebyte 5344               i2___ftdiv@cntr 0012  
                 __accesstop 0080      __end_of__initialization 4FA4                   ___altoft@c 00C6  
        __size_ofi2___altoft 0078               i2___ftdiv@sign 0017                   ___ftadd@f1 00AB  
                 ___ftadd@f2 00AE          __size_ofi2___awtoft 0038          __size_ofi2___ftpack 00AE  
                 ___ftge@ff1 00A7                   ___ftge@ff2 00AA          __size_ofi2___lltoft 005C  
               eval_poly@res 00C0                ___rparam_used 000001                   ___ftdiv@f1 0098  
                 ___ftdiv@f2 009B                   ___ftdiv@f3 00A2             i2dec_to_hex@temp 006B  
                 ___ftneg@f1 0090                   ___awtoft@c 0098               i2___ftpack@arg 0001  
             i2___ftpack@exp 0004                __end_ofi2_exp 25D0                __end_ofi2_log 3102  
                 ___ftmul@f1 009C                   ___ftmul@f2 009F                __end_ofi2_pow 2AA6  
                 ___ftsub@f1 00B7                   ___ftsub@f2 00BA            i2_eeprom_readbyte 5472  
                 ___fttol@f1 00B7           i2___lwmod@dividend 0008               __pcstackCOMRAM 0001  
               __pidataBANK1 54E6                   ___lltoft@c 0098              ??_bottle_count1 00B2  
            ??_bottle_count2 00B2              ??_bottle_count3 00B2              ??_bottle_count4 00B2  
         ?i2_eeprom_readbyte 0001                __end_of_floor 3A4C                __end_of_ldexp 321A  
              __end_of_frexp 4806               i2___ftmul@cntr 001A               i2___ftmul@sign 001B  
              __end_of_putch 54BE                  i2printf@idx 0017                  i2printf@val 001B  
         __size_of_date_time 00D2               i2___fttol@exp1 0036                   ___lwtoft@c 0098  
             i2___fttol@lval 0032                    ?i2___ftge 0001                    ?i2___wmul 0001  
         __size_of_lcdNibble 0060          ??i2_eeprom_readbyte 0003                  i2putch@data 0003  
                    ??i2_exp 004C                      ??i2_log 0037                      ??i2_pow 0058  
                  ?i2_printf 000D          __size_ofi2_savedata 025A             _flag_bottle_high 0135  
__size_of_I2C_ColorSens_Init 00FE                      ??_floor 00D3                      ??_ldexp 00C8  
                    ??_frexp 0095   __end_ofi2_eeprom_writebyte 5392               i2___lltoft@exp 0011  
       __end_of_bottle_count 394E                   _dec_to_hex 321A                      ??_putch 0092  
                 __pbssBANK0 00DF                   __pbssBANK1 0100           __size_of_eval_poly 00EC  
  __end_ofi2_eeprom_readbyte 5488           __size_of_read_time 0076                      ?___ftge 00A7  
               ?i2_lcdNibble 0001                      ?___wmul 0090                    ?___altoft 00C6  
                 _flag_eskaC 0137            ??_eeprom_readbyte 0092                    ?___awtoft 0098  
                  ?___ftpack 0090                      ?_printf 009C           __size_of_operation 0572  
                  ?___lltoft 0098                   _flag_yopNC 013B              _bottle_read_bot 012B  
                 ??i2___ftge 0007              _bottle_read_top 012D                      _T1CKPS0 007E6C  
                    _T1CKPS1 007E6D                      _T3CKPS0 007D8C                    ?___lwtoft 0098  
                    _T3CKPS1 007D8D                   ??i2___wmul 0005     i2eeprom_readbyte@address 0001  
               i2floor@expon 0044                 ?i2_eval_poly 0028                 i2eval_poly@d 002B  
               i2eval_poly@n 002D                 i2eval_poly@x 0028                   ??i2_printf 0013  
               i2ldexp@value 0034                      _SSPCON1 000FC6                      _SSPCON2 000FC5  
                 _color_high 0117                      _SSPSTAT 000FC7                 ?i2_read_time 0001  
                    i2_floor 40F8                      i2_ldexp 4518                      i2_frexp 49F4  
          __end_of_date_time 437E                      i2_putch 54CE                 i2frexp@value 0001  
          _bottle_count_disp 0172                      i2pow@yi 005F  __size_ofi2_I2C_Master_Start 0008  
          __end_of_lcdNibble 4EA4  __size_ofi2_I2C_Master_Write 000A                ?_operationend 0001  
                    __Hparam 0000                    ?_savedata 0001                      __Lparam 0000  
            __size_of___ftge 00C8                      ___awdiv 45DE                      ___ftadd 1CEC  
              i2dec_to_hex@i 006D                      ___awmod 48B4                      ___ftdiv 2D54  
                    ___ftneg 5292                      ___lldiv 469C              __size_of___wmul 0036  
                    ___ftmul 2AA6                      ___ftsub 50A2                      ___fttol 2EA0  
                    ___lwdiv 4C14                      ___lwmod 4DE2                 ??i2___altoft 003B  
                 _curr_state 00ED                   ??___altoft 00CA                      __pcinit 4F60  
               ??i2___awtoft 000C                 ??i2___ftpack 0006                   ??___awtoft 009B  
                 ??___ftpack 0095            __end_of_eval_poly 4012      i2___ftmul@f3_as_product 0017  
                    __ramtop 1000                 ??i2___lltoft 000D                      _lcdInst 54BE  
                 ??___lltoft 009C                      __ptext0 1A24                      __ptext1 51B4  
                    __ptext2 5442                      __ptext3 0AD4                      __ptext4 1748  
                    __ptext5 5344                      __ptext6 545A                      __ptext7 4D04  
                    __ptext8 3C46                      __ptext9 321A              __size_of_printf 03D6  
                 ??___lwtoft 009B               dec_to_hex@temp 0166                      _initLCD 5004  
          __end_of_hexpowers FE16                i2_isdigit$965 0002                      _dpowers FE04  
               i2read_time@i 0004                 __size_of_exp 023A                 __size_of_log 0150  
                    _isdigit 531A                 __size_of_isr 0ACC  __size_ofi2_read_colorsensor 00D6  
             _operation$1412 016E                 __size_of_pow 01B4             ___awmod@dividend 0090  
            i2___altoft@sign 0040            __end_of_read_time 4D7A     __size_of_I2C_Master_Init 0060  
   __size_of_I2C_Master_Read 002E     __size_of_I2C_Master_Wait 0014                   date_time@i 00B2  
   __size_of_I2C_Master_Stop 0008                      _timeset FE16                      _standby 51B4  
                ?_dec_to_hex 00DB               __pintcode_body 0012         end_of_initialization 4FA4  
                    exp@sign 014E      eeprom_writebyte@address 0092                __Lmediumconst FDF2  
                    int_func 0012          i2___wmul@multiplier 0001            __end_of_operation 1046  
         __end_ofi2___altoft 4D04               _operation_disp 013D           __end_ofi2___awtoft 5226  
         __end_ofi2___ftpack 48B4               _operation_time 013F               ??_operationend 00B2  
 __size_ofi2_eeprom_readbyte 0016    __size_of_I2C_Master_Start 0008           __end_ofi2___lltoft 4F60  
  __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0094                 ??i2_savedata 0006  
                    pow@sign 015B                   ??_savedata 0095              ___lldiv@counter 009C  
             i2eval_poly@res 0031                      printf@c 00B1                      printf@f 009C  
           I2C_Master_Init@c 009D             I2C_Master_Read@a 0091                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
      __end_of_emergencystop 5424     __end_of_eeprom_writebyte 536C                    _PORTAbits 000F80  
      __size_of_bottle_count 0104    __size_of_read_colorsensor 00F8            i2_I2C_Master_Read 5392  
          i2_I2C_Master_Wait 549C            i2_I2C_Master_Stop 5514           __end_ofi2_savedata 21AE  
                  i2___awdiv 4B14                    i2___ftadd 2784                    i2___ftdiv 4012  
                  i2___ftneg 53DE            i2___lwdiv@divisor 0003                    i2___ftmul 3E32  
                  i2___ftsub 5174                    i2___fttol 3D3E                    i2___lwdiv 4FB2  
                  i2___lwmod 5132            i2___lwdiv@counter 0007           ?i2_I2C_Master_Read 0001  
         ?i2_I2C_Master_Wait 0001           ?i2_I2C_Master_Stop 0001                   _start_time 007A  
                  i2_lcdInst 54DA                  ___ftdiv@exp 00A5                  printf@width 00AF  
            i2___awtoft@sign 000C           i2___awdiv@dividend 0001          ??i2_I2C_Master_Read 0002  
            i2___ftpack@sign 0005                    i2_isdigit 5424          ??i2_I2C_Master_Wait 0001  
        ??i2_I2C_Master_Stop 0002                  ___ftmul@exp 00A5            i2_dec_to_hex$1675 0065  
          i2_dec_to_hex$1676 0068                 _bottle_count 384A               __end_of___ftge 4518  
                  i2exp@sign 0051               __end_of___wmul 5292          __size_of_dec_to_hex 0114  
       __size_ofi2_lcdNibble 004E                i2lcdInst@data 0003         eeprom_writebyte@data 0094  
                 floor@expon 00D6             i2___wmul@product 0005               __end_of_printf 141C  
               i2printf@flag 001D    __end_ofi2_I2C_Master_Read 53B8    __end_ofi2_I2C_Master_Wait 54AE  
               i2printf@prec 001A          start_initialization 4F60    __end_ofi2_I2C_Master_Stop 551C  
          __size_ofi2___ftge 0090                    i2pow@sign 005E                   eval_poly@d 00BA  
                 eval_poly@n 00BC                   eval_poly@x 00B7           i2___awdiv@quotient 0007  
          __size_ofi2___wmul 0026                   ldexp@value 00C3                  __end_of_exp 23E8  
                __end_of_log 2D54                  __end_of_isr 0AD4                  __end_of_pow 2784  
                  i2printf@c 0020                    i2printf@f 000D                ??_bottle_time 00B2  
      i2I2C_Master_Read@temp 0003         __size_ofi2_eval_poly 00D2              i2___fttol@sign1 0031  
                 ?i2___awdiv 0001                   ?i2___ftadd 001C                   ?i2___ftdiv 0009  
                 ?i2___ftneg 0001                   ?i2___ftmul 000D                   ?i2___ftsub 0028  
                 ?i2___fttol 0028                   ?i2___lwdiv 0001                   ?i2___lwmod 0008  
          __size_ofi2_printf 032C                   frexp@value 0090            ??_I2C_Master_Init 00A1  
          ??_I2C_Master_Read 0091            ??_I2C_Master_Wait 0090                   ?i2_lcdInst 0001  
          ??_I2C_Master_Stop 0091         __size_ofi2_read_time 0068              _eeprom_readbyte 545A  
                 ?i2_isdigit 0001           i2_eeprom_writebyte 536C                     ??___ftge 00AD  
                   ??___wmul 0094                  __pdataBANK1 0172             __CFG_LPT1OSC$OFF 000000  
      __end_of_bottle_count1 384A        __end_of_bottle_count2 3746        __end_of_bottle_count3 3642  
      __end_of_bottle_count4 353E          ?i2_eeprom_writebyte 0003                     ??_printf 00A4  
          __size_of___altoft 009E                   read_time@i 0093            __size_of___awtoft 0044  
          __size_of___ftpack 010C            __size_of___lltoft 007C   __end_of_I2C_ColorSens_Init 3B4A  
                __pbssCOMRAM 0076         __end_of_operationend 545A              i2dec_to_hex@num 0063  
          __size_of___lwtoft 002A                __pcstackBANK0 0080                __pcstackBANK1 0149  
          i2___lwmod@divisor 000A            i2___lwmod@counter 000C                ?i2_dec_to_hex 0063  
       ??i2_eeprom_writebyte 0006                     ?i2_floor 0041                     ?i2_ldexp 0034  
                   ?i2_frexp 0001                     ?i2_putch 0001          __end_of_bottle_time 525C  
           _I2C_Master_Start 550C          i2I2C_Master_Write@d 0002             _I2C_Master_Write 54F0  
                  _date_time 42AC             ___lwdiv@dividend 0090            __CFG_CCP2MX$PORTC 000000  
          _operation_timeout 0141                    __pintcode 0008                __pmediumconst FDF2  
                  _lcdNibble 4E44            __size_of_savedata 02DC                     ?___awdiv 0090  
                   ?___ftadd 00AB                     ?___awmod 0090                     ?___ftdiv 0098  
                   ?___ftneg 0090                     ?___lldiv 0090                     ?___ftmul 009C  
                   ?___ftsub 00B7                     ?___fttol 00B7                     ?___lwdiv 0090  
                   ?___lwmod 0097                     ?_lcdInst 0001             dec_to_hex@hexnum 016A  
                  _color_low 011B                     ?_initLCD 0001                    _colorprev 0108  
                   ?_isdigit 0001             _read_colorsensor 3C46   __size_ofi2_I2C_Master_Read 0026  
 __size_ofi2_I2C_Master_Wait 0012                    _eval_poly 3F26   __size_ofi2_I2C_Master_Stop 0008  
             __size_ofi2_exp 01E8               __size_ofi2_log 011E                  _flag_bottle 0133  
             __size_ofi2_pow 0176                  _flag_picbug 00E9                    _hexpowers FE0E  
                   ?_standby 0001             ___lwdiv@quotient 0094               ??i2_dec_to_hex 0065  
                ??i2___awdiv 0005                  ??i2___ftadd 0022               __size_of_floor 00FE  
             __size_of_ldexp 0118                  ??i2___ftdiv 000F               __size_of_frexp 00AE  
                ??i2___ftneg 0004                 ??_dec_to_hex 00DD                  ??i2___ftmul 0013  
                ??i2___ftsub 002E                  ??i2___fttol 002C                  ??i2___lwdiv 0005  
                ??i2___lwmod 000C      __end_of_eeprom_readbyte 5472                    _read_time 4D04  
             __size_of_putch 0010   __end_ofi2_I2C_Master_Start 5524   __end_ofi2_I2C_Master_Write 5504  
                ??i2_lcdInst 0003               ___wmul@product 0094                     _LATAbits 000F89  
                   _LATCbits 000F8B                     _LATDbits 000F8C                  ??i2_isdigit 0001  
                 ?_date_time 0001                     i2u500_40 4550                     i2u500_48 4552  
              i2exp@exponent 004F                     _PIR2bits 000FA1                     i2u535_40 2478  
                  _operation 0AD4                     i2u536_40 247A                     i2u473_40 4A44  
                   i2u466_40 3D88                     i2u473_48 4A46                     i2u466_45 3D80  
                   i2u497_40 4140                     i2u577_40 53B0                     i2u599_40 29DA  
                   i2u695_40 0954                     i2u890_47 506C                     i2u891_47 5074  
                   i2u892_47 5094                     i2u893_47 509C                i2ldexp@newexp 0037  
                   i2u888_47 00F4                     i2u889_47 0A8A             __CFG_WDTPS$32768 000000  
                 ?_lcdNibble 0001                i2log@exponent 0037           __end_of_dec_to_hex 332E  
 __end_ofi2_read_colorsensor 42AC            ?_eeprom_writebyte 0092            ___wmul@multiplier 0090  
                   i2___ftge 4A84                     i2___wmul 53B8                lcdNibble@data 0091  
                 printf@flag 00AE                lcdNibble@temp 0090                   printf@prec 00AB  
         ??_eeprom_writebyte 0095                   ?_eval_poly 00B7            i2___awdiv@divisor 0003  
          i2___awdiv@counter 0005                     i2_printf 141C                     i2floor@i 0046  
                   i2floor@x 0041                  _bottle_time 5226          I2C_Master_Read@temp 0092  
                  copy_data0 4F74           _bottle_count_array 00DF                   ?_read_time 0001  
         dec_to_hex@quotient 016C             __size_ofi2_floor 00DE             __size_ofi2_ldexp 00C6  
           __size_ofi2_frexp 0090             __size_ofi2_putch 000C                    frexp@eptr 0093  
                 _EECON1bits 000FA6                     __Hrparam 0000                   ?_operation 0001  
                   __Lrparam 0000           __CFG_BOREN$SBORDIS 000000                  dec_to_hex@i 0168  
           __size_of___awdiv 00BE             __size_of___ftadd 0268             __size_of___awmod 00A2  
           __size_of___ftdiv 014C    i2eeprom_writebyte@address 0003             __size_of___ftneg 0030  
      i2___wmul@multiplicand 0003             __size_of___lldiv 00BC                     ___altoft 4956  
           __size_of___ftmul 015E             __size_of___ftsub 004C             __size_of___fttol 0144  
           __size_of___lwdiv 0078             __size_of___lwmod 0062        __size_of_operationend 0018  
                   ___awtoft 50EE                     ___ftpack 332E                     ___lltoft 4B98  
              _flag_top_read 0139                  _isdigit$965 0091           i2I2C_Master_Read@a 0002  
                   ___lwtoft 52F0             __size_of_lcdInst 0010                     _exp$1415 0149  
            _I2C_Master_Init 4EA4              _I2C_Master_Read 52C2             __size_of_initLCD 0050  
            _I2C_Master_Wait 5488              _I2C_Master_Stop 5504                     _isr$1674 0074  
           __size_of_isdigit 002A              ___lwdiv@divisor 0092              ___lwdiv@counter 0096  
                   __ptext10 25D0                     __ptext11 2C04                     __ptext20 2AA6  
                   __ptext12 21AE                     __ptext21 50A2                     __ptext13 3102  
                   __ptext30 5004                     __ptext22 1CEC                     __ptext14 394E  
                   __ptext31 5402                     __ptext23 5292                     __ptext15 4758  
                   __ptext40 1046                     __ptext32 42AC                     __ptext24 2D54  
                   __ptext16 2EA0                     __ptext41 54AE                     __ptext33 52C2  
                   __ptext25 50EE                     __ptext17 4450                     __ptext50 469C  
                   __ptext42 531A                     __ptext34 5226                     __ptext26 4B98  
                   __ptext18 4956                     __ptext51 3A4C                     __ptext43 525C  
                   __ptext35 343A                     __ptext27 45DE                     __ptext19 3F26  
                   __ptext60 4D7A                     __ptext52 54F0                     __ptext44 4DE2  
                   __ptext36 353E                     __ptext28 52F0                     __ptext61 41D6  
                   __ptext53 5504                     __ptext45 4C14                     __ptext37 3642  
                   __ptext29 332E                     __ptext70 5132                     __ptext62 54FA  
                   __ptext54 550C                     __ptext46 54BE                     __ptext38 3746  
                   __ptext71 4FB2                     __ptext63 5514                     __ptext55 5488  
                   __ptext47 4E44                     __ptext39 384A                     __ptext80 49F4  
                   __ptext72 54DA                     __ptext64 551C                     __ptext48 48B4  
                   __ptext81 3D3E                     __ptext73 5054                     __ptext65 5392  
                   __ptext57 1F54                     __ptext49 4EA4                     __ptext90 4012  
                   __ptext82 4A84                     __ptext74 3B4A                     __ptext66 549C  
                   __ptext58 536C                     __ptext91 51EE                     __ptext83 4C8C  
                   __ptext75 2930                     __ptext67 141C                     __ptext59 5472  
                   __ptext92 4F04                     __ptext84 437E                     __ptext76 2FE4  
                   __ptext68 54CE                     __ptext93 4806                     __ptext85 53B8  
                   __ptext77 23E8                     __ptext69 5424                     __ptext94 4B14  
                   __ptext86 3E32                     __ptext78 4518                     __ptext87 5174  
                   __ptext79 40F8                     __ptext88 2784                     __ptext89 53DE  
                   _end_time 0076             __size_of_standby 003A                     _pow$1413 0155  
                   _pow$1414 0158             ?_eeprom_readbyte 0090       __size_of_emergencystop 0022  
              __size_of_main 02C8              _dec_to_hex$1410 0160              _dec_to_hex$1411 0163  
                ??_date_time 00B2                     _savedata 1748                 _operationend 5442  
              ??i2_lcdNibble 0001                  ??_lcdNibble 0090                     int$flags 007F  
       __end_ofi2_dec_to_hex 3C46                    printf@idx 00A8                    printf@val 00AC  
                   exp@coeff FE1D                     log@coeff FE3B                    putch@data 0092  
   __end_of_I2C_Master_Start 5514                ??i2_eval_poly 002F     __end_of_I2C_Master_Write 54FA  
               _servo0_timer 0143                   _INTCONbits 000FF2                  ??_eval_poly 00BE  
               _servo1_timer 0145                     isdigit@c 0092                ??i2_read_time 0004  
                ??_read_time 0093                     intlevel2 0000             ___lwmod@dividend 0097  
           ___lldiv@dividend 0090           _I2C_ColorSens_Init 3A4C     __end_of_read_colorsensor 3D3E  
                ??_operation 00DD          ?_I2C_ColorSens_Init 0001                     printf@ap 00A9  
    __end_of_I2C_Master_Init 4F04                  _servo0_flag 007E      __end_of_I2C_Master_Read 52F0  
                _servo1_flag 00EE      __end_of_I2C_Master_Wait 549C      __end_of_I2C_Master_Stop 550C  
                lcdInst@data 0092                _emergencystop 5402          __end_ofi2_lcdNibble 50A2  
           ___lldiv@quotient 0098            I2C_Master_Write@d 0091              ___lwmod@divisor 0099  
            ___lwmod@counter 009B       eeprom_readbyte@address 0090         ??_I2C_ColorSens_Init 0093  
        __end_ofi2_eval_poly 4450  __size_ofi2_eeprom_writebyte 0026       __size_of_bottle_count1 0104  
     __size_of_bottle_count2 0104       __size_of_bottle_count3 0104       __size_of_bottle_count4 0104  
        __end_ofi2_read_time 4DE2  
