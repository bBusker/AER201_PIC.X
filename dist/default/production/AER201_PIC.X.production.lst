

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Mon Feb 06 01:08:02 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.40
    50                           ; Generated 01/12/2016 GMT
    51                           ; 
    52                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4620 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataCOMRAM
    85  000F7A                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _bottle_count_disp
    89  000F7A  FFFF               	dw	65535
    90                           
    91                           	psect	mediumconst
    92  00FE3A                     __pmediumconst:
    93                           	opt stack 0
    94  00FE3A  00                 	db	0
    95  00FE3B                     _keys:
    96                           	opt stack 0
    97  00FE3B  31                 	db	49
    98  00FE3C  32                 	db	50
    99  00FE3D  33                 	db	51
   100  00FE3E  41                 	db	65
   101  00FE3F  34                 	db	52
   102  00FE40  35                 	db	53
   103  00FE41  36                 	db	54
   104  00FE42  42                 	db	66
   105  00FE43  37                 	db	55
   106  00FE44  38                 	db	56
   107  00FE45  39                 	db	57
   108  00FE46  43                 	db	67
   109  00FE47  2A                 	db	42
   110  00FE48  30                 	db	48
   111  00FE49  23                 	db	35
   112  00FE4A  44                 	db	68
   113  00FE4B  00                 	db	0
   114  00FE4C                     __end_of_keys:
   115                           	opt stack 0
   116  00FE4C                     _dpowers:
   117                           	opt stack 0
   118  00FE4C  0001               	dw	1
   119  00FE4E  000A               	dw	10
   120  00FE50  0064               	dw	100
   121  00FE52  03E8               	dw	1000
   122  00FE54  2710               	dw	10000
   123  00FE56                     __end_of_dpowers:
   124                           	opt stack 0
   125  00FE56                     _hexpowers:
   126                           	opt stack 0
   127  00FE56  0001               	dw	1
   128  00FE58  0010               	dw	16
   129  00FE5A  0100               	dw	256
   130  00FE5C  1000               	dw	4096
   131  00FE5E                     __end_of_hexpowers:
   132                           	opt stack 0
   133  00FE5E                     _timeset:
   134                           	opt stack 0
   135  00FE5E  50                 	db	80
   136  00FE5F  35                 	db	53
   137  00FE60  21                 	db	33
   138  00FE61  08                 	db	8
   139  00FE62  05                 	db	5
   140  00FE63  02                 	db	2
   141  00FE64  17                 	db	23
   142  00FE65                     __end_of_timeset:
   143                           	opt stack 0
   144  0000                     _ADCON0	set	4034
   145  0000                     _ADCON1	set	4033
   146  0000                     _INTCONbits	set	4082
   147  0000                     _LATA	set	3977
   148  0000                     _LATB	set	3978
   149  0000                     _LATC	set	3979
   150  0000                     _LATD	set	3980
   151  0000                     _LATDbits	set	3980
   152  0000                     _LATE	set	3981
   153  0000                     _PORTB	set	3969
   154  0000                     _SSPADD	set	4040
   155  0000                     _SSPBUF	set	4041
   156  0000                     _SSPCON1	set	4038
   157  0000                     _SSPCON2	set	4037
   158  0000                     _SSPSTAT	set	4039
   159  0000                     _TRISA	set	3986
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISC	set	3988
   162  0000                     _TRISD	set	3989
   163  0000                     _TRISE	set	3990
   164  0000                     _ACKDT	set	32301
   165  0000                     _ACKEN	set	32300
   166  0000                     _INT1IE	set	32643
   167  0000                     _INT1IF	set	32640
   168  0000                     _PEN	set	32298
   169  0000                     _RCEN	set	32299
   170  0000                     _RSEN	set	32297
   171  0000                     _SEN	set	32296
   172  0000                     _TRISC3	set	31907
   173  0000                     _TRISC4	set	31908
   174  0000                     _nRBPU	set	32655
   175  00FE65                     STR_21:
   176  00FE65  52                 	db	82	;'R'
   177  00FE66  75                 	db	117	;'u'
   178  00FE67  6E                 	db	110	;'n'
   179  00FE68  6E                 	db	110	;'n'
   180  00FE69  69                 	db	105	;'i'
   181  00FE6A  6E                 	db	110	;'n'
   182  00FE6B  67                 	db	103	;'g'
   183  00FE6C  7E                 	db	126
   184  00FE6D  7E                 	db	126
   185  00FE6E  7E                 	db	126
   186  00FE6F  20                 	db	32
   187  00FE70  20                 	db	32
   188  00FE71  20                 	db	32
   189  00FE72  20                 	db	32
   190  00FE73  20                 	db	32
   191  00FE74  20                 	db	32
   192  00FE75  20                 	db	32
   193  00FE76  20                 	db	32
   194  00FE77  20                 	db	32
   195  00FE78  20                 	db	32
   196  00FE79  20                 	db	32
   197  00FE7A  20                 	db	32
   198  00FE7B  20                 	db	32
   199  00FE7C  20                 	db	32
   200  00FE7D  00                 	db	0
   201  00FE7E                     STR_20:
   202  00FE7E  52                 	db	82	;'R'
   203  00FE7F  75                 	db	117	;'u'
   204  00FE80  6E                 	db	110	;'n'
   205  00FE81  6E                 	db	110	;'n'
   206  00FE82  69                 	db	105	;'i'
   207  00FE83  6E                 	db	110	;'n'
   208  00FE84  67                 	db	103	;'g'
   209  00FE85  7E                 	db	126
   210  00FE86  7E                 	db	126
   211  00FE87  20                 	db	32
   212  00FE88  20                 	db	32
   213  00FE89  20                 	db	32
   214  00FE8A  20                 	db	32
   215  00FE8B  20                 	db	32
   216  00FE8C  20                 	db	32
   217  00FE8D  20                 	db	32
   218  00FE8E  20                 	db	32
   219  00FE8F  20                 	db	32
   220  00FE90  20                 	db	32
   221  00FE91  20                 	db	32
   222  00FE92  20                 	db	32
   223  00FE93  20                 	db	32
   224  00FE94  20                 	db	32
   225  00FE95  00                 	db	0
   226  00FE96                     STR_19:
   227  00FE96  52                 	db	82	;'R'
   228  00FE97  75                 	db	117	;'u'
   229  00FE98  6E                 	db	110	;'n'
   230  00FE99  6E                 	db	110	;'n'
   231  00FE9A  69                 	db	105	;'i'
   232  00FE9B  6E                 	db	110	;'n'
   233  00FE9C  67                 	db	103	;'g'
   234  00FE9D  7E                 	db	126
   235  00FE9E  20                 	db	32
   236  00FE9F  20                 	db	32
   237  00FEA0  20                 	db	32
   238  00FEA1  20                 	db	32
   239  00FEA2  20                 	db	32
   240  00FEA3  20                 	db	32
   241  00FEA4  20                 	db	32
   242  00FEA5  20                 	db	32
   243  00FEA6  20                 	db	32
   244  00FEA7  20                 	db	32
   245  00FEA8  20                 	db	32
   246  00FEA9  20                 	db	32
   247  00FEAA  20                 	db	32
   248  00FEAB  20                 	db	32
   249  00FEAC  00                 	db	0
   250  00FEAD                     STR_18:
   251  00FEAD  54                 	db	84	;'T'
   252  00FEAE  69                 	db	105	;'i'
   253  00FEAF  6D                 	db	109	;'m'
   254  00FEB0  65                 	db	101	;'e'
   255  00FEB1  3A                 	db	58	;':'
   256  00FEB2  20                 	db	32
   257  00FEB3  39                 	db	57	;'9'
   258  00FEB4  32                 	db	50	;'2'
   259  00FEB5  73                 	db	115	;'s'
   260  00FEB6  20                 	db	32
   261  00FEB7  20                 	db	32
   262  00FEB8  20                 	db	32
   263  00FEB9  20                 	db	32
   264  00FEBA  20                 	db	32
   265  00FEBB  20                 	db	32
   266  00FEBC  20                 	db	32
   267  00FEBD  20                 	db	32
   268  00FEBE  20                 	db	32
   269  00FEBF  20                 	db	32
   270  00FEC0  20                 	db	32
   271  00FEC1  20                 	db	32
   272  00FEC2  20                 	db	32
   273  00FEC3  00                 	db	0
   274  00FEC4                     STR_17:
   275  00FEC4  54                 	db	84	;'T'
   276  00FEC5  6F                 	db	111	;'o'
   277  00FEC6  74                 	db	116	;'t'
   278  00FEC7  61                 	db	97	;'a'
   279  00FEC8  6C                 	db	108	;'l'
   280  00FEC9  20                 	db	32
   281  00FECA  4F                 	db	79	;'O'
   282  00FECB  70                 	db	112	;'p'
   283  00FECC  65                 	db	101	;'e'
   284  00FECD  72                 	db	114	;'r'
   285  00FECE  61                 	db	97	;'a'
   286  00FECF  74                 	db	116	;'t'
   287  00FED0  69                 	db	105	;'i'
   288  00FED1  6F                 	db	111	;'o'
   289  00FED2  6E                 	db	110	;'n'
   290  00FED3  20                 	db	32
   291  00FED4  20                 	db	32
   292  00FED5  20                 	db	32
   293  00FED6  20                 	db	32
   294  00FED7  20                 	db	32
   295  00FED8  20                 	db	32
   296  00FED9  20                 	db	32
   297  00FEDA  00                 	db	0
   298  00FEDB                     STR_4:
   299  00FEDB  44                 	db	68	;'D'
   300  00FEDC  61                 	db	97	;'a'
   301  00FEDD  74                 	db	116	;'t'
   302  00FEDE  65                 	db	101	;'e'
   303  00FEDF  3A                 	db	58	;':'
   304  00FEE0  20                 	db	32
   305  00FEE1  25                 	db	37
   306  00FEE2  30                 	db	48	;'0'
   307  00FEE3  32                 	db	50	;'2'
   308  00FEE4  78                 	db	120	;'x'
   309  00FEE5  2F                 	db	47
   310  00FEE6  25                 	db	37
   311  00FEE7  30                 	db	48	;'0'
   312  00FEE8  32                 	db	50	;'2'
   313  00FEE9  78                 	db	120	;'x'
   314  00FEEA  2F                 	db	47
   315  00FEEB  25                 	db	37
   316  00FEEC  30                 	db	48	;'0'
   317  00FEED  32                 	db	50	;'2'
   318  00FEEE  78                 	db	120	;'x'
   319  00FEEF  20                 	db	32
   320  00FEF0  20                 	db	32
   321  00FEF1  00                 	db	0
   322  00FEF2                     STR_5:
   323  00FEF2  54                 	db	84	;'T'
   324  00FEF3  69                 	db	105	;'i'
   325  00FEF4  6D                 	db	109	;'m'
   326  00FEF5  65                 	db	101	;'e'
   327  00FEF6  3A                 	db	58	;':'
   328  00FEF7  20                 	db	32
   329  00FEF8  25                 	db	37
   330  00FEF9  30                 	db	48	;'0'
   331  00FEFA  32                 	db	50	;'2'
   332  00FEFB  78                 	db	120	;'x'
   333  00FEFC  3A                 	db	58	;':'
   334  00FEFD  25                 	db	37
   335  00FEFE  30                 	db	48	;'0'
   336  00FEFF  32                 	db	50	;'2'
   337  00FF00  78                 	db	120	;'x'
   338  00FF01  3A                 	db	58	;':'
   339  00FF02  25                 	db	37
   340  00FF03  30                 	db	48	;'0'
   341  00FF04  32                 	db	50	;'2'
   342  00FF05  78                 	db	120	;'x'
   343  00FF06  20                 	db	32
   344  00FF07  20                 	db	32
   345  00FF08  00                 	db	0
   346  00FF09                     STR_22:
   347  00FF09  30                 	db	48	;'0'
   348  00FF0A  31                 	db	49	;'1'
   349  00FF0B  32                 	db	50	;'2'
   350  00FF0C  33                 	db	51	;'3'
   351  00FF0D  34                 	db	52	;'4'
   352  00FF0E  35                 	db	53	;'5'
   353  00FF0F  36                 	db	54	;'6'
   354  00FF10  37                 	db	55	;'7'
   355  00FF11  38                 	db	56	;'8'
   356  00FF12  39                 	db	57	;'9'
   357  00FF13  61                 	db	97	;'a'
   358  00FF14  62                 	db	98	;'b'
   359  00FF15  63                 	db	99	;'c'
   360  00FF16  64                 	db	100	;'d'
   361  00FF17  65                 	db	101	;'e'
   362  00FF18  66                 	db	102	;'f'
   363  00FF19  00                 	db	0
   364  00FF1A                     STR_2:
   365  00FF1A  73                 	db	115	;'s'
   366  00FF1B  74                 	db	116	;'t'
   367  00FF1C  61                 	db	97	;'a'
   368  00FF1D  6E                 	db	110	;'n'
   369  00FF1E  64                 	db	100	;'d'
   370  00FF1F  62                 	db	98	;'b'
   371  00FF20  79                 	db	121	;'y'
   372  00FF21  20                 	db	32
   373  00FF22  20                 	db	32
   374  00FF23  20                 	db	32
   375  00FF24  20                 	db	32
   376  00FF25  20                 	db	32
   377  00FF26  20                 	db	32
   378  00FF27  20                 	db	32
   379  00FF28  20                 	db	32
   380  00FF29  20                 	db	32
   381  00FF2A  00                 	db	0
   382  00FF2B                     STR_7:
   383  00FF2B  54                 	db	84	;'T'
   384  00FF2C  6F                 	db	111	;'o'
   385  00FF2D  74                 	db	116	;'t'
   386  00FF2E  61                 	db	97	;'a'
   387  00FF2F  6C                 	db	108	;'l'
   388  00FF30  3A                 	db	58	;':'
   389  00FF31  20                 	db	32
   390  00FF32  31                 	db	49	;'1'
   391  00FF33  30                 	db	48	;'0'
   392  00FF34  20                 	db	32
   393  00FF35  20                 	db	32
   394  00FF36  20                 	db	32
   395  00FF37  20                 	db	32
   396  00FF38  20                 	db	32
   397  00FF39  20                 	db	32
   398  00FF3A  20                 	db	32
   399  00FF3B  00                 	db	0
   400  00FF3C                     STR_3:
   401  00FF3C  50                 	db	80	;'P'
   402  00FF3D  4F                 	db	79	;'O'
   403  00FF3E  52                 	db	82	;'R'
   404  00FF3F  54                 	db	84	;'T'
   405  00FF40  42                 	db	66	;'B'
   406  00FF41  3A                 	db	58	;':'
   407  00FF42  20                 	db	32
   408  00FF43  25                 	db	37
   409  00FF44  64                 	db	100	;'d'
   410  00FF45  20                 	db	32
   411  00FF46  20                 	db	32
   412  00FF47  20                 	db	32
   413  00FF48  20                 	db	32
   414  00FF49  20                 	db	32
   415  00FF4A  20                 	db	32
   416  00FF4B  20                 	db	32
   417  00FF4C  00                 	db	0
   418  00FF4D                     STR_6:
   419  00FF4D  42                 	db	66	;'B'
   420  00FF4E  6F                 	db	111	;'o'
   421  00FF4F  74                 	db	116	;'t'
   422  00FF50  74                 	db	116	;'t'
   423  00FF51  6C                 	db	108	;'l'
   424  00FF52  65                 	db	101	;'e'
   425  00FF53  20                 	db	32
   426  00FF54  43                 	db	67	;'C'
   427  00FF55  6F                 	db	111	;'o'
   428  00FF56  75                 	db	117	;'u'
   429  00FF57  6E                 	db	110	;'n'
   430  00FF58  74                 	db	116	;'t'
   431  00FF59  20                 	db	32
   432  00FF5A  20                 	db	32
   433  00FF5B  20                 	db	32
   434  00FF5C  20                 	db	32
   435  00FF5D  00                 	db	0
   436  00FF5E                     STR_11:
   437  00FF5E  59                 	db	89	;'Y'
   438  00FF5F  4F                 	db	79	;'O'
   439  00FF60  50                 	db	80	;'P'
   440  00FF61  2D                 	db	45
   441  00FF62  43                 	db	67	;'C'
   442  00FF63  41                 	db	65	;'A'
   443  00FF64  50                 	db	80	;'P'
   444  00FF65  2D                 	db	45
   445  00FF66  4C                 	db	76	;'L'
   446  00FF67  42                 	db	66	;'B'
   447  00FF68  4C                 	db	76	;'L'
   448  00FF69  3A                 	db	58	;':'
   449  00FF6A  20                 	db	32
   450  00FF6B  30                 	db	48	;'0'
   451  00FF6C  20                 	db	32
   452  00FF6D  20                 	db	32
   453  00FF6E  00                 	db	0
   454  00FF6F                     STR_10:
   455  00FF6F  59                 	db	89	;'Y'
   456  00FF70  4F                 	db	79	;'O'
   457  00FF71  50                 	db	80	;'P'
   458  00FF72  2D                 	db	45
   459  00FF73  43                 	db	67	;'C'
   460  00FF74  41                 	db	65	;'A'
   461  00FF75  50                 	db	80	;'P'
   462  00FF76  2B                 	db	43
   463  00FF77  4C                 	db	76	;'L'
   464  00FF78  42                 	db	66	;'B'
   465  00FF79  4C                 	db	76	;'L'
   466  00FF7A  3A                 	db	58	;':'
   467  00FF7B  20                 	db	32
   468  00FF7C  31                 	db	49	;'1'
   469  00FF7D  20                 	db	32
   470  00FF7E  20                 	db	32
   471  00FF7F  00                 	db	0
   472  00FF80                     STR_9:
   473  00FF80  59                 	db	89	;'Y'
   474  00FF81  4F                 	db	79	;'O'
   475  00FF82  50                 	db	80	;'P'
   476  00FF83  2B                 	db	43
   477  00FF84  43                 	db	67	;'C'
   478  00FF85  41                 	db	65	;'A'
   479  00FF86  50                 	db	80	;'P'
   480  00FF87  2D                 	db	45
   481  00FF88  4C                 	db	76	;'L'
   482  00FF89  42                 	db	66	;'B'
   483  00FF8A  4C                 	db	76	;'L'
   484  00FF8B  3A                 	db	58	;':'
   485  00FF8C  20                 	db	32
   486  00FF8D  31                 	db	49	;'1'
   487  00FF8E  20                 	db	32
   488  00FF8F  20                 	db	32
   489  00FF90  00                 	db	0
   490  00FF91                     STR_8:
   491  00FF91  59                 	db	89	;'Y'
   492  00FF92  4F                 	db	79	;'O'
   493  00FF93  50                 	db	80	;'P'
   494  00FF94  2B                 	db	43
   495  00FF95  43                 	db	67	;'C'
   496  00FF96  41                 	db	65	;'A'
   497  00FF97  50                 	db	80	;'P'
   498  00FF98  2B                 	db	43
   499  00FF99  4C                 	db	76	;'L'
   500  00FF9A  42                 	db	66	;'B'
   501  00FF9B  4C                 	db	76	;'L'
   502  00FF9C  3A                 	db	58	;':'
   503  00FF9D  20                 	db	32
   504  00FF9E  33                 	db	51	;'3'
   505  00FF9F  20                 	db	32
   506  00FFA0  20                 	db	32
   507  00FFA1  00                 	db	0
   508  00FFA2                     STR_12:
   509  00FFA2  45                 	db	69	;'E'
   510  00FFA3  53                 	db	83	;'S'
   511  00FFA4  4B                 	db	75	;'K'
   512  00FFA5  41                 	db	65	;'A'
   513  00FFA6  2B                 	db	43
   514  00FFA7  43                 	db	67	;'C'
   515  00FFA8  41                 	db	65	;'A'
   516  00FFA9  50                 	db	80	;'P'
   517  00FFAA  2B                 	db	43
   518  00FFAB  4C                 	db	76	;'L'
   519  00FFAC  42                 	db	66	;'B'
   520  00FFAD  4C                 	db	76	;'L'
   521  00FFAE  3A                 	db	58	;':'
   522  00FFAF  20                 	db	32
   523  00FFB0  31                 	db	49	;'1'
   524  00FFB1  20                 	db	32
   525  00FFB2  00                 	db	0
   526  00FFB3                     STR_14:
   527  00FFB3  45                 	db	69	;'E'
   528  00FFB4  53                 	db	83	;'S'
   529  00FFB5  4B                 	db	75	;'K'
   530  00FFB6  41                 	db	65	;'A'
   531  00FFB7  2D                 	db	45
   532  00FFB8  43                 	db	67	;'C'
   533  00FFB9  41                 	db	65	;'A'
   534  00FFBA  50                 	db	80	;'P'
   535  00FFBB  2B                 	db	43
   536  00FFBC  4C                 	db	76	;'L'
   537  00FFBD  42                 	db	66	;'B'
   538  00FFBE  4C                 	db	76	;'L'
   539  00FFBF  3A                 	db	58	;':'
   540  00FFC0  20                 	db	32
   541  00FFC1  31                 	db	49	;'1'
   542  00FFC2  20                 	db	32
   543  00FFC3  00                 	db	0
   544  00FFC4                     STR_13:
   545  00FFC4  45                 	db	69	;'E'
   546  00FFC5  53                 	db	83	;'S'
   547  00FFC6  4B                 	db	75	;'K'
   548  00FFC7  41                 	db	65	;'A'
   549  00FFC8  2B                 	db	43
   550  00FFC9  43                 	db	67	;'C'
   551  00FFCA  41                 	db	65	;'A'
   552  00FFCB  50                 	db	80	;'P'
   553  00FFCC  2D                 	db	45
   554  00FFCD  4C                 	db	76	;'L'
   555  00FFCE  42                 	db	66	;'B'
   556  00FFCF  4C                 	db	76	;'L'
   557  00FFD0  3A                 	db	58	;':'
   558  00FFD1  20                 	db	32
   559  00FFD2  31                 	db	49	;'1'
   560  00FFD3  20                 	db	32
   561  00FFD4  00                 	db	0
   562  00FFD5                     STR_15:
   563  00FFD5  45                 	db	69	;'E'
   564  00FFD6  53                 	db	83	;'S'
   565  00FFD7  4B                 	db	75	;'K'
   566  00FFD8  41                 	db	65	;'A'
   567  00FFD9  2D                 	db	45
   568  00FFDA  43                 	db	67	;'C'
   569  00FFDB  41                 	db	65	;'A'
   570  00FFDC  50                 	db	80	;'P'
   571  00FFDD  2D                 	db	45
   572  00FFDE  4C                 	db	76	;'L'
   573  00FFDF  42                 	db	66	;'B'
   574  00FFE0  4C                 	db	76	;'L'
   575  00FFE1  3A                 	db	58	;':'
   576  00FFE2  20                 	db	32
   577  00FFE3  32                 	db	50	;'2'
   578  00FFE4  20                 	db	32
   579  00FFE5  00                 	db	0
   580  00FFE6                     STR_1:
   581  00FFE6  62                 	db	98	;'b'
   582  00FFE7  61                 	db	97	;'a'
   583  00FFE8  64                 	db	100	;'d'
   584  00FFE9  20                 	db	32
   585  00FFEA  69                 	db	105	;'i'
   586  00FFEB  6E                 	db	110	;'n'
   587  00FFEC  74                 	db	116	;'t'
   588  00FFED  65                 	db	101	;'e'
   589  00FFEE  72                 	db	114	;'r'
   590  00FFEF  72                 	db	114	;'r'
   591  00FFF0  75                 	db	117	;'u'
   592  00FFF1  70                 	db	112	;'p'
   593  00FFF2  74                 	db	116	;'t'
   594  00FFF3  00                 	db	0
   595  00FFF4                     STR_16:
   596  00FFF4  45                 	db	69	;'E'
   597  00FFF5  52                 	db	82	;'R'
   598  00FFF6  52                 	db	82	;'R'
   599  00FFF7  4F                 	db	79	;'O'
   600  00FFF8  52                 	db	82	;'R'
   601  00FFF9  3A                 	db	58	;':'
   602  00FFFA  20                 	db	32
   603  00FFFB  25                 	db	37
   604  00FFFC  64                 	db	100	;'d'
   605  00FFFD  00                 	db	0
   606                           
   607                           ; #config settings
   608  00FFFE  00                 	db	0	; dummy byte at the end
   609  0000                     
   610                           	psect	cinit
   611  000DEC                     __pcinit:
   612                           	opt stack 0
   613  000DEC                     start_initialization:
   614                           	opt stack 0
   615  000DEC                     __initialization:
   616                           	opt stack 0
   617                           
   618                           ; Initialize objects allocated to COMRAM (2 bytes)
   619                           ; load TBLPTR registers with __pidataCOMRAM
   620  000DEC  0E7A               	movlw	low __pidataCOMRAM
   621  000DEE  6EF6               	movwf	tblptrl,c
   622  000DF0  0E0F               	movlw	high __pidataCOMRAM
   623  000DF2  6EF7               	movwf	tblptrh,c
   624  000DF4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   625  000DF6  6EF8               	movwf	tblptru,c
   626  000DF8  0009               	tblrd		*+	;fetch initializer
   627  000DFA  CFF5 F051          	movff	tablat,__pdataCOMRAM
   628  000DFE  0009               	tblrd		*+	;fetch initializer
   629  000E00  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   630                           
   631                           ; Clear objects allocated to COMRAM (10 bytes)
   632  000E04  EE00  F047         	lfsr	0,__pbssCOMRAM
   633  000E08  0E0A               	movlw	10
   634  000E0A                     clear_0:
   635  000E0A  6AEE               	clrf	postinc0,c
   636  000E0C  06E8               	decf	wreg,f,c
   637  000E0E  E1FD               	bnz	clear_0
   638  000E10                     end_of_initialization:
   639                           	opt stack 0
   640  000E10                     __end_of__initialization:
   641                           	opt stack 0
   642  000E10  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  000E12  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  000E14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  000E16  6EF8               	movwf	tblptru,c
   646  000E18  0100               	movlb	0
   647  000E1A  EFB5  F004         	goto	_main	;jump to C main() function
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           
   655                           	psect	bssCOMRAM
   656  000047                     __pbssCOMRAM:
   657                           	opt stack 0
   658  000047                     _time:
   659                           	opt stack 0
   660  000047                     	ds	7
   661  00004E                     _operation_disp:
   662                           	opt stack 0
   663  00004E                     	ds	2
   664  000050                     _curr_state:
   665                           	opt stack 0
   666  000050                     	ds	1
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           
   674                           	psect	dataCOMRAM
   675  000051                     __pdataCOMRAM:
   676                           	opt stack 0
   677  000051                     _bottle_count_disp:
   678                           	opt stack 0
   679  000051                     	ds	2
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           
   687                           	psect	cstackBANK0
   688  000080                     __pcstackBANK0:
   689                           	opt stack 0
   690  000080                     printf@idx:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x0
   694  000080                     	ds	1
   695  000081                     printf@ap:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x1
   699  000081                     	ds	2
   700  000083                     printf@prec:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x3
   704  000083                     	ds	1
   705  000084                     printf@val:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x4
   709  000084                     	ds	2
   710  000086                     printf@flag:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x6
   714  000086                     	ds	1
   715  000087                     printf@width:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x7
   719  000087                     	ds	2
   720  000089                     printf@c:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x9
   724  000089                     	ds	1
   725  00008A                     ??_main:
   726                           
   727                           ; 1 bytes @ 0xA
   728  00008A                     	ds	2
   729                           tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           
   736                           	psect	cstackCOMRAM
   737  000001                     __pcstackCOMRAM:
   738                           	opt stack 0
   739  000001                     ??i2_isdigit:
   740  000001                     ?i2___wmul:
   741                           	opt stack 0
   742  000001                     ?i2___lwdiv:
   743                           	opt stack 0
   744  000001                     i2lcdNibble@temp:
   745                           	opt stack 0
   746  000001                     i2___wmul@multiplier:
   747                           	opt stack 0
   748  000001                     i2___lwdiv@dividend:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x0
   752  000001                     	ds	1
   753  000002                     i2lcdNibble@data:
   754                           	opt stack 0
   755  000002                     i2_isdigit$530:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x1
   759  000002                     	ds	1
   760  000003                     i2lcdInst@data:
   761                           	opt stack 0
   762  000003                     i2putch@data:
   763                           	opt stack 0
   764  000003                     i2isdigit@c:
   765                           	opt stack 0
   766  000003                     i2___wmul@multiplicand:
   767                           	opt stack 0
   768  000003                     i2___lwdiv@divisor:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x2
   772  000003                     	ds	2
   773  000005                     i2___wmul@product:
   774                           	opt stack 0
   775  000005                     i2___lwdiv@quotient:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x4
   779  000005                     	ds	2
   780  000007                     i2___lwdiv@counter:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x6
   784  000007                     	ds	1
   785  000008                     ?i2___lwmod:
   786                           	opt stack 0
   787  000008                     i2___lwmod@dividend:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x7
   791  000008                     	ds	2
   792  00000A                     i2___lwmod@divisor:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x9
   796  00000A                     	ds	2
   797  00000C                     i2___lwmod@counter:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0xB
   801  00000C                     	ds	1
   802  00000D                     ?i2_printf:
   803                           	opt stack 0
   804  00000D                     i2printf@f:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0xC
   808  00000D                     	ds	2
   809  00000F                     ??i2_printf:
   810                           
   811                           ; 1 bytes @ 0xE
   812  00000F                     	ds	4
   813  000013                     i2printf@idx:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x12
   817  000013                     	ds	1
   818  000014                     i2printf@ap:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x13
   822  000014                     	ds	2
   823  000016                     i2printf@prec:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x15
   827  000016                     	ds	1
   828  000017                     i2printf@val:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x16
   832  000017                     	ds	2
   833  000019                     i2printf@flag:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x18
   837  000019                     	ds	1
   838  00001A                     i2printf@width:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x19
   842  00001A                     	ds	2
   843  00001C                     i2printf@c:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x1B
   847  00001C                     	ds	1
   848  00001D                     ??_isr:
   849                           
   850                           ; 1 bytes @ 0x1C
   851  00001D                     	ds	15
   852  00002C                     isr@i:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x2B
   856  00002C                     	ds	1
   857  00002D                     ??_isdigit:
   858  00002D                     ??_I2C_Master_Wait:
   859  00002D                     ?___wmul:
   860                           	opt stack 0
   861  00002D                     ?___awmod:
   862                           	opt stack 0
   863  00002D                     ?___lwdiv:
   864                           	opt stack 0
   865  00002D                     ?___lldiv:
   866                           	opt stack 0
   867  00002D                     lcdNibble@temp:
   868                           	opt stack 0
   869  00002D                     ___wmul@multiplier:
   870                           	opt stack 0
   871  00002D                     ___awmod@dividend:
   872                           	opt stack 0
   873  00002D                     ___lwdiv@dividend:
   874                           	opt stack 0
   875  00002D                     ___lldiv@dividend:
   876                           	opt stack 0
   877                           
   878                           ; 4 bytes @ 0x2C
   879  00002D                     	ds	1
   880  00002E                     I2C_Master_Read@a:
   881                           	opt stack 0
   882  00002E                     lcdNibble@data:
   883                           	opt stack 0
   884  00002E                     _isdigit$530:
   885                           	opt stack 0
   886  00002E                     I2C_Master_Write@d:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x2D
   890  00002E                     	ds	1
   891  00002F                     I2C_Master_Read@temp:
   892                           	opt stack 0
   893  00002F                     lcdInst@data:
   894                           	opt stack 0
   895  00002F                     putch@data:
   896                           	opt stack 0
   897  00002F                     isdigit@c:
   898                           	opt stack 0
   899  00002F                     ___wmul@multiplicand:
   900                           	opt stack 0
   901  00002F                     ___awmod@divisor:
   902                           	opt stack 0
   903  00002F                     ___lwdiv@divisor:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2E
   907  00002F                     	ds	1
   908  000030                     ??_initLCD:
   909                           
   910                           ; 1 bytes @ 0x2F
   911  000030                     	ds	1
   912  000031                     ___awmod@counter:
   913                           	opt stack 0
   914  000031                     ___lwdiv@counter:
   915                           	opt stack 0
   916  000031                     ___wmul@product:
   917                           	opt stack 0
   918  000031                     ___lldiv@divisor:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0x30
   922  000031                     	ds	1
   923  000032                     ___awmod@sign:
   924                           	opt stack 0
   925  000032                     ___lwdiv@quotient:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x31
   929  000032                     	ds	2
   930  000034                     ?___lwmod:
   931                           	opt stack 0
   932  000034                     ___lwmod@dividend:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x33
   936  000034                     	ds	1
   937  000035                     ___lldiv@quotient:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x34
   941  000035                     	ds	1
   942  000036                     ___lwmod@divisor:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x35
   946  000036                     	ds	2
   947  000038                     ___lwmod@counter:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0x37
   951  000038                     	ds	1
   952  000039                     ?_printf:
   953                           	opt stack 0
   954  000039                     ___lldiv@counter:
   955                           	opt stack 0
   956  000039                     printf@f:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x38
   960  000039                     	ds	1
   961  00003A                     I2C_Master_Init@c:
   962                           	opt stack 0
   963                           
   964                           ; 4 bytes @ 0x39
   965  00003A                     	ds	4
   966  00003E                     ??_I2C_Master_Init:
   967                           
   968                           ; 1 bytes @ 0x3D
   969  00003E                     	ds	3
   970  000041                     ??_printf:
   971                           
   972                           ; 1 bytes @ 0x40
   973  000041                     	ds	4
   974  000045                     ??_operation:
   975  000045                     date_time@i:
   976                           	opt stack 0
   977                           
   978                           ; 1 bytes @ 0x44
   979  000045                     	ds	2
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 43 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels required when called:    8
  1012 ;; This function calls:
  1013 ;;		_I2C_Master_Init
  1014 ;;		_bottle_count
  1015 ;;		_bottle_time
  1016 ;;		_date_time
  1017 ;;		_initLCD
  1018 ;;		_operation
  1019 ;;		_standby
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text0
  1026  00096A                     __ptext0:
  1027                           	opt stack 0
  1028  00096A                     _main:
  1029                           	opt stack 23
  1030                           
  1031                           ;main.c: 47: TRISA = 0xFF;
  1032                           
  1033                           ;incstack = 0
  1034  00096A  6892               	setf	3986,c	;volatile
  1035                           
  1036                           ;main.c: 48: TRISB = 0xFF;
  1037  00096C  6893               	setf	3987,c	;volatile
  1038                           
  1039                           ;main.c: 49: TRISC = 0x00;
  1040  00096E  0E00               	movlw	0
  1041  000970  6E94               	movwf	3988,c	;volatile
  1042                           
  1043                           ;main.c: 50: TRISD = 0x00;
  1044  000972  0E00               	movlw	0
  1045  000974  6E95               	movwf	3989,c	;volatile
  1046                           
  1047                           ;main.c: 51: TRISE = 0x00;
  1048  000976  0E00               	movlw	0
  1049  000978  6E96               	movwf	3990,c	;volatile
  1050                           
  1051                           ;main.c: 53: LATA = 0x00;
  1052  00097A  0E00               	movlw	0
  1053  00097C  6E89               	movwf	3977,c	;volatile
  1054                           
  1055                           ;main.c: 54: LATB = 0x00;
  1056  00097E  0E00               	movlw	0
  1057  000980  6E8A               	movwf	3978,c	;volatile
  1058                           
  1059                           ;main.c: 55: LATC = 0x00;
  1060  000982  0E00               	movlw	0
  1061  000984  6E8B               	movwf	3979,c	;volatile
  1062                           
  1063                           ;main.c: 56: LATD = 0x00;
  1064  000986  0E00               	movlw	0
  1065  000988  6E8C               	movwf	3980,c	;volatile
  1066                           
  1067                           ;main.c: 57: LATE = 0x00;
  1068  00098A  0E00               	movlw	0
  1069  00098C  6E8D               	movwf	3981,c	;volatile
  1070                           
  1071                           ;main.c: 59: ADCON0 = 0x00;
  1072  00098E  0E00               	movlw	0
  1073  000990  6EC2               	movwf	4034,c	;volatile
  1074                           
  1075                           ;main.c: 60: ADCON1 = 0xFF;
  1076  000992  68C1               	setf	4033,c	;volatile
  1077                           
  1078                           ;main.c: 62: INT1IE = 1;
  1079  000994  86F0               	bsf	intcon3,3,c	;volatile
  1080                           
  1081                           ;main.c: 64: nRBPU = 0;
  1082  000996  9EF1               	bcf	intcon2,7,c	;volatile
  1083                           
  1084                           ;main.c: 66: initLCD();
  1085  000998  EC8E  F006         	call	_initLCD	;wreg free
  1086                           
  1087                           ;main.c: 67: I2C_Master_Init(10000);
  1088  00099C  0E10               	movlw	16
  1089  00099E  6E3A               	movwf	I2C_Master_Init@c,c
  1090  0009A0  0E27               	movlw	39
  1091  0009A2  6E3B               	movwf	I2C_Master_Init@c+1,c
  1092  0009A4  0E00               	movlw	0
  1093  0009A6  6E3C               	movwf	I2C_Master_Init@c+2,c
  1094  0009A8  0E00               	movlw	0
  1095  0009AA  6E3D               	movwf	I2C_Master_Init@c+3,c
  1096  0009AC  ECC1  F005         	call	_I2C_Master_Init	;wreg free
  1097                           
  1098                           ;main.c: 71: (INTCONbits.GIE = 1);
  1099  0009B0  8EF2               	bsf	intcon,7,c	;volatile
  1100                           
  1101                           ;main.c: 73: curr_state = STANDBY;
  1102  0009B2  0E00               	movlw	0
  1103  0009B4  6E50               	movwf	_curr_state,c
  1104                           
  1105                           ;main.c: 76: switch(curr_state){
  1106                           
  1107                           ;main.c: 75: while(1){
  1108  0009B6  D00F               	goto	l2705
  1109  0009B8                     l2693:
  1110                           
  1111                           ;main.c: 78: standby();
  1112  0009B8  EC0F  F007         	call	_standby	;wreg free
  1113                           
  1114                           ;main.c: 79: break;
  1115  0009BC  D01C               	goto	l2707
  1116  0009BE                     l2695:
  1117                           
  1118                           ;main.c: 81: operation();
  1119  0009BE  EC4B  F005         	call	_operation	;wreg free
  1120                           
  1121                           ;main.c: 82: break;
  1122  0009C2  D019               	goto	l2707
  1123  0009C4                     l2697:
  1124                           
  1125                           ;main.c: 84: date_time();
  1126  0009C4  EC5E  F004         	call	_date_time	;wreg free
  1127                           
  1128                           ;main.c: 85: break;
  1129  0009C8  D016               	goto	l2707
  1130  0009CA                     l2699:
  1131                           
  1132                           ;main.c: 87: bottle_count();
  1133  0009CA  EC53  F003         	call	_bottle_count	;wreg free
  1134                           
  1135                           ;main.c: 88: break;
  1136  0009CE  D013               	goto	l2707
  1137  0009D0                     l2701:
  1138                           
  1139                           ;main.c: 90: bottle_time();
  1140  0009D0  EC38  F007         	call	_bottle_time	;wreg free
  1141                           
  1142                           ;main.c: 92: }
  1143                           
  1144                           ;main.c: 91: break;
  1145  0009D4  D010               	goto	l2707
  1146  0009D6                     l2705:
  1147  0009D6  5050               	movf	_curr_state,w,c
  1148                           
  1149                           ; Switch size 1, requested type "space"
  1150                           ; Number of cases is 5, Range of values is 0 to 4
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte           16     9 (average)
  1154                           ;	Chosen strategy is simple_byte
  1155  0009D8  0A00               	xorlw	0	; case 0
  1156  0009DA  B4D8               	btfsc	status,2,c
  1157  0009DC  D7ED               	goto	l2693
  1158  0009DE  0A01               	xorlw	1	; case 1
  1159  0009E0  B4D8               	btfsc	status,2,c
  1160  0009E2  D7ED               	goto	l2695
  1161  0009E4  0A03               	xorlw	3	; case 2
  1162  0009E6  B4D8               	btfsc	status,2,c
  1163  0009E8  D7ED               	goto	l2697
  1164  0009EA  0A01               	xorlw	1	; case 3
  1165  0009EC  B4D8               	btfsc	status,2,c
  1166  0009EE  D7ED               	goto	l2699
  1167  0009F0  0A07               	xorlw	7	; case 4
  1168  0009F2  B4D8               	btfsc	status,2,c
  1169  0009F4  D7ED               	goto	l2701
  1170  0009F6                     l2707:
  1171                           
  1172                           ;main.c: 93: _delay((unsigned long)((200)*(10000000/4000.0)));
  1173  0009F6  0E03               	movlw	3
  1174  0009F8  0100               	movlb	0	; () banked
  1175  0009FA  6F8B               	movwf	(??_main+1)& (0+255),b
  1176  0009FC  0E8A               	movlw	138
  1177  0009FE  0100               	movlb	0	; () banked
  1178  000A00  6F8A               	movwf	??_main& (0+255),b
  1179  000A02  0E55               	movlw	85
  1180  000A04                     u1997:
  1181  000A04  2EE8               	decfsz	wreg,f,c
  1182  000A06  D7FE               	bra	u1997
  1183  000A08  2F8A               	decfsz	??_main& (0+255),f,b
  1184  000A0A  D7FC               	bra	u1997
  1185  000A0C  2F8B               	decfsz	(??_main+1)& (0+255),f,b
  1186  000A0E  D7FA               	bra	u1997
  1187  000A10  D000               	nop2	
  1188  000A12  D7E1               	goto	l2705
  1189  000A14                     __end_of_main:
  1190                           	opt stack 0
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           intcon	equ	0xFF2
  1196                           intcon2	equ	0xFF1
  1197                           intcon3	equ	0xFF0
  1198                           postinc0	equ	0xFEE
  1199                           wreg	equ	0xFE8
  1200                           status	equ	0xFD8
  1201                           
  1202 ;; *************** function _standby *****************
  1203 ;; Defined at:
  1204 ;;		line 133 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    7
  1225 ;; This function calls:
  1226 ;;		_lcdInst
  1227 ;;		_printf
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text1
  1234  000E1E                     __ptext1:
  1235                           	opt stack 0
  1236  000E1E                     _standby:
  1237                           	opt stack 23
  1238                           
  1239                           ;main.c: 134: lcdInst(0b10000000);
  1240                           
  1241                           ;incstack = 0
  1242  000E1E  0E80               	movlw	128
  1243  000E20  EC9E  F007         	call	_lcdInst
  1244                           
  1245                           ;main.c: 135: printf("standby         ");
  1246  000E24  0E1A               	movlw	low STR_2
  1247  000E26  6E39               	movwf	printf@f,c
  1248  000E28  0EFF               	movlw	high STR_2
  1249  000E2A  6E3A               	movwf	printf@f+1,c
  1250  000E2C  EC09  F000         	call	_printf	;wreg free
  1251                           
  1252                           ;main.c: 136: lcdInst(0b11000000);
  1253  000E30  0EC0               	movlw	192
  1254  000E32  EC9E  F007         	call	_lcdInst
  1255                           
  1256                           ;main.c: 137: printf("PORTB: %d       ", PORTB);
  1257  000E36  0E3C               	movlw	low STR_3
  1258  000E38  6E39               	movwf	printf@f,c
  1259  000E3A  0EFF               	movlw	high STR_3
  1260  000E3C  6E3A               	movwf	printf@f+1,c
  1261  000E3E  CF81 F03B          	movff	3969,?_printf+2	;volatile
  1262  000E42  6A3C               	clrf	?_printf+3,c
  1263  000E44  EC09  F000         	call	_printf	;wreg free
  1264  000E48  0012               	return	
  1265  000E4A                     __end_of_standby:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           intcon	equ	0xFF2
  1272                           intcon2	equ	0xFF1
  1273                           intcon3	equ	0xFF0
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function _operation *****************
  1279 ;; Defined at:
  1280 ;;		line 226 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    7
  1301 ;; This function calls:
  1302 ;;		_lcdInst
  1303 ;;		_printf
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text2
  1310  000A96                     __ptext2:
  1311                           	opt stack 0
  1312  000A96                     _operation:
  1313                           	opt stack 23
  1314                           
  1315                           ;main.c: 227: switch(operation_disp){
  1316                           
  1317                           ;incstack = 0
  1318  000A96  D02A               	goto	l2597
  1319  000A98                     l2577:
  1320                           
  1321                           ;main.c: 229: lcdInst(0b10000000);
  1322  000A98  0E80               	movlw	128
  1323  000A9A  EC9E  F007         	call	_lcdInst
  1324                           
  1325                           ;main.c: 230: printf("Running~              ");
  1326  000A9E  0E96               	movlw	low STR_19
  1327  000AA0  6E39               	movwf	printf@f,c
  1328  000AA2  0EFE               	movlw	high STR_19
  1329  000AA4  6E3A               	movwf	printf@f+1,c
  1330  000AA6  EC09  F000         	call	_printf	;wreg free
  1331                           
  1332                           ;main.c: 231: operation_disp = 1;
  1333  000AAA  0E00               	movlw	0
  1334  000AAC  6E4F               	movwf	_operation_disp+1,c
  1335  000AAE  0E01               	movlw	1
  1336  000AB0  6E4E               	movwf	_operation_disp,c
  1337                           
  1338                           ;main.c: 232: break;
  1339  000AB2  0012               	return	
  1340  000AB4                     l2583:
  1341                           
  1342                           ;main.c: 234: lcdInst(0b10000000);
  1343  000AB4  0E80               	movlw	128
  1344  000AB6  EC9E  F007         	call	_lcdInst
  1345                           
  1346                           ;main.c: 235: printf("Running~~              ");
  1347  000ABA  0E7E               	movlw	low STR_20
  1348  000ABC  6E39               	movwf	printf@f,c
  1349  000ABE  0EFE               	movlw	high STR_20
  1350  000AC0  6E3A               	movwf	printf@f+1,c
  1351  000AC2  EC09  F000         	call	_printf	;wreg free
  1352                           
  1353                           ;main.c: 236: operation_disp = 2;
  1354  000AC6  0E00               	movlw	0
  1355  000AC8  6E4F               	movwf	_operation_disp+1,c
  1356  000ACA  0E02               	movlw	2
  1357  000ACC  6E4E               	movwf	_operation_disp,c
  1358                           
  1359                           ;main.c: 237: break;
  1360  000ACE  0012               	return	
  1361  000AD0                     l2589:
  1362                           
  1363                           ;main.c: 239: lcdInst(0b10000000);
  1364  000AD0  0E80               	movlw	128
  1365  000AD2  EC9E  F007         	call	_lcdInst
  1366                           
  1367                           ;main.c: 240: printf("Running~~~              ");
  1368  000AD6  0E65               	movlw	low STR_21
  1369  000AD8  6E39               	movwf	printf@f,c
  1370  000ADA  0EFE               	movlw	high STR_21
  1371  000ADC  6E3A               	movwf	printf@f+1,c
  1372  000ADE  EC09  F000         	call	_printf	;wreg free
  1373                           
  1374                           ;main.c: 241: operation_disp = 0;
  1375  000AE2  0E00               	movlw	0
  1376  000AE4  6E4F               	movwf	_operation_disp+1,c
  1377  000AE6  0E00               	movlw	0
  1378  000AE8  6E4E               	movwf	_operation_disp,c
  1379                           
  1380                           ;main.c: 243: }
  1381                           
  1382                           ;main.c: 242: break;
  1383  000AEA  0012               	return	
  1384  000AEC                     l2597:
  1385  000AEC  C04E  F045         	movff	_operation_disp,??_operation
  1386  000AF0  C04F  F046         	movff	_operation_disp+1,??_operation+1
  1387                           
  1388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1389                           ; Switch size 1, requested type "space"
  1390                           ; Number of cases is 1, Range of values is 0 to 0
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte            4     3 (average)
  1394                           ;	Chosen strategy is simple_byte
  1395  000AF4  5046               	movf	??_operation+1,w,c
  1396  000AF6  0A00               	xorlw	0	; case 0
  1397  000AF8  A4D8               	btfss	status,2,c
  1398  000AFA  0012               	return	
  1399                           
  1400                           ; Switch size 1, requested type "space"
  1401                           ; Number of cases is 3, Range of values is 0 to 2
  1402                           ; switch strategies available:
  1403                           ; Name         Instructions Cycles
  1404                           ; simple_byte           10     6 (average)
  1405                           ;	Chosen strategy is simple_byte
  1406  000AFC  5045               	movf	??_operation,w,c
  1407  000AFE  0A00               	xorlw	0	; case 0
  1408  000B00  B4D8               	btfsc	status,2,c
  1409  000B02  D7CA               	goto	l2577
  1410  000B04  0A01               	xorlw	1	; case 1
  1411  000B06  B4D8               	btfsc	status,2,c
  1412  000B08  D7D5               	goto	l2583
  1413  000B0A  0A03               	xorlw	3	; case 2
  1414  000B0C  A4D8               	btfss	status,2,c
  1415  000B0E  0012               	return	
  1416  000B10  D7DF               	goto	l2589
  1417  000B12                     __end_of_operation:
  1418                           	opt stack 0
  1419                           tblptru	equ	0xFF8
  1420                           tblptrh	equ	0xFF7
  1421                           tblptrl	equ	0xFF6
  1422                           tablat	equ	0xFF5
  1423                           intcon	equ	0xFF2
  1424                           intcon2	equ	0xFF1
  1425                           intcon3	equ	0xFF0
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _initLCD *****************
  1431 ;; Defined at:
  1432 ;;		line 14 in file "lcd.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:        1 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    6
  1453 ;; This function calls:
  1454 ;;		_lcdInst
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text3
  1461  000D1C                     __ptext3:
  1462                           	opt stack 0
  1463  000D1C                     _initLCD:
  1464                           	opt stack 24
  1465                           
  1466                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  1467                           
  1468                           ;incstack = 0
  1469  000D1C  0E31               	movlw	49
  1470  000D1E  6E30               	movwf	??_initLCD& (0+255),c
  1471  000D20  0EB2               	movlw	178
  1472  000D22                     u2007:
  1473  000D22  2EE8               	decfsz	wreg,f,c
  1474  000D24  D7FE               	bra	u2007
  1475  000D26  2E30               	decfsz	??_initLCD& (0+255),f,c
  1476  000D28  D7FC               	bra	u2007
  1477  000D2A  D000               	nop2	
  1478                           
  1479                           ;lcd.c: 16: lcdInst(0b00110011);
  1480  000D2C  0E33               	movlw	51
  1481  000D2E  EC9E  F007         	call	_lcdInst
  1482                           
  1483                           ;lcd.c: 17: lcdInst(0b00110011);
  1484  000D32  0E33               	movlw	51
  1485  000D34  EC9E  F007         	call	_lcdInst
  1486                           
  1487                           ;lcd.c: 18: lcdInst(0b00110010);
  1488  000D38  0E32               	movlw	50
  1489  000D3A  EC9E  F007         	call	_lcdInst
  1490                           
  1491                           ;lcd.c: 19: lcdInst(0b00101000);
  1492  000D3E  0E28               	movlw	40
  1493  000D40  EC9E  F007         	call	_lcdInst
  1494                           
  1495                           ;lcd.c: 20: lcdInst(0b00001111);
  1496  000D44  0E0F               	movlw	15
  1497  000D46  EC9E  F007         	call	_lcdInst
  1498                           
  1499                           ;lcd.c: 21: lcdInst(0b00000110);
  1500  000D4A  0E06               	movlw	6
  1501  000D4C  EC9E  F007         	call	_lcdInst
  1502                           
  1503                           ;lcd.c: 22: lcdInst(0b00000001);
  1504  000D50  0E01               	movlw	1
  1505  000D52  EC9E  F007         	call	_lcdInst
  1506                           
  1507                           ;lcd.c: 23: _delay((unsigned long)((15)*(10000000/4000.0)));
  1508  000D56  0E31               	movlw	49
  1509  000D58  6E30               	movwf	??_initLCD& (0+255),c
  1510  000D5A  0EB2               	movlw	178
  1511  000D5C                     u2017:
  1512  000D5C  2EE8               	decfsz	wreg,f,c
  1513  000D5E  D7FE               	bra	u2017
  1514  000D60  2E30               	decfsz	??_initLCD& (0+255),f,c
  1515  000D62  D7FC               	bra	u2017
  1516  000D64  D000               	nop2	
  1517  000D66  0012               	return		;funcret
  1518  000D68                     __end_of_initLCD:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           intcon	equ	0xFF2
  1525                           intcon2	equ	0xFF1
  1526                           intcon3	equ	0xFF0
  1527                           postinc0	equ	0xFEE
  1528                           wreg	equ	0xFE8
  1529                           status	equ	0xFD8
  1530                           
  1531 ;; *************** function _date_time *****************
  1532 ;; Defined at:
  1533 ;;		line 151 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  i               1   68[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    7
  1554 ;; This function calls:
  1555 ;;		_I2C_Master_Read
  1556 ;;		_I2C_Master_Start
  1557 ;;		_I2C_Master_Stop
  1558 ;;		_I2C_Master_Write
  1559 ;;		_lcdInst
  1560 ;;		_printf
  1561 ;; This function is called by:
  1562 ;;		_main
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text4
  1567  0008BC                     __ptext4:
  1568                           	opt stack 0
  1569  0008BC                     _date_time:
  1570                           	opt stack 23
  1571                           
  1572                           ;main.c: 153: I2C_Master_Start();
  1573                           
  1574                           ;incstack = 0
  1575  0008BC  ECB9  F007         	call	_I2C_Master_Start	;wreg free
  1576                           
  1577                           ;main.c: 154: I2C_Master_Write(0b11010000);
  1578  0008C0  0E00               	movlw	0
  1579  0008C2  6E2F               	movwf	I2C_Master_Write@d+1,c
  1580  0008C4  0ED0               	movlw	208
  1581  0008C6  6E2E               	movwf	I2C_Master_Write@d,c
  1582  0008C8  ECB0  F007         	call	_I2C_Master_Write	;wreg free
  1583                           
  1584                           ;main.c: 155: I2C_Master_Write(0x00);
  1585  0008CC  0E00               	movlw	0
  1586  0008CE  6E2F               	movwf	I2C_Master_Write@d+1,c
  1587  0008D0  0E00               	movlw	0
  1588  0008D2  6E2E               	movwf	I2C_Master_Write@d,c
  1589  0008D4  ECB0  F007         	call	_I2C_Master_Write	;wreg free
  1590                           
  1591                           ;main.c: 156: I2C_Master_Stop();
  1592  0008D8  ECB5  F007         	call	_I2C_Master_Stop	;wreg free
  1593                           
  1594                           ;main.c: 159: I2C_Master_Start();
  1595  0008DC  ECB9  F007         	call	_I2C_Master_Start	;wreg free
  1596                           
  1597                           ;main.c: 160: I2C_Master_Write(0b11010001);
  1598  0008E0  0E00               	movlw	0
  1599  0008E2  6E2F               	movwf	I2C_Master_Write@d+1,c
  1600  0008E4  0ED1               	movlw	209
  1601  0008E6  6E2E               	movwf	I2C_Master_Write@d,c
  1602  0008E8  ECB0  F007         	call	_I2C_Master_Write	;wreg free
  1603                           
  1604                           ;main.c: 161: for(unsigned char i=0;i<0x06;i++){
  1605  0008EC  0E00               	movlw	0
  1606  0008EE  6E45               	movwf	date_time@i,c
  1607  0008F0                     l2607:
  1608  0008F0  0E05               	movlw	5
  1609  0008F2  6445               	cpfsgt	date_time@i,c
  1610  0008F4  D001               	goto	l2611
  1611  0008F6  D00E               	goto	l2617
  1612  0008F8                     l2611:
  1613                           
  1614                           ;main.c: 162: time[i] = I2C_Master_Read(1);
  1615  0008F8  5045               	movf	date_time@i,w,c
  1616  0008FA  0D01               	mullw	1
  1617  0008FC  0E47               	movlw	low _time
  1618  0008FE  24F3               	addwf	prodl,w,c
  1619  000900  6ED9               	movwf	fsr2l,c
  1620  000902  0E00               	movlw	high _time
  1621  000904  20F4               	addwfc	prodh,w,c
  1622  000906  6EDA               	movwf	fsr2h,c
  1623  000908  0E01               	movlw	1
  1624  00090A  EC25  F007         	call	_I2C_Master_Read
  1625  00090E  6EDF               	movwf	indf2,c
  1626  000910  2A45               	incf	date_time@i,f,c
  1627  000912  D7EE               	goto	l2607
  1628  000914                     l2617:
  1629                           
  1630                           ;main.c: 163: }
  1631                           ;main.c: 164: time[6] = I2C_Master_Read(0);
  1632  000914  0E00               	movlw	0
  1633  000916  EC25  F007         	call	_I2C_Master_Read
  1634  00091A  6E4D               	movwf	_time+6,c
  1635                           
  1636                           ;main.c: 165: I2C_Master_Stop();
  1637  00091C  ECB5  F007         	call	_I2C_Master_Stop	;wreg free
  1638                           
  1639                           ;main.c: 168: lcdInst(0b10000000);
  1640  000920  0E80               	movlw	128
  1641  000922  EC9E  F007         	call	_lcdInst
  1642                           
  1643                           ;main.c: 169: printf("Date: %02x/%02x/%02x  ", time[5],time[4],time[6]);
  1644  000926  0EDB               	movlw	low STR_4
  1645  000928  6E39               	movwf	printf@f,c
  1646  00092A  0EFE               	movlw	high STR_4
  1647  00092C  6E3A               	movwf	printf@f+1,c
  1648  00092E  C04C  F03B         	movff	_time+5,?_printf+2
  1649  000932  6A3C               	clrf	?_printf+3,c
  1650  000934  C04B  F03D         	movff	_time+4,?_printf+4
  1651  000938  6A3E               	clrf	?_printf+5,c
  1652  00093A  C04D  F03F         	movff	_time+6,?_printf+6
  1653  00093E  6A40               	clrf	?_printf+7,c
  1654  000940  EC09  F000         	call	_printf	;wreg free
  1655                           
  1656                           ;main.c: 170: lcdInst(0b11000000);
  1657  000944  0EC0               	movlw	192
  1658  000946  EC9E  F007         	call	_lcdInst
  1659                           
  1660                           ;main.c: 171: printf("Time: %02x:%02x:%02x  ", time[2],time[1],time[0]);
  1661  00094A  0EF2               	movlw	low STR_5
  1662  00094C  6E39               	movwf	printf@f,c
  1663  00094E  0EFE               	movlw	high STR_5
  1664  000950  6E3A               	movwf	printf@f+1,c
  1665  000952  C049  F03B         	movff	_time+2,?_printf+2
  1666  000956  6A3C               	clrf	?_printf+3,c
  1667  000958  C048  F03D         	movff	_time+1,?_printf+4
  1668  00095C  6A3E               	clrf	?_printf+5,c
  1669  00095E  C047  F03F         	movff	_time,?_printf+6
  1670  000962  6A40               	clrf	?_printf+7,c
  1671  000964  EC09  F000         	call	_printf	;wreg free
  1672  000968  0012               	return	
  1673  00096A                     __end_of_date_time:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           intcon	equ	0xFF2
  1682                           intcon2	equ	0xFF1
  1683                           intcon3	equ	0xFF0
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           indf2	equ	0xFDF
  1687                           fsr2h	equ	0xFDA
  1688                           fsr2l	equ	0xFD9
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _I2C_Master_Write *****************
  1692 ;; Defined at:
  1693 ;;		line 47 in file "I2C.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  d               2   45[COMRAM] unsigned int 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        2 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    5
  1714 ;; This function calls:
  1715 ;;		_I2C_Master_Wait
  1716 ;; This function is called by:
  1717 ;;		_date_time
  1718 ;;		_set_time
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text5
  1723  000F60                     __ptext5:
  1724                           	opt stack 0
  1725  000F60                     _I2C_Master_Write:
  1726                           	opt stack 24
  1727                           
  1728                           ;I2C.c: 49: I2C_Master_Wait();
  1729                           
  1730                           ;incstack = 0
  1731  000F60  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1732                           
  1733                           ;I2C.c: 50: SSPBUF = d;
  1734  000F64  C02E  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1735  000F68  0012               	return		;funcret
  1736  000F6A                     __end_of_I2C_Master_Write:
  1737                           	opt stack 0
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           prodh	equ	0xFF4
  1743                           prodl	equ	0xFF3
  1744                           intcon	equ	0xFF2
  1745                           intcon2	equ	0xFF1
  1746                           intcon3	equ	0xFF0
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           indf2	equ	0xFDF
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _I2C_Master_Stop *****************
  1755 ;; Defined at:
  1756 ;;		line 41 in file "I2C.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    5
  1777 ;; This function calls:
  1778 ;;		_I2C_Master_Wait
  1779 ;; This function is called by:
  1780 ;;		_date_time
  1781 ;;		_set_time
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text6
  1786  000F6A                     __ptext6:
  1787                           	opt stack 0
  1788  000F6A                     _I2C_Master_Stop:
  1789                           	opt stack 24
  1790                           
  1791                           ;I2C.c: 43: I2C_Master_Wait();
  1792                           
  1793                           ;incstack = 0
  1794  000F6A  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1795                           
  1796                           ;I2C.c: 44: PEN = 1;
  1797  000F6E  84C5               	bsf	4037,2,c	;volatile
  1798  000F70  0012               	return		;funcret
  1799  000F72                     __end_of_I2C_Master_Stop:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           intcon2	equ	0xFF1
  1809                           intcon3	equ	0xFF0
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           indf2	equ	0xFDF
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _I2C_Master_Start *****************
  1818 ;; Defined at:
  1819 ;;		line 29 in file "I2C.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    5
  1840 ;; This function calls:
  1841 ;;		_I2C_Master_Wait
  1842 ;; This function is called by:
  1843 ;;		_date_time
  1844 ;;		_set_time
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text7
  1849  000F72                     __ptext7:
  1850                           	opt stack 0
  1851  000F72                     _I2C_Master_Start:
  1852                           	opt stack 24
  1853                           
  1854                           ;I2C.c: 31: I2C_Master_Wait();
  1855                           
  1856                           ;incstack = 0
  1857  000F72  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1858                           
  1859                           ;I2C.c: 32: SEN = 1;
  1860  000F76  80C5               	bsf	4037,0,c	;volatile
  1861  000F78  0012               	return		;funcret
  1862  000F7A                     __end_of_I2C_Master_Start:
  1863                           	opt stack 0
  1864                           tblptru	equ	0xFF8
  1865                           tblptrh	equ	0xFF7
  1866                           tblptrl	equ	0xFF6
  1867                           tablat	equ	0xFF5
  1868                           prodh	equ	0xFF4
  1869                           prodl	equ	0xFF3
  1870                           intcon	equ	0xFF2
  1871                           intcon2	equ	0xFF1
  1872                           intcon3	equ	0xFF0
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           indf2	equ	0xFDF
  1876                           fsr2h	equ	0xFDA
  1877                           fsr2l	equ	0xFD9
  1878                           status	equ	0xFD8
  1879                           
  1880 ;; *************** function _I2C_Master_Read *****************
  1881 ;; Defined at:
  1882 ;;		line 53 in file "I2C.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  a               1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  a               1   45[COMRAM] unsigned char 
  1887 ;;  temp            1   46[COMRAM] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      unsigned char 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:        2 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    5
  1904 ;; This function calls:
  1905 ;;		_I2C_Master_Wait
  1906 ;; This function is called by:
  1907 ;;		_date_time
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text8
  1912  000E4A                     __ptext8:
  1913                           	opt stack 0
  1914  000E4A                     _I2C_Master_Read:
  1915                           	opt stack 24
  1916                           
  1917                           ;incstack = 0
  1918                           ;I2C_Master_Read@a stored from wreg
  1919  000E4A  6E2E               	movwf	I2C_Master_Read@a,c
  1920                           
  1921                           ;I2C.c: 55: unsigned char temp;
  1922                           ;I2C.c: 56: I2C_Master_Wait();
  1923  000E4C  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1924                           
  1925                           ;I2C.c: 57: RCEN = 1;
  1926  000E50  86C5               	bsf	4037,3,c	;volatile
  1927                           
  1928                           ;I2C.c: 58: I2C_Master_Wait();
  1929  000E52  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1930                           
  1931                           ;I2C.c: 59: temp = SSPBUF;
  1932  000E56  CFC9 F02F          	movff	4041,I2C_Master_Read@temp	;volatile
  1933                           
  1934                           ;I2C.c: 60: I2C_Master_Wait();
  1935  000E5A  EC8F  F007         	call	_I2C_Master_Wait	;wreg free
  1936                           
  1937                           ;I2C.c: 61: ACKDT = (a)?0:1;
  1938  000E5E  502E               	movf	I2C_Master_Read@a,w,c
  1939  000E60  A4D8               	btfss	status,2,c
  1940  000E62  D002               	goto	u110
  1941  000E64  8AC5               	bsf	4037,5,c	;volatile
  1942  000E66  D001               	goto	l1033
  1943  000E68                     u110:
  1944  000E68  9AC5               	bcf	4037,5,c	;volatile
  1945  000E6A                     l1033:
  1946                           
  1947                           ;I2C.c: 62: ACKEN = 1;
  1948  000E6A  88C5               	bsf	4037,4,c	;volatile
  1949                           
  1950                           ;I2C.c: 63: return temp;
  1951  000E6C  502F               	movf	I2C_Master_Read@temp,w,c
  1952  000E6E  0012               	return	
  1953  000E70                     __end_of_I2C_Master_Read:
  1954                           	opt stack 0
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           prodh	equ	0xFF4
  1960                           prodl	equ	0xFF3
  1961                           intcon	equ	0xFF2
  1962                           intcon2	equ	0xFF1
  1963                           intcon3	equ	0xFF0
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           indf2	equ	0xFDF
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function _I2C_Master_Wait *****************
  1972 ;; Defined at:
  1973 ;;		line 24 in file "I2C.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_I2C_Master_Start
  1998 ;;		_I2C_Master_Stop
  1999 ;;		_I2C_Master_Write
  2000 ;;		_I2C_Master_Read
  2001 ;;		_I2C_Master_RepeatedStart
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text9
  2006  000F1E                     __ptext9:
  2007                           	opt stack 0
  2008  000F1E                     _I2C_Master_Wait:
  2009                           	opt stack 24
  2010  000F1E                     l34:
  2011  000F1E  B4C7               	btfsc	4039,2,c	;volatile
  2012  000F20  D7FE               	goto	l34
  2013  000F22  CFC5 F02D          	movff	4037,??_I2C_Master_Wait	;volatile
  2014  000F26  0E1F               	movlw	31
  2015  000F28  162D               	andwf	??_I2C_Master_Wait,f,c
  2016  000F2A  B4D8               	btfsc	status,2,c
  2017  000F2C  0012               	return	
  2018  000F2E  D7F7               	goto	l34
  2019  000F30                     __end_of_I2C_Master_Wait:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodh	equ	0xFF4
  2026                           prodl	equ	0xFF3
  2027                           intcon	equ	0xFF2
  2028                           intcon2	equ	0xFF1
  2029                           intcon3	equ	0xFF0
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           indf2	equ	0xFDF
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _bottle_time *****************
  2038 ;; Defined at:
  2039 ;;		line 218 in file "main.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    7
  2060 ;; This function calls:
  2061 ;;		_lcdInst
  2062 ;;		_printf
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text10
  2069  000E70                     __ptext10:
  2070                           	opt stack 0
  2071  000E70                     _bottle_time:
  2072                           	opt stack 23
  2073                           
  2074                           ;main.c: 219: lcdInst(0b10000000);
  2075                           
  2076                           ;incstack = 0
  2077  000E70  0E80               	movlw	128
  2078  000E72  EC9E  F007         	call	_lcdInst
  2079                           
  2080                           ;main.c: 220: printf("Total Operation       ");
  2081  000E76  0EC4               	movlw	low STR_17
  2082  000E78  6E39               	movwf	printf@f,c
  2083  000E7A  0EFE               	movlw	high STR_17
  2084  000E7C  6E3A               	movwf	printf@f+1,c
  2085  000E7E  EC09  F000         	call	_printf	;wreg free
  2086                           
  2087                           ;main.c: 221: lcdInst(0b11000000);
  2088  000E82  0EC0               	movlw	192
  2089  000E84  EC9E  F007         	call	_lcdInst
  2090                           
  2091                           ;main.c: 222: printf("Time: 92s             ");
  2092  000E88  0EAD               	movlw	low STR_18
  2093  000E8A  6E39               	movwf	printf@f,c
  2094  000E8C  0EFE               	movlw	high STR_18
  2095  000E8E  6E3A               	movwf	printf@f+1,c
  2096  000E90  EC09  F000         	call	_printf	;wreg free
  2097  000E94  0012               	return	
  2098  000E96                     __end_of_bottle_time:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           prodh	equ	0xFF4
  2105                           prodl	equ	0xFF3
  2106                           intcon	equ	0xFF2
  2107                           intcon2	equ	0xFF1
  2108                           intcon3	equ	0xFF0
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           indf2	equ	0xFDF
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8
  2115                           
  2116 ;; *************** function _bottle_count *****************
  2117 ;; Defined at:
  2118 ;;		line 176 in file "main.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;Total ram usage:        0 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:    7
  2139 ;; This function calls:
  2140 ;;		___awmod
  2141 ;;		_lcdInst
  2142 ;;		_printf
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text11
  2149  0006A6                     __ptext11:
  2150                           	opt stack 0
  2151  0006A6                     _bottle_count:
  2152                           	opt stack 23
  2153                           
  2154                           ;main.c: 177: switch(bottle_count_disp % 5){
  2155                           
  2156                           ;incstack = 0
  2157  0006A6  D06D               	goto	l2663
  2158  0006A8                     l2627:
  2159                           
  2160                           ;main.c: 179: lcdInst(0b10000000);
  2161  0006A8  0E80               	movlw	128
  2162  0006AA  EC9E  F007         	call	_lcdInst
  2163                           
  2164                           ;main.c: 180: printf("Bottle Count    ");
  2165  0006AE  0E4D               	movlw	low STR_6
  2166  0006B0  6E39               	movwf	printf@f,c
  2167  0006B2  0EFF               	movlw	high STR_6
  2168  0006B4  6E3A               	movwf	printf@f+1,c
  2169  0006B6  EC09  F000         	call	_printf	;wreg free
  2170                           
  2171                           ;main.c: 181: lcdInst(0b11000000);
  2172  0006BA  0EC0               	movlw	192
  2173  0006BC  EC9E  F007         	call	_lcdInst
  2174                           
  2175                           ;main.c: 182: printf("Total: 10       ");
  2176  0006C0  0E2B               	movlw	low STR_7
  2177  0006C2  6E39               	movwf	printf@f,c
  2178  0006C4  0EFF               	movlw	high STR_7
  2179  0006C6  6E3A               	movwf	printf@f+1,c
  2180  0006C8  EC09  F000         	call	_printf	;wreg free
  2181                           
  2182                           ;main.c: 183: break;
  2183  0006CC  0012               	return	
  2184  0006CE                     l2633:
  2185                           
  2186                           ;main.c: 185: lcdInst(0b10000000);
  2187  0006CE  0E80               	movlw	128
  2188  0006D0  EC9E  F007         	call	_lcdInst
  2189                           
  2190                           ;main.c: 186: printf("YOP+CAP+LBL: 3  ");
  2191  0006D4  0E91               	movlw	low STR_8
  2192  0006D6  6E39               	movwf	printf@f,c
  2193  0006D8  0EFF               	movlw	high STR_8
  2194  0006DA  6E3A               	movwf	printf@f+1,c
  2195  0006DC  EC09  F000         	call	_printf	;wreg free
  2196                           
  2197                           ;main.c: 187: lcdInst(0b11000000);
  2198  0006E0  0EC0               	movlw	192
  2199  0006E2  EC9E  F007         	call	_lcdInst
  2200                           
  2201                           ;main.c: 188: printf("YOP+CAP-LBL: 1  ");
  2202  0006E6  0E80               	movlw	low STR_9
  2203  0006E8  6E39               	movwf	printf@f,c
  2204  0006EA  0EFF               	movlw	high STR_9
  2205  0006EC  6E3A               	movwf	printf@f+1,c
  2206  0006EE  EC09  F000         	call	_printf	;wreg free
  2207                           
  2208                           ;main.c: 189: break;
  2209  0006F2  0012               	return	
  2210  0006F4                     l2639:
  2211                           
  2212                           ;main.c: 191: lcdInst(0b10000000);
  2213  0006F4  0E80               	movlw	128
  2214  0006F6  EC9E  F007         	call	_lcdInst
  2215                           
  2216                           ;main.c: 192: printf("YOP-CAP+LBL: 1  ");
  2217  0006FA  0E6F               	movlw	low STR_10
  2218  0006FC  6E39               	movwf	printf@f,c
  2219  0006FE  0EFF               	movlw	high STR_10
  2220  000700  6E3A               	movwf	printf@f+1,c
  2221  000702  EC09  F000         	call	_printf	;wreg free
  2222                           
  2223                           ;main.c: 193: lcdInst(0b11000000);
  2224  000706  0EC0               	movlw	192
  2225  000708  EC9E  F007         	call	_lcdInst
  2226                           
  2227                           ;main.c: 194: printf("YOP-CAP-LBL: 0  ");
  2228  00070C  0E5E               	movlw	low STR_11
  2229  00070E  6E39               	movwf	printf@f,c
  2230  000710  0EFF               	movlw	high STR_11
  2231  000712  6E3A               	movwf	printf@f+1,c
  2232  000714  EC09  F000         	call	_printf	;wreg free
  2233                           
  2234                           ;main.c: 195: break;
  2235  000718  0012               	return	
  2236  00071A                     l2645:
  2237                           
  2238                           ;main.c: 197: lcdInst(0b10000000);
  2239  00071A  0E80               	movlw	128
  2240  00071C  EC9E  F007         	call	_lcdInst
  2241                           
  2242                           ;main.c: 198: printf("ESKA+CAP+LBL: 1 ");
  2243  000720  0EA2               	movlw	low STR_12
  2244  000722  6E39               	movwf	printf@f,c
  2245  000724  0EFF               	movlw	high STR_12
  2246  000726  6E3A               	movwf	printf@f+1,c
  2247  000728  EC09  F000         	call	_printf	;wreg free
  2248                           
  2249                           ;main.c: 199: lcdInst(0b11000000);
  2250  00072C  0EC0               	movlw	192
  2251  00072E  EC9E  F007         	call	_lcdInst
  2252                           
  2253                           ;main.c: 200: printf("ESKA+CAP-LBL: 1 ");
  2254  000732  0EC4               	movlw	low STR_13
  2255  000734  6E39               	movwf	printf@f,c
  2256  000736  0EFF               	movlw	high STR_13
  2257  000738  6E3A               	movwf	printf@f+1,c
  2258  00073A  EC09  F000         	call	_printf	;wreg free
  2259                           
  2260                           ;main.c: 201: break;
  2261  00073E  0012               	return	
  2262  000740                     l2651:
  2263                           
  2264                           ;main.c: 203: lcdInst(0b10000000);
  2265  000740  0E80               	movlw	128
  2266  000742  EC9E  F007         	call	_lcdInst
  2267                           
  2268                           ;main.c: 204: printf("ESKA-CAP+LBL: 1 ");
  2269  000746  0EB3               	movlw	low STR_14
  2270  000748  6E39               	movwf	printf@f,c
  2271  00074A  0EFF               	movlw	high STR_14
  2272  00074C  6E3A               	movwf	printf@f+1,c
  2273  00074E  EC09  F000         	call	_printf	;wreg free
  2274                           
  2275                           ;main.c: 205: lcdInst(0b11000000);
  2276  000752  0EC0               	movlw	192
  2277  000754  EC9E  F007         	call	_lcdInst
  2278                           
  2279                           ;main.c: 206: printf("ESKA-CAP-LBL: 2 ");
  2280  000758  0ED5               	movlw	low STR_15
  2281  00075A  6E39               	movwf	printf@f,c
  2282  00075C  0EFF               	movlw	high STR_15
  2283  00075E  6E3A               	movwf	printf@f+1,c
  2284  000760  EC09  F000         	call	_printf	;wreg free
  2285                           
  2286                           ;main.c: 207: break;
  2287  000764  0012               	return	
  2288  000766                     l2657:
  2289                           
  2290                           ;main.c: 210: lcdInst(0b10000000);
  2291  000766  0E80               	movlw	128
  2292  000768  EC9E  F007         	call	_lcdInst
  2293                           
  2294                           ;main.c: 211: printf("ERROR: %d", bottle_count_disp);
  2295  00076C  0EF4               	movlw	low STR_16
  2296  00076E  6E39               	movwf	printf@f,c
  2297  000770  0EFF               	movlw	high STR_16
  2298  000772  6E3A               	movwf	printf@f+1,c
  2299  000774  C051  F03B         	movff	_bottle_count_disp,?_printf+2
  2300  000778  C052  F03C         	movff	_bottle_count_disp+1,?_printf+3
  2301  00077C  EC09  F000         	call	_printf	;wreg free
  2302  000780  D7F2               	goto	l2657
  2303  000782                     l2663:
  2304  000782  C051  F02D         	movff	_bottle_count_disp,___awmod@dividend
  2305  000786  C052  F02E         	movff	_bottle_count_disp+1,___awmod@dividend+1
  2306  00078A  0E00               	movlw	0
  2307  00078C  6E30               	movwf	___awmod@divisor+1,c
  2308  00078E  0E05               	movlw	5
  2309  000790  6E2F               	movwf	___awmod@divisor,c
  2310  000792  EC89  F005         	call	___awmod	;wreg free
  2311                           
  2312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2313                           ; Switch size 1, requested type "space"
  2314                           ; Number of cases is 1, Range of values is 0 to 0
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte            4     3 (average)
  2318                           ;	Chosen strategy is simple_byte
  2319  000796  502E               	movf	?___awmod+1,w,c
  2320  000798  0A00               	xorlw	0	; case 0
  2321  00079A  A4D8               	btfss	status,2,c
  2322  00079C  D7E4               	goto	l2657
  2323                           
  2324                           ; Switch size 1, requested type "space"
  2325                           ; Number of cases is 5, Range of values is 0 to 4
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte           16     9 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  00079E  502D               	movf	?___awmod,w,c
  2331  0007A0  0A00               	xorlw	0	; case 0
  2332  0007A2  B4D8               	btfsc	status,2,c
  2333  0007A4  D781               	goto	l2627
  2334  0007A6  0A01               	xorlw	1	; case 1
  2335  0007A8  B4D8               	btfsc	status,2,c
  2336  0007AA  D791               	goto	l2633
  2337  0007AC  0A03               	xorlw	3	; case 2
  2338  0007AE  B4D8               	btfsc	status,2,c
  2339  0007B0  D7A1               	goto	l2639
  2340  0007B2  0A01               	xorlw	1	; case 3
  2341  0007B4  B4D8               	btfsc	status,2,c
  2342  0007B6  D7B1               	goto	l2645
  2343  0007B8  0A07               	xorlw	7	; case 4
  2344  0007BA  B4D8               	btfsc	status,2,c
  2345  0007BC  D7C1               	goto	l2651
  2346  0007BE  D7D3               	goto	l2657
  2347  0007C0                     __end_of_bottle_count:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           intcon2	equ	0xFF1
  2357                           intcon3	equ	0xFF0
  2358                           postinc0	equ	0xFEE
  2359                           wreg	equ	0xFE8
  2360                           indf2	equ	0xFDF
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _printf *****************
  2366 ;; Defined at:
  2367 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  f               2   56[COMRAM] PTR const unsigned char 
  2370 ;;		 -> STR_21(25), STR_20(24), STR_19(23), STR_18(23), 
  2371 ;;		 -> STR_17(23), STR_16(10), STR_15(17), STR_14(17), 
  2372 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
  2373 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
  2374 ;;		 -> STR_5(23), STR_4(23), STR_3(17), STR_2(17), 
  2375 ;;		 -> STR_1(14), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  idx             1    0[BANK0 ] unsigned char 
  2378 ;;  tmpval          4    0        struct .
  2379 ;;  cp              3    0        PTR const unsigned char 
  2380 ;;  width           2    7[BANK0 ] int 
  2381 ;;  val             2    4[BANK0 ] unsigned int 
  2382 ;;  ap              2    1[BANK0 ] PTR void [1]
  2383 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2384 ;;  len             2    0        unsigned int 
  2385 ;;  c               1    9[BANK0 ] char 
  2386 ;;  flag            1    6[BANK0 ] unsigned char 
  2387 ;;  prec            1    3[BANK0 ] char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2   56[COMRAM] int 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:        12      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:       22 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    6
  2404 ;; This function calls:
  2405 ;;		___lwdiv
  2406 ;;		___lwmod
  2407 ;;		___wmul
  2408 ;;		_isdigit
  2409 ;;		_putch
  2410 ;; This function is called by:
  2411 ;;		_standby
  2412 ;;		_date_time
  2413 ;;		_bottle_count
  2414 ;;		_bottle_time
  2415 ;;		_operation
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text12
  2420  000012                     __ptext12:
  2421                           	opt stack 0
  2422  000012                     _printf:
  2423                           	opt stack 23
  2424                           
  2425                           ;doprnt.c: 466: va_list ap;
  2426                           ;doprnt.c: 499: signed char c;
  2427                           ;doprnt.c: 501: int width;
  2428                           ;doprnt.c: 506: signed char prec;
  2429                           ;doprnt.c: 508: unsigned char flag;
  2430                           ;doprnt.c: 523: union {
  2431                           ;doprnt.c: 524: unsigned long vd;
  2432                           ;doprnt.c: 525: double integ;
  2433                           ;doprnt.c: 526: } tmpval;
  2434                           ;doprnt.c: 528: unsigned int val;
  2435                           ;doprnt.c: 529: unsigned len;
  2436                           ;doprnt.c: 530: const char * cp;
  2437                           ;doprnt.c: 533: *ap = __va_start();
  2438                           
  2439                           ;incstack = 0
  2440  000012  0E3B               	movlw	low (?_printf+2)
  2441  000014  0100               	movlb	0	; () banked
  2442  000016  6F81               	movwf	printf@ap& (0+255),b
  2443  000018  0E00               	movlw	high (?_printf+2)
  2444  00001A  0100               	movlb	0	; () banked
  2445  00001C  6F82               	movwf	(printf@ap+1)& (0+255),b
  2446                           
  2447                           ;doprnt.c: 536: while(c = *f++) {
  2448  00001E  D1AF               	goto	l2547
  2449  000020                     l2421:
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;doprnt.c: 538: if(c != '%')
  2453  000020  0E25               	movlw	37
  2454  000022  0100               	movlb	0	; () banked
  2455  000024  1989               	xorwf	printf@c& (0+255),w,b
  2456  000026  B4D8               	btfsc	status,2,c
  2457  000028  D005               	goto	l2425
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;doprnt.c: 540: {
  2461                           ;doprnt.c: 541: (putch(c) );
  2462  00002A  0100               	movlb	0	; () banked
  2463  00002C  5189               	movf	printf@c& (0+255),w,b
  2464  00002E  EC98  F007         	call	_putch
  2465                           
  2466                           ;doprnt.c: 542: continue;
  2467  000032  D1A5               	goto	l2547
  2468  000034                     l2425:
  2469                           
  2470                           ;doprnt.c: 543: }
  2471                           ;doprnt.c: 546: width = 0;
  2472  000034  0E00               	movlw	0
  2473  000036  0100               	movlb	0	; () banked
  2474  000038  6F88               	movwf	(printf@width+1)& (0+255),b
  2475  00003A  0E00               	movlw	0
  2476  00003C  6F87               	movwf	printf@width& (0+255),b
  2477                           
  2478                           ;doprnt.c: 548: flag = 0;
  2479  00003E  0E00               	movlw	0
  2480  000040  0100               	movlb	0	; () banked
  2481  000042  6F86               	movwf	printf@flag& (0+255),b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;doprnt.c: 551: switch(*f) {
  2485                           
  2486                           ;doprnt.c: 550: for(;;) {
  2487  000044  D004               	goto	l2431
  2488  000046                     l2427:
  2489                           
  2490                           ;doprnt.c: 580: flag |= 0x04;
  2491  000046  0100               	movlb	0	; () banked
  2492  000048  8586               	bsf	printf@flag& (0+255),2,b
  2493                           
  2494                           ;doprnt.c: 581: f++;
  2495  00004A  4A39               	infsnz	printf@f,f,c
  2496  00004C  2A3A               	incf	printf@f+1,f,c
  2497  00004E                     l2431:
  2498  00004E  C039  FFF6         	movff	printf@f,tblptrl
  2499  000052  C03A  FFF7         	movff	printf@f+1,tblptrh
  2500  000056                     	if	0	;tblptru may be non-zero
  2501  000056                     	endif
  2502  000056                     	if	0	;tblptru may be non-zero
  2503  000056                     	endif
  2504  000056  0008               	tblrd		*
  2505  000058  50F5               	movf	tablat,w,c
  2506                           
  2507                           ; Switch size 1, requested type "space"
  2508                           ; Number of cases is 1, Range of values is 48 to 48
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte            4     3 (average)
  2512                           ;	Chosen strategy is simple_byte
  2513  00005A  0A30               	xorlw	48	; case 48
  2514  00005C  B4D8               	btfsc	status,2,c
  2515  00005E  D7F3               	goto	l2427
  2516                           
  2517                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2518                           
  2519                           ;doprnt.c: 586: }
  2520                           
  2521                           ;doprnt.c: 585: break;
  2522  000060  C039  FFF6         	movff	printf@f,tblptrl
  2523  000064  C03A  FFF7         	movff	printf@f+1,tblptrh
  2524  000068                     	if	0	;tblptru may be non-zero
  2525  000068                     	endif
  2526  000068                     	if	0	;tblptru may be non-zero
  2527  000068                     	endif
  2528  000068  0008               	tblrd		*
  2529  00006A  50F5               	movf	tablat,w,c
  2530  00006C  EC71  F007         	call	_isdigit
  2531  000070  A0D8               	btfss	status,0,c
  2532  000072  D039               	goto	l2449
  2533                           
  2534                           ;doprnt.c: 598: width = 0;
  2535  000074  0E00               	movlw	0
  2536  000076  0100               	movlb	0	; () banked
  2537  000078  6F88               	movwf	(printf@width+1)& (0+255),b
  2538  00007A  0E00               	movlw	0
  2539  00007C  6F87               	movwf	printf@width& (0+255),b
  2540  00007E                     l2437:
  2541                           
  2542                           ;doprnt.c: 600: width *= 10;
  2543  00007E  C087  F02D         	movff	printf@width,___wmul@multiplier
  2544  000082  C088  F02E         	movff	printf@width+1,___wmul@multiplier+1
  2545  000086  0E00               	movlw	0
  2546  000088  6E30               	movwf	___wmul@multiplicand+1,c
  2547  00008A  0E0A               	movlw	10
  2548  00008C  6E2F               	movwf	___wmul@multiplicand,c
  2549  00008E  EC4B  F007         	call	___wmul	;wreg free
  2550  000092  C02D  F087         	movff	?___wmul,printf@width
  2551  000096  C02E  F088         	movff	?___wmul+1,printf@width+1
  2552                           
  2553                           ;doprnt.c: 601: width += *f++ - '0';
  2554  00009A  0ED0               	movlw	208
  2555  00009C  6E41               	movwf	??_printf& (0+255),c
  2556  00009E  0EFF               	movlw	255
  2557  0000A0  6E42               	movwf	(??_printf+1)& (0+255),c
  2558  0000A2  C039  FFF6         	movff	printf@f,tblptrl
  2559  0000A6  C03A  FFF7         	movff	printf@f+1,tblptrh
  2560  0000AA                     	if	0	;tblptru may be non-zero
  2561  0000AA                     	endif
  2562  0000AA                     	if	0	;tblptru may be non-zero
  2563  0000AA                     	endif
  2564  0000AA  0008               	tblrd		*
  2565  0000AC  50F5               	movf	tablat,w,c
  2566  0000AE  6E43               	movwf	(??_printf+2)& (0+255),c
  2567  0000B0  6A44               	clrf	(??_printf+3)& (0+255),c
  2568  0000B2  5041               	movf	??_printf,w,c
  2569  0000B4  2643               	addwf	??_printf+2,f,c
  2570  0000B6  5042               	movf	??_printf+1,w,c
  2571  0000B8  2244               	addwfc	??_printf+3,f,c
  2572  0000BA  5043               	movf	??_printf+2,w,c
  2573  0000BC  0100               	movlb	0	; () banked
  2574  0000BE  2787               	addwf	printf@width& (0+255),f,b
  2575  0000C0  5044               	movf	??_printf+3,w,c
  2576  0000C2  0100               	movlb	0	; () banked
  2577  0000C4  2388               	addwfc	(printf@width+1)& (0+255),f,b
  2578                           
  2579                           ; BSR set to: 0
  2580  0000C6  4A39               	infsnz	printf@f,f,c
  2581  0000C8  2A3A               	incf	printf@f+1,f,c
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2585  0000CA  C039  FFF6         	movff	printf@f,tblptrl
  2586  0000CE  C03A  FFF7         	movff	printf@f+1,tblptrh
  2587  0000D2                     	if	0	;tblptru may be non-zero
  2588  0000D2                     	endif
  2589  0000D2                     	if	0	;tblptru may be non-zero
  2590  0000D2                     	endif
  2591  0000D2  0008               	tblrd		*
  2592  0000D4  50F5               	movf	tablat,w,c
  2593  0000D6  EC71  F007         	call	_isdigit
  2594  0000DA  A0D8               	btfss	status,0,c
  2595  0000DC  D004               	goto	l2449
  2596  0000DE  D7CF               	goto	l2437
  2597  0000E0                     l2445:
  2598                           
  2599                           ;doprnt.c: 721: flag |= 0x80;
  2600  0000E0  0100               	movlb	0	; () banked
  2601  0000E2  8F86               	bsf	printf@flag& (0+255),7,b
  2602                           
  2603                           ;doprnt.c: 723: break;
  2604  0000E4  D018               	goto	l257
  2605  0000E6                     l2449:
  2606  0000E6  C039  FFF6         	movff	printf@f,tblptrl
  2607  0000EA  C03A  FFF7         	movff	printf@f+1,tblptrh
  2608  0000EE  4A39               	infsnz	printf@f,f,c
  2609  0000F0  2A3A               	incf	printf@f+1,f,c
  2610  0000F2                     	if	0	;tblptru may be non-zero
  2611  0000F2                     	endif
  2612  0000F2                     	if	0	;tblptru may be non-zero
  2613  0000F2                     	endif
  2614  0000F2  0008               	tblrd		*
  2615  0000F4  CFF5 F089          	movff	tablat,printf@c
  2616  0000F8  0100               	movlb	0	; () banked
  2617  0000FA  5189               	movf	printf@c& (0+255),w,b
  2618                           
  2619                           ; Switch size 1, requested type "space"
  2620                           ; Number of cases is 4, Range of values is 0 to 120
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           13     7 (average)
  2624                           ;	Chosen strategy is simple_byte
  2625  0000FC  0A00               	xorlw	0	; case 0
  2626  0000FE  B4D8               	btfsc	status,2,c
  2627  000100  0012               	return	
  2628  000102  0A64               	xorlw	100	; case 100
  2629  000104  B4D8               	btfsc	status,2,c
  2630  000106  D007               	goto	l257
  2631  000108  0A0D               	xorlw	13	; case 105
  2632  00010A  B4D8               	btfsc	status,2,c
  2633  00010C  D004               	goto	l257
  2634  00010E  0A11               	xorlw	17	; case 120
  2635  000110  B4D8               	btfsc	status,2,c
  2636  000112  D7E6               	goto	l2445
  2637  000114  D134               	goto	l2547
  2638  000116                     l257:
  2639                           
  2640                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  2641  000116  0100               	movlb	0	; () banked
  2642  000118  BF86               	btfsc	printf@flag& (0+255),7,b
  2643  00011A  D019               	goto	l2461
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;doprnt.c: 1253: {
  2647                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2648  00011C  C081  FFD9         	movff	printf@ap,fsr2l
  2649  000120  C082  FFDA         	movff	printf@ap+1,fsr2h
  2650  000124  CFDE F084          	movff	postinc2,printf@val
  2651  000128  CFDD F085          	movff	postdec2,printf@val+1
  2652                           
  2653                           ; BSR set to: 0
  2654  00012C  0E02               	movlw	2
  2655  00012E  0100               	movlb	0	; () banked
  2656  000130  2781               	addwf	printf@ap& (0+255),f,b
  2657  000132  0E00               	movlw	0
  2658  000134  2382               	addwfc	(printf@ap+1)& (0+255),f,b
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;doprnt.c: 1261: if((int)val < 0) {
  2662  000136  0100               	movlb	0	; () banked
  2663  000138  AF85               	btfss	(printf@val+1)& (0+255),7,b
  2664  00013A  D053               	goto	l2495
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;doprnt.c: 1262: flag |= 0x03;
  2668  00013C  0E03               	movlw	3
  2669  00013E  0100               	movlb	0	; () banked
  2670  000140  1386               	iorwf	printf@flag& (0+255),f,b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;doprnt.c: 1263: val = -val;
  2674  000142  0100               	movlb	0	; () banked
  2675  000144  6D84               	negf	printf@val& (0+255),b
  2676  000146  1F85               	comf	(printf@val+1)& (0+255),f,b
  2677  000148  B0D8               	btfsc	status,0,c
  2678  00014A  2B85               	incf	(printf@val+1)& (0+255),f,b
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;doprnt.c: 1264: }
  2682                           ;doprnt.c: 1266: }
  2683  00014C  D04A               	goto	l2495
  2684  00014E                     l2461:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;doprnt.c: 1268: else
  2688                           ;doprnt.c: 1273: {
  2689                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2690  00014E  C081  FFD9         	movff	printf@ap,fsr2l
  2691  000152  C082  FFDA         	movff	printf@ap+1,fsr2h
  2692  000156  CFDE F084          	movff	postinc2,printf@val
  2693  00015A  CFDD F085          	movff	postdec2,printf@val+1
  2694                           
  2695                           ; BSR set to: 0
  2696  00015E  0E02               	movlw	2
  2697  000160  0100               	movlb	0	; () banked
  2698  000162  2781               	addwf	printf@ap& (0+255),f,b
  2699  000164  0E00               	movlw	0
  2700  000166  2382               	addwfc	(printf@ap+1)& (0+255),f,b
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;doprnt.c: 1287: }
  2704                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  2705  000168  D03C               	goto	l2495
  2706  00016A                     l2465:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2710  00016A  0E01               	movlw	1
  2711  00016C  0100               	movlb	0	; () banked
  2712  00016E  6F89               	movwf	printf@c& (0+255),b
  2713  000170                     l2467:
  2714                           
  2715                           ; BSR set to: 0
  2716  000170  0E05               	movlw	5
  2717  000172  0100               	movlb	0	; () banked
  2718  000174  1989               	xorwf	printf@c& (0+255),w,b
  2719  000176  B4D8               	btfsc	status,2,c
  2720  000178  D03D               	goto	l2497
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;doprnt.c: 1306: if(val < dpowers[c])
  2724                           
  2725                           ; BSR set to: 0
  2726                           
  2727                           ; BSR set to: 0
  2728  00017A  0100               	movlb	0	; () banked
  2729  00017C  5189               	movf	printf@c& (0+255),w,b
  2730  00017E  0D02               	mullw	2
  2731  000180  0E4C               	movlw	low _dpowers
  2732  000182  24F3               	addwf	prodl,w,c
  2733  000184  6EF6               	movwf	tblptrl,c
  2734  000186  0EFE               	movlw	high _dpowers
  2735  000188  20F4               	addwfc	prodh,w,c
  2736  00018A  6EF7               	movwf	tblptrh,c
  2737  00018C                     	if	0	;There are less than 3 active tblptr bytes
  2738  00018C                     	endif
  2739  00018C  0009               	tblrd		*+
  2740  00018E  50F5               	movf	tablat,w,c
  2741  000190  0100               	movlb	0	; () banked
  2742  000192  5D84               	subwf	printf@val& (0+255),w,b
  2743  000194  0009               	tblrd		*+
  2744  000196  50F5               	movf	tablat,w,c
  2745  000198  0100               	movlb	0	; () banked
  2746  00019A  5985               	subwfb	(printf@val+1)& (0+255),w,b
  2747  00019C  A0D8               	btfss	status,0,c
  2748  00019E  D02A               	goto	l2497
  2749                           
  2750                           ; BSR set to: 0
  2751                           
  2752                           ; BSR set to: 0
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;doprnt.c: 1307: break;
  2756  0001A0  0100               	movlb	0	; () banked
  2757  0001A2  2B89               	incf	printf@c& (0+255),f,b
  2758  0001A4  D7E5               	goto	l2467
  2759  0001A6                     l2479:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2763  0001A6  0E01               	movlw	1
  2764  0001A8  0100               	movlb	0	; () banked
  2765  0001AA  6F89               	movwf	printf@c& (0+255),b
  2766  0001AC                     l2481:
  2767                           
  2768                           ; BSR set to: 0
  2769  0001AC  0E04               	movlw	4
  2770  0001AE  0100               	movlb	0	; () banked
  2771  0001B0  1989               	xorwf	printf@c& (0+255),w,b
  2772  0001B2  B4D8               	btfsc	status,2,c
  2773  0001B4  D01F               	goto	l2497
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2777                           
  2778                           ; BSR set to: 0
  2779                           
  2780                           ; BSR set to: 0
  2781  0001B6  0100               	movlb	0	; () banked
  2782  0001B8  5189               	movf	printf@c& (0+255),w,b
  2783  0001BA  0D02               	mullw	2
  2784  0001BC  0E56               	movlw	low _hexpowers
  2785  0001BE  24F3               	addwf	prodl,w,c
  2786  0001C0  6EF6               	movwf	tblptrl,c
  2787  0001C2  0EFE               	movlw	high _hexpowers
  2788  0001C4  20F4               	addwfc	prodh,w,c
  2789  0001C6  6EF7               	movwf	tblptrh,c
  2790  0001C8                     	if	0	;There are less than 3 active tblptr bytes
  2791  0001C8                     	endif
  2792  0001C8  0009               	tblrd		*+
  2793  0001CA  50F5               	movf	tablat,w,c
  2794  0001CC  0100               	movlb	0	; () banked
  2795  0001CE  5D84               	subwf	printf@val& (0+255),w,b
  2796  0001D0  0009               	tblrd		*+
  2797  0001D2  50F5               	movf	tablat,w,c
  2798  0001D4  0100               	movlb	0	; () banked
  2799  0001D6  5985               	subwfb	(printf@val+1)& (0+255),w,b
  2800  0001D8  A0D8               	btfss	status,0,c
  2801  0001DA  D00C               	goto	l2497
  2802                           
  2803                           ; BSR set to: 0
  2804                           
  2805                           ; BSR set to: 0
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;doprnt.c: 1318: break;
  2809  0001DC  0100               	movlb	0	; () banked
  2810  0001DE  2B89               	incf	printf@c& (0+255),f,b
  2811  0001E0  D7E5               	goto	l2481
  2812  0001E2                     l2495:
  2813                           
  2814                           ; BSR set to: 0
  2815  0001E2  0100               	movlb	0	; () banked
  2816  0001E4  5186               	movf	printf@flag& (0+255),w,b
  2817  0001E6  0B80               	andlw	128
  2818                           
  2819                           ; Switch size 1, requested type "space"
  2820                           ; Number of cases is 2, Range of values is 0 to 128
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            7     4 (average)
  2824                           ;	Chosen strategy is simple_byte
  2825  0001E8  0A00               	xorlw	0	; case 0
  2826  0001EA  B4D8               	btfsc	status,2,c
  2827  0001EC  D7BE               	goto	l2465
  2828  0001EE  0A80               	xorlw	128	; case 128
  2829  0001F0  B4D8               	btfsc	status,2,c
  2830  0001F2  D7D9               	goto	l2479
  2831  0001F4                     l2497:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;doprnt.c: 1345: if(width && flag & 0x03)
  2835  0001F4  0100               	movlb	0	; () banked
  2836  0001F6  5187               	movf	printf@width& (0+255),w,b
  2837  0001F8  0100               	movlb	0	; () banked
  2838  0001FA  1188               	iorwf	(printf@width+1)& (0+255),w,b
  2839  0001FC  B4D8               	btfsc	status,2,c
  2840  0001FE  D00A               	goto	l2503
  2841                           
  2842                           ; BSR set to: 0
  2843  000200  C086  F041         	movff	printf@flag,??_printf
  2844  000204  0E03               	movlw	3
  2845  000206  1641               	andwf	??_printf,f,c
  2846  000208  B4D8               	btfsc	status,2,c
  2847  00020A  D004               	goto	l2503
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;doprnt.c: 1346: width--;
  2851  00020C  0100               	movlb	0	; () banked
  2852  00020E  0787               	decf	printf@width& (0+255),f,b
  2853  000210  A0D8               	btfss	status,0,c
  2854  000212  0788               	decf	(printf@width+1)& (0+255),f,b
  2855  000214                     l2503:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;doprnt.c: 1381: if(width > c)
  2859  000214  0E80               	movlw	128
  2860  000216  0100               	movlb	0	; () banked
  2861  000218  BF89               	btfsc	printf@c& (0+255),7,b
  2862  00021A  0E7F               	movlw	127
  2863  00021C  6E41               	movwf	??_printf& (0+255),c
  2864  00021E  0100               	movlb	0	; () banked
  2865  000220  5187               	movf	printf@width& (0+255),w,b
  2866  000222  0100               	movlb	0	; () banked
  2867  000224  5D89               	subwf	printf@c& (0+255),w,b
  2868  000226  0100               	movlb	0	; () banked
  2869  000228  5188               	movf	(printf@width+1)& (0+255),w,b
  2870  00022A  0A80               	xorlw	128
  2871  00022C  5841               	subwfb	??_printf& (0+255),w,c
  2872  00022E  B0D8               	btfsc	status,0,c
  2873  000230  D00B               	goto	l2507
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;doprnt.c: 1382: width -= c;
  2877  000232  0100               	movlb	0	; () banked
  2878  000234  5189               	movf	printf@c& (0+255),w,b
  2879  000236  0100               	movlb	0	; () banked
  2880  000238  5F87               	subwf	printf@width& (0+255),f,b
  2881  00023A  0E00               	movlw	0
  2882  00023C  0100               	movlb	0	; () banked
  2883  00023E  BF89               	btfsc	printf@c& (0+255),7,b
  2884  000240  0EFF               	movlw	255
  2885  000242  0100               	movlb	0	; () banked
  2886  000244  5B88               	subwfb	(printf@width+1)& (0+255),f,b
  2887  000246  D005               	goto	l2509
  2888  000248                     l2507:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;doprnt.c: 1383: else
  2892                           ;doprnt.c: 1384: width = 0;
  2893  000248  0E00               	movlw	0
  2894  00024A  0100               	movlb	0	; () banked
  2895  00024C  6F88               	movwf	(printf@width+1)& (0+255),b
  2896  00024E  0E00               	movlw	0
  2897  000250  6F87               	movwf	printf@width& (0+255),b
  2898  000252                     l2509:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;doprnt.c: 1387: if(flag & 0x04) {
  2902  000252  0100               	movlb	0	; () banked
  2903  000254  A586               	btfss	printf@flag& (0+255),2,b
  2904  000256  D017               	goto	l2521
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;doprnt.c: 1392: if(flag & 0x03)
  2908  000258  C086  F041         	movff	printf@flag,??_printf
  2909  00025C  0E03               	movlw	3
  2910  00025E  1641               	andwf	??_printf,f,c
  2911  000260  B4D8               	btfsc	status,2,c
  2912  000262  D003               	goto	l2515
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;doprnt.c: 1393: (putch('-') );
  2916  000264  0E2D               	movlw	45
  2917  000266  EC98  F007         	call	_putch
  2918  00026A                     l2515:
  2919                           
  2920                           ;doprnt.c: 1415: if(width)
  2921  00026A  0100               	movlb	0	; () banked
  2922  00026C  5187               	movf	printf@width& (0+255),w,b
  2923  00026E  0100               	movlb	0	; () banked
  2924  000270  1188               	iorwf	(printf@width+1)& (0+255),w,b
  2925  000272  B4D8               	btfsc	status,2,c
  2926  000274  D024               	goto	l2531
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;doprnt.c: 1417: (putch('0') );
  2930                           
  2931                           ; BSR set to: 0
  2932                           
  2933                           ;doprnt.c: 1416: do
  2934  000276  0E30               	movlw	48
  2935  000278  EC98  F007         	call	_putch
  2936                           
  2937                           ;doprnt.c: 1418: while(--width);
  2938  00027C  0100               	movlb	0	; () banked
  2939  00027E  0787               	decf	printf@width& (0+255),f,b
  2940  000280  A0D8               	btfss	status,0,c
  2941  000282  0788               	decf	(printf@width+1)& (0+255),f,b
  2942  000284  D7F2               	goto	l2515
  2943  000286                     l2521:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;doprnt.c: 1422: {
  2947                           ;doprnt.c: 1424: if(width
  2948                           ;doprnt.c: 1428: )
  2949  000286  0100               	movlb	0	; () banked
  2950  000288  5187               	movf	printf@width& (0+255),w,b
  2951  00028A  0100               	movlb	0	; () banked
  2952  00028C  1188               	iorwf	(printf@width+1)& (0+255),w,b
  2953  00028E  B4D8               	btfsc	status,2,c
  2954  000290  D00D               	goto	l2527
  2955  000292                     l2523:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;doprnt.c: 1430: (putch(' ') );
  2959  000292  0E20               	movlw	32
  2960  000294  EC98  F007         	call	_putch
  2961                           
  2962                           ;doprnt.c: 1431: while(--width);
  2963  000298  0100               	movlb	0	; () banked
  2964  00029A  0787               	decf	printf@width& (0+255),f,b
  2965  00029C  A0D8               	btfss	status,0,c
  2966  00029E  0788               	decf	(printf@width+1)& (0+255),f,b
  2967  0002A0  0100               	movlb	0	; () banked
  2968  0002A2  5187               	movf	printf@width& (0+255),w,b
  2969  0002A4  0100               	movlb	0	; () banked
  2970  0002A6  1188               	iorwf	(printf@width+1)& (0+255),w,b
  2971  0002A8  A4D8               	btfss	status,2,c
  2972  0002AA  D7F3               	goto	l2523
  2973  0002AC                     l2527:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;doprnt.c: 1438: if(flag & 0x03)
  2977  0002AC  C086  F041         	movff	printf@flag,??_printf
  2978  0002B0  0E03               	movlw	3
  2979  0002B2  1641               	andwf	??_printf,f,c
  2980  0002B4  B4D8               	btfsc	status,2,c
  2981  0002B6  D003               	goto	l2531
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;doprnt.c: 1439: (putch('-') );
  2985  0002B8  0E2D               	movlw	45
  2986  0002BA  EC98  F007         	call	_putch
  2987  0002BE                     l2531:
  2988                           
  2989                           ;doprnt.c: 1469: }
  2990                           ;doprnt.c: 1472: prec = c;
  2991  0002BE  C089  F083         	movff	printf@c,printf@prec
  2992                           
  2993                           ;doprnt.c: 1474: while(prec--) {
  2994  0002C2  D057               	goto	l2545
  2995  0002C4                     l2533:
  2996                           
  2997                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2998  0002C4  0100               	movlb	0	; () banked
  2999  0002C6  5183               	movf	printf@prec& (0+255),w,b
  3000  0002C8  0D02               	mullw	2
  3001  0002CA  0E4C               	movlw	low _dpowers
  3002  0002CC  24F3               	addwf	prodl,w,c
  3003  0002CE  6EF6               	movwf	tblptrl,c
  3004  0002D0  0EFE               	movlw	high _dpowers
  3005  0002D2  20F4               	addwfc	prodh,w,c
  3006  0002D4  6EF7               	movwf	tblptrh,c
  3007  0002D6                     	if	0	;There are less than 3 active tblptr bytes
  3008  0002D6                     	endif
  3009  0002D6  0009               	tblrd		*+
  3010  0002D8  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  3011  0002DC  000A               	tblrd		*-
  3012  0002DE  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  3013  0002E2  C084  F02D         	movff	printf@val,___lwdiv@dividend
  3014  0002E6  C085  F02E         	movff	printf@val+1,___lwdiv@dividend+1
  3015  0002EA  ECEE  F005         	call	___lwdiv	;wreg free
  3016  0002EE  C02D  F034         	movff	?___lwdiv,___lwmod@dividend
  3017  0002F2  C02E  F035         	movff	?___lwdiv+1,___lwmod@dividend+1
  3018  0002F6  0E00               	movlw	0
  3019  0002F8  6E37               	movwf	___lwmod@divisor+1,c
  3020  0002FA  0E0A               	movlw	10
  3021  0002FC  6E36               	movwf	___lwmod@divisor,c
  3022  0002FE  ECB4  F006         	call	___lwmod	;wreg free
  3023  000302  5034               	movf	?___lwmod,w,c
  3024  000304  0F30               	addlw	48
  3025  000306  0100               	movlb	0	; () banked
  3026  000308  6F89               	movwf	printf@c& (0+255),b
  3027                           
  3028                           ;doprnt.c: 1491: break;
  3029  00030A  D02F               	goto	l2543
  3030  00030C                     l2535:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;doprnt.c: 1499: {
  3034                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3035  00030C  C084  F02D         	movff	printf@val,___lwdiv@dividend
  3036  000310  C085  F02E         	movff	printf@val+1,___lwdiv@dividend+1
  3037  000314  0100               	movlb	0	; () banked
  3038  000316  5183               	movf	printf@prec& (0+255),w,b
  3039  000318  0D02               	mullw	2
  3040  00031A  0E56               	movlw	low _hexpowers
  3041  00031C  24F3               	addwf	prodl,w,c
  3042  00031E  6EF6               	movwf	tblptrl,c
  3043  000320  0EFE               	movlw	high _hexpowers
  3044  000322  20F4               	addwfc	prodh,w,c
  3045  000324  6EF7               	movwf	tblptrh,c
  3046  000326                     	if	0	;There are less than 3 active tblptr bytes
  3047  000326                     	endif
  3048  000326  0009               	tblrd		*+
  3049  000328  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  3050  00032C  000A               	tblrd		*-
  3051  00032E  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  3052  000332  ECEE  F005         	call	___lwdiv	;wreg free
  3053  000336  502D               	movf	?___lwdiv,w,c
  3054  000338  0B0F               	andlw	15
  3055  00033A  0100               	movlb	0	; () banked
  3056  00033C  6F80               	movwf	printf@idx& (0+255),b
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3060  00033E  0100               	movlb	0	; () banked
  3061  000340  5180               	movf	printf@idx& (0+255),w,b
  3062  000342  0D01               	mullw	1
  3063  000344  0E09               	movlw	low STR_22
  3064  000346  24F3               	addwf	prodl,w,c
  3065  000348  6EF6               	movwf	tblptrl,c
  3066  00034A  0EFF               	movlw	high STR_22
  3067  00034C  20F4               	addwfc	prodh,w,c
  3068  00034E  6EF7               	movwf	tblptrh,c
  3069  000350                     	if	0	;There are less than 3 active tblptr bytes
  3070  000350                     	endif
  3071  000350  0008               	tblrd		*
  3072  000352  CFF5 F089          	movff	tablat,printf@c
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;doprnt.c: 1523: }
  3076                           
  3077                           ;doprnt.c: 1508: }
  3078                           ;doprnt.c: 1510: break;
  3079  000356  D009               	goto	l2543
  3080  000358                     l2541:
  3081  000358  0100               	movlb	0	; () banked
  3082  00035A  5186               	movf	printf@flag& (0+255),w,b
  3083  00035C  0B80               	andlw	128
  3084                           
  3085                           ; Switch size 1, requested type "space"
  3086                           ; Number of cases is 2, Range of values is 0 to 128
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte            7     4 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  00035E  0A00               	xorlw	0	; case 0
  3092  000360  B4D8               	btfsc	status,2,c
  3093  000362  D7B0               	goto	l2533
  3094  000364  0A80               	xorlw	128	; case 128
  3095  000366  B4D8               	btfsc	status,2,c
  3096  000368  D7D1               	goto	l2535
  3097  00036A                     l2543:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;doprnt.c: 1524: (putch(c) );
  3101  00036A  0100               	movlb	0	; () banked
  3102  00036C  5189               	movf	printf@c& (0+255),w,b
  3103  00036E  EC98  F007         	call	_putch
  3104  000372                     l2545:
  3105  000372  0100               	movlb	0	; () banked
  3106  000374  0783               	decf	printf@prec& (0+255),f,b
  3107  000376  0100               	movlb	0	; () banked
  3108  000378  2983               	incf	printf@prec& (0+255),w,b
  3109  00037A  A4D8               	btfss	status,2,c
  3110  00037C  D7ED               	goto	l2541
  3111  00037E                     l2547:
  3112  00037E  C039  FFF6         	movff	printf@f,tblptrl
  3113  000382  C03A  FFF7         	movff	printf@f+1,tblptrh
  3114  000386  4A39               	infsnz	printf@f,f,c
  3115  000388  2A3A               	incf	printf@f+1,f,c
  3116  00038A                     	if	0	;tblptru may be non-zero
  3117  00038A                     	endif
  3118  00038A                     	if	0	;tblptru may be non-zero
  3119  00038A                     	endif
  3120  00038A  0008               	tblrd		*
  3121  00038C  CFF5 F089          	movff	tablat,printf@c
  3122  000390  0100               	movlb	0	; () banked
  3123  000392  5189               	movf	printf@c& (0+255),w,b
  3124  000394  B4D8               	btfsc	status,2,c
  3125  000396  0012               	return	
  3126  000398  D643               	goto	l2421
  3127  00039A                     __end_of_printf:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           prodh	equ	0xFF4
  3134                           prodl	equ	0xFF3
  3135                           intcon	equ	0xFF2
  3136                           intcon2	equ	0xFF1
  3137                           intcon3	equ	0xFF0
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           fsr2h	equ	0xFDA
  3144                           fsr2l	equ	0xFD9
  3145                           status	equ	0xFD8
  3146                           
  3147 ;; *************** function _putch *****************
  3148 ;; Defined at:
  3149 ;;		line 31 in file "lcd.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  data            1    wreg     unsigned char 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  data            1   46[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        1 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    5
  3170 ;; This function calls:
  3171 ;;		_lcdNibble
  3172 ;; This function is called by:
  3173 ;;		_printf
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text13
  3178  000F30                     __ptext13:
  3179                           	opt stack 0
  3180  000F30                     _putch:
  3181                           	opt stack 23
  3182                           
  3183                           ;incstack = 0
  3184                           ;putch@data stored from wreg
  3185  000F30  6E2F               	movwf	putch@data,c
  3186                           
  3187                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  3188  000F32  848C               	bsf	3980,2,c	;volatile
  3189                           
  3190                           ;lcd.c: 33: lcdNibble(data);
  3191  000F34  502F               	movf	putch@data,w,c
  3192  000F36  EC40  F006         	call	_lcdNibble
  3193  000F3A  0012               	return		;funcret
  3194  000F3C                     __end_of_putch:
  3195                           	opt stack 0
  3196                           tblptru	equ	0xFF8
  3197                           tblptrh	equ	0xFF7
  3198                           tblptrl	equ	0xFF6
  3199                           tablat	equ	0xFF5
  3200                           prodh	equ	0xFF4
  3201                           prodl	equ	0xFF3
  3202                           intcon	equ	0xFF2
  3203                           intcon2	equ	0xFF1
  3204                           intcon3	equ	0xFF0
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           indf2	equ	0xFDF
  3208                           postinc2	equ	0xFDE
  3209                           postdec2	equ	0xFDD
  3210                           fsr2h	equ	0xFDA
  3211                           fsr2l	equ	0xFD9
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _isdigit *****************
  3215 ;; Defined at:
  3216 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  c               1    wreg     unsigned char 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  c               1   46[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        3 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    4
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_printf
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text14
  3245  000EE2                     __ptext14:
  3246                           	opt stack 0
  3247  000EE2                     _isdigit:
  3248                           	opt stack 24
  3249                           
  3250                           ;incstack = 0
  3251                           ;isdigit@c stored from wreg
  3252  000EE2  6E2F               	movwf	isdigit@c,c
  3253  000EE4  0E00               	movlw	0
  3254  000EE6  6E2E               	movwf	_isdigit$530,c
  3255  000EE8  0E3A               	movlw	58
  3256  000EEA  602F               	cpfslt	isdigit@c,c
  3257  000EEC  D005               	goto	l2367
  3258  000EEE  0E2F               	movlw	47
  3259  000EF0  642F               	cpfsgt	isdigit@c,c
  3260  000EF2  D002               	goto	l2367
  3261  000EF4  0E01               	movlw	1
  3262  000EF6  6E2E               	movwf	_isdigit$530,c
  3263  000EF8                     l2367:
  3264  000EF8  C02E  F02D         	movff	_isdigit$530,??_isdigit
  3265  000EFC  302D               	rrcf	??_isdigit,w,c
  3266  000EFE  0012               	return	
  3267  000F00                     __end_of_isdigit:
  3268                           	opt stack 0
  3269                           tblptru	equ	0xFF8
  3270                           tblptrh	equ	0xFF7
  3271                           tblptrl	equ	0xFF6
  3272                           tablat	equ	0xFF5
  3273                           prodh	equ	0xFF4
  3274                           prodl	equ	0xFF3
  3275                           intcon	equ	0xFF2
  3276                           intcon2	equ	0xFF1
  3277                           intcon3	equ	0xFF0
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           indf2	equ	0xFDF
  3281                           postinc2	equ	0xFDE
  3282                           postdec2	equ	0xFDD
  3283                           fsr2h	equ	0xFDA
  3284                           fsr2l	equ	0xFD9
  3285                           status	equ	0xFD8
  3286                           
  3287 ;; *************** function ___wmul *****************
  3288 ;; Defined at:
  3289 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  multiplier      2   44[COMRAM] unsigned int 
  3292 ;;  multiplicand    2   46[COMRAM] unsigned int 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  product         2   48[COMRAM] unsigned int 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2   44[COMRAM] unsigned int 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, prodl, prodh
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;Total ram usage:        6 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    4
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_printf
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text15
  3319  000E96                     __ptext15:
  3320                           	opt stack 0
  3321  000E96                     ___wmul:
  3322                           	opt stack 24
  3323                           
  3324                           ;incstack = 0
  3325  000E96  502D               	movf	___wmul@multiplier,w,c
  3326  000E98  022F               	mulwf	___wmul@multiplicand,c
  3327  000E9A  CFF3 F031          	movff	prodl,___wmul@product
  3328  000E9E  CFF4 F032          	movff	prodh,___wmul@product+1
  3329  000EA2  502D               	movf	___wmul@multiplier,w,c
  3330  000EA4  0230               	mulwf	___wmul@multiplicand+1,c
  3331  000EA6  50F3               	movf	prodl,w,c
  3332  000EA8  2632               	addwf	___wmul@product+1,f,c
  3333  000EAA  502E               	movf	___wmul@multiplier+1,w,c
  3334  000EAC  022F               	mulwf	___wmul@multiplicand,c
  3335  000EAE  50F3               	movf	prodl,w,c
  3336  000EB0  2632               	addwf	___wmul@product+1,f,c
  3337  000EB2  C031  F02D         	movff	___wmul@product,?___wmul
  3338  000EB6  C032  F02E         	movff	___wmul@product+1,?___wmul+1
  3339  000EBA  0012               	return	
  3340  000EBC                     __end_of___wmul:
  3341                           	opt stack 0
  3342                           tblptru	equ	0xFF8
  3343                           tblptrh	equ	0xFF7
  3344                           tblptrl	equ	0xFF6
  3345                           tablat	equ	0xFF5
  3346                           prodh	equ	0xFF4
  3347                           prodl	equ	0xFF3
  3348                           intcon	equ	0xFF2
  3349                           intcon2	equ	0xFF1
  3350                           intcon3	equ	0xFF0
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function ___lwmod *****************
  3361 ;; Defined at:
  3362 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dividend        2   51[COMRAM] unsigned int 
  3365 ;;  divisor         2   53[COMRAM] unsigned int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  counter         1   55[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2   51[COMRAM] unsigned int 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        5 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    4
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_printf
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text16
  3392  000D68                     __ptext16:
  3393                           	opt stack 0
  3394  000D68                     ___lwmod:
  3395                           	opt stack 24
  3396                           
  3397                           ;incstack = 0
  3398  000D68  5036               	movf	___lwmod@divisor,w,c
  3399  000D6A  1037               	iorwf	___lwmod@divisor+1,w,c
  3400  000D6C  B4D8               	btfsc	status,2,c
  3401  000D6E  D018               	goto	l712
  3402  000D70  0E01               	movlw	1
  3403  000D72  6E38               	movwf	___lwmod@counter,c
  3404  000D74  D004               	goto	l2405
  3405  000D76                     l2403:
  3406  000D76  90D8               	bcf	status,0,c
  3407  000D78  3636               	rlcf	___lwmod@divisor,f,c
  3408  000D7A  3637               	rlcf	___lwmod@divisor+1,f,c
  3409  000D7C  2A38               	incf	___lwmod@counter,f,c
  3410  000D7E                     l2405:
  3411  000D7E  AE37               	btfss	___lwmod@divisor+1,7,c
  3412  000D80  D7FA               	goto	l2403
  3413  000D82                     l2407:
  3414  000D82  5036               	movf	___lwmod@divisor,w,c
  3415  000D84  5C34               	subwf	___lwmod@dividend,w,c
  3416  000D86  5037               	movf	___lwmod@divisor+1,w,c
  3417  000D88  5835               	subwfb	___lwmod@dividend+1,w,c
  3418  000D8A  A0D8               	btfss	status,0,c
  3419  000D8C  D004               	goto	l2411
  3420  000D8E  5036               	movf	___lwmod@divisor,w,c
  3421  000D90  5E34               	subwf	___lwmod@dividend,f,c
  3422  000D92  5037               	movf	___lwmod@divisor+1,w,c
  3423  000D94  5A35               	subwfb	___lwmod@dividend+1,f,c
  3424  000D96                     l2411:
  3425  000D96  90D8               	bcf	status,0,c
  3426  000D98  3237               	rrcf	___lwmod@divisor+1,f,c
  3427  000D9A  3236               	rrcf	___lwmod@divisor,f,c
  3428  000D9C  2E38               	decfsz	___lwmod@counter,f,c
  3429  000D9E  D7F1               	goto	l2407
  3430  000DA0                     l712:
  3431  000DA0  C034  F034         	movff	___lwmod@dividend,?___lwmod
  3432  000DA4  C035  F035         	movff	___lwmod@dividend+1,?___lwmod+1
  3433  000DA8  0012               	return		;funcret
  3434  000DAA                     __end_of___lwmod:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           prodh	equ	0xFF4
  3441                           prodl	equ	0xFF3
  3442                           intcon	equ	0xFF2
  3443                           intcon2	equ	0xFF1
  3444                           intcon3	equ	0xFF0
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           indf2	equ	0xFDF
  3448                           postinc2	equ	0xFDE
  3449                           postdec2	equ	0xFDD
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function ___lwdiv *****************
  3455 ;; Defined at:
  3456 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  dividend        2   44[COMRAM] unsigned int 
  3459 ;;  divisor         2   46[COMRAM] unsigned int 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  quotient        2   49[COMRAM] unsigned int 
  3462 ;;  counter         1   48[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  2   44[COMRAM] unsigned int 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        7 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    4
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_printf
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text17
  3487  000BDC                     __ptext17:
  3488                           	opt stack 0
  3489  000BDC                     ___lwdiv:
  3490                           	opt stack 24
  3491                           
  3492                           ;incstack = 0
  3493  000BDC  0E00               	movlw	0
  3494  000BDE  6E33               	movwf	___lwdiv@quotient+1,c
  3495  000BE0  0E00               	movlw	0
  3496  000BE2  6E32               	movwf	___lwdiv@quotient,c
  3497  000BE4  502F               	movf	___lwdiv@divisor,w,c
  3498  000BE6  1030               	iorwf	___lwdiv@divisor+1,w,c
  3499  000BE8  B4D8               	btfsc	status,2,c
  3500  000BEA  D01C               	goto	l702
  3501  000BEC  0E01               	movlw	1
  3502  000BEE  6E31               	movwf	___lwdiv@counter,c
  3503  000BF0  D004               	goto	l2385
  3504  000BF2                     l2383:
  3505  000BF2  90D8               	bcf	status,0,c
  3506  000BF4  362F               	rlcf	___lwdiv@divisor,f,c
  3507  000BF6  3630               	rlcf	___lwdiv@divisor+1,f,c
  3508  000BF8  2A31               	incf	___lwdiv@counter,f,c
  3509  000BFA                     l2385:
  3510  000BFA  AE30               	btfss	___lwdiv@divisor+1,7,c
  3511  000BFC  D7FA               	goto	l2383
  3512  000BFE                     l2387:
  3513  000BFE  90D8               	bcf	status,0,c
  3514  000C00  3632               	rlcf	___lwdiv@quotient,f,c
  3515  000C02  3633               	rlcf	___lwdiv@quotient+1,f,c
  3516  000C04  502F               	movf	___lwdiv@divisor,w,c
  3517  000C06  5C2D               	subwf	___lwdiv@dividend,w,c
  3518  000C08  5030               	movf	___lwdiv@divisor+1,w,c
  3519  000C0A  582E               	subwfb	___lwdiv@dividend+1,w,c
  3520  000C0C  A0D8               	btfss	status,0,c
  3521  000C0E  D005               	goto	l2395
  3522  000C10  502F               	movf	___lwdiv@divisor,w,c
  3523  000C12  5E2D               	subwf	___lwdiv@dividend,f,c
  3524  000C14  5030               	movf	___lwdiv@divisor+1,w,c
  3525  000C16  5A2E               	subwfb	___lwdiv@dividend+1,f,c
  3526  000C18  8032               	bsf	___lwdiv@quotient,0,c
  3527  000C1A                     l2395:
  3528  000C1A  90D8               	bcf	status,0,c
  3529  000C1C  3230               	rrcf	___lwdiv@divisor+1,f,c
  3530  000C1E  322F               	rrcf	___lwdiv@divisor,f,c
  3531  000C20  2E31               	decfsz	___lwdiv@counter,f,c
  3532  000C22  D7ED               	goto	l2387
  3533  000C24                     l702:
  3534  000C24  C032  F02D         	movff	___lwdiv@quotient,?___lwdiv
  3535  000C28  C033  F02E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3536  000C2C  0012               	return		;funcret
  3537  000C2E                     __end_of___lwdiv:
  3538                           	opt stack 0
  3539                           tblptru	equ	0xFF8
  3540                           tblptrh	equ	0xFF7
  3541                           tblptrl	equ	0xFF6
  3542                           tablat	equ	0xFF5
  3543                           prodh	equ	0xFF4
  3544                           prodl	equ	0xFF3
  3545                           intcon	equ	0xFF2
  3546                           intcon2	equ	0xFF1
  3547                           intcon3	equ	0xFF0
  3548                           postinc0	equ	0xFEE
  3549                           wreg	equ	0xFE8
  3550                           indf2	equ	0xFDF
  3551                           postinc2	equ	0xFDE
  3552                           postdec2	equ	0xFDD
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _lcdInst *****************
  3558 ;; Defined at:
  3559 ;;		line 26 in file "lcd.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  data            1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  data            1   46[COMRAM] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    5
  3580 ;; This function calls:
  3581 ;;		_lcdNibble
  3582 ;; This function is called by:
  3583 ;;		_initLCD
  3584 ;;		_standby
  3585 ;;		_date_time
  3586 ;;		_bottle_count
  3587 ;;		_bottle_time
  3588 ;;		_operation
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text18
  3593  000F3C                     __ptext18:
  3594                           	opt stack 0
  3595  000F3C                     _lcdInst:
  3596                           	opt stack 24
  3597                           
  3598                           ;incstack = 0
  3599                           ;lcdInst@data stored from wreg
  3600  000F3C  6E2F               	movwf	lcdInst@data,c
  3601                           
  3602                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  3603  000F3E  948C               	bcf	3980,2,c	;volatile
  3604                           
  3605                           ;lcd.c: 28: lcdNibble(data);
  3606  000F40  502F               	movf	lcdInst@data,w,c
  3607  000F42  EC40  F006         	call	_lcdNibble
  3608  000F46  0012               	return		;funcret
  3609  000F48                     __end_of_lcdInst:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           prodh	equ	0xFF4
  3616                           prodl	equ	0xFF3
  3617                           intcon	equ	0xFF2
  3618                           intcon2	equ	0xFF1
  3619                           intcon3	equ	0xFF0
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           indf2	equ	0xFDF
  3623                           postinc2	equ	0xFDE
  3624                           postdec2	equ	0xFDD
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function _lcdNibble *****************
  3630 ;; Defined at:
  3631 ;;		line 36 in file "lcd.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  data            1    wreg     unsigned char 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  data            1   45[COMRAM] unsigned char 
  3636 ;;  temp            1   44[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        2 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:    4
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_lcdInst
  3657 ;;		_putch
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text19
  3662  000C80                     __ptext19:
  3663                           	opt stack 0
  3664  000C80                     _lcdNibble:
  3665                           	opt stack 23
  3666                           
  3667                           ;incstack = 0
  3668                           ;lcdNibble@data stored from wreg
  3669  000C80  6E2E               	movwf	lcdNibble@data,c
  3670                           
  3671                           ;lcd.c: 38: char temp = data & 0xF0;
  3672  000C82  502E               	movf	lcdNibble@data,w,c
  3673  000C84  0BF0               	andlw	240
  3674  000C86  6E2D               	movwf	lcdNibble@temp,c
  3675                           
  3676                           ;lcd.c: 39: LATD = LATD & 0x0F;
  3677  000C88  508C               	movf	3980,w,c	;volatile
  3678  000C8A  0B0F               	andlw	15
  3679  000C8C  6E8C               	movwf	3980,c	;volatile
  3680                           
  3681                           ;lcd.c: 40: LATD = temp | LATD;
  3682  000C8E  502D               	movf	lcdNibble@temp,w,c
  3683  000C90  108C               	iorwf	3980,w,c	;volatile
  3684  000C92  6E8C               	movwf	3980,c	;volatile
  3685                           
  3686                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  3687  000C94  968C               	bcf	3980,3,c	;volatile
  3688                           
  3689                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3690  000C96  0E19               	movlw	25
  3691  000C98                     u2027:
  3692  000C98  2EE8               	decfsz	wreg,f,c
  3693  000C9A  D7FE               	bra	u2027
  3694                           
  3695                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  3696  000C9C  868C               	bsf	3980,3,c	;volatile
  3697                           
  3698                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3699  000C9E  0E19               	movlw	25
  3700  000CA0                     u2037:
  3701  000CA0  2EE8               	decfsz	wreg,f,c
  3702  000CA2  D7FE               	bra	u2037
  3703                           
  3704                           ;lcd.c: 47: data = data << 4;
  3705  000CA4  382E               	swapf	lcdNibble@data,w,c
  3706  000CA6  0BF0               	andlw	240
  3707  000CA8  6E2E               	movwf	lcdNibble@data,c
  3708                           
  3709                           ;lcd.c: 49: temp = data & 0xF0;
  3710  000CAA  502E               	movf	lcdNibble@data,w,c
  3711  000CAC  0BF0               	andlw	240
  3712  000CAE  6E2D               	movwf	lcdNibble@temp,c
  3713                           
  3714                           ;lcd.c: 50: LATD = LATD & 0x0F;
  3715  000CB0  508C               	movf	3980,w,c	;volatile
  3716  000CB2  0B0F               	andlw	15
  3717  000CB4  6E8C               	movwf	3980,c	;volatile
  3718                           
  3719                           ;lcd.c: 51: LATD = temp | LATD;
  3720  000CB6  502D               	movf	lcdNibble@temp,w,c
  3721  000CB8  108C               	iorwf	3980,w,c	;volatile
  3722  000CBA  6E8C               	movwf	3980,c	;volatile
  3723                           
  3724                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  3725  000CBC  968C               	bcf	3980,3,c	;volatile
  3726                           
  3727                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3728  000CBE  0E19               	movlw	25
  3729  000CC0                     u2047:
  3730  000CC0  2EE8               	decfsz	wreg,f,c
  3731  000CC2  D7FE               	bra	u2047
  3732                           
  3733                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  3734  000CC4  868C               	bsf	3980,3,c	;volatile
  3735                           
  3736                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3737  000CC6  0E19               	movlw	25
  3738  000CC8                     u2057:
  3739  000CC8  2EE8               	decfsz	wreg,f,c
  3740  000CCA  D7FE               	bra	u2057
  3741  000CCC  0012               	return		;funcret
  3742  000CCE                     __end_of_lcdNibble:
  3743                           	opt stack 0
  3744                           tblptru	equ	0xFF8
  3745                           tblptrh	equ	0xFF7
  3746                           tblptrl	equ	0xFF6
  3747                           tablat	equ	0xFF5
  3748                           prodh	equ	0xFF4
  3749                           prodl	equ	0xFF3
  3750                           intcon	equ	0xFF2
  3751                           intcon2	equ	0xFF1
  3752                           intcon3	equ	0xFF0
  3753                           postinc0	equ	0xFEE
  3754                           wreg	equ	0xFE8
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function ___awmod *****************
  3763 ;; Defined at:
  3764 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  dividend        2   44[COMRAM] int 
  3767 ;;  divisor         2   46[COMRAM] int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  sign            1   49[COMRAM] unsigned char 
  3770 ;;  counter         1   48[COMRAM] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  2   44[COMRAM] int 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;Total ram usage:        6 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    4
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_bottle_count
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text20
  3795  000B12                     __ptext20:
  3796                           	opt stack 0
  3797  000B12                     ___awmod:
  3798                           	opt stack 25
  3799                           
  3800                           ;incstack = 0
  3801  000B12  0E00               	movlw	0
  3802  000B14  6E32               	movwf	___awmod@sign,c
  3803  000B16  AE2E               	btfss	___awmod@dividend+1,7,c
  3804  000B18  D006               	goto	l1881
  3805  000B1A  6C2D               	negf	___awmod@dividend,c
  3806  000B1C  1E2E               	comf	___awmod@dividend+1,f,c
  3807  000B1E  B0D8               	btfsc	status,0,c
  3808  000B20  2A2E               	incf	___awmod@dividend+1,f,c
  3809  000B22  0E01               	movlw	1
  3810  000B24  6E32               	movwf	___awmod@sign,c
  3811  000B26                     l1881:
  3812  000B26  AE30               	btfss	___awmod@divisor+1,7,c
  3813  000B28  D004               	goto	l1885
  3814  000B2A  6C2F               	negf	___awmod@divisor,c
  3815  000B2C  1E30               	comf	___awmod@divisor+1,f,c
  3816  000B2E  B0D8               	btfsc	status,0,c
  3817  000B30  2A30               	incf	___awmod@divisor+1,f,c
  3818  000B32                     l1885:
  3819  000B32  502F               	movf	___awmod@divisor,w,c
  3820  000B34  1030               	iorwf	___awmod@divisor+1,w,c
  3821  000B36  B4D8               	btfsc	status,2,c
  3822  000B38  D018               	goto	l1901
  3823  000B3A  0E01               	movlw	1
  3824  000B3C  6E31               	movwf	___awmod@counter,c
  3825  000B3E  D004               	goto	l1891
  3826  000B40                     l1889:
  3827  000B40  90D8               	bcf	status,0,c
  3828  000B42  362F               	rlcf	___awmod@divisor,f,c
  3829  000B44  3630               	rlcf	___awmod@divisor+1,f,c
  3830  000B46  2A31               	incf	___awmod@counter,f,c
  3831  000B48                     l1891:
  3832  000B48  AE30               	btfss	___awmod@divisor+1,7,c
  3833  000B4A  D7FA               	goto	l1889
  3834  000B4C                     l1893:
  3835  000B4C  502F               	movf	___awmod@divisor,w,c
  3836  000B4E  5C2D               	subwf	___awmod@dividend,w,c
  3837  000B50  5030               	movf	___awmod@divisor+1,w,c
  3838  000B52  582E               	subwfb	___awmod@dividend+1,w,c
  3839  000B54  A0D8               	btfss	status,0,c
  3840  000B56  D004               	goto	l1897
  3841  000B58  502F               	movf	___awmod@divisor,w,c
  3842  000B5A  5E2D               	subwf	___awmod@dividend,f,c
  3843  000B5C  5030               	movf	___awmod@divisor+1,w,c
  3844  000B5E  5A2E               	subwfb	___awmod@dividend+1,f,c
  3845  000B60                     l1897:
  3846  000B60  90D8               	bcf	status,0,c
  3847  000B62  3230               	rrcf	___awmod@divisor+1,f,c
  3848  000B64  322F               	rrcf	___awmod@divisor,f,c
  3849  000B66  2E31               	decfsz	___awmod@counter,f,c
  3850  000B68  D7F1               	goto	l1893
  3851  000B6A                     l1901:
  3852  000B6A  5032               	movf	___awmod@sign,w,c
  3853  000B6C  B4D8               	btfsc	status,2,c
  3854  000B6E  D004               	goto	l1905
  3855  000B70  6C2D               	negf	___awmod@dividend,c
  3856  000B72  1E2E               	comf	___awmod@dividend+1,f,c
  3857  000B74  B0D8               	btfsc	status,0,c
  3858  000B76  2A2E               	incf	___awmod@dividend+1,f,c
  3859  000B78                     l1905:
  3860  000B78  C02D  F02D         	movff	___awmod@dividend,?___awmod
  3861  000B7C  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
  3862  000B80  0012               	return	
  3863  000B82                     __end_of___awmod:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           intcon2	equ	0xFF1
  3873                           intcon3	equ	0xFF0
  3874                           postinc0	equ	0xFEE
  3875                           wreg	equ	0xFE8
  3876                           indf2	equ	0xFDF
  3877                           postinc2	equ	0xFDE
  3878                           postdec2	equ	0xFDD
  3879                           fsr2h	equ	0xFDA
  3880                           fsr2l	equ	0xFD9
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function _I2C_Master_Init *****************
  3884 ;; Defined at:
  3885 ;;		line 13 in file "I2C.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  c               4   57[COMRAM] const unsigned long 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:        8 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    5
  3906 ;; This function calls:
  3907 ;;		___lldiv
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text21
  3914  000B82                     __ptext21:
  3915                           	opt stack 0
  3916  000B82                     _I2C_Master_Init:
  3917                           	opt stack 25
  3918                           
  3919                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  3920                           
  3921                           ;incstack = 0
  3922  000B82  0E00               	movlw	0
  3923  000B84  6EC7               	movwf	4039,c	;volatile
  3924                           
  3925                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  3926  000B86  0E28               	movlw	40
  3927  000B88  6EC6               	movwf	4038,c	;volatile
  3928                           
  3929                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  3930  000B8A  0E00               	movlw	0
  3931  000B8C  6EC5               	movwf	4037,c	;volatile
  3932                           
  3933                           ;I2C.c: 19: SSPADD = (10000000/(4*c))-1;
  3934  000B8E  0E80               	movlw	128
  3935  000B90  6E2D               	movwf	___lldiv@dividend,c
  3936  000B92  0E96               	movlw	150
  3937  000B94  6E2E               	movwf	___lldiv@dividend+1,c
  3938  000B96  0E98               	movlw	152
  3939  000B98  6E2F               	movwf	___lldiv@dividend+2,c
  3940  000B9A  0E00               	movlw	0
  3941  000B9C  6E30               	movwf	___lldiv@dividend+3,c
  3942  000B9E  C03A  F03E         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  3943  000BA2  C03B  F03F         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  3944  000BA6  C03C  F040         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  3945  000BAA  C03D  F041         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  3946  000BAE  0E02               	movlw	2
  3947  000BB0                     u1345:
  3948  000BB0  90D8               	bcf	status,0,c
  3949  000BB2  363E               	rlcf	??_I2C_Master_Init,f,c
  3950  000BB4  363F               	rlcf	??_I2C_Master_Init+1,f,c
  3951  000BB6  3640               	rlcf	??_I2C_Master_Init+2,f,c
  3952  000BB8  3641               	rlcf	??_I2C_Master_Init+3,f,c
  3953  000BBA  2EE8               	decfsz	wreg,f,c
  3954  000BBC  D7F9               	goto	u1345
  3955  000BBE  C03E  F031         	movff	??_I2C_Master_Init,___lldiv@divisor
  3956  000BC2  C03F  F032         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  3957  000BC6  C040  F033         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  3958  000BCA  C041  F034         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  3959  000BCE  EC0A  F005         	call	___lldiv	;wreg free
  3960  000BD2  042D               	decf	?___lldiv,w,c
  3961  000BD4  6EC8               	movwf	4040,c	;volatile
  3962                           
  3963                           ;I2C.c: 20: TRISC3 = 1;
  3964  000BD6  8694               	bsf	3988,3,c	;volatile
  3965                           
  3966                           ;I2C.c: 21: TRISC4 = 1;
  3967  000BD8  8894               	bsf	3988,4,c	;volatile
  3968  000BDA  0012               	return		;funcret
  3969  000BDC                     __end_of_I2C_Master_Init:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           intcon2	equ	0xFF1
  3979                           intcon3	equ	0xFF0
  3980                           postinc0	equ	0xFEE
  3981                           wreg	equ	0xFE8
  3982                           indf2	equ	0xFDF
  3983                           postinc2	equ	0xFDE
  3984                           postdec2	equ	0xFDD
  3985                           fsr2h	equ	0xFDA
  3986                           fsr2l	equ	0xFD9
  3987                           status	equ	0xFD8
  3988                           
  3989 ;; *************** function ___lldiv *****************
  3990 ;; Defined at:
  3991 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  dividend        4   44[COMRAM] unsigned long 
  3994 ;;  divisor         4   48[COMRAM] unsigned long 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  quotient        4   52[COMRAM] unsigned long 
  3997 ;;  counter         1   56[COMRAM] unsigned char 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  4   44[COMRAM] unsigned long 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4007 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;Total ram usage:       13 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    4
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_I2C_Master_Init
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text22
  4022  000A14                     __ptext22:
  4023                           	opt stack 0
  4024  000A14                     ___lldiv:
  4025                           	opt stack 25
  4026                           
  4027                           ;incstack = 0
  4028  000A14  0E00               	movlw	0
  4029  000A16  6E35               	movwf	___lldiv@quotient,c
  4030  000A18  0E00               	movlw	0
  4031  000A1A  6E36               	movwf	___lldiv@quotient+1,c
  4032  000A1C  0E00               	movlw	0
  4033  000A1E  6E37               	movwf	___lldiv@quotient+2,c
  4034  000A20  0E00               	movlw	0
  4035  000A22  6E38               	movwf	___lldiv@quotient+3,c
  4036  000A24  5031               	movf	___lldiv@divisor,w,c
  4037  000A26  1032               	iorwf	___lldiv@divisor+1,w,c
  4038  000A28  1033               	iorwf	___lldiv@divisor+2,w,c
  4039  000A2A  1034               	iorwf	___lldiv@divisor+3,w,c
  4040  000A2C  B4D8               	btfsc	status,2,c
  4041  000A2E  D02A               	goto	l649
  4042  000A30  0E01               	movlw	1
  4043  000A32  6E39               	movwf	___lldiv@counter,c
  4044  000A34  D006               	goto	l1917
  4045  000A36                     l1915:
  4046  000A36  90D8               	bcf	status,0,c
  4047  000A38  3631               	rlcf	___lldiv@divisor,f,c
  4048  000A3A  3632               	rlcf	___lldiv@divisor+1,f,c
  4049  000A3C  3633               	rlcf	___lldiv@divisor+2,f,c
  4050  000A3E  3634               	rlcf	___lldiv@divisor+3,f,c
  4051  000A40  2A39               	incf	___lldiv@counter,f,c
  4052  000A42                     l1917:
  4053  000A42  AE34               	btfss	___lldiv@divisor+3,7,c
  4054  000A44  D7F8               	goto	l1915
  4055  000A46                     l1919:
  4056  000A46  90D8               	bcf	status,0,c
  4057  000A48  3635               	rlcf	___lldiv@quotient,f,c
  4058  000A4A  3636               	rlcf	___lldiv@quotient+1,f,c
  4059  000A4C  3637               	rlcf	___lldiv@quotient+2,f,c
  4060  000A4E  3638               	rlcf	___lldiv@quotient+3,f,c
  4061  000A50  5031               	movf	___lldiv@divisor,w,c
  4062  000A52  5C2D               	subwf	___lldiv@dividend,w,c
  4063  000A54  5032               	movf	___lldiv@divisor+1,w,c
  4064  000A56  582E               	subwfb	___lldiv@dividend+1,w,c
  4065  000A58  5033               	movf	___lldiv@divisor+2,w,c
  4066  000A5A  582F               	subwfb	___lldiv@dividend+2,w,c
  4067  000A5C  5034               	movf	___lldiv@divisor+3,w,c
  4068  000A5E  5830               	subwfb	___lldiv@dividend+3,w,c
  4069  000A60  A0D8               	btfss	status,0,c
  4070  000A62  D009               	goto	l1927
  4071  000A64  5031               	movf	___lldiv@divisor,w,c
  4072  000A66  5E2D               	subwf	___lldiv@dividend,f,c
  4073  000A68  5032               	movf	___lldiv@divisor+1,w,c
  4074  000A6A  5A2E               	subwfb	___lldiv@dividend+1,f,c
  4075  000A6C  5033               	movf	___lldiv@divisor+2,w,c
  4076  000A6E  5A2F               	subwfb	___lldiv@dividend+2,f,c
  4077  000A70  5034               	movf	___lldiv@divisor+3,w,c
  4078  000A72  5A30               	subwfb	___lldiv@dividend+3,f,c
  4079  000A74  8035               	bsf	___lldiv@quotient,0,c
  4080  000A76                     l1927:
  4081  000A76  90D8               	bcf	status,0,c
  4082  000A78  3234               	rrcf	___lldiv@divisor+3,f,c
  4083  000A7A  3233               	rrcf	___lldiv@divisor+2,f,c
  4084  000A7C  3232               	rrcf	___lldiv@divisor+1,f,c
  4085  000A7E  3231               	rrcf	___lldiv@divisor,f,c
  4086  000A80  2E39               	decfsz	___lldiv@counter,f,c
  4087  000A82  D7E1               	goto	l1919
  4088  000A84                     l649:
  4089  000A84  C035  F02D         	movff	___lldiv@quotient,?___lldiv
  4090  000A88  C036  F02E         	movff	___lldiv@quotient+1,?___lldiv+1
  4091  000A8C  C037  F02F         	movff	___lldiv@quotient+2,?___lldiv+2
  4092  000A90  C038  F030         	movff	___lldiv@quotient+3,?___lldiv+3
  4093  000A94  0012               	return		;funcret
  4094  000A96                     __end_of___lldiv:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           intcon2	equ	0xFF1
  4104                           intcon3	equ	0xFF0
  4105                           postinc0	equ	0xFEE
  4106                           wreg	equ	0xFE8
  4107                           indf2	equ	0xFDF
  4108                           postinc2	equ	0xFDE
  4109                           postdec2	equ	0xFDD
  4110                           fsr2h	equ	0xFDA
  4111                           fsr2l	equ	0xFD9
  4112                           status	equ	0xFD8
  4113                           
  4114 ;; *************** function _isr *****************
  4115 ;; Defined at:
  4116 ;;		line 99 in file "main.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  i               1   43[COMRAM] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;Total ram usage:       16 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		i2_lcdInst
  4139 ;;		i2_printf
  4140 ;; This function is called by:
  4141 ;;		Interrupt level 2
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	intcode
  4146  000008                     __pintcode:
  4147                           	opt stack 0
  4148  000008                     _isr:
  4149                           	opt stack 23
  4150                           
  4151                           ;incstack = 0
  4152  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4153  00000A  EDE0  F003         	call	int_func,f	;refresh shadow registers
  4154                           tblptru	equ	0xFF8
  4155                           tblptrh	equ	0xFF7
  4156                           tblptrl	equ	0xFF6
  4157                           tablat	equ	0xFF5
  4158                           prodh	equ	0xFF4
  4159                           prodl	equ	0xFF3
  4160                           intcon	equ	0xFF2
  4161                           intcon2	equ	0xFF1
  4162                           intcon3	equ	0xFF0
  4163                           postinc0	equ	0xFEE
  4164                           wreg	equ	0xFE8
  4165                           indf2	equ	0xFDF
  4166                           postinc2	equ	0xFDE
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172                           	psect	intcode_body
  4173  0007C0                     __pintcode_body:
  4174                           	opt stack 23
  4175  0007C0                     int_func:
  4176                           	opt stack 23
  4177  0007C0  0006               	pop		; remove dummy address from shadow register refresh
  4178  0007C2  CFFA F01E          	movff	pclath,??_isr+1
  4179  0007C6  CFFB F01F          	movff	pclatu,??_isr+2
  4180  0007CA  CFE9 F020          	movff	fsr0l,??_isr+3
  4181  0007CE  CFEA F021          	movff	fsr0h,??_isr+4
  4182  0007D2  CFE1 F022          	movff	fsr1l,??_isr+5
  4183  0007D6  CFE2 F023          	movff	fsr1h,??_isr+6
  4184  0007DA  CFD9 F024          	movff	fsr2l,??_isr+7
  4185  0007DE  CFDA F025          	movff	fsr2h,??_isr+8
  4186  0007E2  CFF3 F026          	movff	prodl,??_isr+9
  4187  0007E6  CFF4 F027          	movff	prodh,??_isr+10
  4188  0007EA  CFF6 F028          	movff	tblptrl,??_isr+11
  4189  0007EE  CFF7 F029          	movff	tblptrh,??_isr+12
  4190  0007F2  CFF8 F02A          	movff	tblptru,??_isr+13
  4191  0007F6  CFF5 F02B          	movff	tablat,??_isr+14
  4192                           
  4193                           ;main.c: 100: if (INT1IF) {
  4194  0007FA  B0F0               	btfsc	intcon3,0,c	;volatile
  4195  0007FC  D016               	goto	i2l2297
  4196  0007FE  D026               	goto	i2l2299
  4197  000800                     i2l2279:
  4198                           
  4199                           ;main.c: 103: curr_state = STANDBY;
  4200  000800  0E00               	movlw	0
  4201  000802  D011               	goto	L3
  4202  000804                     i2l2281:
  4203                           
  4204                           ;main.c: 106: curr_state = DATETIME;
  4205  000804  0E02               	movlw	2
  4206  000806  D00F               	goto	L3
  4207  000808                     i2l2283:
  4208                           
  4209                           ;main.c: 109: curr_state = BOTTLECOUNT;
  4210  000808  0E03               	movlw	3
  4211  00080A  6E50               	movwf	_curr_state,c
  4212                           
  4213                           ;main.c: 110: bottle_count_disp += 1;
  4214  00080C  4A51               	infsnz	_bottle_count_disp,f,c
  4215  00080E  2A52               	incf	_bottle_count_disp+1,f,c
  4216  000810                     i2l2287:
  4217  000810  0E1F               	movlw	31
  4218  000812  1881               	xorwf	3969,w,c	;volatile
  4219  000814  A4D8               	btfss	status,2,c
  4220  000816  D033               	goto	i2l181
  4221  000818  D7FB               	goto	i2l2287
  4222  00081A                     i2l2289:
  4223                           
  4224                           ;main.c: 114: curr_state = BOTTLETIME;
  4225  00081A  0E04               	movlw	4
  4226  00081C  D004               	goto	L3
  4227  00081E                     i2l2291:
  4228                           
  4229                           ;main.c: 117: lcdInst(0b00000001);
  4230  00081E  0E01               	movlw	1
  4231  000820  ECAA  F007         	call	i2_lcdInst
  4232                           
  4233                           ;main.c: 118: curr_state = OPERATION;
  4234  000824  0E01               	movlw	1
  4235  000826                     L3:
  4236  000826  6E50               	movwf	_curr_state,c
  4237                           
  4238                           ;main.c: 120: }
  4239                           
  4240                           ;main.c: 119: break;
  4241  000828  D02A               	goto	i2l181
  4242  00082A                     i2l2297:
  4243  00082A  5081               	movf	3969,w,c	;volatile
  4244                           
  4245                           ; Switch size 1, requested type "space"
  4246                           ; Number of cases is 5, Range of values is 15 to 239
  4247                           ; switch strategies available:
  4248                           ; Name         Instructions Cycles
  4249                           ; simple_byte           16     9 (average)
  4250                           ;	Chosen strategy is simple_byte
  4251  00082C  0A0F               	xorlw	15	; case 15
  4252  00082E  B4D8               	btfsc	status,2,c
  4253  000830  D7F6               	goto	i2l2291
  4254  000832  0A10               	xorlw	16	; case 31
  4255  000834  B4D8               	btfsc	status,2,c
  4256  000836  D7E8               	goto	i2l2283
  4257  000838  0A30               	xorlw	48	; case 47
  4258  00083A  B4D8               	btfsc	status,2,c
  4259  00083C  D7EE               	goto	i2l2289
  4260  00083E  0A10               	xorlw	16	; case 63
  4261  000840  B4D8               	btfsc	status,2,c
  4262  000842  D7E0               	goto	i2l2281
  4263  000844  0AD0               	xorlw	208	; case 239
  4264  000846  B4D8               	btfsc	status,2,c
  4265  000848  D7DB               	goto	i2l2279
  4266                           
  4267                           ;main.c: 121: }
  4268  00084A  D019               	goto	i2l181
  4269  00084C                     i2l2299:
  4270                           
  4271                           ;main.c: 124: lcdInst(0b10000000);
  4272  00084C  0E80               	movlw	128
  4273  00084E  ECAA  F007         	call	i2_lcdInst
  4274                           
  4275                           ;main.c: 125: printf("bad interrupt");
  4276  000852  0EE6               	movlw	low STR_1
  4277  000854  6E0D               	movwf	i2printf@f,c
  4278  000856  0EFF               	movlw	high STR_1
  4279  000858  6E0E               	movwf	i2printf@f+1,c
  4280  00085A  ECCD  F001         	call	i2_printf	;wreg free
  4281                           
  4282                           ;main.c: 126: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  4283  00085E  0E00               	movlw	0
  4284  000860  6E2C               	movwf	isr@i,c
  4285  000862                     i2l2305:
  4286  000862  0E63               	movlw	99
  4287  000864  642C               	cpfsgt	isr@i,c
  4288  000866  D001               	goto	i2l2309
  4289  000868  D7F1               	goto	i2l2299
  4290  00086A                     i2l2309:
  4291  00086A  0E21               	movlw	33
  4292  00086C  6E1D               	movwf	??_isr& (0+255),c
  4293  00086E  0E76               	movlw	118
  4294  000870                     i2u206_47:
  4295  000870  2EE8               	decfsz	wreg,f,c
  4296  000872  D7FE               	bra	i2u206_47
  4297  000874  2E1D               	decfsz	??_isr& (0+255),f,c
  4298  000876  D7FC               	bra	i2u206_47
  4299  000878  D000               	nop2	
  4300  00087A  2A2C               	incf	isr@i,f,c
  4301  00087C  D7F2               	goto	i2l2305
  4302  00087E                     i2l181:
  4303                           
  4304                           ;main.c: 127: }
  4305                           ;main.c: 128: }
  4306                           ;main.c: 129: INT1IF = 0;
  4307  00087E  90F0               	bcf	intcon3,0,c	;volatile
  4308                           
  4309                           ;main.c: 130: return;
  4310  000880  C02B  FFF5         	movff	??_isr+14,tablat
  4311  000884  C02A  FFF8         	movff	??_isr+13,tblptru
  4312  000888  C029  FFF7         	movff	??_isr+12,tblptrh
  4313  00088C  C028  FFF6         	movff	??_isr+11,tblptrl
  4314  000890  C027  FFF4         	movff	??_isr+10,prodh
  4315  000894  C026  FFF3         	movff	??_isr+9,prodl
  4316  000898  C025  FFDA         	movff	??_isr+8,fsr2h
  4317  00089C  C024  FFD9         	movff	??_isr+7,fsr2l
  4318  0008A0  C023  FFE2         	movff	??_isr+6,fsr1h
  4319  0008A4  C022  FFE1         	movff	??_isr+5,fsr1l
  4320  0008A8  C021  FFEA         	movff	??_isr+4,fsr0h
  4321  0008AC  C020  FFE9         	movff	??_isr+3,fsr0l
  4322  0008B0  C01F  FFFB         	movff	??_isr+2,pclatu
  4323  0008B4  C01E  FFFA         	movff	??_isr+1,pclath
  4324  0008B8  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4325  0008BA  0011               	retfie		f
  4326  0008BC                     __end_of_isr:
  4327                           	opt stack 0
  4328                           pclatu	equ	0xFFB
  4329                           pclath	equ	0xFFA
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           intcon2	equ	0xFF1
  4338                           intcon3	equ	0xFF0
  4339                           postinc0	equ	0xFEE
  4340                           fsr0h	equ	0xFEA
  4341                           fsr0l	equ	0xFE9
  4342                           wreg	equ	0xFE8
  4343                           fsr1h	equ	0xFE2
  4344                           fsr1l	equ	0xFE1
  4345                           indf2	equ	0xFDF
  4346                           postinc2	equ	0xFDE
  4347                           postdec2	equ	0xFDD
  4348                           fsr2h	equ	0xFDA
  4349                           fsr2l	equ	0xFD9
  4350                           status	equ	0xFD8
  4351                           
  4352 ;; *************** function i2_printf *****************
  4353 ;; Defined at:
  4354 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  f               2   12[COMRAM] PTR const unsigned char 
  4357 ;;		 -> STR_21(25), STR_20(24), STR_19(23), STR_18(23), 
  4358 ;;		 -> STR_17(23), STR_16(10), STR_15(17), STR_14(17), 
  4359 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
  4360 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
  4361 ;;		 -> STR_5(23), STR_4(23), STR_3(17), STR_2(17), 
  4362 ;;		 -> STR_1(14), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  printf          4    0        struct .
  4365 ;;  printf          3    0        PTR const unsigned char 
  4366 ;;  printf          2   25[COMRAM] int 
  4367 ;;  printf          2   22[COMRAM] unsigned int 
  4368 ;;  printf          2   19[COMRAM] PTR void [1]
  4369 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4370 ;;  printf          2    0        unsigned int 
  4371 ;;  printf          1   27[COMRAM] char 
  4372 ;;  printf          1   24[COMRAM] unsigned char 
  4373 ;;  printf          1   21[COMRAM] char 
  4374 ;;  printf          1   18[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2   12[COMRAM] int 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;Total ram usage:       16 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    2
  4391 ;; This function calls:
  4392 ;;		i2___lwdiv
  4393 ;;		i2___lwmod
  4394 ;;		i2___wmul
  4395 ;;		i2_isdigit
  4396 ;;		i2_putch
  4397 ;; This function is called by:
  4398 ;;		_isr
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text24
  4403  00039A                     __ptext24:
  4404                           	opt stack 0
  4405  00039A                     i2_printf:
  4406                           	opt stack 23
  4407                           
  4408                           ;doprnt.c: 466: va_list ap;
  4409                           ;doprnt.c: 499: signed char c;
  4410                           ;doprnt.c: 501: int width;
  4411                           ;doprnt.c: 506: signed char prec;
  4412                           ;doprnt.c: 508: unsigned char flag;
  4413                           ;doprnt.c: 523: union {
  4414                           ;doprnt.c: 524: unsigned long vd;
  4415                           ;doprnt.c: 525: double integ;
  4416                           ;doprnt.c: 526: } tmpval;
  4417                           ;doprnt.c: 528: unsigned int val;
  4418                           ;doprnt.c: 529: unsigned len;
  4419                           ;doprnt.c: 530: const char * cp;
  4420                           ;doprnt.c: 533: *ap = __va_start();
  4421                           
  4422                           ;incstack = 0
  4423  00039A  0E0F               	movlw	low (?i2_printf+2)
  4424  00039C  6E14               	movwf	i2printf@ap,c
  4425  00039E  0E00               	movlw	high (?i2_printf+2)
  4426  0003A0  6E15               	movwf	i2printf@ap+1,c
  4427                           
  4428                           ;doprnt.c: 536: while(c = *f++) {
  4429  0003A2  D174               	goto	i2l2241
  4430  0003A4                     i2l2115:
  4431                           
  4432                           ;doprnt.c: 538: if(c != '%')
  4433  0003A4  0E25               	movlw	37
  4434  0003A6  181C               	xorwf	i2printf@c,w,c
  4435  0003A8  B4D8               	btfsc	status,2,c
  4436  0003AA  D004               	goto	i2l2119
  4437                           
  4438                           ;doprnt.c: 540: {
  4439                           ;doprnt.c: 541: (putch(c) );
  4440  0003AC  501C               	movf	i2printf@c,w,c
  4441  0003AE  ECA4  F007         	call	i2_putch
  4442                           
  4443                           ;doprnt.c: 542: continue;
  4444  0003B2  D16C               	goto	i2l2241
  4445  0003B4                     i2l2119:
  4446                           
  4447                           ;doprnt.c: 543: }
  4448                           ;doprnt.c: 546: width = 0;
  4449  0003B4  0E00               	movlw	0
  4450  0003B6  6E1B               	movwf	i2printf@width+1,c
  4451  0003B8  0E00               	movlw	0
  4452  0003BA  6E1A               	movwf	i2printf@width,c
  4453                           
  4454                           ;doprnt.c: 548: flag = 0;
  4455  0003BC  0E00               	movlw	0
  4456  0003BE  6E19               	movwf	i2printf@flag,c
  4457                           
  4458                           ;doprnt.c: 551: switch(*f) {
  4459                           
  4460                           ;doprnt.c: 550: for(;;) {
  4461  0003C0  D003               	goto	i2l2125
  4462  0003C2                     i2l2121:
  4463                           
  4464                           ;doprnt.c: 580: flag |= 0x04;
  4465  0003C2  8419               	bsf	i2printf@flag,2,c
  4466                           
  4467                           ;doprnt.c: 581: f++;
  4468  0003C4  4A0D               	infsnz	i2printf@f,f,c
  4469  0003C6  2A0E               	incf	i2printf@f+1,f,c
  4470  0003C8                     i2l2125:
  4471  0003C8  C00D  FFF6         	movff	i2printf@f,tblptrl
  4472  0003CC  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4473  0003D0                     	if	0	;tblptru may be non-zero
  4474  0003D0                     	endif
  4475  0003D0                     	if	0	;tblptru may be non-zero
  4476  0003D0                     	endif
  4477  0003D0  0008               	tblrd		*
  4478  0003D2  50F5               	movf	tablat,w,c
  4479                           
  4480                           ; Switch size 1, requested type "space"
  4481                           ; Number of cases is 1, Range of values is 48 to 48
  4482                           ; switch strategies available:
  4483                           ; Name         Instructions Cycles
  4484                           ; simple_byte            4     3 (average)
  4485                           ;	Chosen strategy is simple_byte
  4486  0003D4  0A30               	xorlw	48	; case 48
  4487  0003D6  B4D8               	btfsc	status,2,c
  4488  0003D8  D7F4               	goto	i2l2121
  4489                           
  4490                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4491                           
  4492                           ;doprnt.c: 586: }
  4493                           
  4494                           ;doprnt.c: 585: break;
  4495  0003DA  C00D  FFF6         	movff	i2printf@f,tblptrl
  4496  0003DE  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4497  0003E2                     	if	0	;tblptru may be non-zero
  4498  0003E2                     	endif
  4499  0003E2                     	if	0	;tblptru may be non-zero
  4500  0003E2                     	endif
  4501  0003E2  0008               	tblrd		*
  4502  0003E4  50F5               	movf	tablat,w,c
  4503  0003E6  EC80  F007         	call	i2_isdigit
  4504  0003EA  A0D8               	btfss	status,0,c
  4505  0003EC  D035               	goto	i2l2143
  4506                           
  4507                           ;doprnt.c: 598: width = 0;
  4508  0003EE  0E00               	movlw	0
  4509  0003F0  6E1B               	movwf	i2printf@width+1,c
  4510  0003F2  0E00               	movlw	0
  4511  0003F4  6E1A               	movwf	i2printf@width,c
  4512  0003F6                     i2l2131:
  4513                           
  4514                           ;doprnt.c: 600: width *= 10;
  4515  0003F6  C01A  F001         	movff	i2printf@width,i2___wmul@multiplier
  4516  0003FA  C01B  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
  4517  0003FE  0E00               	movlw	0
  4518  000400  6E04               	movwf	i2___wmul@multiplicand+1,c
  4519  000402  0E0A               	movlw	10
  4520  000404  6E03               	movwf	i2___wmul@multiplicand,c
  4521  000406  EC5E  F007         	call	i2___wmul	;wreg free
  4522  00040A  C001  F01A         	movff	?i2___wmul,i2printf@width
  4523  00040E  C002  F01B         	movff	?i2___wmul+1,i2printf@width+1
  4524                           
  4525                           ;doprnt.c: 601: width += *f++ - '0';
  4526  000412  0ED0               	movlw	208
  4527  000414  6E0F               	movwf	??i2_printf& (0+255),c
  4528  000416  0EFF               	movlw	255
  4529  000418  6E10               	movwf	(??i2_printf+1)& (0+255),c
  4530  00041A  C00D  FFF6         	movff	i2printf@f,tblptrl
  4531  00041E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4532  000422                     	if	0	;tblptru may be non-zero
  4533  000422                     	endif
  4534  000422                     	if	0	;tblptru may be non-zero
  4535  000422                     	endif
  4536  000422  0008               	tblrd		*
  4537  000424  50F5               	movf	tablat,w,c
  4538  000426  6E11               	movwf	(??i2_printf+2)& (0+255),c
  4539  000428  6A12               	clrf	(??i2_printf+3)& (0+255),c
  4540  00042A  500F               	movf	??i2_printf,w,c
  4541  00042C  2611               	addwf	??i2_printf+2,f,c
  4542  00042E  5010               	movf	??i2_printf+1,w,c
  4543  000430  2212               	addwfc	??i2_printf+3,f,c
  4544  000432  5011               	movf	??i2_printf+2,w,c
  4545  000434  261A               	addwf	i2printf@width,f,c
  4546  000436  5012               	movf	??i2_printf+3,w,c
  4547  000438  221B               	addwfc	i2printf@width+1,f,c
  4548  00043A  4A0D               	infsnz	i2printf@f,f,c
  4549  00043C  2A0E               	incf	i2printf@f+1,f,c
  4550                           
  4551                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4552  00043E  C00D  FFF6         	movff	i2printf@f,tblptrl
  4553  000442  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4554  000446                     	if	0	;tblptru may be non-zero
  4555  000446                     	endif
  4556  000446                     	if	0	;tblptru may be non-zero
  4557  000446                     	endif
  4558  000446  0008               	tblrd		*
  4559  000448  50F5               	movf	tablat,w,c
  4560  00044A  EC80  F007         	call	i2_isdigit
  4561  00044E  A0D8               	btfss	status,0,c
  4562  000450  D003               	goto	i2l2143
  4563  000452  D7D1               	goto	i2l2131
  4564  000454                     i2l2139:
  4565                           
  4566                           ;doprnt.c: 721: flag |= 0x80;
  4567  000454  8E19               	bsf	i2printf@flag,7,c
  4568                           
  4569                           ;doprnt.c: 723: break;
  4570  000456  D017               	goto	i2l257
  4571  000458                     i2l2143:
  4572  000458  C00D  FFF6         	movff	i2printf@f,tblptrl
  4573  00045C  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4574  000460  4A0D               	infsnz	i2printf@f,f,c
  4575  000462  2A0E               	incf	i2printf@f+1,f,c
  4576  000464                     	if	0	;tblptru may be non-zero
  4577  000464                     	endif
  4578  000464                     	if	0	;tblptru may be non-zero
  4579  000464                     	endif
  4580  000464  0008               	tblrd		*
  4581  000466  CFF5 F01C          	movff	tablat,i2printf@c
  4582  00046A  501C               	movf	i2printf@c,w,c
  4583                           
  4584                           ; Switch size 1, requested type "space"
  4585                           ; Number of cases is 4, Range of values is 0 to 120
  4586                           ; switch strategies available:
  4587                           ; Name         Instructions Cycles
  4588                           ; simple_byte           13     7 (average)
  4589                           ;	Chosen strategy is simple_byte
  4590  00046C  0A00               	xorlw	0	; case 0
  4591  00046E  B4D8               	btfsc	status,2,c
  4592  000470  0012               	return	
  4593  000472  0A64               	xorlw	100	; case 100
  4594  000474  B4D8               	btfsc	status,2,c
  4595  000476  D007               	goto	i2l257
  4596  000478  0A0D               	xorlw	13	; case 105
  4597  00047A  B4D8               	btfsc	status,2,c
  4598  00047C  D004               	goto	i2l257
  4599  00047E  0A11               	xorlw	17	; case 120
  4600  000480  B4D8               	btfsc	status,2,c
  4601  000482  D7E8               	goto	i2l2139
  4602  000484  D103               	goto	i2l2241
  4603  000486                     i2l257:
  4604                           
  4605                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4606  000486  BE19               	btfsc	i2printf@flag,7,c
  4607  000488  D015               	goto	i2l2155
  4608                           
  4609                           ;doprnt.c: 1253: {
  4610                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4611  00048A  C014  FFD9         	movff	i2printf@ap,fsr2l
  4612  00048E  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  4613  000492  CFDE F017          	movff	postinc2,i2printf@val
  4614  000496  CFDD F018          	movff	postdec2,i2printf@val+1
  4615  00049A  0E02               	movlw	2
  4616  00049C  2614               	addwf	i2printf@ap,f,c
  4617  00049E  0E00               	movlw	0
  4618  0004A0  2215               	addwfc	i2printf@ap+1,f,c
  4619                           
  4620                           ;doprnt.c: 1261: if((int)val < 0) {
  4621  0004A2  AE18               	btfss	i2printf@val+1,7,c
  4622  0004A4  D044               	goto	i2l2189
  4623                           
  4624                           ;doprnt.c: 1262: flag |= 0x03;
  4625  0004A6  0E03               	movlw	3
  4626  0004A8  1219               	iorwf	i2printf@flag,f,c
  4627                           
  4628                           ;doprnt.c: 1263: val = -val;
  4629  0004AA  6C17               	negf	i2printf@val,c
  4630  0004AC  1E18               	comf	i2printf@val+1,f,c
  4631  0004AE  B0D8               	btfsc	status,0,c
  4632  0004B0  2A18               	incf	i2printf@val+1,f,c
  4633                           
  4634                           ;doprnt.c: 1264: }
  4635                           ;doprnt.c: 1266: }
  4636  0004B2  D03D               	goto	i2l2189
  4637  0004B4                     i2l2155:
  4638                           
  4639                           ;doprnt.c: 1268: else
  4640                           ;doprnt.c: 1273: {
  4641                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4642  0004B4  C014  FFD9         	movff	i2printf@ap,fsr2l
  4643  0004B8  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  4644  0004BC  CFDE F017          	movff	postinc2,i2printf@val
  4645  0004C0  CFDD F018          	movff	postdec2,i2printf@val+1
  4646  0004C4  0E02               	movlw	2
  4647  0004C6  2614               	addwf	i2printf@ap,f,c
  4648  0004C8  0E00               	movlw	0
  4649  0004CA  2215               	addwfc	i2printf@ap+1,f,c
  4650                           
  4651                           ;doprnt.c: 1287: }
  4652                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4653  0004CC  D030               	goto	i2l2189
  4654  0004CE                     i2l2159:
  4655                           
  4656                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4657  0004CE  0E01               	movlw	1
  4658  0004D0  6E1C               	movwf	i2printf@c,c
  4659  0004D2                     i2l2161:
  4660  0004D2  0E05               	movlw	5
  4661  0004D4  181C               	xorwf	i2printf@c,w,c
  4662  0004D6  B4D8               	btfsc	status,2,c
  4663  0004D8  D032               	goto	i2l2191
  4664                           
  4665                           ;doprnt.c: 1306: if(val < dpowers[c])
  4666  0004DA  501C               	movf	i2printf@c,w,c
  4667  0004DC  0D02               	mullw	2
  4668  0004DE  0E4C               	movlw	low _dpowers
  4669  0004E0  24F3               	addwf	prodl,w,c
  4670  0004E2  6EF6               	movwf	tblptrl,c
  4671  0004E4  0EFE               	movlw	high _dpowers
  4672  0004E6  20F4               	addwfc	prodh,w,c
  4673  0004E8  6EF7               	movwf	tblptrh,c
  4674  0004EA                     	if	0	;There are less than 3 active tblptr bytes
  4675  0004EA                     	endif
  4676  0004EA  0009               	tblrd		*+
  4677  0004EC  50F5               	movf	tablat,w,c
  4678  0004EE  5C17               	subwf	i2printf@val,w,c
  4679  0004F0  0009               	tblrd		*+
  4680  0004F2  50F5               	movf	tablat,w,c
  4681  0004F4  5818               	subwfb	i2printf@val+1,w,c
  4682  0004F6  A0D8               	btfss	status,0,c
  4683  0004F8  D022               	goto	i2l2191
  4684                           
  4685                           ;doprnt.c: 1307: break;
  4686  0004FA  2A1C               	incf	i2printf@c,f,c
  4687  0004FC  D7EA               	goto	i2l2161
  4688  0004FE                     i2l2173:
  4689                           
  4690                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4691  0004FE  0E01               	movlw	1
  4692  000500  6E1C               	movwf	i2printf@c,c
  4693  000502                     i2l2175:
  4694  000502  0E04               	movlw	4
  4695  000504  181C               	xorwf	i2printf@c,w,c
  4696  000506  B4D8               	btfsc	status,2,c
  4697  000508  D01A               	goto	i2l2191
  4698                           
  4699                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4700  00050A  501C               	movf	i2printf@c,w,c
  4701  00050C  0D02               	mullw	2
  4702  00050E  0E56               	movlw	low _hexpowers
  4703  000510  24F3               	addwf	prodl,w,c
  4704  000512  6EF6               	movwf	tblptrl,c
  4705  000514  0EFE               	movlw	high _hexpowers
  4706  000516  20F4               	addwfc	prodh,w,c
  4707  000518  6EF7               	movwf	tblptrh,c
  4708  00051A                     	if	0	;There are less than 3 active tblptr bytes
  4709  00051A                     	endif
  4710  00051A  0009               	tblrd		*+
  4711  00051C  50F5               	movf	tablat,w,c
  4712  00051E  5C17               	subwf	i2printf@val,w,c
  4713  000520  0009               	tblrd		*+
  4714  000522  50F5               	movf	tablat,w,c
  4715  000524  5818               	subwfb	i2printf@val+1,w,c
  4716  000526  A0D8               	btfss	status,0,c
  4717  000528  D00A               	goto	i2l2191
  4718                           
  4719                           ;doprnt.c: 1318: break;
  4720  00052A  2A1C               	incf	i2printf@c,f,c
  4721  00052C  D7EA               	goto	i2l2175
  4722  00052E                     i2l2189:
  4723  00052E  5019               	movf	i2printf@flag,w,c
  4724  000530  0B80               	andlw	128
  4725                           
  4726                           ; Switch size 1, requested type "space"
  4727                           ; Number of cases is 2, Range of values is 0 to 128
  4728                           ; switch strategies available:
  4729                           ; Name         Instructions Cycles
  4730                           ; simple_byte            7     4 (average)
  4731                           ;	Chosen strategy is simple_byte
  4732  000532  0A00               	xorlw	0	; case 0
  4733  000534  B4D8               	btfsc	status,2,c
  4734  000536  D7CB               	goto	i2l2159
  4735  000538  0A80               	xorlw	128	; case 128
  4736  00053A  B4D8               	btfsc	status,2,c
  4737  00053C  D7E0               	goto	i2l2173
  4738  00053E                     i2l2191:
  4739                           
  4740                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4741  00053E  501A               	movf	i2printf@width,w,c
  4742  000540  101B               	iorwf	i2printf@width+1,w,c
  4743  000542  B4D8               	btfsc	status,2,c
  4744  000544  D009               	goto	i2l2197
  4745  000546  C019  F00F         	movff	i2printf@flag,??i2_printf
  4746  00054A  0E03               	movlw	3
  4747  00054C  160F               	andwf	??i2_printf,f,c
  4748  00054E  B4D8               	btfsc	status,2,c
  4749  000550  D003               	goto	i2l2197
  4750                           
  4751                           ;doprnt.c: 1346: width--;
  4752  000552  061A               	decf	i2printf@width,f,c
  4753  000554  A0D8               	btfss	status,0,c
  4754  000556  061B               	decf	i2printf@width+1,f,c
  4755  000558                     i2l2197:
  4756                           
  4757                           ;doprnt.c: 1381: if(width > c)
  4758  000558  0E80               	movlw	128
  4759  00055A  BE1C               	btfsc	i2printf@c,7,c
  4760  00055C  0E7F               	movlw	127
  4761  00055E  6E0F               	movwf	??i2_printf& (0+255),c
  4762  000560  501A               	movf	i2printf@width,w,c
  4763  000562  5C1C               	subwf	i2printf@c,w,c
  4764  000564  501B               	movf	i2printf@width+1,w,c
  4765  000566  0A80               	xorlw	128
  4766  000568  580F               	subwfb	??i2_printf& (0+255),w,c
  4767  00056A  B0D8               	btfsc	status,0,c
  4768  00056C  D007               	goto	i2l2201
  4769                           
  4770                           ;doprnt.c: 1382: width -= c;
  4771  00056E  501C               	movf	i2printf@c,w,c
  4772  000570  5E1A               	subwf	i2printf@width,f,c
  4773  000572  0E00               	movlw	0
  4774  000574  BE1C               	btfsc	i2printf@c,7,c
  4775  000576  0EFF               	movlw	255
  4776  000578  5A1B               	subwfb	i2printf@width+1,f,c
  4777  00057A  D004               	goto	i2l2203
  4778  00057C                     i2l2201:
  4779                           
  4780                           ;doprnt.c: 1383: else
  4781                           ;doprnt.c: 1384: width = 0;
  4782  00057C  0E00               	movlw	0
  4783  00057E  6E1B               	movwf	i2printf@width+1,c
  4784  000580  0E00               	movlw	0
  4785  000582  6E1A               	movwf	i2printf@width,c
  4786  000584                     i2l2203:
  4787                           
  4788                           ;doprnt.c: 1387: if(flag & 0x04) {
  4789  000584  A419               	btfss	i2printf@flag,2,c
  4790  000586  D014               	goto	i2l2215
  4791                           
  4792                           ;doprnt.c: 1392: if(flag & 0x03)
  4793  000588  C019  F00F         	movff	i2printf@flag,??i2_printf
  4794  00058C  0E03               	movlw	3
  4795  00058E  160F               	andwf	??i2_printf,f,c
  4796  000590  B4D8               	btfsc	status,2,c
  4797  000592  D003               	goto	i2l2209
  4798                           
  4799                           ;doprnt.c: 1393: (putch('-') );
  4800  000594  0E2D               	movlw	45
  4801  000596  ECA4  F007         	call	i2_putch
  4802  00059A                     i2l2209:
  4803                           
  4804                           ;doprnt.c: 1415: if(width)
  4805  00059A  501A               	movf	i2printf@width,w,c
  4806  00059C  101B               	iorwf	i2printf@width+1,w,c
  4807  00059E  B4D8               	btfsc	status,2,c
  4808  0005A0  D01E               	goto	i2l2225
  4809                           
  4810                           ;doprnt.c: 1417: (putch('0') );
  4811                           
  4812                           ;doprnt.c: 1416: do
  4813  0005A2  0E30               	movlw	48
  4814  0005A4  ECA4  F007         	call	i2_putch
  4815                           
  4816                           ;doprnt.c: 1418: while(--width);
  4817  0005A8  061A               	decf	i2printf@width,f,c
  4818  0005AA  A0D8               	btfss	status,0,c
  4819  0005AC  061B               	decf	i2printf@width+1,f,c
  4820  0005AE  D7F5               	goto	i2l2209
  4821  0005B0                     i2l2215:
  4822                           
  4823                           ;doprnt.c: 1422: {
  4824                           ;doprnt.c: 1424: if(width
  4825                           ;doprnt.c: 1428: )
  4826  0005B0  501A               	movf	i2printf@width,w,c
  4827  0005B2  101B               	iorwf	i2printf@width+1,w,c
  4828  0005B4  B4D8               	btfsc	status,2,c
  4829  0005B6  D00A               	goto	i2l2221
  4830  0005B8                     i2l2217:
  4831                           
  4832                           ;doprnt.c: 1430: (putch(' ') );
  4833  0005B8  0E20               	movlw	32
  4834  0005BA  ECA4  F007         	call	i2_putch
  4835                           
  4836                           ;doprnt.c: 1431: while(--width);
  4837  0005BE  061A               	decf	i2printf@width,f,c
  4838  0005C0  A0D8               	btfss	status,0,c
  4839  0005C2  061B               	decf	i2printf@width+1,f,c
  4840  0005C4  501A               	movf	i2printf@width,w,c
  4841  0005C6  101B               	iorwf	i2printf@width+1,w,c
  4842  0005C8  A4D8               	btfss	status,2,c
  4843  0005CA  D7F6               	goto	i2l2217
  4844  0005CC                     i2l2221:
  4845                           
  4846                           ;doprnt.c: 1438: if(flag & 0x03)
  4847  0005CC  C019  F00F         	movff	i2printf@flag,??i2_printf
  4848  0005D0  0E03               	movlw	3
  4849  0005D2  160F               	andwf	??i2_printf,f,c
  4850  0005D4  B4D8               	btfsc	status,2,c
  4851  0005D6  D003               	goto	i2l2225
  4852                           
  4853                           ;doprnt.c: 1439: (putch('-') );
  4854  0005D8  0E2D               	movlw	45
  4855  0005DA  ECA4  F007         	call	i2_putch
  4856  0005DE                     i2l2225:
  4857                           
  4858                           ;doprnt.c: 1469: }
  4859                           ;doprnt.c: 1472: prec = c;
  4860  0005DE  C01C  F016         	movff	i2printf@c,i2printf@prec
  4861                           
  4862                           ;doprnt.c: 1474: while(prec--) {
  4863  0005E2  D050               	goto	i2l2239
  4864  0005E4                     i2l2227:
  4865                           
  4866                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4867  0005E4  5016               	movf	i2printf@prec,w,c
  4868  0005E6  0D02               	mullw	2
  4869  0005E8  0E4C               	movlw	low _dpowers
  4870  0005EA  24F3               	addwf	prodl,w,c
  4871  0005EC  6EF6               	movwf	tblptrl,c
  4872  0005EE  0EFE               	movlw	high _dpowers
  4873  0005F0  20F4               	addwfc	prodh,w,c
  4874  0005F2  6EF7               	movwf	tblptrh,c
  4875  0005F4                     	if	0	;There are less than 3 active tblptr bytes
  4876  0005F4                     	endif
  4877  0005F4  0009               	tblrd		*+
  4878  0005F6  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  4879  0005FA  000A               	tblrd		*-
  4880  0005FC  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  4881  000600  C017  F001         	movff	i2printf@val,i2___lwdiv@dividend
  4882  000604  C018  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  4883  000608  EC17  F006         	call	i2___lwdiv	;wreg free
  4884  00060C  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  4885  000610  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  4886  000614  0E00               	movlw	0
  4887  000616  6E0B               	movwf	i2___lwmod@divisor+1,c
  4888  000618  0E0A               	movlw	10
  4889  00061A  6E0A               	movwf	i2___lwmod@divisor,c
  4890  00061C  ECD5  F006         	call	i2___lwmod	;wreg free
  4891  000620  5008               	movf	?i2___lwmod,w,c
  4892  000622  0F30               	addlw	48
  4893  000624  6E1C               	movwf	i2printf@c,c
  4894                           
  4895                           ;doprnt.c: 1491: break;
  4896  000626  D02B               	goto	i2l2237
  4897  000628                     i2l2229:
  4898                           
  4899                           ;doprnt.c: 1499: {
  4900                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4901  000628  C017  F001         	movff	i2printf@val,i2___lwdiv@dividend
  4902  00062C  C018  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  4903  000630  5016               	movf	i2printf@prec,w,c
  4904  000632  0D02               	mullw	2
  4905  000634  0E56               	movlw	low _hexpowers
  4906  000636  24F3               	addwf	prodl,w,c
  4907  000638  6EF6               	movwf	tblptrl,c
  4908  00063A  0EFE               	movlw	high _hexpowers
  4909  00063C  20F4               	addwfc	prodh,w,c
  4910  00063E  6EF7               	movwf	tblptrh,c
  4911  000640                     	if	0	;There are less than 3 active tblptr bytes
  4912  000640                     	endif
  4913  000640  0009               	tblrd		*+
  4914  000642  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  4915  000646  000A               	tblrd		*-
  4916  000648  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  4917  00064C  EC17  F006         	call	i2___lwdiv	;wreg free
  4918  000650  5001               	movf	?i2___lwdiv,w,c
  4919  000652  0B0F               	andlw	15
  4920  000654  6E13               	movwf	i2printf@idx,c
  4921                           
  4922                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4923  000656  5013               	movf	i2printf@idx,w,c
  4924  000658  0D01               	mullw	1
  4925  00065A  0E09               	movlw	low STR_22
  4926  00065C  24F3               	addwf	prodl,w,c
  4927  00065E  6EF6               	movwf	tblptrl,c
  4928  000660  0EFF               	movlw	high STR_22
  4929  000662  20F4               	addwfc	prodh,w,c
  4930  000664  6EF7               	movwf	tblptrh,c
  4931  000666                     	if	0	;There are less than 3 active tblptr bytes
  4932  000666                     	endif
  4933  000666  0008               	tblrd		*
  4934  000668  CFF5 F01C          	movff	tablat,i2printf@c
  4935                           
  4936                           ;doprnt.c: 1523: }
  4937                           
  4938                           ;doprnt.c: 1508: }
  4939                           ;doprnt.c: 1510: break;
  4940  00066C  D008               	goto	i2l2237
  4941  00066E                     i2l2235:
  4942  00066E  5019               	movf	i2printf@flag,w,c
  4943  000670  0B80               	andlw	128
  4944                           
  4945                           ; Switch size 1, requested type "space"
  4946                           ; Number of cases is 2, Range of values is 0 to 128
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte            7     4 (average)
  4950                           ;	Chosen strategy is simple_byte
  4951  000672  0A00               	xorlw	0	; case 0
  4952  000674  B4D8               	btfsc	status,2,c
  4953  000676  D7B6               	goto	i2l2227
  4954  000678  0A80               	xorlw	128	; case 128
  4955  00067A  B4D8               	btfsc	status,2,c
  4956  00067C  D7D5               	goto	i2l2229
  4957  00067E                     i2l2237:
  4958                           
  4959                           ;doprnt.c: 1524: (putch(c) );
  4960  00067E  501C               	movf	i2printf@c,w,c
  4961  000680  ECA4  F007         	call	i2_putch
  4962  000684                     i2l2239:
  4963  000684  0616               	decf	i2printf@prec,f,c
  4964  000686  2816               	incf	i2printf@prec,w,c
  4965  000688  A4D8               	btfss	status,2,c
  4966  00068A  D7F1               	goto	i2l2235
  4967  00068C                     i2l2241:
  4968  00068C  C00D  FFF6         	movff	i2printf@f,tblptrl
  4969  000690  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4970  000694  4A0D               	infsnz	i2printf@f,f,c
  4971  000696  2A0E               	incf	i2printf@f+1,f,c
  4972  000698                     	if	0	;tblptru may be non-zero
  4973  000698                     	endif
  4974  000698                     	if	0	;tblptru may be non-zero
  4975  000698                     	endif
  4976  000698  0008               	tblrd		*
  4977  00069A  CFF5 F01C          	movff	tablat,i2printf@c
  4978  00069E  501C               	movf	i2printf@c,w,c
  4979  0006A0  B4D8               	btfsc	status,2,c
  4980  0006A2  0012               	return	
  4981  0006A4  D67F               	goto	i2l2115
  4982  0006A6                     __end_ofi2_printf:
  4983                           	opt stack 0
  4984                           pclatu	equ	0xFFB
  4985                           pclath	equ	0xFFA
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           prodh	equ	0xFF4
  4991                           prodl	equ	0xFF3
  4992                           intcon	equ	0xFF2
  4993                           intcon2	equ	0xFF1
  4994                           intcon3	equ	0xFF0
  4995                           postinc0	equ	0xFEE
  4996                           fsr0h	equ	0xFEA
  4997                           fsr0l	equ	0xFE9
  4998                           wreg	equ	0xFE8
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           fsr2h	equ	0xFDA
  5005                           fsr2l	equ	0xFD9
  5006                           status	equ	0xFD8
  5007                           
  5008 ;; *************** function i2_putch *****************
  5009 ;; Defined at:
  5010 ;;		line 31 in file "lcd.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  data            1    wreg     unsigned char 
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;  data            1    2[COMRAM] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;Total ram usage:        1 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    1
  5031 ;; This function calls:
  5032 ;;		i2_lcdNibble
  5033 ;; This function is called by:
  5034 ;;		i2_printf
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text25
  5039  000F48                     __ptext25:
  5040                           	opt stack 0
  5041  000F48                     i2_putch:
  5042                           	opt stack 23
  5043                           
  5044                           ;incstack = 0
  5045                           ;i2putch@data stored from wreg
  5046  000F48  6E03               	movwf	i2putch@data,c
  5047                           
  5048                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  5049  000F4A  848C               	bsf	3980,2,c	;volatile
  5050                           
  5051                           ;lcd.c: 33: lcdNibble(data);
  5052  000F4C  5003               	movf	i2putch@data,w,c
  5053  000F4E  EC67  F006         	call	i2_lcdNibble
  5054  000F52  0012               	return		;funcret
  5055  000F54                     __end_ofi2_putch:
  5056                           	opt stack 0
  5057                           pclatu	equ	0xFFB
  5058                           pclath	equ	0xFFA
  5059                           tblptru	equ	0xFF8
  5060                           tblptrh	equ	0xFF7
  5061                           tblptrl	equ	0xFF6
  5062                           tablat	equ	0xFF5
  5063                           prodh	equ	0xFF4
  5064                           prodl	equ	0xFF3
  5065                           intcon	equ	0xFF2
  5066                           intcon2	equ	0xFF1
  5067                           intcon3	equ	0xFF0
  5068                           postinc0	equ	0xFEE
  5069                           fsr0h	equ	0xFEA
  5070                           fsr0l	equ	0xFE9
  5071                           wreg	equ	0xFE8
  5072                           fsr1h	equ	0xFE2
  5073                           fsr1l	equ	0xFE1
  5074                           indf2	equ	0xFDF
  5075                           postinc2	equ	0xFDE
  5076                           postdec2	equ	0xFDD
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function i2_isdigit *****************
  5082 ;; Defined at:
  5083 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  c               1    wreg     unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  c               1    2[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;Total ram usage:        3 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		i2_printf
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text26
  5111  000F00                     __ptext26:
  5112                           	opt stack 0
  5113  000F00                     i2_isdigit:
  5114                           	opt stack 24
  5115                           
  5116                           ;incstack = 0
  5117                           ;i2isdigit@c stored from wreg
  5118  000F00  6E03               	movwf	i2isdigit@c,c
  5119  000F02  0E00               	movlw	0
  5120  000F04  6E02               	movwf	i2_isdigit$530,c
  5121  000F06  0E3A               	movlw	58
  5122  000F08  6003               	cpfslt	i2isdigit@c,c
  5123  000F0A  D005               	goto	i2l1949
  5124  000F0C  0E2F               	movlw	47
  5125  000F0E  6403               	cpfsgt	i2isdigit@c,c
  5126  000F10  D002               	goto	i2l1949
  5127  000F12  0E01               	movlw	1
  5128  000F14  6E02               	movwf	i2_isdigit$530,c
  5129  000F16                     i2l1949:
  5130  000F16  C002  F001         	movff	i2_isdigit$530,??i2_isdigit
  5131  000F1A  3001               	rrcf	??i2_isdigit,w,c
  5132  000F1C  0012               	return	
  5133  000F1E                     __end_ofi2_isdigit:
  5134                           	opt stack 0
  5135                           pclatu	equ	0xFFB
  5136                           pclath	equ	0xFFA
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           prodh	equ	0xFF4
  5142                           prodl	equ	0xFF3
  5143                           intcon	equ	0xFF2
  5144                           intcon2	equ	0xFF1
  5145                           intcon3	equ	0xFF0
  5146                           postinc0	equ	0xFEE
  5147                           fsr0h	equ	0xFEA
  5148                           fsr0l	equ	0xFE9
  5149                           wreg	equ	0xFE8
  5150                           fsr1h	equ	0xFE2
  5151                           fsr1l	equ	0xFE1
  5152                           indf2	equ	0xFDF
  5153                           postinc2	equ	0xFDE
  5154                           postdec2	equ	0xFDD
  5155                           fsr2h	equ	0xFDA
  5156                           fsr2l	equ	0xFD9
  5157                           status	equ	0xFD8
  5158                           
  5159 ;; *************** function i2___wmul *****************
  5160 ;; Defined at:
  5161 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  multiplier      2    0[COMRAM] unsigned int 
  5164 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  __wmul          2    4[COMRAM] unsigned int 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2    0[COMRAM] unsigned int 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0, prodl, prodh
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;Total ram usage:        6 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		i2_printf
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text27
  5190  000EBC                     __ptext27:
  5191                           	opt stack 0
  5192  000EBC                     i2___wmul:
  5193                           	opt stack 24
  5194                           
  5195                           ;incstack = 0
  5196  000EBC  5001               	movf	i2___wmul@multiplier,w,c
  5197  000EBE  0203               	mulwf	i2___wmul@multiplicand,c
  5198  000EC0  CFF3 F005          	movff	prodl,i2___wmul@product
  5199  000EC4  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5200  000EC8  5001               	movf	i2___wmul@multiplier,w,c
  5201  000ECA  0204               	mulwf	i2___wmul@multiplicand+1,c
  5202  000ECC  50F3               	movf	prodl,w,c
  5203  000ECE  2606               	addwf	i2___wmul@product+1,f,c
  5204  000ED0  5002               	movf	i2___wmul@multiplier+1,w,c
  5205  000ED2  0203               	mulwf	i2___wmul@multiplicand,c
  5206  000ED4  50F3               	movf	prodl,w,c
  5207  000ED6  2606               	addwf	i2___wmul@product+1,f,c
  5208  000ED8  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5209  000EDC  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5210  000EE0  0012               	return	
  5211  000EE2                     __end_ofi2___wmul:
  5212                           	opt stack 0
  5213                           pclatu	equ	0xFFB
  5214                           pclath	equ	0xFFA
  5215                           tblptru	equ	0xFF8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           tablat	equ	0xFF5
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           intcon2	equ	0xFF1
  5223                           intcon3	equ	0xFF0
  5224                           postinc0	equ	0xFEE
  5225                           fsr0h	equ	0xFEA
  5226                           fsr0l	equ	0xFE9
  5227                           wreg	equ	0xFE8
  5228                           fsr1h	equ	0xFE2
  5229                           fsr1l	equ	0xFE1
  5230                           indf2	equ	0xFDF
  5231                           postinc2	equ	0xFDE
  5232                           postdec2	equ	0xFDD
  5233                           fsr2h	equ	0xFDA
  5234                           fsr2l	equ	0xFD9
  5235                           status	equ	0xFD8
  5236                           
  5237 ;; *************** function i2___lwmod *****************
  5238 ;; Defined at:
  5239 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  dividend        2    7[COMRAM] unsigned int 
  5242 ;;  divisor         2    9[COMRAM] unsigned int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  __lwmod         1   11[COMRAM] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  2    7[COMRAM] unsigned int 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;Total ram usage:        5 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		i2_printf
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text28
  5268  000DAA                     __ptext28:
  5269                           	opt stack 0
  5270  000DAA                     i2___lwmod:
  5271                           	opt stack 24
  5272                           
  5273                           ;incstack = 0
  5274  000DAA  500A               	movf	i2___lwmod@divisor,w,c
  5275  000DAC  100B               	iorwf	i2___lwmod@divisor+1,w,c
  5276  000DAE  B4D8               	btfsc	status,2,c
  5277  000DB0  D018               	goto	i2l712
  5278  000DB2  0E01               	movlw	1
  5279  000DB4  6E0C               	movwf	i2___lwmod@counter,c
  5280  000DB6  D004               	goto	i2l1981
  5281  000DB8                     i2l1979:
  5282  000DB8  90D8               	bcf	status,0,c
  5283  000DBA  360A               	rlcf	i2___lwmod@divisor,f,c
  5284  000DBC  360B               	rlcf	i2___lwmod@divisor+1,f,c
  5285  000DBE  2A0C               	incf	i2___lwmod@counter,f,c
  5286  000DC0                     i2l1981:
  5287  000DC0  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  5288  000DC2  D7FA               	goto	i2l1979
  5289  000DC4                     i2l1983:
  5290  000DC4  500A               	movf	i2___lwmod@divisor,w,c
  5291  000DC6  5C08               	subwf	i2___lwmod@dividend,w,c
  5292  000DC8  500B               	movf	i2___lwmod@divisor+1,w,c
  5293  000DCA  5809               	subwfb	i2___lwmod@dividend+1,w,c
  5294  000DCC  A0D8               	btfss	status,0,c
  5295  000DCE  D004               	goto	i2l1987
  5296  000DD0  500A               	movf	i2___lwmod@divisor,w,c
  5297  000DD2  5E08               	subwf	i2___lwmod@dividend,f,c
  5298  000DD4  500B               	movf	i2___lwmod@divisor+1,w,c
  5299  000DD6  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  5300  000DD8                     i2l1987:
  5301  000DD8  90D8               	bcf	status,0,c
  5302  000DDA  320B               	rrcf	i2___lwmod@divisor+1,f,c
  5303  000DDC  320A               	rrcf	i2___lwmod@divisor,f,c
  5304  000DDE  2E0C               	decfsz	i2___lwmod@counter,f,c
  5305  000DE0  D7F1               	goto	i2l1983
  5306  000DE2                     i2l712:
  5307  000DE2  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  5308  000DE6  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5309  000DEA  0012               	return		;funcret
  5310  000DEC                     __end_ofi2___lwmod:
  5311                           	opt stack 0
  5312                           pclatu	equ	0xFFB
  5313                           pclath	equ	0xFFA
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           intcon2	equ	0xFF1
  5322                           intcon3	equ	0xFF0
  5323                           postinc0	equ	0xFEE
  5324                           fsr0h	equ	0xFEA
  5325                           fsr0l	equ	0xFE9
  5326                           wreg	equ	0xFE8
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           postdec2	equ	0xFDD
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function i2___lwdiv *****************
  5337 ;; Defined at:
  5338 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  dividend        2    0[COMRAM] unsigned int 
  5341 ;;  divisor         2    2[COMRAM] unsigned int 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5344 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2    0[COMRAM] unsigned int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:        7 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		i2_printf
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text29
  5368  000C2E                     __ptext29:
  5369                           	opt stack 0
  5370  000C2E                     i2___lwdiv:
  5371                           	opt stack 24
  5372                           
  5373                           ;incstack = 0
  5374  000C2E  0E00               	movlw	0
  5375  000C30  6E06               	movwf	i2___lwdiv@quotient+1,c
  5376  000C32  0E00               	movlw	0
  5377  000C34  6E05               	movwf	i2___lwdiv@quotient,c
  5378  000C36  5003               	movf	i2___lwdiv@divisor,w,c
  5379  000C38  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  5380  000C3A  B4D8               	btfsc	status,2,c
  5381  000C3C  D01C               	goto	i2l702
  5382  000C3E  0E01               	movlw	1
  5383  000C40  6E07               	movwf	i2___lwdiv@counter,c
  5384  000C42  D004               	goto	i2l1961
  5385  000C44                     i2l1959:
  5386  000C44  90D8               	bcf	status,0,c
  5387  000C46  3603               	rlcf	i2___lwdiv@divisor,f,c
  5388  000C48  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  5389  000C4A  2A07               	incf	i2___lwdiv@counter,f,c
  5390  000C4C                     i2l1961:
  5391  000C4C  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  5392  000C4E  D7FA               	goto	i2l1959
  5393  000C50                     i2l1963:
  5394  000C50  90D8               	bcf	status,0,c
  5395  000C52  3605               	rlcf	i2___lwdiv@quotient,f,c
  5396  000C54  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  5397  000C56  5003               	movf	i2___lwdiv@divisor,w,c
  5398  000C58  5C01               	subwf	i2___lwdiv@dividend,w,c
  5399  000C5A  5004               	movf	i2___lwdiv@divisor+1,w,c
  5400  000C5C  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  5401  000C5E  A0D8               	btfss	status,0,c
  5402  000C60  D005               	goto	i2l1971
  5403  000C62  5003               	movf	i2___lwdiv@divisor,w,c
  5404  000C64  5E01               	subwf	i2___lwdiv@dividend,f,c
  5405  000C66  5004               	movf	i2___lwdiv@divisor+1,w,c
  5406  000C68  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  5407  000C6A  8005               	bsf	i2___lwdiv@quotient,0,c
  5408  000C6C                     i2l1971:
  5409  000C6C  90D8               	bcf	status,0,c
  5410  000C6E  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  5411  000C70  3203               	rrcf	i2___lwdiv@divisor,f,c
  5412  000C72  2E07               	decfsz	i2___lwdiv@counter,f,c
  5413  000C74  D7ED               	goto	i2l1963
  5414  000C76                     i2l702:
  5415  000C76  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  5416  000C7A  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  5417  000C7E  0012               	return		;funcret
  5418  000C80                     __end_ofi2___lwdiv:
  5419                           	opt stack 0
  5420                           pclatu	equ	0xFFB
  5421                           pclath	equ	0xFFA
  5422                           tblptru	equ	0xFF8
  5423                           tblptrh	equ	0xFF7
  5424                           tblptrl	equ	0xFF6
  5425                           tablat	equ	0xFF5
  5426                           prodh	equ	0xFF4
  5427                           prodl	equ	0xFF3
  5428                           intcon	equ	0xFF2
  5429                           intcon2	equ	0xFF1
  5430                           intcon3	equ	0xFF0
  5431                           postinc0	equ	0xFEE
  5432                           fsr0h	equ	0xFEA
  5433                           fsr0l	equ	0xFE9
  5434                           wreg	equ	0xFE8
  5435                           fsr1h	equ	0xFE2
  5436                           fsr1l	equ	0xFE1
  5437                           indf2	equ	0xFDF
  5438                           postinc2	equ	0xFDE
  5439                           postdec2	equ	0xFDD
  5440                           fsr2h	equ	0xFDA
  5441                           fsr2l	equ	0xFD9
  5442                           status	equ	0xFD8
  5443                           
  5444 ;; *************** function i2_lcdInst *****************
  5445 ;; Defined at:
  5446 ;;		line 26 in file "lcd.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  data            1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  data            1    2[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        1 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    1
  5467 ;; This function calls:
  5468 ;;		i2_lcdNibble
  5469 ;; This function is called by:
  5470 ;;		_isr
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text30
  5475  000F54                     __ptext30:
  5476                           	opt stack 0
  5477  000F54                     i2_lcdInst:
  5478                           	opt stack 24
  5479                           
  5480                           ;incstack = 0
  5481                           ;i2lcdInst@data stored from wreg
  5482  000F54  6E03               	movwf	i2lcdInst@data,c
  5483                           
  5484                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  5485  000F56  948C               	bcf	3980,2,c	;volatile
  5486                           
  5487                           ;lcd.c: 28: lcdNibble(data);
  5488  000F58  5003               	movf	i2lcdInst@data,w,c
  5489  000F5A  EC67  F006         	call	i2_lcdNibble
  5490  000F5E  0012               	return		;funcret
  5491  000F60                     __end_ofi2_lcdInst:
  5492                           	opt stack 0
  5493                           pclatu	equ	0xFFB
  5494                           pclath	equ	0xFFA
  5495                           tblptru	equ	0xFF8
  5496                           tblptrh	equ	0xFF7
  5497                           tblptrl	equ	0xFF6
  5498                           tablat	equ	0xFF5
  5499                           prodh	equ	0xFF4
  5500                           prodl	equ	0xFF3
  5501                           intcon	equ	0xFF2
  5502                           intcon2	equ	0xFF1
  5503                           intcon3	equ	0xFF0
  5504                           postinc0	equ	0xFEE
  5505                           fsr0h	equ	0xFEA
  5506                           fsr0l	equ	0xFE9
  5507                           wreg	equ	0xFE8
  5508                           fsr1h	equ	0xFE2
  5509                           fsr1l	equ	0xFE1
  5510                           indf2	equ	0xFDF
  5511                           postinc2	equ	0xFDE
  5512                           postdec2	equ	0xFDD
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function i2_lcdNibble *****************
  5518 ;; Defined at:
  5519 ;;		line 36 in file "lcd.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  data            1    wreg     unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  data            1    1[COMRAM] unsigned char 
  5524 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;Total ram usage:        2 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		i2_lcdInst
  5544 ;;		i2_putch
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text31
  5549  000CCE                     __ptext31:
  5550                           	opt stack 0
  5551  000CCE                     i2_lcdNibble:
  5552                           	opt stack 23
  5553                           
  5554                           ;incstack = 0
  5555                           ;i2lcdNibble@data stored from wreg
  5556  000CCE  6E02               	movwf	i2lcdNibble@data,c
  5557                           
  5558                           ;lcd.c: 38: char temp = data & 0xF0;
  5559  000CD0  5002               	movf	i2lcdNibble@data,w,c
  5560  000CD2  0BF0               	andlw	240
  5561  000CD4  6E01               	movwf	i2lcdNibble@temp,c
  5562                           
  5563                           ;lcd.c: 39: LATD = LATD & 0x0F;
  5564  000CD6  508C               	movf	3980,w,c	;volatile
  5565  000CD8  0B0F               	andlw	15
  5566  000CDA  6E8C               	movwf	3980,c	;volatile
  5567                           
  5568                           ;lcd.c: 40: LATD = temp | LATD;
  5569  000CDC  5001               	movf	i2lcdNibble@temp,w,c
  5570  000CDE  108C               	iorwf	3980,w,c	;volatile
  5571  000CE0  6E8C               	movwf	3980,c	;volatile
  5572                           
  5573                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  5574  000CE2  968C               	bcf	3980,3,c	;volatile
  5575                           
  5576                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5577  000CE4  0E19               	movlw	25
  5578  000CE6                     i2u207_47:
  5579  000CE6  2EE8               	decfsz	wreg,f,c
  5580  000CE8  D7FE               	bra	i2u207_47
  5581                           
  5582                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  5583  000CEA  868C               	bsf	3980,3,c	;volatile
  5584                           
  5585                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5586  000CEC  0E19               	movlw	25
  5587  000CEE                     i2u208_47:
  5588  000CEE  2EE8               	decfsz	wreg,f,c
  5589  000CF0  D7FE               	bra	i2u208_47
  5590                           
  5591                           ;lcd.c: 47: data = data << 4;
  5592  000CF2  3802               	swapf	i2lcdNibble@data,w,c
  5593  000CF4  0BF0               	andlw	240
  5594  000CF6  6E02               	movwf	i2lcdNibble@data,c
  5595                           
  5596                           ;lcd.c: 49: temp = data & 0xF0;
  5597  000CF8  5002               	movf	i2lcdNibble@data,w,c
  5598  000CFA  0BF0               	andlw	240
  5599  000CFC  6E01               	movwf	i2lcdNibble@temp,c
  5600                           
  5601                           ;lcd.c: 50: LATD = LATD & 0x0F;
  5602  000CFE  508C               	movf	3980,w,c	;volatile
  5603  000D00  0B0F               	andlw	15
  5604  000D02  6E8C               	movwf	3980,c	;volatile
  5605                           
  5606                           ;lcd.c: 51: LATD = temp | LATD;
  5607  000D04  5001               	movf	i2lcdNibble@temp,w,c
  5608  000D06  108C               	iorwf	3980,w,c	;volatile
  5609  000D08  6E8C               	movwf	3980,c	;volatile
  5610                           
  5611                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  5612  000D0A  968C               	bcf	3980,3,c	;volatile
  5613                           
  5614                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5615  000D0C  0E19               	movlw	25
  5616  000D0E                     i2u209_47:
  5617  000D0E  2EE8               	decfsz	wreg,f,c
  5618  000D10  D7FE               	bra	i2u209_47
  5619                           
  5620                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  5621  000D12  868C               	bsf	3980,3,c	;volatile
  5622                           
  5623                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5624  000D14  0E19               	movlw	25
  5625  000D16                     i2u210_47:
  5626  000D16  2EE8               	decfsz	wreg,f,c
  5627  000D18  D7FE               	bra	i2u210_47
  5628  000D1A  0012               	return		;funcret
  5629  000D1C                     __end_ofi2_lcdNibble:
  5630                           	opt stack 0
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           intcon2	equ	0xFF1
  5641                           intcon3	equ	0xFF0
  5642                           postinc0	equ	0xFEE
  5643                           fsr0h	equ	0xFEA
  5644                           fsr0l	equ	0xFE9
  5645                           wreg	equ	0xFE8
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           indf2	equ	0xFDF
  5649                           postinc2	equ	0xFDE
  5650                           postdec2	equ	0xFDD
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           pclatu	equ	0xFFB
  5655                           pclath	equ	0xFFA
  5656                           tblptru	equ	0xFF8
  5657                           tblptrh	equ	0xFF7
  5658                           tblptrl	equ	0xFF6
  5659                           tablat	equ	0xFF5
  5660                           prodh	equ	0xFF4
  5661                           prodl	equ	0xFF3
  5662                           intcon	equ	0xFF2
  5663                           intcon2	equ	0xFF1
  5664                           intcon3	equ	0xFF0
  5665                           postinc0	equ	0xFEE
  5666                           fsr0h	equ	0xFEA
  5667                           fsr0l	equ	0xFE9
  5668                           wreg	equ	0xFE8
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           postdec2	equ	0xFDD
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678                           	psect	rparam
  5679  0000                     pclatu	equ	0xFFB
  5680                           pclath	equ	0xFFA
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           prodh	equ	0xFF4
  5686                           prodl	equ	0xFF3
  5687                           intcon	equ	0xFF2
  5688                           intcon2	equ	0xFF1
  5689                           intcon3	equ	0xFF0
  5690                           postinc0	equ	0xFEE
  5691                           fsr0h	equ	0xFEA
  5692                           fsr0l	equ	0xFE9
  5693                           wreg	equ	0xFE8
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           indf2	equ	0xFDF
  5697                           postinc2	equ	0xFDE
  5698                           postdec2	equ	0xFDD
  5699                           fsr2h	equ	0xFDA
  5700                           fsr2l	equ	0xFD9
  5701                           status	equ	0xFD8
  5702                           
  5703                           	psect	temp
  5704  000053                     btemp:
  5705                           	opt stack 0
  5706  000053                     	ds	1
  5707  0000                     int$flags	set	btemp
  5708                           pclatu	equ	0xFFB
  5709                           pclath	equ	0xFFA
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           intcon2	equ	0xFF1
  5718                           intcon3	equ	0xFF0
  5719                           postinc0	equ	0xFEE
  5720                           fsr0h	equ	0xFEA
  5721                           fsr0l	equ	0xFE9
  5722                           wreg	equ	0xFE8
  5723                           fsr1h	equ	0xFE2
  5724                           fsr1l	equ	0xFE1
  5725                           indf2	equ	0xFDF
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           fsr2h	equ	0xFDA
  5729                           fsr2l	equ	0xFD9
  5730                           status	equ	0xFD8


Data Sizes:
    Strings     409
    Constant    42
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     70      82
    BANK0           128     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_21(CODE[25]), STR_20(CODE[24]), STR_19(CODE[23]), STR_18(CODE[23]), 
		 -> STR_17(CODE[23]), STR_16(CODE[10]), STR_15(CODE[17]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[23]), STR_4(CODE[23]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_operation
    _standby->_printf
    _operation->_printf
    _initLCD->_lcdInst
    _date_time->_printf
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _bottle_time->_printf
    _bottle_count->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMRAM

    _isr->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    _standby->_printf
    _operation->_printf
    _date_time->_printf
    _bottle_time->_printf
    _bottle_count->_printf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25115
                                             10 BANK0      2     2      0
                    _I2C_Master_Init
                       _bottle_count
                        _bottle_time
                          _date_time
                            _initLCD
                          _operation
                            _standby
 ---------------------------------------------------------------------------------
 (1) _standby                                              0     0      0    4729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _operation                                            2     2      0    4729
                                             68 COMRAM     2     2      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             47 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _date_time                                            1     1      0    5264
                                             68 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                             45 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                             45 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bottle_time                                          0     0      0    4729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count                                         0     0      0    5153
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    23      8    4594
                                             56 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     135
                                             46 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             44 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     392
                                             44 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             51 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             44 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                             46 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     113
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     424
                                             44 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             57 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             44 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 16    16      0    2093
                                             28 COMRAM    16    16      0
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            25    23      2    1912
                                             12 COMRAM    16    14      2
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (7) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _bottle_count
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_time
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _date_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _operation
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _standby
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble

 _isr (ROOT)
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2___wmul
     i2_isdigit
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C       C       5        9.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     46      52       1       65.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      34        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Mon Feb 06 01:08:02 2017

                       l34 0F1E        ___wmul@multiplicand 002F         i2___lwdiv@dividend 0001  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
                      l257 0116                        l702 0C24                        l712 0DA0  
                      l649 0A84               __CFG_CPB$OFF 000000                        u110 0E68  
                      _PEN 007E2A               __CFG_CPD$OFF 000000                        _SEN 007E28  
                      _isr 0008               ___awmod@sign 0032                        prod 000FF3  
                      wreg 000FE8               ?_bottle_time 0001               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1033 0E6A                       l2411 0D96  
                     l2403 0D76                       l2405 0D7E                       l2421 0020  
                     l2407 0D82                       l2503 0214                       l2431 004E  
                     l2521 0286                       l2425 0034                       l2523 0292  
                     l2531 02BE                       l2515 026A                       l2507 0248  
                     l2427 0046                       l2611 08F8                       l1901 0B6A  
                     l2533 02C4                       l2541 0358                       l2509 0252  
                     l2461 014E                       l2445 00E0                       l2437 007E  
                     l2701 09D0                       l2383 0BF2                       l2367 0EF8  
                     l2535 030C                       l2543 036A                       l2527 02AC  
                     l2607 08F0                       l1905 0B78                       l2385 0BFA  
                     l2545 0372                       l2481 01AC                       l2465 016A  
                     l2449 00E6                       l2633 06CE                       l2617 0914  
                     l2705 09D6                       l1915 0A36                       l2395 0C1A  
                     l2387 0BFE                       l2467 0170                       l2547 037E  
                     l2651 0740                       l2627 06A8                       l2707 09F6  
                     l1917 0A42                       l2645 071A                       l1927 0A76  
                     l1919 0A46                       l2479 01A6                       l2495 01E2  
                     l2639 06F4                       l2663 0782                       l2583 0AB4  
                     l1881 0B26                       l2497 01F4                       l2657 0766  
                     l2577 0A98                       l1891 0B48                       l1893 0B4C  
                     l1885 0B32                       l2589 0AD0                       l2597 0AEC  
                     l2693 09B8                       l2695 09BE                       l1897 0B60  
                     l1889 0B40                       l2697 09C4                       l2699 09CA  
                     ?_isr 0001                       STR_1 FFE6                       STR_2 FF1A  
                     STR_3 FF3C                       STR_4 FEDB                       STR_5 FEF2  
                     STR_6 FF4D                       STR_7 FF2B                       STR_8 FF91  
                     STR_9 FF80                       u2007 0D22                       u2017 0D5C  
                     u2027 0C98                       u2037 0CA0                       _LATA 000F89  
                     _LATB 000F8A                       u2047 0CC0                       _LATC 000F8B  
                     _LATD 000F8C                       u1345 0BB0                       u2057 0CC8  
                     _LATE 000F8D                       _RCEN 007E2B                       u1997 0A04  
                     _RSEN 007E29                       _main 096A                       _keys FE3B  
                     _time 0047                       fsr0h 000FEA                       fsr1h 000FE2  
       i2___lwdiv@quotient 0005                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 0053                       isr@i 002C                       prodh 000FF4  
                     prodl 000FF3                       start 000E              __CFG_IESO$OFF 000000  
          __end_ofi2_putch 0F54              __CFG_MCLRE$ON 000000               ___param_bank 000000  
              i2_lcdNibble 0CCE              ?_bottle_count 0001                      ??_isr 001D  
         ?_I2C_Master_Init 003A           ?_I2C_Master_Read 0001           ?_I2C_Master_Wait 0001  
         ?_I2C_Master_Stop 0001                      ?_main 0001                      _ACKEN 007E2C  
                    _ACKDT 007E2D                      STR_10 FF6F                      STR_11 FF5E  
                    STR_12 FFA2                      STR_20 FE7E                      STR_13 FFC4  
                    STR_21 FE65                      STR_14 FFB3                      STR_22 FF09  
                    STR_15 FFD5                      STR_16 FFF4                      STR_17 FEC4  
                    STR_18 FEAD                      STR_19 FE96            __end_of___awmod 0B82  
          __end_of___lldiv 0A96            __end_of___lwdiv 0C2E            __end_of___lwmod 0DAA  
                    i2l181 087E                      i2l257 0486                      i2l702 0C76  
                    i2l712 0DE2                      _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 0F48             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _nRBPU 007F8F              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000            __end_of_initLCD 0D68             __CFG_EBTRB$OFF 000000  
               i2isdigit@c 0003            __end_of_dpowers FE56            __end_of_isdigit 0F00  
                    _putch 0F30                      pclath 000FFA                      tablat 000FF5  
          __end_of_timeset FE65           __end_ofi2___wmul 0EE2            __end_of_standby 0E4A  
                    status 000FD8             __CFG_PBADEN$ON 000000              i2printf@width 001A  
         __end_ofi2_printf 06A6         __size_ofi2___lwdiv 0052         __size_ofi2___lwmod 0042  
          __initialization 0DEC         __size_ofi2_lcdInst 000C             ??_bottle_count 0045  
             __end_of_main 0A14               __end_of_keys FE4C                 i2printf@ap 0014  
       __size_ofi2_isdigit 001E                     ??_main 008A              __activetblptr 000002  
        ?_I2C_Master_Start 0001          ?_I2C_Master_Write 002E         ??_I2C_Master_Start 002E  
                   _ADCON0 000FC2                     _ADCON1 000FC1         ??_I2C_Master_Write 0030  
          i2lcdNibble@data 0002                     ?_putch 0001            i2lcdNibble@temp 0001  
                   _INT1IE 007F83                     _INT1IF 007F80                     i2l2201 057C  
                   i2l2121 03C2                     i2l2203 0584                     i2l2131 03F6  
                   i2l2115 03A4                     i2l2221 05CC                     i2l2125 03C8  
                   i2l2215 05B0                     i2l2143 0458                     i2l2119 03B4  
                   i2l2217 05B8                     i2l2225 05DE                     i2l2209 059A  
                   i2l2161 04D2                     i2l2241 068C                     i2l2305 0862  
                   i2l2227 05E4                     i2l2235 066E                     i2l2155 04B4  
                   i2l2139 0454                     i2l2229 0628                     i2l2237 067E  
                   i2l2173 04FE                     i2l2309 086A                     i2l2239 0684  
                   i2l2175 0502                     i2l2191 053E                     i2l2159 04CE  
                   i2l2281 0804                     i2l2291 081E                     i2l2283 0808  
                   i2l2197 0558                     i2l2189 052E                     i2l2287 0810  
                   i2l2279 0800                     i2l2289 081A                     i2l2297 082A  
                   i2l2299 084C                     i2l1961 0C4C                     i2l1971 0C6C  
                   i2l1963 0C50                     i2l1981 0DC0                     i2l1949 0F16  
                   i2l1959 0C44                     i2l1983 0DC4                     i2l1987 0DD8  
                   i2l1979 0DB8                  ??i2_putch 0003                     _SSPADD 000FC8  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _SSPBUF 000FC9  
           __CFG_XINST$OFF 000000                     ___wmul 0E96             __CFG_STVREN$ON 000000  
                ??___awmod 0031                  ??___lldiv 0035                  ??___lwdiv 0031  
                ??___lwmod 0038                     clear_0 0E0A            ___awmod@divisor 002F  
          ___awmod@counter 0031                  ??_lcdInst 002F                     _printf 0012  
                ??_initLCD 0030               __pdataCOMRAM 0051                  ??_isdigit 002D  
        __end_ofi2___lwdiv 0C80               __mediumconst FE3A          __end_ofi2___lwmod 0DEC  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_standby 0045          __end_ofi2_lcdInst 0F60          __end_ofi2_isdigit 0F1E  
     __size_of_bottle_time 0026                 __accesstop 0080    __end_of__initialization 0E10  
            ___rparam_used 000001         i2___lwmod@dividend 0008             __pcstackCOMRAM 0001  
            __end_of_putch 0F3C                i2printf@idx 0013                i2printf@val 0017  
       __size_of_date_time 00AE                  ?i2___wmul 0001         __size_of_lcdNibble 004E  
              i2putch@data 0003                  ?i2_printf 000D       __end_of_bottle_count 07C0  
                  ??_putch 002F               ?i2_lcdNibble 0001                    ?___wmul 002D  
                  ?_printf 0039         __size_of_operation 007C                 ??i2___wmul 0005  
               ??i2_printf 000F                    _SSPCON1 000FC6                    _SSPCON2 000FC5  
                  _SSPSTAT 000FC7          __end_of_date_time 096A                    i2_putch 0F48  
        _bottle_count_disp 0051          __end_of_lcdNibble 0CCE                    __Hparam 0000  
                  __Lparam 0000                    ___awmod 0B12                    ___lldiv 0A14  
          __size_of___wmul 0026                    ___lwdiv 0BDC                    ___lwmod 0D68  
               _curr_state 0050                    __pcinit 0DEC                    __ramtop 1000  
                  _lcdInst 0F3C                    __ptext0 096A                    __ptext1 0E1E  
                  __ptext2 0A96                    __ptext3 0D1C                    __ptext4 08BC  
                  __ptext5 0F60                    __ptext6 0F6A                    __ptext7 0F72  
                  __ptext8 0E4A                    __ptext9 0F1E            __size_of_printf 0388  
                  _initLCD 0D1C          __end_of_hexpowers FE5E              i2_isdigit$530 0002  
                  _dpowers FE4C                    _isdigit 0EE2               __size_of_isr 08B4  
         ___awmod@dividend 002D   __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Read 0026  
 __size_of_I2C_Master_Wait 0012                 date_time@i 0045   __size_of_I2C_Master_Stop 0008  
                  _timeset FE5E                    _standby 0E1E             __pintcode_body 07C0  
     end_of_initialization 0E10              __Lmediumconst FE3A                    int_func 07C0  
      i2___wmul@multiplier 0001          __end_of_operation 0B12             _operation_disp 004E  
__size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0031  
          ___lldiv@counter 0039                    printf@c 0089                    printf@f 0039  
         I2C_Master_Init@c 003A           I2C_Master_Read@a 002E                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE      __size_of_bottle_count 011A  
        i2___lwdiv@divisor 0003                  i2___lwdiv 0C2E                  i2___lwmod 0DAA  
        i2___lwdiv@counter 0007                  i2_lcdInst 0F54                printf@width 0087  
                i2_isdigit 0F00               _bottle_count 06A6             __end_of___wmul 0EBC  
     __size_ofi2_lcdNibble 004E              __pidataCOMRAM 0F7A              i2lcdInst@data 0003  
         i2___wmul@product 0005             __end_of_printf 039A               i2printf@flag 0019  
             i2printf@prec 0016        start_initialization 0DEC          __size_ofi2___wmul 0026  
              __end_of_isr 08BC                  i2printf@c 001C                  i2printf@f 000D  
            ??_bottle_time 0045                 ?i2___lwdiv 0001                 ?i2___lwmod 0008  
        __size_ofi2_printf 030C          ??_I2C_Master_Init 003E          ??_I2C_Master_Read 002E  
        ??_I2C_Master_Wait 002D                 ?i2_lcdInst 0001          ??_I2C_Master_Stop 002E  
               ?i2_isdigit 0001                   ??___wmul 0031           __CFG_LPT1OSC$OFF 000000  
                 ??_printf 0041                __pbssCOMRAM 0047              __pcstackBANK0 0080  
        i2___lwmod@divisor 000A          i2___lwmod@counter 000C                   ?i2_putch 0001  
      __end_of_bottle_time 0E96           _I2C_Master_Start 0F72           _I2C_Master_Write 0F60  
                _date_time 08BC           ___lwdiv@dividend 002D          __CFG_CCP2MX$PORTC 000000  
                __pintcode 0008              __pmediumconst FE3A                  _lcdNibble 0C80  
                 ?___awmod 002D                   ?___lldiv 002D                   ?___lwdiv 002D  
                 ?___lwmod 0034                   ?_lcdInst 0001                   ?_initLCD 0001  
                 ?_isdigit 0001                  _hexpowers FE56                   ?_standby 0001  
         ___lwdiv@quotient 0032                ??i2___lwdiv 0005                ??i2___lwmod 000C  
           __size_of_putch 000C                ??i2_lcdInst 0003             ___wmul@product 0031  
                 _LATDbits 000F8C                ??i2_isdigit 0001                 ?_date_time 0001  
                 i2u210_47 0D16                   i2u206_47 0870                   i2u207_47 0CE6  
                 i2u208_47 0CEE                   i2u209_47 0D0E                  _operation 0A96  
         __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001          ___wmul@multiplier 002D  
                 i2___wmul 0EBC              lcdNibble@data 002E                 printf@flag 0086  
            lcdNibble@temp 002D                 printf@prec 0083                   i2_printf 039A  
              _bottle_time 0E70        I2C_Master_Read@temp 002F           __size_ofi2_putch 000C  
                 __Hrparam 0000                 ?_operation 0001                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000           __size_of___awmod 0070      i2___wmul@multiplicand 0003  
         __size_of___lldiv 0082           __size_of___lwdiv 0052           __size_of___lwmod 0042  
              _isdigit$530 002E           __size_of_lcdInst 000C            _I2C_Master_Init 0B82  
          _I2C_Master_Read 0E4A           __size_of_initLCD 004C            _I2C_Master_Wait 0F1E  
          _I2C_Master_Stop 0F6A           __size_of_isdigit 001E            ___lwdiv@divisor 002F  
          ___lwdiv@counter 0031                   __ptext10 0E70                   __ptext11 06A6  
                 __ptext20 0B12                   __ptext12 0012                   __ptext21 0B82  
                 __ptext13 0F30                   __ptext30 0F54                   __ptext22 0A14  
                 __ptext14 0EE2                   __ptext31 0CCE                   __ptext15 0E96  
                 __ptext24 039A                   __ptext16 0D68                   __ptext25 0F48  
                 __ptext17 0BDC                   __ptext26 0F00                   __ptext18 0F3C  
                 __ptext27 0EBC                   __ptext19 0C80                   __ptext28 0DAA  
                 __ptext29 0C2E           __size_of_standby 002C              __size_of_main 00AA  
              ??_date_time 0045              ??i2_lcdNibble 0001                ??_lcdNibble 002D  
                 int$flags 0053                  printf@idx 0080                  printf@val 0084  
                putch@data 002F   __end_of_I2C_Master_Start 0F7A   __end_of_I2C_Master_Write 0F6A  
               _INTCONbits 000FF2                   isdigit@c 002F                   intlevel2 0000  
         ___lwmod@dividend 0034           ___lldiv@dividend 002D                ??_operation 0045  
                 printf@ap 0081    __end_of_I2C_Master_Init 0BDC    __end_of_I2C_Master_Read 0E70  
  __end_of_I2C_Master_Wait 0F30    __end_of_I2C_Master_Stop 0F72                lcdInst@data 002F  
      __end_ofi2_lcdNibble 0D1C           ___lldiv@quotient 0035          I2C_Master_Write@d 002E  
          ___lwmod@divisor 0036            ___lwmod@counter 0038  
