

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Apr 11 14:02:23 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	text92,global,reloc=2,class=CODE,delta=1
   109                           	psect	text93,global,reloc=2,class=CODE,delta=1
   110                           	psect	text94,global,reloc=2,class=CODE,delta=1
   111                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114  0000                     
   115                           ; Version 1.40
   116                           ; Generated 01/12/2016 GMT
   117                           ; 
   118                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution.
   132                           ; 
   133                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   134                           ;        software without specific prior written permission.
   135                           ; 
   136                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   137                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   138                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   139                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   140                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   141                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   142                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   143                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   144                           ; 
   145                           ; 
   146                           ; Code-generator required, PIC18F4620 Definitions
   147                           ; 
   148                           ; SFR Addresses
   149  0000                     
   150                           	psect	idataBANK1
   151  0054D8                     __pidataBANK1:
   152                           	opt stack 0
   153                           
   154                           ;initializer for _bottle_count_disp
   155  0054D8  FFFF               	dw	65535
   156  0054DA  00                 	db	0
   157  0054DB  00                 	db	0
   158  0054DC  00                 	db	0
   159  0054DD  00                 	db	0
   160  0054DE  00                 	db	0
   161  0054DF  00                 	db	0
   162  0054E0  00                 	db	0
   163  0054E1  00                 	db	0
   164                           
   165                           	psect	mediumconst
   166  00FD92                     __pmediumconst:
   167                           	opt stack 0
   168  00FD92  00                 	db	0
   169  00FD93                     _keys:
   170                           	opt stack 0
   171  00FD93  31                 	db	49
   172  00FD94  32                 	db	50
   173  00FD95  33                 	db	51
   174  00FD96  41                 	db	65
   175  00FD97  34                 	db	52
   176  00FD98  35                 	db	53
   177  00FD99  36                 	db	54
   178  00FD9A  42                 	db	66
   179  00FD9B  37                 	db	55
   180  00FD9C  38                 	db	56
   181  00FD9D  39                 	db	57
   182  00FD9E  43                 	db	67
   183  00FD9F  2A                 	db	42
   184  00FDA0  30                 	db	48
   185  00FDA1  23                 	db	35
   186  00FDA2  44                 	db	68
   187  00FDA3  00                 	db	0
   188  00FDA4                     __end_of_keys:
   189                           	opt stack 0
   190  00FDA4                     _dpowers:
   191                           	opt stack 0
   192  00FDA4  0001               	dw	1
   193  00FDA6  000A               	dw	10
   194  00FDA8  0064               	dw	100
   195  00FDAA  03E8               	dw	1000
   196  00FDAC  2710               	dw	10000
   197  00FDAE                     __end_of_dpowers:
   198                           	opt stack 0
   199  00FDAE                     _hexpowers:
   200                           	opt stack 0
   201  00FDAE  0001               	dw	1
   202  00FDB0  0010               	dw	16
   203  00FDB2  0100               	dw	256
   204  00FDB4  1000               	dw	4096
   205  00FDB6                     __end_of_hexpowers:
   206                           	opt stack 0
   207  00FDB6                     _timeset:
   208                           	opt stack 0
   209  00FDB6  30                 	db	48
   210  00FDB7  19                 	db	25
   211  00FDB8  13                 	db	19
   212  00FDB9  02                 	db	2
   213  00FDBA  11                 	db	17
   214  00FDBB  04                 	db	4
   215  00FDBC  17                 	db	23
   216  00FDBD                     __end_of_timeset:
   217                           	opt stack 0
   218  00FDBD                     exp@coeff:
   219                           	opt stack 0
   220  00FDBD  00                 	db	0
   221  00FDBE  80                 	db	128
   222  00FDBF  3F                 	db	63
   223  00FDC0  72                 	db	114
   224  00FDC1  31                 	db	49
   225  00FDC2  3F                 	db	63
   226  00FDC3  FE                 	db	254
   227  00FDC4  75                 	db	117
   228  00FDC5  3E                 	db	62
   229  00FDC6  58                 	db	88
   230  00FDC7  63                 	db	99
   231  00FDC8  3D                 	db	61
   232  00FDC9  95                 	db	149
   233  00FDCA  1D                 	db	29
   234  00FDCB  3C                 	db	60
   235  00FDCC  C5                 	db	197
   236  00FDCD  AE                 	db	174
   237  00FDCE  3A                 	db	58
   238  00FDCF  79                 	db	121
   239  00FDD0  21                 	db	33
   240  00FDD1  39                 	db	57
   241  00FDD2  94                 	db	148
   242  00FDD3  80                 	db	128
   243  00FDD4  37                 	db	55
   244  00FDD5  93                 	db	147
   245  00FDD6  A7                 	db	167
   246  00FDD7  35                 	db	53
   247  00FDD8  56                 	db	86
   248  00FDD9  15                 	db	21
   249  00FDDA  34                 	db	52
   250  00FDDB                     __end_ofexp@coeff:
   251                           	opt stack 0
   252  00FDDB                     log@coeff:
   253                           	opt stack 0
   254  00FDDB  00                 	db	0
   255  00FDDC  00                 	db	0
   256  00FDDD  00                 	db	0
   257  00FDDE  00                 	db	0
   258  00FDDF  80                 	db	128
   259  00FDE0  3F                 	db	63
   260  00FDE1  F0                 	db	240
   261  00FDE2  FF                 	db	255
   262  00FDE3  BE                 	db	190
   263  00FDE4  E2                 	db	226
   264  00FDE5  A9                 	db	169
   265  00FDE6  3E                 	db	62
   266  00FDE7  83                 	db	131
   267  00FDE8  76                 	db	118
   268  00FDE9  BE                 	db	190
   269  00FDEA  AE                 	db	174
   270  00FDEB  2B                 	db	43
   271  00FDEC  3E                 	db	62
   272  00FDED  3C                 	db	60
   273  00FDEE  C3                 	db	195
   274  00FDEF  BD                 	db	189
   275  00FDF0  D2                 	db	210
   276  00FDF1  13                 	db	19
   277  00FDF2  3D                 	db	61
   278  00FDF3  78                 	db	120
   279  00FDF4  D3                 	db	211
   280  00FDF5  BB                 	db	187
   281  00FDF6                     __end_oflog@coeff:
   282                           	opt stack 0
   283  0000                     _TMR0	set	4054
   284  0000                     _TMR1	set	4046
   285  0000                     _TMR3	set	4018
   286  0000                     _ADCON0	set	4034
   287  0000                     _ADCON1	set	4033
   288  0000                     _EEADR	set	4009
   289  0000                     _EEADRH	set	4010
   290  0000                     _EECON1bits	set	4006
   291  0000                     _EECON2	set	4007
   292  0000                     _EEDATA	set	4008
   293  0000                     _INTCONbits	set	4082
   294  0000                     _LATA	set	3977
   295  0000                     _LATAbits	set	3977
   296  0000                     _LATB	set	3978
   297  0000                     _LATC	set	3979
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATD	set	3980
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATE	set	3981
   302  0000                     _PIR2bits	set	4001
   303  0000                     _PORTAbits	set	3968
   304  0000                     _PORTB	set	3969
   305  0000                     _SSPADD	set	4040
   306  0000                     _SSPBUF	set	4041
   307  0000                     _SSPCON1	set	4038
   308  0000                     _SSPCON2	set	4037
   309  0000                     _SSPSTAT	set	4039
   310  0000                     _T1CON	set	4045
   311  0000                     _T3CON	set	4017
   312  0000                     _TRISA	set	3986
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISC	set	3988
   315  0000                     _TRISD	set	3989
   316  0000                     _TRISE	set	3990
   317  0000                     _ACKDT	set	32301
   318  0000                     _ACKEN	set	32300
   319  0000                     _GIE	set	32663
   320  0000                     _INT0IE	set	32660
   321  0000                     _INT1IE	set	32643
   322  0000                     _INT1IF	set	32640
   323  0000                     _INT2IE	set	32644
   324  0000                     _PEIE	set	32662
   325  0000                     _PEN	set	32298
   326  0000                     _PSA	set	32427
   327  0000                     _RCEN	set	32299
   328  0000                     _RSEN	set	32297
   329  0000                     _SEN	set	32296
   330  0000                     _T08BIT	set	32430
   331  0000                     _T0CS	set	32429
   332  0000                     _T0PS0	set	32424
   333  0000                     _T0PS1	set	32425
   334  0000                     _T0PS2	set	32426
   335  0000                     _T1CKPS0	set	32364
   336  0000                     _T1CKPS1	set	32365
   337  0000                     _T3CKPS0	set	32140
   338  0000                     _T3CKPS1	set	32141
   339  0000                     _TMR0IE	set	32661
   340  0000                     _TMR0IF	set	32658
   341  0000                     _TMR0ON	set	32431
   342  0000                     _TMR1CS	set	32361
   343  0000                     _TMR1IE	set	31976
   344  0000                     _TMR1IF	set	31984
   345  0000                     _TMR1ON	set	32360
   346  0000                     _TMR3CS	set	32137
   347  0000                     _TMR3IE	set	32001
   348  0000                     _TMR3IF	set	32009
   349  0000                     _TMR3ON	set	32136
   350  0000                     _TRISC3	set	31907
   351  0000                     _TRISC4	set	31908
   352  0000                     _nRBPU	set	32655
   353  00FDF6                     STR_46:
   354  00FDF6  4F                 	db	79	;'O'
   355  00FDF7  70                 	db	112	;'p'
   356  00FDF8  65                 	db	101	;'e'
   357  00FDF9  72                 	db	114	;'r'
   358  00FDFA  61                 	db	97	;'a'
   359  00FDFB  74                 	db	116	;'t'
   360  00FDFC  69                 	db	105	;'i'
   361  00FDFD  6F                 	db	111	;'o'
   362  00FDFE  6E                 	db	110	;'n'
   363  00FDFF  20                 	db	32
   364  00FE00  44                 	db	68	;'D'
   365  00FE01  6F                 	db	111	;'o'
   366  00FE02  6E                 	db	110	;'n'
   367  00FE03  65                 	db	101	;'e'
   368  00FE04  21                 	db	33
   369  00FE05  20                 	db	32
   370  00FE06  20                 	db	32
   371  00FE07  20                 	db	32
   372  00FE08  20                 	db	32
   373  00FE09  20                 	db	32
   374  00FE0A  20                 	db	32
   375  00FE0B  20                 	db	32
   376  00FE0C  20                 	db	32
   377  00FE0D  20                 	db	32
   378  00FE0E  20                 	db	32
   379  00FE0F  00                 	db	0
   380  00FE10                     STR_44:
   381  00FE10  54                 	db	84	;'T'
   382  00FE11  6F                 	db	111	;'o'
   383  00FE12  74                 	db	116	;'t'
   384  00FE13  61                 	db	97	;'a'
   385  00FE14  6C                 	db	108	;'l'
   386  00FE15  20                 	db	32
   387  00FE16  4F                 	db	79	;'O'
   388  00FE17  70                 	db	112	;'p'
   389  00FE18  65                 	db	101	;'e'
   390  00FE19  72                 	db	114	;'r'
   391  00FE1A  61                 	db	97	;'a'
   392  00FE1B  74                 	db	116	;'t'
   393  00FE1C  69                 	db	105	;'i'
   394  00FE1D  6F                 	db	111	;'o'
   395  00FE1E  6E                 	db	110	;'n'
   396  00FE1F  20                 	db	32
   397  00FE20  20                 	db	32
   398  00FE21  20                 	db	32
   399  00FE22  20                 	db	32
   400  00FE23  20                 	db	32
   401  00FE24  20                 	db	32
   402  00FE25  20                 	db	32
   403  00FE26  20                 	db	32
   404  00FE27  20                 	db	32
   405  00FE28  20                 	db	32
   406  00FE29  00                 	db	0
   407  00FE2A                     STR_37:
   408  00FE2A  42                 	db	66	;'B'
   409  00FE2B  74                 	db	116	;'t'
   410  00FE2C  74                 	db	116	;'t'
   411  00FE2D  6C                 	db	108	;'l'
   412  00FE2E  43                 	db	67	;'C'
   413  00FE2F  6E                 	db	110	;'n'
   414  00FE30  74                 	db	116	;'t'
   415  00FE31  20                 	db	32
   416  00FE32  50                 	db	80	;'P'
   417  00FE33  72                 	db	114	;'r'
   418  00FE34  65                 	db	101	;'e'
   419  00FE35  76                 	db	118	;'v'
   420  00FE36  20                 	db	32
   421  00FE37  34                 	db	52	;'4'
   422  00FE38  20                 	db	32
   423  00FE39  20                 	db	32
   424  00FE3A  20                 	db	32
   425  00FE3B  20                 	db	32
   426  00FE3C  20                 	db	32
   427  00FE3D  20                 	db	32
   428  00FE3E  20                 	db	32
   429  00FE3F  20                 	db	32
   430  00FE40  20                 	db	32
   431  00FE41  20                 	db	32
   432  00FE42  00                 	db	0
   433  00FE43                     STR_47:
   434  00FE43  45                 	db	69	;'E'
   435  00FE44  4D                 	db	77	;'M'
   436  00FE45  45                 	db	69	;'E'
   437  00FE46  52                 	db	82	;'R'
   438  00FE47  47                 	db	71	;'G'
   439  00FE48  45                 	db	69	;'E'
   440  00FE49  4E                 	db	78	;'N'
   441  00FE4A  43                 	db	67	;'C'
   442  00FE4B  59                 	db	89	;'Y'
   443  00FE4C  20                 	db	32
   444  00FE4D  53                 	db	83	;'S'
   445  00FE4E  54                 	db	84	;'T'
   446  00FE4F  4F                 	db	79	;'O'
   447  00FE50  50                 	db	80	;'P'
   448  00FE51  20                 	db	32
   449  00FE52  20                 	db	32
   450  00FE53  20                 	db	32
   451  00FE54  20                 	db	32
   452  00FE55  20                 	db	32
   453  00FE56  20                 	db	32
   454  00FE57  20                 	db	32
   455  00FE58  20                 	db	32
   456  00FE59  20                 	db	32
   457  00FE5A  20                 	db	32
   458  00FE5B  00                 	db	0
   459  00FE5C                     STR_3:
   460  00FE5C  47                 	db	71	;'G'
   461  00FE5D  25                 	db	37
   462  00FE5E  75                 	db	117	;'u'
   463  00FE5F  20                 	db	32
   464  00FE60  42                 	db	66	;'B'
   465  00FE61  25                 	db	37
   466  00FE62  75                 	db	117	;'u'
   467  00FE63  20                 	db	32
   468  00FE64  20                 	db	32
   469  00FE65  20                 	db	32
   470  00FE66  20                 	db	32
   471  00FE67  20                 	db	32
   472  00FE68  20                 	db	32
   473  00FE69  20                 	db	32
   474  00FE6A  20                 	db	32
   475  00FE6B  20                 	db	32
   476  00FE6C  20                 	db	32
   477  00FE6D  20                 	db	32
   478  00FE6E  20                 	db	32
   479  00FE6F  20                 	db	32
   480  00FE70  20                 	db	32
   481  00FE71  20                 	db	32
   482  00FE72  20                 	db	32
   483  00FE73  00                 	db	0
   484  00FE74                     STR_2:
   485  00FE74  43                 	db	67	;'C'
   486  00FE75  25                 	db	37
   487  00FE76  75                 	db	117	;'u'
   488  00FE77  20                 	db	32
   489  00FE78  52                 	db	82	;'R'
   490  00FE79  25                 	db	37
   491  00FE7A  75                 	db	117	;'u'
   492  00FE7B  20                 	db	32
   493  00FE7C  20                 	db	32
   494  00FE7D  20                 	db	32
   495  00FE7E  20                 	db	32
   496  00FE7F  20                 	db	32
   497  00FE80  20                 	db	32
   498  00FE81  20                 	db	32
   499  00FE82  20                 	db	32
   500  00FE83  20                 	db	32
   501  00FE84  20                 	db	32
   502  00FE85  20                 	db	32
   503  00FE86  20                 	db	32
   504  00FE87  20                 	db	32
   505  00FE88  20                 	db	32
   506  00FE89  20                 	db	32
   507  00FE8A  20                 	db	32
   508  00FE8B  00                 	db	0
   509  00FE8C                     STR_45:
   510  00FE8C  54                 	db	84	;'T'
   511  00FE8D  69                 	db	105	;'i'
   512  00FE8E  6D                 	db	109	;'m'
   513  00FE8F  65                 	db	101	;'e'
   514  00FE90  3A                 	db	58	;':'
   515  00FE91  20                 	db	32
   516  00FE92  25                 	db	37
   517  00FE93  64                 	db	100	;'d'
   518  00FE94  20                 	db	32
   519  00FE95  73                 	db	115	;'s'
   520  00FE96  20                 	db	32
   521  00FE97  20                 	db	32
   522  00FE98  20                 	db	32
   523  00FE99  20                 	db	32
   524  00FE9A  20                 	db	32
   525  00FE9B  20                 	db	32
   526  00FE9C  20                 	db	32
   527  00FE9D  20                 	db	32
   528  00FE9E  20                 	db	32
   529  00FE9F  20                 	db	32
   530  00FEA0  20                 	db	32
   531  00FEA1  20                 	db	32
   532  00FEA2  20                 	db	32
   533  00FEA3  00                 	db	0
   534  00FEA4                     STR_23:
   535  00FEA4  42                 	db	66	;'B'
   536  00FEA5  74                 	db	116	;'t'
   537  00FEA6  74                 	db	116	;'t'
   538  00FEA7  6C                 	db	108	;'l'
   539  00FEA8  43                 	db	67	;'C'
   540  00FEA9  6E                 	db	110	;'n'
   541  00FEAA  74                 	db	116	;'t'
   542  00FEAB  20                 	db	32
   543  00FEAC  50                 	db	80	;'P'
   544  00FEAD  72                 	db	114	;'r'
   545  00FEAE  65                 	db	101	;'e'
   546  00FEAF  76                 	db	118	;'v'
   547  00FEB0  20                 	db	32
   548  00FEB1  32                 	db	50	;'2'
   549  00FEB2  20                 	db	32
   550  00FEB3  20                 	db	32
   551  00FEB4  20                 	db	32
   552  00FEB5  20                 	db	32
   553  00FEB6  20                 	db	32
   554  00FEB7  20                 	db	32
   555  00FEB8  20                 	db	32
   556  00FEB9  20                 	db	32
   557  00FEBA  20                 	db	32
   558  00FEBB  00                 	db	0
   559  00FEBC                     STR_30:
   560  00FEBC  42                 	db	66	;'B'
   561  00FEBD  74                 	db	116	;'t'
   562  00FEBE  74                 	db	116	;'t'
   563  00FEBF  6C                 	db	108	;'l'
   564  00FEC0  43                 	db	67	;'C'
   565  00FEC1  6E                 	db	110	;'n'
   566  00FEC2  74                 	db	116	;'t'
   567  00FEC3  20                 	db	32
   568  00FEC4  50                 	db	80	;'P'
   569  00FEC5  72                 	db	114	;'r'
   570  00FEC6  65                 	db	101	;'e'
   571  00FEC7  76                 	db	118	;'v'
   572  00FEC8  20                 	db	32
   573  00FEC9  33                 	db	51	;'3'
   574  00FECA  20                 	db	32
   575  00FECB  20                 	db	32
   576  00FECC  20                 	db	32
   577  00FECD  20                 	db	32
   578  00FECE  20                 	db	32
   579  00FECF  20                 	db	32
   580  00FED0  20                 	db	32
   581  00FED1  20                 	db	32
   582  00FED2  20                 	db	32
   583  00FED3  00                 	db	0
   584  00FED4                     STR_1:
   585  00FED4  72                 	db	114	;'r'
   586  00FED5  75                 	db	117	;'u'
   587  00FED6  6E                 	db	110	;'n'
   588  00FED7  6E                 	db	110	;'n'
   589  00FED8  69                 	db	105	;'i'
   590  00FED9  6E                 	db	110	;'n'
   591  00FEDA  67                 	db	103	;'g'
   592  00FEDB  20                 	db	32
   593  00FEDC  20                 	db	32
   594  00FEDD  20                 	db	32
   595  00FEDE  20                 	db	32
   596  00FEDF  20                 	db	32
   597  00FEE0  20                 	db	32
   598  00FEE1  20                 	db	32
   599  00FEE2  20                 	db	32
   600  00FEE3  20                 	db	32
   601  00FEE4  20                 	db	32
   602  00FEE5  20                 	db	32
   603  00FEE6  20                 	db	32
   604  00FEE7  20                 	db	32
   605  00FEE8  20                 	db	32
   606  00FEE9  20                 	db	32
   607  00FEEA  00                 	db	0
   608  00FEEB                     STR_16:
   609  00FEEB  42                 	db	66	;'B'
   610  00FEEC  74                 	db	116	;'t'
   611  00FEED  74                 	db	116	;'t'
   612  00FEEE  6C                 	db	108	;'l'
   613  00FEEF  43                 	db	67	;'C'
   614  00FEF0  6E                 	db	110	;'n'
   615  00FEF1  74                 	db	116	;'t'
   616  00FEF2  20                 	db	32
   617  00FEF3  50                 	db	80	;'P'
   618  00FEF4  72                 	db	114	;'r'
   619  00FEF5  65                 	db	101	;'e'
   620  00FEF6  76                 	db	118	;'v'
   621  00FEF7  20                 	db	32
   622  00FEF8  31                 	db	49	;'1'
   623  00FEF9  20                 	db	32
   624  00FEFA  20                 	db	32
   625  00FEFB  20                 	db	32
   626  00FEFC  20                 	db	32
   627  00FEFD  20                 	db	32
   628  00FEFE  20                 	db	32
   629  00FEFF  20                 	db	32
   630  00FF00  20                 	db	32
   631  00FF01  00                 	db	0
   632  00FF02                     STR_7:
   633  00FF02  44                 	db	68	;'D'
   634  00FF03  61                 	db	97	;'a'
   635  00FF04  74                 	db	116	;'t'
   636  00FF05  65                 	db	101	;'e'
   637  00FF06  3A                 	db	58	;':'
   638  00FF07  20                 	db	32
   639  00FF08  25                 	db	37
   640  00FF09  30                 	db	48	;'0'
   641  00FF0A  32                 	db	50	;'2'
   642  00FF0B  78                 	db	120	;'x'
   643  00FF0C  2F                 	db	47
   644  00FF0D  25                 	db	37
   645  00FF0E  30                 	db	48	;'0'
   646  00FF0F  32                 	db	50	;'2'
   647  00FF10  78                 	db	120	;'x'
   648  00FF11  2F                 	db	47
   649  00FF12  25                 	db	37
   650  00FF13  30                 	db	48	;'0'
   651  00FF14  32                 	db	50	;'2'
   652  00FF15  78                 	db	120	;'x'
   653  00FF16  20                 	db	32
   654  00FF17  20                 	db	32
   655  00FF18  00                 	db	0
   656  00FF19                     STR_8:
   657  00FF19  54                 	db	84	;'T'
   658  00FF1A  69                 	db	105	;'i'
   659  00FF1B  6D                 	db	109	;'m'
   660  00FF1C  65                 	db	101	;'e'
   661  00FF1D  3A                 	db	58	;':'
   662  00FF1E  20                 	db	32
   663  00FF1F  25                 	db	37
   664  00FF20  30                 	db	48	;'0'
   665  00FF21  32                 	db	50	;'2'
   666  00FF22  78                 	db	120	;'x'
   667  00FF23  3A                 	db	58	;':'
   668  00FF24  25                 	db	37
   669  00FF25  30                 	db	48	;'0'
   670  00FF26  32                 	db	50	;'2'
   671  00FF27  78                 	db	120	;'x'
   672  00FF28  3A                 	db	58	;':'
   673  00FF29  25                 	db	37
   674  00FF2A  30                 	db	48	;'0'
   675  00FF2B  32                 	db	50	;'2'
   676  00FF2C  78                 	db	120	;'x'
   677  00FF2D  20                 	db	32
   678  00FF2E  20                 	db	32
   679  00FF2F  00                 	db	0
   680  00FF30                     STR_10:
   681  00FF30  54                 	db	84	;'T'
   682  00FF31  6F                 	db	111	;'o'
   683  00FF32  74                 	db	116	;'t'
   684  00FF33  61                 	db	97	;'a'
   685  00FF34  6C                 	db	108	;'l'
   686  00FF35  3A                 	db	58	;':'
   687  00FF36  20                 	db	32
   688  00FF37  25                 	db	37
   689  00FF38  64                 	db	100	;'d'
   690  00FF39  20                 	db	32
   691  00FF3A  20                 	db	32
   692  00FF3B  20                 	db	32
   693  00FF3C  20                 	db	32
   694  00FF3D  20                 	db	32
   695  00FF3E  20                 	db	32
   696  00FF3F  20                 	db	32
   697  00FF40  20                 	db	32
   698  00FF41  20                 	db	32
   699  00FF42  20                 	db	32
   700  00FF43  20                 	db	32
   701  00FF44  20                 	db	32
   702  00FF45  00                 	db	0
   703  00FF46                     STR_9:
   704  00FF46  42                 	db	66	;'B'
   705  00FF47  6F                 	db	111	;'o'
   706  00FF48  74                 	db	116	;'t'
   707  00FF49  74                 	db	116	;'t'
   708  00FF4A  6C                 	db	108	;'l'
   709  00FF4B  65                 	db	101	;'e'
   710  00FF4C  20                 	db	32
   711  00FF4D  43                 	db	67	;'C'
   712  00FF4E  6F                 	db	111	;'o'
   713  00FF4F  75                 	db	117	;'u'
   714  00FF50  6E                 	db	110	;'n'
   715  00FF51  74                 	db	116	;'t'
   716  00FF52  20                 	db	32
   717  00FF53  20                 	db	32
   718  00FF54  20                 	db	32
   719  00FF55  20                 	db	32
   720  00FF56  20                 	db	32
   721  00FF57  20                 	db	32
   722  00FF58  20                 	db	32
   723  00FF59  20                 	db	32
   724  00FF5A  20                 	db	32
   725  00FF5B  00                 	db	0
   726  00FF5C                     STR_17:
   727  00FF5C  54                 	db	84	;'T'
   728  00FF5D  6F                 	db	111	;'o'
   729  00FF5E  74                 	db	116	;'t'
   730  00FF5F  61                 	db	97	;'a'
   731  00FF60  6C                 	db	108	;'l'
   732  00FF61  3A                 	db	58	;':'
   733  00FF62  20                 	db	32
   734  00FF63  25                 	db	37
   735  00FF64  64                 	db	100	;'d'
   736  00FF65  20                 	db	32
   737  00FF66  20                 	db	32
   738  00FF67  20                 	db	32
   739  00FF68  20                 	db	32
   740  00FF69  20                 	db	32
   741  00FF6A  20                 	db	32
   742  00FF6B  20                 	db	32
   743  00FF6C  20                 	db	32
   744  00FF6D  20                 	db	32
   745  00FF6E  20                 	db	32
   746  00FF6F  20                 	db	32
   747  00FF70  00                 	db	0
   748  00FF71                     STR_5:
   749  00FF71  73                 	db	115	;'s'
   750  00FF72  74                 	db	116	;'t'
   751  00FF73  61                 	db	97	;'a'
   752  00FF74  6E                 	db	110	;'n'
   753  00FF75  64                 	db	100	;'d'
   754  00FF76  62                 	db	98	;'b'
   755  00FF77  79                 	db	121	;'y'
   756  00FF78  20                 	db	32
   757  00FF79  20                 	db	32
   758  00FF7A  20                 	db	32
   759  00FF7B  20                 	db	32
   760  00FF7C  20                 	db	32
   761  00FF7D  20                 	db	32
   762  00FF7E  20                 	db	32
   763  00FF7F  20                 	db	32
   764  00FF80  20                 	db	32
   765  00FF81  20                 	db	32
   766  00FF82  00                 	db	0
   767  00FF83                     STR_48:
   768  00FF83  30                 	db	48	;'0'
   769  00FF84  31                 	db	49	;'1'
   770  00FF85  32                 	db	50	;'2'
   771  00FF86  33                 	db	51	;'3'
   772  00FF87  34                 	db	52	;'4'
   773  00FF88  35                 	db	53	;'5'
   774  00FF89  36                 	db	54	;'6'
   775  00FF8A  37                 	db	55	;'7'
   776  00FF8B  38                 	db	56	;'8'
   777  00FF8C  39                 	db	57	;'9'
   778  00FF8D  61                 	db	97	;'a'
   779  00FF8E  62                 	db	98	;'b'
   780  00FF8F  63                 	db	99	;'c'
   781  00FF90  64                 	db	100	;'d'
   782  00FF91  65                 	db	101	;'e'
   783  00FF92  66                 	db	102	;'f'
   784  00FF93  00                 	db	0
   785  00FF94                     STR_11:
   786  00FF94  59                 	db	89	;'Y'
   787  00FF95  4F                 	db	79	;'O'
   788  00FF96  50                 	db	80	;'P'
   789  00FF97  20                 	db	32
   790  00FF98  57                 	db	87	;'W'
   791  00FF99  2F                 	db	47
   792  00FF9A  20                 	db	32
   793  00FF9B  43                 	db	67	;'C'
   794  00FF9C  41                 	db	65	;'A'
   795  00FF9D  50                 	db	80	;'P'
   796  00FF9E  3A                 	db	58	;':'
   797  00FF9F  20                 	db	32
   798  00FFA0  25                 	db	37
   799  00FFA1  64                 	db	100	;'d'
   800  00FFA2  20                 	db	32
   801  00FFA3  20                 	db	32
   802  00FFA4  00                 	db	0
   803  00FFA5                     STR_12:
   804  00FFA5  59                 	db	89	;'Y'
   805  00FFA6  4F                 	db	79	;'O'
   806  00FFA7  50                 	db	80	;'P'
   807  00FFA8  20                 	db	32
   808  00FFA9  4E                 	db	78	;'N'
   809  00FFAA  4F                 	db	79	;'O'
   810  00FFAB  20                 	db	32
   811  00FFAC  43                 	db	67	;'C'
   812  00FFAD  41                 	db	65	;'A'
   813  00FFAE  50                 	db	80	;'P'
   814  00FFAF  3A                 	db	58	;':'
   815  00FFB0  20                 	db	32
   816  00FFB1  25                 	db	37
   817  00FFB2  64                 	db	100	;'d'
   818  00FFB3  20                 	db	32
   819  00FFB4  20                 	db	32
   820  00FFB5  00                 	db	0
   821  00FFB6                     STR_13:
   822  00FFB6  45                 	db	69	;'E'
   823  00FFB7  53                 	db	83	;'S'
   824  00FFB8  4B                 	db	75	;'K'
   825  00FFB9  41                 	db	65	;'A'
   826  00FFBA  20                 	db	32
   827  00FFBB  57                 	db	87	;'W'
   828  00FFBC  2F                 	db	47
   829  00FFBD  20                 	db	32
   830  00FFBE  43                 	db	67	;'C'
   831  00FFBF  41                 	db	65	;'A'
   832  00FFC0  50                 	db	80	;'P'
   833  00FFC1  3A                 	db	58	;':'
   834  00FFC2  20                 	db	32
   835  00FFC3  25                 	db	37
   836  00FFC4  64                 	db	100	;'d'
   837  00FFC5  20                 	db	32
   838  00FFC6  00                 	db	0
   839  00FFC7                     STR_14:
   840  00FFC7  45                 	db	69	;'E'
   841  00FFC8  53                 	db	83	;'S'
   842  00FFC9  4B                 	db	75	;'K'
   843  00FFCA  41                 	db	65	;'A'
   844  00FFCB  20                 	db	32
   845  00FFCC  4E                 	db	78	;'N'
   846  00FFCD  4F                 	db	79	;'O'
   847  00FFCE  20                 	db	32
   848  00FFCF  43                 	db	67	;'C'
   849  00FFD0  41                 	db	65	;'A'
   850  00FFD1  50                 	db	80	;'P'
   851  00FFD2  3A                 	db	58	;':'
   852  00FFD3  20                 	db	32
   853  00FFD4  25                 	db	37
   854  00FFD5  64                 	db	100	;'d'
   855  00FFD6  20                 	db	32
   856  00FFD7  00                 	db	0
   857  00FFD8                     STR_15:
   858  00FFD8  45                 	db	69	;'E'
   859  00FFD9  52                 	db	82	;'R'
   860  00FFDA  52                 	db	82	;'R'
   861  00FFDB  3A                 	db	58	;':'
   862  00FFDC  20                 	db	32
   863  00FFDD  42                 	db	66	;'B'
   864  00FFDE  41                 	db	65	;'A'
   865  00FFDF  44                 	db	68	;'D'
   866  00FFE0  20                 	db	32
   867  00FFE1  42                 	db	66	;'B'
   868  00FFE2  54                 	db	84	;'T'
   869  00FFE3  4C                 	db	76	;'L'
   870  00FFE4  43                 	db	67	;'C'
   871  00FFE5  4E                 	db	78	;'N'
   872  00FFE6  54                 	db	84	;'T'
   873  00FFE7  00                 	db	0
   874  00FFE8                     STR_4:
   875  00FFE8  45                 	db	69	;'E'
   876  00FFE9  52                 	db	82	;'R'
   877  00FFEA  52                 	db	82	;'R'
   878  00FFEB  3A                 	db	58	;':'
   879  00FFEC  20                 	db	32
   880  00FFED  42                 	db	66	;'B'
   881  00FFEE  41                 	db	65	;'A'
   882  00FFEF  44                 	db	68	;'D'
   883  00FFF0  20                 	db	32
   884  00FFF1  49                 	db	73	;'I'
   885  00FFF2  53                 	db	83	;'S'
   886  00FFF3  52                 	db	82	;'R'
   887  00FFF4  00                 	db	0
   888  00FFF5                     STR_6:
   889  00FFF5  25                 	db	37
   890  00FFF6  64                 	db	100	;'d'
   891  00FFF7  20                 	db	32
   892  00FFF8  20                 	db	32
   893  00FFF9  20                 	db	32
   894  00FFFA  20                 	db	32
   895  00FFFB  20                 	db	32
   896  00FFFC  20                 	db	32
   897  00FFFD  00                 	db	0
   898  0000                     
   899                           ; #config settings
   900  00FFFE  00                 	db	0	; dummy byte at the end
   901  0000                     
   902                           	psect	cinit
   903  004F52                     __pcinit:
   904                           	opt stack 0
   905  004F52                     start_initialization:
   906                           	opt stack 0
   907  004F52                     __initialization:
   908                           	opt stack 0
   909                           
   910                           ; Initialize objects allocated to BANK1 (10 bytes)
   911                           ; load TBLPTR registers with __pidataBANK1
   912  004F52  0ED8               	movlw	low __pidataBANK1
   913  004F54  6EF6               	movwf	tblptrl,c
   914  004F56  0E54               	movlw	high __pidataBANK1
   915  004F58  6EF7               	movwf	tblptrh,c
   916  004F5A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   917  004F5C  6EF8               	movwf	tblptru,c
   918  004F5E  EE01  F072         	lfsr	0,__pdataBANK1
   919  004F62  EE10 F00A          	lfsr	1,10
   920  004F66                     copy_data0:
   921  004F66  0009               	tblrd		*+
   922  004F68  CFF5 FFEE          	movff	tablat,postinc0
   923  004F6C  50E5               	movf	postdec1,w,c
   924  004F6E  50E1               	movf	fsr1l,w,c
   925  004F70  E1FA               	bnz	copy_data0
   926                           
   927                           ; Clear objects allocated to BANK1 (73 bytes)
   928  004F72  EE01  F000         	lfsr	0,__pbssBANK1
   929  004F76  0E49               	movlw	73
   930  004F78                     clear_0:
   931  004F78  6AEE               	clrf	postinc0,c
   932  004F7A  06E8               	decf	wreg,f,c
   933  004F7C  E1FD               	bnz	clear_0
   934                           
   935                           ; Clear objects allocated to BANK0 (16 bytes)
   936  004F7E  EE00  F0DF         	lfsr	0,__pbssBANK0
   937  004F82  0E10               	movlw	16
   938  004F84                     clear_1:
   939  004F84  6AEE               	clrf	postinc0,c
   940  004F86  06E8               	decf	wreg,f,c
   941  004F88  E1FD               	bnz	clear_1
   942                           
   943                           ; Clear objects allocated to COMRAM (9 bytes)
   944  004F8A  EE00  F076         	lfsr	0,__pbssCOMRAM
   945  004F8E  0E09               	movlw	9
   946  004F90                     clear_2:
   947  004F90  6AEE               	clrf	postinc0,c
   948  004F92  06E8               	decf	wreg,f,c
   949  004F94  E1FD               	bnz	clear_2
   950  004F96                     end_of_initialization:
   951                           	opt stack 0
   952  004F96                     __end_of__initialization:
   953                           	opt stack 0
   954  004F96  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   955  004F98  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   956  004F9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   957  004F9C  6EF8               	movwf	tblptru,c
   958  004F9E  0100               	movlb	0
   959  004FA0  EF0B  F00D         	goto	_main	;jump to C main() function
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           fsr1l	equ	0xFE1
   968                           
   969                           	psect	bssCOMRAM
   970  000076                     __pbssCOMRAM:
   971                           	opt stack 0
   972  000076                     _end_time:
   973                           	opt stack 0
   974  000076                     	ds	2
   975  000078                     _j:
   976                           	opt stack 0
   977  000078                     	ds	2
   978  00007A                     _start_time:
   979                           	opt stack 0
   980  00007A                     	ds	2
   981  00007C                     _temp:
   982                           	opt stack 0
   983  00007C                     	ds	2
   984  00007E                     _servo0_flag:
   985                           	opt stack 0
   986  00007E                     	ds	1
   987                           tblptru	equ	0xFF8
   988                           tblptrh	equ	0xFF7
   989                           tblptrl	equ	0xFF6
   990                           tablat	equ	0xFF5
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           
   996                           	psect	bssBANK0
   997  0000DF                     __pbssBANK0:
   998                           	opt stack 0
   999  0000DF                     _bottle_count_array:
  1000                           	opt stack 0
  1001  0000DF                     	ds	10
  1002  0000E9                     _flag_picbug:
  1003                           	opt stack 0
  1004  0000E9                     	ds	2
  1005  0000EB                     _i:
  1006                           	opt stack 0
  1007  0000EB                     	ds	2
  1008  0000ED                     _curr_state:
  1009                           	opt stack 0
  1010  0000ED                     	ds	1
  1011  0000EE                     _servo1_flag:
  1012                           	opt stack 0
  1013  0000EE                     	ds	1
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           
  1023                           	psect	bssBANK1
  1024  000100                     __pbssBANK1:
  1025                           	opt stack 0
  1026  000100                     _color:
  1027                           	opt stack 0
  1028  000100                     	ds	8
  1029  000108                     _colorprev:
  1030                           	opt stack 0
  1031  000108                     	ds	8
  1032  000110                     _time:
  1033                           	opt stack 0
  1034  000110                     	ds	7
  1035  000117                     _color_high:
  1036                           	opt stack 0
  1037  000117                     	ds	4
  1038  00011B                     _color_low:
  1039                           	opt stack 0
  1040  00011B                     	ds	4
  1041  00011F                     _b:
  1042                           	opt stack 0
  1043  00011F                     	ds	3
  1044  000122                     _b_p:
  1045                           	opt stack 0
  1046  000122                     	ds	3
  1047  000125                     _r:
  1048                           	opt stack 0
  1049  000125                     	ds	3
  1050  000128                     _r_p:
  1051                           	opt stack 0
  1052  000128                     	ds	3
  1053  00012B                     _bottle_read_bot:
  1054                           	opt stack 0
  1055  00012B                     	ds	2
  1056  00012D                     _bottle_read_top:
  1057                           	opt stack 0
  1058  00012D                     	ds	2
  1059  00012F                     _errno:
  1060                           	opt stack 0
  1061  00012F                     	ds	2
  1062  000131                     _etime:
  1063                           	opt stack 0
  1064  000131                     	ds	2
  1065  000133                     _flag_bottle:
  1066                           	opt stack 0
  1067  000133                     	ds	2
  1068  000135                     _flag_bottle_high:
  1069                           	opt stack 0
  1070  000135                     	ds	2
  1071  000137                     _flag_eskaC:
  1072                           	opt stack 0
  1073  000137                     	ds	2
  1074  000139                     _flag_top_read:
  1075                           	opt stack 0
  1076  000139                     	ds	2
  1077  00013B                     _flag_yopNC:
  1078                           	opt stack 0
  1079  00013B                     	ds	2
  1080  00013D                     _operation_disp:
  1081                           	opt stack 0
  1082  00013D                     	ds	2
  1083  00013F                     _operation_time:
  1084                           	opt stack 0
  1085  00013F                     	ds	2
  1086  000141                     _operation_timeout:
  1087                           	opt stack 0
  1088  000141                     	ds	2
  1089  000143                     _servo0_timer:
  1090                           	opt stack 0
  1091  000143                     	ds	2
  1092  000145                     _servo1_timer:
  1093                           	opt stack 0
  1094  000145                     	ds	2
  1095  000147                     _stime:
  1096                           	opt stack 0
  1097  000147                     	ds	2
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1l	equ	0xFE1
  1106                           
  1107                           	psect	dataBANK1
  1108  000172                     __pdataBANK1:
  1109                           	opt stack 0
  1110  000172                     _bottle_count_disp:
  1111                           	opt stack 0
  1112  000172                     	ds	10
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           
  1122                           	psect	cstackBANK1
  1123  000149                     __pcstackBANK1:
  1124                           	opt stack 0
  1125  000149                     _exp$1415:
  1126                           	opt stack 0
  1127                           
  1128                           ; 3 bytes @ 0x0
  1129  000149                     	ds	3
  1130  00014C                     exp@exponent:
  1131                           	opt stack 0
  1132                           
  1133                           ; 2 bytes @ 0x3
  1134  00014C                     	ds	2
  1135  00014E                     exp@sign:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x5
  1139  00014E                     	ds	1
  1140  00014F                     ?_pow:
  1141                           	opt stack 0
  1142  00014F                     pow@x:
  1143                           	opt stack 0
  1144                           
  1145                           ; 3 bytes @ 0x6
  1146  00014F                     	ds	3
  1147  000152                     pow@y:
  1148                           	opt stack 0
  1149                           
  1150                           ; 3 bytes @ 0x9
  1151  000152                     	ds	3
  1152  000155                     _pow$1413:
  1153                           	opt stack 0
  1154                           
  1155                           ; 3 bytes @ 0xC
  1156  000155                     	ds	3
  1157  000158                     _pow$1414:
  1158                           	opt stack 0
  1159                           
  1160                           ; 3 bytes @ 0xF
  1161  000158                     	ds	3
  1162  00015B                     pow@sign:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x12
  1166  00015B                     	ds	1
  1167  00015C                     pow@yi:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x13
  1171  00015C                     	ds	4
  1172  000160                     _dec_to_hex$1410:
  1173                           	opt stack 0
  1174                           
  1175                           ; 3 bytes @ 0x17
  1176  000160                     	ds	3
  1177  000163                     _dec_to_hex$1411:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x1A
  1181  000163                     	ds	3
  1182  000166                     dec_to_hex@temp:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0x1D
  1186  000166                     	ds	2
  1187  000168                     dec_to_hex@i:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x1F
  1191  000168                     	ds	2
  1192  00016A                     dec_to_hex@hexnum:
  1193                           	opt stack 0
  1194                           
  1195                           ; 2 bytes @ 0x21
  1196  00016A                     	ds	2
  1197  00016C                     dec_to_hex@quotient:
  1198                           	opt stack 0
  1199                           
  1200                           ; 2 bytes @ 0x23
  1201  00016C                     	ds	2
  1202  00016E                     _operation$1412:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0x25
  1206  00016E                     	ds	2
  1207  000170                     ??_main:
  1208                           
  1209                           ; 1 bytes @ 0x27
  1210  000170                     	ds	2
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220                           	psect	cstackBANK0
  1221  000080                     __pcstackBANK0:
  1222                           	opt stack 0
  1223  000080                     ??_isr:
  1224                           
  1225                           ; 1 bytes @ 0x0
  1226  000080                     	ds	16
  1227  000090                     ??_isdigit:
  1228  000090                     ??_I2C_Master_Wait:
  1229  000090                     ?___wmul:
  1230                           	opt stack 0
  1231  000090                     ?___awdiv:
  1232                           	opt stack 0
  1233  000090                     ?___awmod:
  1234                           	opt stack 0
  1235  000090                     ?___lwdiv:
  1236                           	opt stack 0
  1237  000090                     ?___ftpack:
  1238                           	opt stack 0
  1239  000090                     ?_frexp:
  1240                           	opt stack 0
  1241  000090                     ?___ftneg:
  1242                           	opt stack 0
  1243  000090                     ?___lldiv:
  1244                           	opt stack 0
  1245  000090                     lcdNibble@temp:
  1246                           	opt stack 0
  1247  000090                     eeprom_readbyte@address:
  1248                           	opt stack 0
  1249  000090                     ___wmul@multiplier:
  1250                           	opt stack 0
  1251  000090                     ___awdiv@dividend:
  1252                           	opt stack 0
  1253  000090                     ___awmod@dividend:
  1254                           	opt stack 0
  1255  000090                     ___lwdiv@dividend:
  1256                           	opt stack 0
  1257  000090                     ___ftpack@arg:
  1258                           	opt stack 0
  1259  000090                     ___ftneg@f1:
  1260                           	opt stack 0
  1261  000090                     frexp@value:
  1262                           	opt stack 0
  1263  000090                     ___lldiv@dividend:
  1264                           	opt stack 0
  1265                           
  1266                           ; 4 bytes @ 0x10
  1267  000090                     	ds	1
  1268  000091                     I2C_Master_Read@a:
  1269                           	opt stack 0
  1270  000091                     lcdNibble@data:
  1271                           	opt stack 0
  1272  000091                     _isdigit$965:
  1273                           	opt stack 0
  1274  000091                     I2C_Master_Write@d:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x11
  1278  000091                     	ds	1
  1279  000092                     I2C_Master_Read@temp:
  1280                           	opt stack 0
  1281  000092                     lcdInst@data:
  1282                           	opt stack 0
  1283  000092                     putch@data:
  1284                           	opt stack 0
  1285  000092                     isdigit@c:
  1286                           	opt stack 0
  1287  000092                     eeprom_writebyte@address:
  1288                           	opt stack 0
  1289  000092                     ___wmul@multiplicand:
  1290                           	opt stack 0
  1291  000092                     ___awdiv@divisor:
  1292                           	opt stack 0
  1293  000092                     ___awmod@divisor:
  1294                           	opt stack 0
  1295  000092                     ___lwdiv@divisor:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x12
  1299  000092                     	ds	1
  1300  000093                     ??_read_colorsensor:
  1301  000093                     ??_I2C_ColorSens_Init:
  1302  000093                     ??_initLCD:
  1303  000093                     read_time@i:
  1304                           	opt stack 0
  1305  000093                     ___ftpack@exp:
  1306                           	opt stack 0
  1307  000093                     frexp@eptr:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x13
  1311  000093                     	ds	1
  1312  000094                     eeprom_writebyte@data:
  1313                           	opt stack 0
  1314  000094                     ___awdiv@counter:
  1315                           	opt stack 0
  1316  000094                     ___awmod@counter:
  1317                           	opt stack 0
  1318  000094                     ___ftpack@sign:
  1319                           	opt stack 0
  1320  000094                     ___wmul@product:
  1321                           	opt stack 0
  1322  000094                     ___lwdiv@quotient:
  1323                           	opt stack 0
  1324  000094                     ___lldiv@divisor:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x14
  1328  000094                     	ds	1
  1329  000095                     ??___ftpack:
  1330  000095                     ??_frexp:
  1331  000095                     ___awdiv@sign:
  1332                           	opt stack 0
  1333  000095                     ___awmod@sign:
  1334                           	opt stack 0
  1335                           
  1336                           ; 1 bytes @ 0x15
  1337  000095                     	ds	1
  1338  000096                     ___lwdiv@counter:
  1339                           	opt stack 0
  1340  000096                     ___awdiv@quotient:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x16
  1344  000096                     	ds	1
  1345  000097                     ?___lwmod:
  1346                           	opt stack 0
  1347  000097                     ___lwmod@dividend:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x17
  1351  000097                     	ds	1
  1352  000098                     ?___ftdiv:
  1353                           	opt stack 0
  1354  000098                     ?___awtoft:
  1355                           	opt stack 0
  1356  000098                     ?___lltoft:
  1357                           	opt stack 0
  1358  000098                     ?___lwtoft:
  1359                           	opt stack 0
  1360  000098                     ___awtoft@c:
  1361                           	opt stack 0
  1362  000098                     ___lwtoft@c:
  1363                           	opt stack 0
  1364  000098                     ___ftdiv@f1:
  1365                           	opt stack 0
  1366  000098                     ___lldiv@quotient:
  1367                           	opt stack 0
  1368  000098                     ___lltoft@c:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x18
  1372  000098                     	ds	1
  1373  000099                     ___lwmod@divisor:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x19
  1377  000099                     	ds	2
  1378  00009B                     ___awtoft@sign:
  1379                           	opt stack 0
  1380  00009B                     ___lwmod@counter:
  1381                           	opt stack 0
  1382  00009B                     ___ftdiv@f2:
  1383                           	opt stack 0
  1384                           
  1385                           ; 3 bytes @ 0x1B
  1386  00009B                     	ds	1
  1387  00009C                     ??___lltoft:
  1388  00009C                     ?_printf:
  1389                           	opt stack 0
  1390  00009C                     ?___ftmul:
  1391                           	opt stack 0
  1392  00009C                     ___lldiv@counter:
  1393                           	opt stack 0
  1394  00009C                     printf@f:
  1395                           	opt stack 0
  1396  00009C                     ___ftmul@f1:
  1397                           	opt stack 0
  1398                           
  1399                           ; 3 bytes @ 0x1C
  1400  00009C                     	ds	1
  1401  00009D                     I2C_Master_Init@c:
  1402                           	opt stack 0
  1403                           
  1404                           ; 4 bytes @ 0x1D
  1405  00009D                     	ds	1
  1406  00009E                     ??___ftdiv:
  1407                           
  1408                           ; 1 bytes @ 0x1E
  1409  00009E                     	ds	1
  1410  00009F                     ___ftmul@f2:
  1411                           	opt stack 0
  1412                           
  1413                           ; 3 bytes @ 0x1F
  1414  00009F                     	ds	1
  1415  0000A0                     ___lltoft@exp:
  1416                           	opt stack 0
  1417                           
  1418                           ; 1 bytes @ 0x20
  1419  0000A0                     	ds	1
  1420  0000A1                     ??_I2C_Master_Init:
  1421  0000A1                     ___ftdiv@cntr:
  1422                           	opt stack 0
  1423                           
  1424                           ; 1 bytes @ 0x21
  1425  0000A1                     	ds	1
  1426  0000A2                     ??___ftmul:
  1427  0000A2                     ___ftdiv@f3:
  1428                           	opt stack 0
  1429                           
  1430                           ; 3 bytes @ 0x22
  1431  0000A2                     	ds	2
  1432  0000A4                     ??_printf:
  1433                           
  1434                           ; 1 bytes @ 0x24
  1435  0000A4                     	ds	1
  1436  0000A5                     ___ftdiv@exp:
  1437                           	opt stack 0
  1438  0000A5                     ___ftmul@exp:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x25
  1442  0000A5                     	ds	1
  1443  0000A6                     ___ftdiv@sign:
  1444                           	opt stack 0
  1445  0000A6                     ___ftmul@f3_as_product:
  1446                           	opt stack 0
  1447                           
  1448                           ; 3 bytes @ 0x26
  1449  0000A6                     	ds	1
  1450  0000A7                     ___ftge@ff1:
  1451                           	opt stack 0
  1452                           
  1453                           ; 3 bytes @ 0x27
  1454  0000A7                     	ds	1
  1455  0000A8                     printf@idx:
  1456                           	opt stack 0
  1457                           
  1458                           ; 1 bytes @ 0x28
  1459  0000A8                     	ds	1
  1460  0000A9                     ___ftmul@cntr:
  1461                           	opt stack 0
  1462  0000A9                     printf@ap:
  1463                           	opt stack 0
  1464                           
  1465                           ; 2 bytes @ 0x29
  1466  0000A9                     	ds	1
  1467  0000AA                     ___ftmul@sign:
  1468                           	opt stack 0
  1469  0000AA                     ___ftge@ff2:
  1470                           	opt stack 0
  1471                           
  1472                           ; 3 bytes @ 0x2A
  1473  0000AA                     	ds	1
  1474  0000AB                     ?___ftadd:
  1475                           	opt stack 0
  1476  0000AB                     printf@prec:
  1477                           	opt stack 0
  1478  0000AB                     ___ftadd@f1:
  1479                           	opt stack 0
  1480                           
  1481                           ; 3 bytes @ 0x2B
  1482  0000AB                     	ds	1
  1483  0000AC                     printf@val:
  1484                           	opt stack 0
  1485                           
  1486                           ; 2 bytes @ 0x2C
  1487  0000AC                     	ds	1
  1488  0000AD                     ??___ftge:
  1489                           
  1490                           ; 1 bytes @ 0x2D
  1491  0000AD                     	ds	1
  1492  0000AE                     printf@flag:
  1493                           	opt stack 0
  1494  0000AE                     ___ftadd@f2:
  1495                           	opt stack 0
  1496                           
  1497                           ; 3 bytes @ 0x2E
  1498  0000AE                     	ds	1
  1499  0000AF                     printf@width:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x2F
  1503  0000AF                     	ds	2
  1504  0000B1                     ??___ftadd:
  1505  0000B1                     printf@c:
  1506                           	opt stack 0
  1507                           
  1508                           ; 1 bytes @ 0x31
  1509  0000B1                     	ds	1
  1510  0000B2                     date_time@i:
  1511                           	opt stack 0
  1512                           
  1513                           ; 1 bytes @ 0x32
  1514  0000B2                     	ds	2
  1515  0000B4                     ___ftadd@sign:
  1516                           	opt stack 0
  1517                           
  1518                           ; 1 bytes @ 0x34
  1519  0000B4                     	ds	1
  1520  0000B5                     ___ftadd@exp2:
  1521                           	opt stack 0
  1522                           
  1523                           ; 1 bytes @ 0x35
  1524  0000B5                     	ds	1
  1525  0000B6                     ___ftadd@exp1:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0x36
  1529  0000B6                     	ds	1
  1530  0000B7                     ?___ftsub:
  1531                           	opt stack 0
  1532  0000B7                     ?_eval_poly:
  1533                           	opt stack 0
  1534  0000B7                     ?___fttol:
  1535                           	opt stack 0
  1536  0000B7                     ___ftsub@f1:
  1537                           	opt stack 0
  1538  0000B7                     ___fttol@f1:
  1539                           	opt stack 0
  1540  0000B7                     eval_poly@x:
  1541                           	opt stack 0
  1542                           
  1543                           ; 3 bytes @ 0x37
  1544  0000B7                     	ds	3
  1545  0000BA                     eval_poly@d:
  1546                           	opt stack 0
  1547  0000BA                     ___ftsub@f2:
  1548                           	opt stack 0
  1549                           
  1550                           ; 3 bytes @ 0x3A
  1551  0000BA                     	ds	1
  1552  0000BB                     ??___fttol:
  1553                           
  1554                           ; 1 bytes @ 0x3B
  1555  0000BB                     	ds	1
  1556  0000BC                     eval_poly@n:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0x3C
  1560  0000BC                     	ds	1
  1561  0000BD                     
  1562                           ; 1 bytes @ 0x3D
  1563  0000BD                     	ds	1
  1564  0000BE                     ??_eval_poly:
  1565                           
  1566                           ; 1 bytes @ 0x3E
  1567  0000BE                     	ds	2
  1568  0000C0                     ___fttol@sign1:
  1569                           	opt stack 0
  1570  0000C0                     eval_poly@res:
  1571                           	opt stack 0
  1572                           
  1573                           ; 3 bytes @ 0x40
  1574  0000C0                     	ds	1
  1575  0000C1                     ___fttol@lval:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x41
  1579  0000C1                     	ds	2
  1580  0000C3                     ?_log:
  1581                           	opt stack 0
  1582  0000C3                     ?_ldexp:
  1583                           	opt stack 0
  1584  0000C3                     ldexp@value:
  1585                           	opt stack 0
  1586  0000C3                     log@x:
  1587                           	opt stack 0
  1588                           
  1589                           ; 3 bytes @ 0x43
  1590  0000C3                     	ds	2
  1591  0000C5                     ___fttol@exp1:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0x45
  1595  0000C5                     	ds	1
  1596  0000C6                     ?___altoft:
  1597                           	opt stack 0
  1598  0000C6                     ldexp@newexp:
  1599                           	opt stack 0
  1600  0000C6                     log@exponent:
  1601                           	opt stack 0
  1602  0000C6                     ___altoft@c:
  1603                           	opt stack 0
  1604                           
  1605                           ; 4 bytes @ 0x46
  1606  0000C6                     	ds	2
  1607  0000C8                     ??_ldexp:
  1608                           
  1609                           ; 1 bytes @ 0x48
  1610  0000C8                     	ds	2
  1611  0000CA                     ??___altoft:
  1612                           
  1613                           ; 1 bytes @ 0x4A
  1614  0000CA                     	ds	4
  1615  0000CE                     ___altoft@exp:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0x4E
  1619  0000CE                     	ds	1
  1620  0000CF                     ___altoft@sign:
  1621                           	opt stack 0
  1622                           
  1623                           ; 1 bytes @ 0x4F
  1624  0000CF                     	ds	1
  1625  0000D0                     ?_floor:
  1626                           	opt stack 0
  1627  0000D0                     floor@x:
  1628                           	opt stack 0
  1629                           
  1630                           ; 3 bytes @ 0x50
  1631  0000D0                     	ds	3
  1632  0000D3                     floor@i:
  1633                           	opt stack 0
  1634                           
  1635                           ; 3 bytes @ 0x53
  1636  0000D3                     	ds	3
  1637  0000D6                     floor@expon:
  1638                           	opt stack 0
  1639                           
  1640                           ; 2 bytes @ 0x56
  1641  0000D6                     	ds	2
  1642  0000D8                     ?_exp:
  1643                           	opt stack 0
  1644  0000D8                     exp@x:
  1645                           	opt stack 0
  1646                           
  1647                           ; 3 bytes @ 0x58
  1648  0000D8                     	ds	3
  1649  0000DB                     ?_dec_to_hex:
  1650                           	opt stack 0
  1651  0000DB                     dec_to_hex@num:
  1652                           	opt stack 0
  1653                           
  1654                           ; 2 bytes @ 0x5B
  1655  0000DB                     	ds	2
  1656  0000DD                     ??_operation:
  1657  0000DD                     
  1658                           ; 1 bytes @ 0x5D
  1659  0000DD                     	ds	2
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           postinc0	equ	0xFEE
  1665                           wreg	equ	0xFE8
  1666                           postdec1	equ	0xFE5
  1667                           fsr1l	equ	0xFE1
  1668                           
  1669                           	psect	cstackCOMRAM
  1670  000001                     __pcstackCOMRAM:
  1671                           	opt stack 0
  1672  000001                     ??i2_I2C_Master_Wait:
  1673  000001                     ??i2_isdigit:
  1674  000001                     ?i2___wmul:
  1675                           	opt stack 0
  1676  000001                     ?i2___awdiv:
  1677                           	opt stack 0
  1678  000001                     ?i2___lwdiv:
  1679                           	opt stack 0
  1680  000001                     ?i2___ftpack:
  1681                           	opt stack 0
  1682  000001                     ?i2___ftneg:
  1683                           	opt stack 0
  1684  000001                     ?i2_frexp:
  1685                           	opt stack 0
  1686  000001                     i2lcdNibble@temp:
  1687                           	opt stack 0
  1688  000001                     i2eeprom_readbyte@address:
  1689                           	opt stack 0
  1690  000001                     i2___wmul@multiplier:
  1691                           	opt stack 0
  1692  000001                     i2___awdiv@dividend:
  1693                           	opt stack 0
  1694  000001                     i2___lwdiv@dividend:
  1695                           	opt stack 0
  1696  000001                     i2___ftpack@arg:
  1697                           	opt stack 0
  1698  000001                     i2___ftge@ff1:
  1699                           	opt stack 0
  1700  000001                     i2___ftneg@f1:
  1701                           	opt stack 0
  1702  000001                     i2frexp@value:
  1703                           	opt stack 0
  1704                           
  1705                           ; 3 bytes @ 0x0
  1706  000001                     	ds	1
  1707  000002                     i2I2C_Master_Read@a:
  1708                           	opt stack 0
  1709  000002                     i2lcdNibble@data:
  1710                           	opt stack 0
  1711  000002                     i2_isdigit$965:
  1712                           	opt stack 0
  1713  000002                     i2I2C_Master_Write@d:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0x1
  1717  000002                     	ds	1
  1718  000003                     i2I2C_Master_Read@temp:
  1719                           	opt stack 0
  1720  000003                     i2lcdInst@data:
  1721                           	opt stack 0
  1722  000003                     i2putch@data:
  1723                           	opt stack 0
  1724  000003                     i2isdigit@c:
  1725                           	opt stack 0
  1726  000003                     i2eeprom_writebyte@address:
  1727                           	opt stack 0
  1728  000003                     i2___wmul@multiplicand:
  1729                           	opt stack 0
  1730  000003                     i2___awdiv@divisor:
  1731                           	opt stack 0
  1732  000003                     i2___lwdiv@divisor:
  1733                           	opt stack 0
  1734                           
  1735                           ; 2 bytes @ 0x2
  1736  000003                     	ds	1
  1737  000004                     ??i2_read_colorsensor:
  1738  000004                     i2read_time@i:
  1739                           	opt stack 0
  1740  000004                     i2___ftpack@exp:
  1741                           	opt stack 0
  1742  000004                     i2frexp@eptr:
  1743                           	opt stack 0
  1744  000004                     i2___ftge@ff2:
  1745                           	opt stack 0
  1746                           
  1747                           ; 3 bytes @ 0x3
  1748  000004                     	ds	1
  1749  000005                     i2eeprom_writebyte@data:
  1750                           	opt stack 0
  1751  000005                     i2___awdiv@counter:
  1752                           	opt stack 0
  1753  000005                     i2___ftpack@sign:
  1754                           	opt stack 0
  1755  000005                     i2___wmul@product:
  1756                           	opt stack 0
  1757  000005                     i2___lwdiv@quotient:
  1758                           	opt stack 0
  1759                           
  1760                           ; 2 bytes @ 0x4
  1761  000005                     	ds	1
  1762  000006                     ??i2___ftpack:
  1763  000006                     ??i2_frexp:
  1764  000006                     i2___awdiv@sign:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x5
  1768  000006                     	ds	1
  1769  000007                     ??i2___ftge:
  1770  000007                     i2___lwdiv@counter:
  1771                           	opt stack 0
  1772  000007                     i2___awdiv@quotient:
  1773                           	opt stack 0
  1774                           
  1775                           ; 2 bytes @ 0x6
  1776  000007                     	ds	1
  1777  000008                     ?i2___lwmod:
  1778                           	opt stack 0
  1779  000008                     i2___lwmod@dividend:
  1780                           	opt stack 0
  1781                           
  1782                           ; 2 bytes @ 0x7
  1783  000008                     	ds	1
  1784  000009                     ?i2___awtoft:
  1785                           	opt stack 0
  1786  000009                     ?i2___ftdiv:
  1787                           	opt stack 0
  1788  000009                     ?i2___lltoft:
  1789                           	opt stack 0
  1790  000009                     i2___awtoft@c:
  1791                           	opt stack 0
  1792  000009                     i2___ftdiv@f1:
  1793                           	opt stack 0
  1794  000009                     i2___lltoft@c:
  1795                           	opt stack 0
  1796                           
  1797                           ; 4 bytes @ 0x8
  1798  000009                     	ds	1
  1799  00000A                     i2___lwmod@divisor:
  1800                           	opt stack 0
  1801                           
  1802                           ; 2 bytes @ 0x9
  1803  00000A                     	ds	2
  1804  00000C                     i2___awtoft@sign:
  1805                           	opt stack 0
  1806  00000C                     i2___lwmod@counter:
  1807                           	opt stack 0
  1808  00000C                     i2___ftdiv@f2:
  1809                           	opt stack 0
  1810                           
  1811                           ; 3 bytes @ 0xB
  1812  00000C                     	ds	1
  1813  00000D                     ??i2___lltoft:
  1814  00000D                     ?i2_printf:
  1815                           	opt stack 0
  1816  00000D                     ?i2___ftmul:
  1817                           	opt stack 0
  1818  00000D                     i2printf@f:
  1819                           	opt stack 0
  1820  00000D                     i2___ftmul@f1:
  1821                           	opt stack 0
  1822                           
  1823                           ; 3 bytes @ 0xC
  1824  00000D                     	ds	2
  1825  00000F                     ??i2___ftdiv:
  1826                           
  1827                           ; 1 bytes @ 0xE
  1828  00000F                     	ds	1
  1829  000010                     i2___ftmul@f2:
  1830                           	opt stack 0
  1831                           
  1832                           ; 3 bytes @ 0xF
  1833  000010                     	ds	1
  1834  000011                     i2___lltoft@exp:
  1835                           	opt stack 0
  1836                           
  1837                           ; 1 bytes @ 0x10
  1838  000011                     	ds	1
  1839  000012                     i2___ftdiv@cntr:
  1840                           	opt stack 0
  1841                           
  1842                           ; 1 bytes @ 0x11
  1843  000012                     	ds	1
  1844  000013                     ??i2_printf:
  1845  000013                     ??i2___ftmul:
  1846  000013                     i2___ftdiv@f3:
  1847                           	opt stack 0
  1848                           
  1849                           ; 3 bytes @ 0x12
  1850  000013                     	ds	3
  1851  000016                     i2___ftdiv@exp:
  1852                           	opt stack 0
  1853  000016                     i2___ftmul@exp:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x15
  1857  000016                     	ds	1
  1858  000017                     i2printf@idx:
  1859                           	opt stack 0
  1860  000017                     i2___ftdiv@sign:
  1861                           	opt stack 0
  1862  000017                     i2___ftmul@f3_as_product:
  1863                           	opt stack 0
  1864                           
  1865                           ; 3 bytes @ 0x16
  1866  000017                     	ds	1
  1867  000018                     i2printf@ap:
  1868                           	opt stack 0
  1869                           
  1870                           ; 2 bytes @ 0x17
  1871  000018                     	ds	2
  1872  00001A                     i2printf@prec:
  1873                           	opt stack 0
  1874  00001A                     i2___ftmul@cntr:
  1875                           	opt stack 0
  1876                           
  1877                           ; 1 bytes @ 0x19
  1878  00001A                     	ds	1
  1879  00001B                     i2___ftmul@sign:
  1880                           	opt stack 0
  1881  00001B                     i2printf@val:
  1882                           	opt stack 0
  1883                           
  1884                           ; 2 bytes @ 0x1A
  1885  00001B                     	ds	1
  1886  00001C                     ?i2___ftadd:
  1887                           	opt stack 0
  1888  00001C                     i2___ftadd@f1:
  1889                           	opt stack 0
  1890                           
  1891                           ; 3 bytes @ 0x1B
  1892  00001C                     	ds	1
  1893  00001D                     i2printf@flag:
  1894                           	opt stack 0
  1895                           
  1896                           ; 1 bytes @ 0x1C
  1897  00001D                     	ds	1
  1898  00001E                     i2printf@width:
  1899                           	opt stack 0
  1900                           
  1901                           ; 2 bytes @ 0x1D
  1902  00001E                     	ds	1
  1903  00001F                     i2___ftadd@f2:
  1904                           	opt stack 0
  1905                           
  1906                           ; 3 bytes @ 0x1E
  1907  00001F                     	ds	1
  1908  000020                     i2printf@c:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x1F
  1912  000020                     	ds	2
  1913  000022                     ??i2___ftadd:
  1914                           
  1915                           ; 1 bytes @ 0x21
  1916  000022                     	ds	3
  1917  000025                     i2___ftadd@sign:
  1918                           	opt stack 0
  1919                           
  1920                           ; 1 bytes @ 0x24
  1921  000025                     	ds	1
  1922  000026                     i2___ftadd@exp2:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x25
  1926  000026                     	ds	1
  1927  000027                     i2___ftadd@exp1:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x26
  1931  000027                     	ds	1
  1932  000028                     ?i2___ftsub:
  1933                           	opt stack 0
  1934  000028                     ?i2_eval_poly:
  1935                           	opt stack 0
  1936  000028                     ?i2___fttol:
  1937                           	opt stack 0
  1938  000028                     i2___ftsub@f1:
  1939                           	opt stack 0
  1940  000028                     i2___fttol@f1:
  1941                           	opt stack 0
  1942  000028                     i2eval_poly@x:
  1943                           	opt stack 0
  1944                           
  1945                           ; 3 bytes @ 0x27
  1946  000028                     	ds	3
  1947  00002B                     i2eval_poly@d:
  1948                           	opt stack 0
  1949  00002B                     i2___ftsub@f2:
  1950                           	opt stack 0
  1951                           
  1952                           ; 3 bytes @ 0x2A
  1953  00002B                     	ds	1
  1954  00002C                     ??i2___fttol:
  1955                           
  1956                           ; 1 bytes @ 0x2B
  1957  00002C                     	ds	1
  1958  00002D                     i2eval_poly@n:
  1959                           	opt stack 0
  1960                           
  1961                           ; 2 bytes @ 0x2C
  1962  00002D                     	ds	1
  1963  00002E                     
  1964                           ; 1 bytes @ 0x2D
  1965  00002E                     	ds	1
  1966  00002F                     ??i2_eval_poly:
  1967                           
  1968                           ; 1 bytes @ 0x2E
  1969  00002F                     	ds	2
  1970  000031                     i2___fttol@sign1:
  1971                           	opt stack 0
  1972  000031                     i2eval_poly@res:
  1973                           	opt stack 0
  1974                           
  1975                           ; 3 bytes @ 0x30
  1976  000031                     	ds	1
  1977  000032                     i2___fttol@lval:
  1978                           	opt stack 0
  1979                           
  1980                           ; 4 bytes @ 0x31
  1981  000032                     	ds	2
  1982  000034                     ?i2_ldexp:
  1983                           	opt stack 0
  1984  000034                     ?i2_log:
  1985                           	opt stack 0
  1986  000034                     i2ldexp@value:
  1987                           	opt stack 0
  1988  000034                     i2log@x:
  1989                           	opt stack 0
  1990                           
  1991                           ; 3 bytes @ 0x33
  1992  000034                     	ds	2
  1993  000036                     i2___fttol@exp1:
  1994                           	opt stack 0
  1995                           
  1996                           ; 1 bytes @ 0x35
  1997  000036                     	ds	1
  1998  000037                     ?i2___altoft:
  1999                           	opt stack 0
  2000  000037                     i2ldexp@newexp:
  2001                           	opt stack 0
  2002  000037                     i2log@exponent:
  2003                           	opt stack 0
  2004  000037                     i2___altoft@c:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x36
  2008  000037                     	ds	2
  2009  000039                     ??i2_ldexp:
  2010                           
  2011                           ; 1 bytes @ 0x38
  2012  000039                     	ds	2
  2013  00003B                     ??i2___altoft:
  2014                           
  2015                           ; 1 bytes @ 0x3A
  2016  00003B                     	ds	4
  2017  00003F                     i2___altoft@exp:
  2018                           	opt stack 0
  2019                           
  2020                           ; 1 bytes @ 0x3E
  2021  00003F                     	ds	1
  2022  000040                     i2___altoft@sign:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x3F
  2026  000040                     	ds	1
  2027  000041                     ?i2_floor:
  2028                           	opt stack 0
  2029  000041                     i2floor@x:
  2030                           	opt stack 0
  2031                           
  2032                           ; 3 bytes @ 0x40
  2033  000041                     	ds	3
  2034  000044                     i2floor@expon:
  2035                           	opt stack 0
  2036                           
  2037                           ; 2 bytes @ 0x43
  2038  000044                     	ds	2
  2039  000046                     i2floor@i:
  2040                           	opt stack 0
  2041                           
  2042                           ; 3 bytes @ 0x45
  2043  000046                     	ds	3
  2044  000049                     ?i2_exp:
  2045                           	opt stack 0
  2046  000049                     i2exp@x:
  2047                           	opt stack 0
  2048                           
  2049                           ; 3 bytes @ 0x48
  2050  000049                     	ds	3
  2051  00004C                     i2_exp$1679:
  2052                           	opt stack 0
  2053                           
  2054                           ; 3 bytes @ 0x4B
  2055  00004C                     	ds	3
  2056  00004F                     i2exp@exponent:
  2057                           	opt stack 0
  2058                           
  2059                           ; 2 bytes @ 0x4E
  2060  00004F                     	ds	2
  2061  000051                     i2exp@sign:
  2062                           	opt stack 0
  2063                           
  2064                           ; 1 bytes @ 0x50
  2065  000051                     	ds	1
  2066  000052                     ?i2_pow:
  2067                           	opt stack 0
  2068  000052                     i2pow@x:
  2069                           	opt stack 0
  2070                           
  2071                           ; 3 bytes @ 0x51
  2072  000052                     	ds	3
  2073  000055                     i2pow@y:
  2074                           	opt stack 0
  2075                           
  2076                           ; 3 bytes @ 0x54
  2077  000055                     	ds	3
  2078  000058                     i2_pow$1677:
  2079                           	opt stack 0
  2080                           
  2081                           ; 3 bytes @ 0x57
  2082  000058                     	ds	3
  2083  00005B                     i2_pow$1678:
  2084                           	opt stack 0
  2085                           
  2086                           ; 3 bytes @ 0x5A
  2087  00005B                     	ds	3
  2088  00005E                     i2pow@sign:
  2089                           	opt stack 0
  2090                           
  2091                           ; 1 bytes @ 0x5D
  2092  00005E                     	ds	1
  2093  00005F                     i2pow@yi:
  2094                           	opt stack 0
  2095                           
  2096                           ; 4 bytes @ 0x5E
  2097  00005F                     	ds	4
  2098  000063                     ?i2_dec_to_hex:
  2099                           	opt stack 0
  2100  000063                     i2dec_to_hex@num:
  2101                           	opt stack 0
  2102                           
  2103                           ; 2 bytes @ 0x62
  2104  000063                     	ds	2
  2105  000065                     i2_dec_to_hex$1675:
  2106                           	opt stack 0
  2107                           
  2108                           ; 3 bytes @ 0x64
  2109  000065                     	ds	3
  2110  000068                     i2_dec_to_hex$1676:
  2111                           	opt stack 0
  2112                           
  2113                           ; 3 bytes @ 0x67
  2114  000068                     	ds	3
  2115  00006B                     i2dec_to_hex@temp:
  2116                           	opt stack 0
  2117                           
  2118                           ; 2 bytes @ 0x6A
  2119  00006B                     	ds	2
  2120  00006D                     i2dec_to_hex@i:
  2121                           	opt stack 0
  2122                           
  2123                           ; 2 bytes @ 0x6C
  2124  00006D                     	ds	2
  2125  00006F                     i2dec_to_hex@hexnum:
  2126                           	opt stack 0
  2127                           
  2128                           ; 2 bytes @ 0x6E
  2129  00006F                     	ds	2
  2130  000071                     i2dec_to_hex@quotient:
  2131                           	opt stack 0
  2132                           
  2133                           ; 2 bytes @ 0x70
  2134  000071                     	ds	2
  2135  000073                     isr@i:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x72
  2139  000073                     	ds	1
  2140  000074                     _isr$1674:
  2141                           	opt stack 0
  2142                           
  2143                           ; 2 bytes @ 0x73
  2144  000074                     	ds	2
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           postinc0	equ	0xFEE
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1l	equ	0xFE1
  2153                           
  2154 ;;
  2155 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2156 ;;
  2157 ;; *************** function _main *****************
  2158 ;; Defined at:
  2159 ;;		line 18 in file "main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels required when called:   14
  2179 ;; This function calls:
  2180 ;;		_I2C_ColorSens_Init
  2181 ;;		_I2C_Master_Init
  2182 ;;		_bottle_count
  2183 ;;		_bottle_count1
  2184 ;;		_bottle_count2
  2185 ;;		_bottle_count3
  2186 ;;		_bottle_count4
  2187 ;;		_bottle_time
  2188 ;;		_date_time
  2189 ;;		_eeprom_writebyte
  2190 ;;		_emergencystop
  2191 ;;		_initLCD
  2192 ;;		_operation
  2193 ;;		_operationend
  2194 ;;		_standby
  2195 ;; This function is called by:
  2196 ;;		Startup code after reset
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text0
  2201  001A16                     __ptext0:
  2202                           	opt stack 0
  2203  001A16                     _main:
  2204                           	opt stack 17
  2205                           
  2206                           ;main.c: 25: TRISA = 0b11111011;
  2207                           
  2208                           ;incstack = 0
  2209  001A16  0EFB               	movlw	251
  2210  001A18  6E92               	movwf	3986,c	;volatile
  2211                           
  2212                           ;main.c: 26: TRISB = 0xFF;
  2213  001A1A  6893               	setf	3987,c	;volatile
  2214                           
  2215                           ;main.c: 27: TRISC = 0x00;
  2216  001A1C  0E00               	movlw	0
  2217  001A1E  6E94               	movwf	3988,c	;volatile
  2218                           
  2219                           ;main.c: 28: TRISD = 0x00;
  2220  001A20  0E00               	movlw	0
  2221  001A22  6E95               	movwf	3989,c	;volatile
  2222                           
  2223                           ;main.c: 29: TRISE = 0x00;
  2224  001A24  0E00               	movlw	0
  2225  001A26  6E96               	movwf	3990,c	;volatile
  2226                           
  2227                           ;main.c: 31: LATA = 0x00;
  2228  001A28  0E00               	movlw	0
  2229  001A2A  6E89               	movwf	3977,c	;volatile
  2230                           
  2231                           ;main.c: 32: LATB = 0x00;
  2232  001A2C  0E00               	movlw	0
  2233  001A2E  6E8A               	movwf	3978,c	;volatile
  2234                           
  2235                           ;main.c: 33: LATC = 0x00;
  2236  001A30  0E00               	movlw	0
  2237  001A32  6E8B               	movwf	3979,c	;volatile
  2238                           
  2239                           ;main.c: 34: LATD = 0x00;
  2240  001A34  0E00               	movlw	0
  2241  001A36  6E8C               	movwf	3980,c	;volatile
  2242                           
  2243                           ;main.c: 35: LATE = 0x00;
  2244  001A38  0E00               	movlw	0
  2245  001A3A  6E8D               	movwf	3981,c	;volatile
  2246                           
  2247                           ;main.c: 37: ADCON0 = 0x00;
  2248  001A3C  0E00               	movlw	0
  2249  001A3E  6EC2               	movwf	4034,c	;volatile
  2250                           
  2251                           ;main.c: 38: ADCON1 = 0xFF;
  2252  001A40  68C1               	setf	4033,c	;volatile
  2253                           
  2254                           ;main.c: 41: GIE = 1;
  2255  001A42  8EF2               	bsf	intcon,7,c	;volatile
  2256                           
  2257                           ;main.c: 42: PEIE = 1;
  2258  001A44  8CF2               	bsf	intcon,6,c	;volatile
  2259                           
  2260                           ;main.c: 43: INT1IE = 1;
  2261  001A46  86F0               	bsf	intcon3,3,c	;volatile
  2262                           
  2263                           ;main.c: 44: INT0IE = 0;
  2264  001A48  98F2               	bcf	intcon,4,c	;volatile
  2265                           
  2266                           ;main.c: 45: INT2IE = 0;
  2267  001A4A  98F0               	bcf	intcon3,4,c	;volatile
  2268                           
  2269                           ;main.c: 47: nRBPU = 0;
  2270  001A4C  9EF1               	bcf	intcon2,7,c	;volatile
  2271                           
  2272                           ;main.c: 49: initLCD();
  2273  001A4E  ECFB  F027         	call	_initLCD	;wreg free
  2274                           
  2275                           ;main.c: 50: I2C_Master_Init(10000);
  2276  001A52  0E10               	movlw	16
  2277  001A54  0100               	movlb	0	; () banked
  2278  001A56  6F9D               	movwf	I2C_Master_Init@c& (0+255),b
  2279  001A58  0E27               	movlw	39
  2280  001A5A  6F9E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  2281  001A5C  0E00               	movlw	0
  2282  001A5E  6F9F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  2283  001A60  0E00               	movlw	0
  2284  001A62  6FA0               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  2285  001A64  EC4B  F027         	call	_I2C_Master_Init	;wreg free
  2286                           
  2287                           ;main.c: 51: I2C_ColorSens_Init();
  2288  001A68  EC1F  F01D         	call	_I2C_ColorSens_Init	;wreg free
  2289                           
  2290                           ;main.c: 54: TMR0 = 0;
  2291  001A6C  0E00               	movlw	0
  2292  001A6E  6ED7               	movwf	4055,c	;volatile
  2293  001A70  0E00               	movlw	0
  2294  001A72  6ED6               	movwf	4054,c	;volatile
  2295                           
  2296                           ;main.c: 55: T08BIT = 0;
  2297  001A74  9CD5               	bcf	4053,6,c	;volatile
  2298                           
  2299                           ;main.c: 56: T0CS = 0;
  2300  001A76  9AD5               	bcf	4053,5,c	;volatile
  2301                           
  2302                           ;main.c: 57: PSA = 0;
  2303  001A78  96D5               	bcf	4053,3,c	;volatile
  2304                           
  2305                           ;main.c: 58: T0PS2 = 1;
  2306  001A7A  84D5               	bsf	4053,2,c	;volatile
  2307                           
  2308                           ;main.c: 59: T0PS1 = 1;
  2309  001A7C  82D5               	bsf	4053,1,c	;volatile
  2310                           
  2311                           ;main.c: 60: T0PS0 = 1;
  2312  001A7E  80D5               	bsf	4053,0,c	;volatile
  2313                           
  2314                           ;main.c: 62: TMR1 = 0;
  2315  001A80  0E00               	movlw	0
  2316  001A82  6ECF               	movwf	4047,c	;volatile
  2317  001A84  0E00               	movlw	0
  2318  001A86  6ECE               	movwf	4046,c	;volatile
  2319                           
  2320                           ;main.c: 63: servo0_flag = 0;
  2321  001A88  0E00               	movlw	0
  2322  001A8A  6E7E               	movwf	_servo0_flag,c
  2323                           
  2324                           ;main.c: 64: servo0_timer = 1;
  2325  001A8C  0E00               	movlw	0
  2326  001A8E  0101               	movlb	1	; () banked
  2327  001A90  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  2328  001A92  0E01               	movlw	1
  2329  001A94  6F43               	movwf	_servo0_timer& (0+255),b
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;main.c: 65: T1CON = 0b10000001;
  2333  001A96  0E81               	movlw	129
  2334  001A98  6ECD               	movwf	4045,c	;volatile
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;main.c: 66: TMR1ON = 0;
  2338  001A9A  90CD               	bcf	4045,0,c	;volatile
  2339                           
  2340                           ; BSR set to: 1
  2341                           ;main.c: 67: TMR1CS = 0;
  2342  001A9C  92CD               	bcf	4045,1,c	;volatile
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;main.c: 68: T1CKPS1 = 0;
  2346  001A9E  9ACD               	bcf	4045,5,c	;volatile
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 69: T1CKPS0 = 0;
  2350  001AA0  98CD               	bcf	4045,4,c	;volatile
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;main.c: 70: TMR1IE = 1;
  2354  001AA2  809D               	bsf	3997,0,c	;volatile
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;main.c: 72: TMR3 = 0;
  2358  001AA4  0E00               	movlw	0
  2359  001AA6  6EB3               	movwf	4019,c	;volatile
  2360  001AA8  0E00               	movlw	0
  2361  001AAA  6EB2               	movwf	4018,c	;volatile
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;main.c: 73: servo1_flag = 0;
  2365  001AAC  0E00               	movlw	0
  2366  001AAE  0100               	movlb	0	; () banked
  2367  001AB0  6FEE               	movwf	_servo1_flag& (0+255),b
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;main.c: 74: servo1_timer = 1;
  2371  001AB2  0E00               	movlw	0
  2372  001AB4  0101               	movlb	1	; () banked
  2373  001AB6  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  2374  001AB8  0E01               	movlw	1
  2375  001ABA  6F45               	movwf	_servo1_timer& (0+255),b
  2376                           
  2377                           ; BSR set to: 1
  2378                           ;main.c: 75: T3CON = 0b1000001;
  2379  001ABC  0E41               	movlw	65
  2380  001ABE  6EB1               	movwf	4017,c	;volatile
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;main.c: 76: TMR3ON = 0;
  2384  001AC0  90B1               	bcf	4017,0,c	;volatile
  2385                           
  2386                           ; BSR set to: 1
  2387                           ;main.c: 77: TMR3CS = 0;
  2388  001AC2  92B1               	bcf	4017,1,c	;volatile
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;main.c: 78: T3CKPS1 = 0;
  2392  001AC4  9AB1               	bcf	4017,5,c	;volatile
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;main.c: 79: T3CKPS0 = 0;
  2396  001AC6  98B1               	bcf	4017,4,c	;volatile
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;main.c: 80: TMR3IE = 1;
  2400  001AC8  82A0               	bsf	4000,1,c	;volatile
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;main.c: 84: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
  2404  001ACA  0E00               	movlw	0
  2405  001ACC  0100               	movlb	0	; () banked
  2406  001ACE  6FEC               	movwf	(_i+1)& (0+255),b
  2407  001AD0  0E00               	movlw	0
  2408  001AD2  6FEB               	movwf	_i& (0+255),b
  2409  001AD4                     l8664:
  2410                           
  2411                           ; BSR set to: 0
  2412  001AD4  0100               	movlb	0	; () banked
  2413  001AD6  BFEC               	btfsc	(_i+1)& (0+255),7,b
  2414  001AD8  D008               	goto	l8668
  2415  001ADA  0100               	movlb	0	; () banked
  2416  001ADC  51EC               	movf	(_i+1)& (0+255),w,b
  2417  001ADE  E118               	bnz	l8674
  2418  001AE0  0E05               	movlw	5
  2419  001AE2  0100               	movlb	0	; () banked
  2420  001AE4  5DEB               	subwf	_i& (0+255),w,b
  2421  001AE6  B0D8               	btfsc	status,0,c
  2422  001AE8  D013               	goto	l8674
  2423  001AEA                     l8668:
  2424                           
  2425                           ; BSR set to: 0
  2426  001AEA  90D8               	bcf	status,0,c
  2427  001AEC  0100               	movlb	0	; () banked
  2428  001AEE  35EB               	rlcf	_i& (0+255),w,b
  2429  001AF0  6ED9               	movwf	fsr2l,c
  2430  001AF2  0100               	movlb	0	; () banked
  2431  001AF4  35EC               	rlcf	(_i+1)& (0+255),w,b
  2432  001AF6  6EDA               	movwf	fsr2h,c
  2433  001AF8  0E72               	movlw	low _bottle_count_disp
  2434  001AFA  26D9               	addwf	fsr2l,f,c
  2435  001AFC  0E01               	movlw	high _bottle_count_disp
  2436  001AFE  22DA               	addwfc	fsr2h,f,c
  2437  001B00  0EFF               	movlw	255
  2438  001B02  6EDE               	movwf	postinc2,c
  2439  001B04  0EFF               	movlw	255
  2440  001B06  6EDD               	movwf	postdec2,c
  2441                           
  2442                           ; BSR set to: 0
  2443  001B08  0100               	movlb	0	; () banked
  2444  001B0A  4BEB               	infsnz	_i& (0+255),f,b
  2445  001B0C  2BEC               	incf	(_i+1)& (0+255),f,b
  2446  001B0E  D7E2               	goto	l8664
  2447  001B10                     l8674:
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;main.c: 85: for(i=20;i<50;i++) eeprom_writebyte(i, 0);
  2451  001B10  0E00               	movlw	0
  2452  001B12  0100               	movlb	0	; () banked
  2453  001B14  6FEC               	movwf	(_i+1)& (0+255),b
  2454  001B16  0E14               	movlw	20
  2455  001B18  6FEB               	movwf	_i& (0+255),b
  2456  001B1A                     l8676:
  2457                           
  2458                           ; BSR set to: 0
  2459  001B1A  0100               	movlb	0	; () banked
  2460  001B1C  BFEC               	btfsc	(_i+1)& (0+255),7,b
  2461  001B1E  D008               	goto	l8680
  2462  001B20  0100               	movlb	0	; () banked
  2463  001B22  51EC               	movf	(_i+1)& (0+255),w,b
  2464  001B24  E112               	bnz	l8686
  2465  001B26  0E32               	movlw	50
  2466  001B28  0100               	movlb	0	; () banked
  2467  001B2A  5DEB               	subwf	_i& (0+255),w,b
  2468  001B2C  B0D8               	btfsc	status,0,c
  2469  001B2E  D00D               	goto	l8686
  2470  001B30                     l8680:
  2471                           
  2472                           ; BSR set to: 0
  2473  001B30  C0EB  F092         	movff	_i,eeprom_writebyte@address
  2474  001B34  C0EC  F093         	movff	_i+1,eeprom_writebyte@address+1
  2475  001B38  0E00               	movlw	0
  2476  001B3A  0100               	movlb	0	; () banked
  2477  001B3C  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  2478  001B3E  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  2479  001B42  0100               	movlb	0	; () banked
  2480  001B44  4BEB               	infsnz	_i& (0+255),f,b
  2481  001B46  2BEC               	incf	(_i+1)& (0+255),f,b
  2482  001B48  D7E8               	goto	l8676
  2483  001B4A                     l8686:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;main.c: 87: curr_state = STANDBY;
  2487  001B4A  0E00               	movlw	0
  2488  001B4C  0100               	movlb	0	; () banked
  2489  001B4E  6FED               	movwf	_curr_state& (0+255),b
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;main.c: 90: switch(curr_state){
  2493                           
  2494                           ;main.c: 89: while(1){
  2495  001B50  D0A2               	goto	l8734
  2496  001B52                     l8688:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 92: standby();
  2500  001B52  ECD3  F028         	call	_standby	;wreg free
  2501                           
  2502                           ;main.c: 93: _delay((unsigned long)((500)*(10000000/4000.0)));
  2503  001B56  0E07               	movlw	7
  2504  001B58  0101               	movlb	1	; () banked
  2505  001B5A  6F71               	movwf	(??_main+1)& (0+255),b
  2506  001B5C  0E58               	movlw	88
  2507  001B5E  0101               	movlb	1	; () banked
  2508  001B60  6F70               	movwf	??_main& (0+255),b
  2509  001B62  0E59               	movlw	89
  2510  001B64                     u8697:
  2511  001B64  2EE8               	decfsz	wreg,f,c
  2512  001B66  D7FE               	bra	u8697
  2513  001B68  2F70               	decfsz	??_main& (0+255),f,b
  2514  001B6A  D7FC               	bra	u8697
  2515  001B6C  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2516  001B6E  D7FA               	bra	u8697
  2517  001B70  D091               	goto	L8
  2518  001B72                     l8692:
  2519                           
  2520                           ;main.c: 96: emergencystop();
  2521  001B72  ECFA  F029         	call	_emergencystop	;wreg free
  2522                           
  2523                           ;main.c: 97: break;
  2524  001B76  D08F               	goto	l8734
  2525  001B78                     l8694:
  2526                           
  2527                           ;main.c: 99: operation();
  2528  001B78  EC63  F005         	call	_operation	;wreg free
  2529                           
  2530                           ;main.c: 100: _delay((unsigned long)((2)*(10000000/4000.0)));
  2531  001B7C  0E07               	movlw	7
  2532  001B7E  0101               	movlb	1	; () banked
  2533  001B80  6F70               	movwf	??_main& (0+255),b
  2534  001B82  0E7D               	movlw	125
  2535  001B84                     u8707:
  2536  001B84  2EE8               	decfsz	wreg,f,c
  2537  001B86  D7FE               	bra	u8707
  2538  001B88  2F70               	decfsz	??_main& (0+255),f,b
  2539  001B8A  D7FC               	bra	u8707
  2540                           
  2541                           ;main.c: 101: _delay((unsigned long)((400)*(10000000/4000000.0)));
  2542  001B8C  0EC8               	movlw	200
  2543  001B8E                     u8717:
  2544  001B8E  D000               	nop2	
  2545  001B90  2EE8               	decfsz	wreg,f,c
  2546  001B92  D7FD               	bra	u8717
  2547                           
  2548                           ;main.c: 102: break;
  2549  001B94  D080               	goto	l8734
  2550  001B96                     l8700:
  2551                           
  2552                           ;main.c: 104: operationend();
  2553  001B96  EC1A  F02A         	call	_operationend	;wreg free
  2554                           
  2555                           ;main.c: 105: _delay((unsigned long)((500)*(10000000/4000.0)));
  2556  001B9A  0E07               	movlw	7
  2557  001B9C  0101               	movlb	1	; () banked
  2558  001B9E  6F71               	movwf	(??_main+1)& (0+255),b
  2559  001BA0  0E58               	movlw	88
  2560  001BA2  0101               	movlb	1	; () banked
  2561  001BA4  6F70               	movwf	??_main& (0+255),b
  2562  001BA6  0E59               	movlw	89
  2563  001BA8                     u8727:
  2564  001BA8  2EE8               	decfsz	wreg,f,c
  2565  001BAA  D7FE               	bra	u8727
  2566  001BAC  2F70               	decfsz	??_main& (0+255),f,b
  2567  001BAE  D7FC               	bra	u8727
  2568  001BB0  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2569  001BB2  D7FA               	bra	u8727
  2570  001BB4  D06F               	goto	L8
  2571  001BB6                     l8704:
  2572                           
  2573                           ;main.c: 108: date_time();
  2574  001BB6  EC4F  F021         	call	_date_time	;wreg free
  2575                           
  2576                           ;main.c: 109: _delay((unsigned long)((300)*(10000000/4000.0)));
  2577  001BBA  0E04               	movlw	4
  2578  001BBC  0101               	movlb	1	; () banked
  2579  001BBE  6F71               	movwf	(??_main+1)& (0+255),b
  2580  001BC0  0ECF               	movlw	207
  2581  001BC2  0101               	movlb	1	; () banked
  2582  001BC4  6F70               	movwf	??_main& (0+255),b
  2583  001BC6  0E01               	movlw	1
  2584  001BC8                     u8737:
  2585  001BC8  2EE8               	decfsz	wreg,f,c
  2586  001BCA  D7FE               	bra	u8737
  2587  001BCC  2F70               	decfsz	??_main& (0+255),f,b
  2588  001BCE  D7FC               	bra	u8737
  2589  001BD0  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2590  001BD2  D7FA               	bra	u8737
  2591  001BD4  D05F               	goto	L8
  2592  001BD6                     l8708:
  2593                           
  2594                           ;main.c: 112: bottle_count();
  2595  001BD6  EC1E  F01C         	call	_bottle_count	;wreg free
  2596                           
  2597                           ;main.c: 113: _delay((unsigned long)((300)*(10000000/4000.0)));
  2598  001BDA  0E04               	movlw	4
  2599  001BDC  0101               	movlb	1	; () banked
  2600  001BDE  6F71               	movwf	(??_main+1)& (0+255),b
  2601  001BE0  0ECF               	movlw	207
  2602  001BE2  0101               	movlb	1	; () banked
  2603  001BE4  6F70               	movwf	??_main& (0+255),b
  2604  001BE6  0E01               	movlw	1
  2605  001BE8                     u8747:
  2606  001BE8  2EE8               	decfsz	wreg,f,c
  2607  001BEA  D7FE               	bra	u8747
  2608  001BEC  2F70               	decfsz	??_main& (0+255),f,b
  2609  001BEE  D7FC               	bra	u8747
  2610  001BF0  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2611  001BF2  D7FA               	bra	u8747
  2612  001BF4  D04F               	goto	L8
  2613  001BF6                     l8712:
  2614                           
  2615                           ;main.c: 116: bottle_count1();
  2616  001BF6  EC9C  F01B         	call	_bottle_count1	;wreg free
  2617                           
  2618                           ;main.c: 117: _delay((unsigned long)((300)*(10000000/4000.0)));
  2619  001BFA  0E04               	movlw	4
  2620  001BFC  0101               	movlb	1	; () banked
  2621  001BFE  6F71               	movwf	(??_main+1)& (0+255),b
  2622  001C00  0ECF               	movlw	207
  2623  001C02  0101               	movlb	1	; () banked
  2624  001C04  6F70               	movwf	??_main& (0+255),b
  2625  001C06  0E01               	movlw	1
  2626  001C08                     u8757:
  2627  001C08  2EE8               	decfsz	wreg,f,c
  2628  001C0A  D7FE               	bra	u8757
  2629  001C0C  2F70               	decfsz	??_main& (0+255),f,b
  2630  001C0E  D7FC               	bra	u8757
  2631  001C10  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2632  001C12  D7FA               	bra	u8757
  2633  001C14  D03F               	goto	L8
  2634  001C16                     l8716:
  2635                           
  2636                           ;main.c: 120: bottle_count2();
  2637  001C16  EC1A  F01B         	call	_bottle_count2	;wreg free
  2638                           
  2639                           ;main.c: 121: _delay((unsigned long)((300)*(10000000/4000.0)));
  2640  001C1A  0E04               	movlw	4
  2641  001C1C  0101               	movlb	1	; () banked
  2642  001C1E  6F71               	movwf	(??_main+1)& (0+255),b
  2643  001C20  0ECF               	movlw	207
  2644  001C22  0101               	movlb	1	; () banked
  2645  001C24  6F70               	movwf	??_main& (0+255),b
  2646  001C26  0E01               	movlw	1
  2647  001C28                     u8767:
  2648  001C28  2EE8               	decfsz	wreg,f,c
  2649  001C2A  D7FE               	bra	u8767
  2650  001C2C  2F70               	decfsz	??_main& (0+255),f,b
  2651  001C2E  D7FC               	bra	u8767
  2652  001C30  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2653  001C32  D7FA               	bra	u8767
  2654  001C34  D02F               	goto	L8
  2655  001C36                     l8720:
  2656                           
  2657                           ;main.c: 124: bottle_count3();
  2658  001C36  EC98  F01A         	call	_bottle_count3	;wreg free
  2659                           
  2660                           ;main.c: 125: _delay((unsigned long)((300)*(10000000/4000.0)));
  2661  001C3A  0E04               	movlw	4
  2662  001C3C  0101               	movlb	1	; () banked
  2663  001C3E  6F71               	movwf	(??_main+1)& (0+255),b
  2664  001C40  0ECF               	movlw	207
  2665  001C42  0101               	movlb	1	; () banked
  2666  001C44  6F70               	movwf	??_main& (0+255),b
  2667  001C46  0E01               	movlw	1
  2668  001C48                     u8777:
  2669  001C48  2EE8               	decfsz	wreg,f,c
  2670  001C4A  D7FE               	bra	u8777
  2671  001C4C  2F70               	decfsz	??_main& (0+255),f,b
  2672  001C4E  D7FC               	bra	u8777
  2673  001C50  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2674  001C52  D7FA               	bra	u8777
  2675  001C54  D01F               	goto	L8
  2676  001C56                     l8724:
  2677                           
  2678                           ;main.c: 128: bottle_count4();
  2679  001C56  EC16  F01A         	call	_bottle_count4	;wreg free
  2680                           
  2681                           ;main.c: 129: _delay((unsigned long)((300)*(10000000/4000.0)));
  2682  001C5A  0E04               	movlw	4
  2683  001C5C  0101               	movlb	1	; () banked
  2684  001C5E  6F71               	movwf	(??_main+1)& (0+255),b
  2685  001C60  0ECF               	movlw	207
  2686  001C62  0101               	movlb	1	; () banked
  2687  001C64  6F70               	movwf	??_main& (0+255),b
  2688  001C66  0E01               	movlw	1
  2689  001C68                     u8787:
  2690  001C68  2EE8               	decfsz	wreg,f,c
  2691  001C6A  D7FE               	bra	u8787
  2692  001C6C  2F70               	decfsz	??_main& (0+255),f,b
  2693  001C6E  D7FC               	bra	u8787
  2694  001C70  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2695  001C72  D7FA               	bra	u8787
  2696  001C74  D00F               	goto	L8
  2697  001C76                     l8728:
  2698                           
  2699                           ;main.c: 132: bottle_time();
  2700  001C76  EC0C  F029         	call	_bottle_time	;wreg free
  2701                           
  2702                           ;main.c: 133: _delay((unsigned long)((300)*(10000000/4000.0)));
  2703  001C7A  0E04               	movlw	4
  2704  001C7C  0101               	movlb	1	; () banked
  2705  001C7E  6F71               	movwf	(??_main+1)& (0+255),b
  2706  001C80  0ECF               	movlw	207
  2707  001C82  0101               	movlb	1	; () banked
  2708  001C84  6F70               	movwf	??_main& (0+255),b
  2709  001C86  0E01               	movlw	1
  2710  001C88                     u8797:
  2711  001C88  2EE8               	decfsz	wreg,f,c
  2712  001C8A  D7FE               	bra	u8797
  2713  001C8C  2F70               	decfsz	??_main& (0+255),f,b
  2714  001C8E  D7FC               	bra	u8797
  2715  001C90  2F71               	decfsz	(??_main+1)& (0+255),f,b
  2716  001C92  D7FA               	bra	u8797
  2717  001C94                     L8:
  2718  001C94  D000               	nop2	
  2719  001C96                     l8734:
  2720  001C96  0100               	movlb	0	; () banked
  2721  001C98  51ED               	movf	_curr_state& (0+255),w,b
  2722                           
  2723                           ; Switch size 1, requested type "space"
  2724                           ; Number of cases is 11, Range of values is 0 to 10
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte           34    18 (average)
  2728                           ;	Chosen strategy is simple_byte
  2729  001C9A  0A00               	xorlw	0	; case 0
  2730  001C9C  B4D8               	btfsc	status,2,c
  2731  001C9E  D759               	goto	l8688
  2732  001CA0  0A01               	xorlw	1	; case 1
  2733  001CA2  B4D8               	btfsc	status,2,c
  2734  001CA4  D766               	goto	l8692
  2735  001CA6  0A03               	xorlw	3	; case 2
  2736  001CA8  B4D8               	btfsc	status,2,c
  2737  001CAA  D766               	goto	l8694
  2738  001CAC  0A01               	xorlw	1	; case 3
  2739  001CAE  B4D8               	btfsc	status,2,c
  2740  001CB0  D772               	goto	l8700
  2741  001CB2  0A07               	xorlw	7	; case 4
  2742  001CB4  B4D8               	btfsc	status,2,c
  2743  001CB6  D77F               	goto	l8704
  2744  001CB8  0A01               	xorlw	1	; case 5
  2745  001CBA  B4D8               	btfsc	status,2,c
  2746  001CBC  D78C               	goto	l8708
  2747  001CBE  0A03               	xorlw	3	; case 6
  2748  001CC0  B4D8               	btfsc	status,2,c
  2749  001CC2  D799               	goto	l8712
  2750  001CC4  0A01               	xorlw	1	; case 7
  2751  001CC6  B4D8               	btfsc	status,2,c
  2752  001CC8  D7A6               	goto	l8716
  2753  001CCA  0A0F               	xorlw	15	; case 8
  2754  001CCC  B4D8               	btfsc	status,2,c
  2755  001CCE  D7B3               	goto	l8720
  2756  001CD0  0A01               	xorlw	1	; case 9
  2757  001CD2  B4D8               	btfsc	status,2,c
  2758  001CD4  D7C0               	goto	l8724
  2759  001CD6  0A03               	xorlw	3	; case 10
  2760  001CD8  B4D8               	btfsc	status,2,c
  2761  001CDA  D7CD               	goto	l8728
  2762                           
  2763                           ; BSR set to: 0
  2764                           
  2765                           ; BSR set to: 0
  2766  001CDC  D7DC               	goto	l8734
  2767  001CDE                     __end_of_main:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           intcon	equ	0xFF2
  2774                           intcon2	equ	0xFF1
  2775                           intcon3	equ	0xFF0
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           postinc2	equ	0xFDE
  2781                           postdec2	equ	0xFDD
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _standby *****************
  2787 ;; Defined at:
  2788 ;;		line 342 in file "main.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        0 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:   10
  2809 ;; This function calls:
  2810 ;;		_lcdInst
  2811 ;;		_printf
  2812 ;;		_read_colorsensor
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text1
  2819  0051A6                     __ptext1:
  2820                           	opt stack 0
  2821  0051A6                     _standby:
  2822                           	opt stack 20
  2823                           
  2824                           ;main.c: 343: lcdInst(0b10000000);
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;incstack = 0
  2828  0051A6  0E80               	movlw	128
  2829  0051A8  EC58  F02A         	call	_lcdInst
  2830                           
  2831                           ;main.c: 344: printf("standby          ");
  2832  0051AC  0E71               	movlw	low STR_5
  2833  0051AE  0100               	movlb	0	; () banked
  2834  0051B0  6F9C               	movwf	printf@f& (0+255),b
  2835  0051B2  0EFF               	movlw	high STR_5
  2836  0051B4  0100               	movlb	0	; () banked
  2837  0051B6  6F9D               	movwf	(printf@f+1)& (0+255),b
  2838  0051B8  EC1C  F008         	call	_printf	;wreg free
  2839                           
  2840                           ;main.c: 345: lcdInst(0b11000000);
  2841  0051BC  0EC0               	movlw	192
  2842  0051BE  EC58  F02A         	call	_lcdInst
  2843                           
  2844                           ;main.c: 346: read_colorsensor();
  2845  0051C2  EC1C  F01E         	call	_read_colorsensor	;wreg free
  2846                           
  2847                           ;main.c: 347: printf("%d      ", color[0]);
  2848  0051C6  0EF5               	movlw	low STR_6
  2849  0051C8  0100               	movlb	0	; () banked
  2850  0051CA  6F9C               	movwf	printf@f& (0+255),b
  2851  0051CC  0EFF               	movlw	high STR_6
  2852  0051CE  0100               	movlb	0	; () banked
  2853  0051D0  6F9D               	movwf	(printf@f+1)& (0+255),b
  2854  0051D2  C100  F09E         	movff	_color,?_printf+2
  2855  0051D6  C101  F09F         	movff	_color+1,?_printf+3
  2856  0051DA  EC1C  F008         	call	_printf	;wreg free
  2857  0051DE  0012               	return	
  2858  0051E0                     __end_of_standby:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           intcon	equ	0xFF2
  2865                           intcon2	equ	0xFF1
  2866                           intcon3	equ	0xFF0
  2867                           postinc0	equ	0xFEE
  2868                           wreg	equ	0xFE8
  2869                           postdec1	equ	0xFE5
  2870                           fsr1l	equ	0xFE1
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _operationend *****************
  2878 ;; Defined at:
  2879 ;;		line 668 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:   10
  2900 ;; This function calls:
  2901 ;;		_lcdInst
  2902 ;;		_printf
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text2
  2909  005434                     __ptext2:
  2910                           	opt stack 0
  2911  005434                     _operationend:
  2912                           	opt stack 20
  2913                           
  2914                           ;main.c: 669: lcdInst(0b10000000);
  2915                           
  2916                           ;incstack = 0
  2917  005434  0E80               	movlw	128
  2918  005436  EC58  F02A         	call	_lcdInst
  2919                           
  2920                           ;main.c: 670: printf("Operation Done!          ");
  2921  00543A  0EF6               	movlw	low STR_46
  2922  00543C  0100               	movlb	0	; () banked
  2923  00543E  6F9C               	movwf	printf@f& (0+255),b
  2924  005440  0EFD               	movlw	high STR_46
  2925  005442  0100               	movlb	0	; () banked
  2926  005444  6F9D               	movwf	(printf@f+1)& (0+255),b
  2927  005446  EC1C  F008         	call	_printf	;wreg free
  2928  00544A  0012               	return	
  2929  00544C                     __end_of_operationend:
  2930                           	opt stack 0
  2931                           tblptru	equ	0xFF8
  2932                           tblptrh	equ	0xFF7
  2933                           tblptrl	equ	0xFF6
  2934                           tablat	equ	0xFF5
  2935                           intcon	equ	0xFF2
  2936                           intcon2	equ	0xFF1
  2937                           intcon3	equ	0xFF0
  2938                           postinc0	equ	0xFEE
  2939                           wreg	equ	0xFE8
  2940                           postdec1	equ	0xFE5
  2941                           fsr1l	equ	0xFE1
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _operation *****************
  2949 ;; Defined at:
  2950 ;;		line 574 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:   13
  2971 ;; This function calls:
  2972 ;;		___ftdiv
  2973 ;;		___ftge
  2974 ;;		___lwtoft
  2975 ;;		___wmul
  2976 ;;		_dec_to_hex
  2977 ;;		_lcdInst
  2978 ;;		_read_colorsensor
  2979 ;;		_read_time
  2980 ;;		_savedata
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text3
  2987  000AC6                     __ptext3:
  2988                           	opt stack 0
  2989  000AC6                     _operation:
  2990                           	opt stack 17
  2991                           
  2992                           ;main.c: 575: if(bottle_count_array[0] > 9){
  2993                           
  2994                           ;incstack = 0
  2995  000AC6  0100               	movlb	0	; () banked
  2996  000AC8  BFE0               	btfsc	(_bottle_count_array+1)& (0+255),7,b
  2997  000ACA  D0A3               	goto	l518
  2998  000ACC  0100               	movlb	0	; () banked
  2999  000ACE  51E0               	movf	(_bottle_count_array+1)& (0+255),w,b
  3000  000AD0  E105               	bnz	u8330
  3001  000AD2  0E0A               	movlw	10
  3002  000AD4  0100               	movlb	0	; () banked
  3003  000AD6  5DDF               	subwf	_bottle_count_array& (0+255),w,b
  3004  000AD8  A0D8               	btfss	status,0,c
  3005  000ADA  D09B               	goto	l518
  3006  000ADC                     u8330:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;main.c: 576: _delay((unsigned long)((1000)*(10000000/4000.0)));
  3010  000ADC  0E0D               	movlw	13
  3011  000ADE  0100               	movlb	0	; () banked
  3012  000AE0  6FDE               	movwf	(??_operation+1)& (0+255),b
  3013  000AE2  0EAF               	movlw	175
  3014  000AE4  0100               	movlb	0	; () banked
  3015  000AE6  6FDD               	movwf	??_operation& (0+255),b
  3016  000AE8  0EB6               	movlw	182
  3017  000AEA                     u8807:
  3018  000AEA  2EE8               	decfsz	wreg,f,c
  3019  000AEC  D7FE               	bra	u8807
  3020  000AEE  2FDD               	decfsz	??_operation& (0+255),f,b
  3021  000AF0  D7FC               	bra	u8807
  3022  000AF2  2FDE               	decfsz	(??_operation+1)& (0+255),f,b
  3023  000AF4  D7FA               	bra	u8807
  3024  000AF6  F000               	nop	
  3025                           
  3026                           ;main.c: 577: LATAbits.LATA2 = 0;
  3027  000AF8  9489               	bcf	3977,2,c	;volatile
  3028                           
  3029                           ;main.c: 578: TMR0IE = 0;
  3030  000AFA  9AF2               	bcf	intcon,5,c	;volatile
  3031                           
  3032                           ;main.c: 579: TMR0ON = 0;
  3033  000AFC  9ED5               	bcf	4053,7,c	;volatile
  3034                           
  3035                           ;main.c: 580: TMR1ON = 0;
  3036  000AFE  90CD               	bcf	4045,0,c	;volatile
  3037                           
  3038                           ;main.c: 581: TMR3ON = 0;
  3039  000B00  90B1               	bcf	4017,0,c	;volatile
  3040                           
  3041                           ;main.c: 583: read_time();
  3042  000B02  EC7B  F026         	call	_read_time	;wreg free
  3043                           
  3044                           ;main.c: 584: end_time[1] = time[1];
  3045  000B06  C111  F077         	movff	_time+1,_end_time+1
  3046                           
  3047                           ;main.c: 585: end_time[0] = time[0];
  3048  000B0A  C110  F076         	movff	_time,_end_time
  3049                           
  3050                           ;main.c: 586: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
  3051  000B0E  C07B  F0DB         	movff	_start_time+1,dec_to_hex@num
  3052  000B12  0100               	movlb	0	; () banked
  3053  000B14  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  3054  000B16  EC06  F019         	call	_dec_to_hex	;wreg free
  3055  000B1A  C0DB  F16E         	movff	?_dec_to_hex,_operation$1412
  3056  000B1E  C0DC  F16F         	movff	?_dec_to_hex+1,_operation$1412+1
  3057                           
  3058                           ;main.c: 586: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
  3059  000B22  C16E  F090         	movff	_operation$1412,___wmul@multiplier
  3060  000B26  C16F  F091         	movff	_operation$1412+1,___wmul@multiplier+1
  3061  000B2A  0E00               	movlw	0
  3062  000B2C  0100               	movlb	0	; () banked
  3063  000B2E  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3064  000B30  0E3C               	movlw	60
  3065  000B32  6F92               	movwf	___wmul@multiplicand& (0+255),b
  3066  000B34  EC27  F029         	call	___wmul	;wreg free
  3067  000B38  C090  F0DD         	movff	?___wmul,??_operation
  3068  000B3C  C091  F0DE         	movff	?___wmul+1,??_operation+1
  3069  000B40  C07A  F0DB         	movff	_start_time,dec_to_hex@num
  3070  000B44  0100               	movlb	0	; () banked
  3071  000B46  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  3072  000B48  EC06  F019         	call	_dec_to_hex	;wreg free
  3073  000B4C  0100               	movlb	0	; () banked
  3074  000B4E  51DB               	movf	?_dec_to_hex& (0+255),w,b
  3075  000B50  0100               	movlb	0	; () banked
  3076  000B52  25DD               	addwf	??_operation& (0+255),w,b
  3077  000B54  0101               	movlb	1	; () banked
  3078  000B56  6F47               	movwf	_stime& (0+255),b
  3079  000B58  0100               	movlb	0	; () banked
  3080  000B5A  51DC               	movf	(?_dec_to_hex+1)& (0+255),w,b
  3081  000B5C  0100               	movlb	0	; () banked
  3082  000B5E  21DE               	addwfc	(??_operation+1)& (0+255),w,b
  3083  000B60  0101               	movlb	1	; () banked
  3084  000B62  6F48               	movwf	(_stime+1)& (0+255),b
  3085                           
  3086                           ; BSR set to: 1
  3087                           ;main.c: 587: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
  3088  000B64  C077  F0DB         	movff	_end_time+1,dec_to_hex@num
  3089  000B68  0100               	movlb	0	; () banked
  3090  000B6A  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  3091  000B6C  EC06  F019         	call	_dec_to_hex	;wreg free
  3092  000B70  C0DB  F16E         	movff	?_dec_to_hex,_operation$1412
  3093  000B74  C0DC  F16F         	movff	?_dec_to_hex+1,_operation$1412+1
  3094                           
  3095                           ;main.c: 587: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
  3096  000B78  C16E  F090         	movff	_operation$1412,___wmul@multiplier
  3097  000B7C  C16F  F091         	movff	_operation$1412+1,___wmul@multiplier+1
  3098  000B80  0E00               	movlw	0
  3099  000B82  0100               	movlb	0	; () banked
  3100  000B84  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3101  000B86  0E3C               	movlw	60
  3102  000B88  6F92               	movwf	___wmul@multiplicand& (0+255),b
  3103  000B8A  EC27  F029         	call	___wmul	;wreg free
  3104  000B8E  C090  F0DD         	movff	?___wmul,??_operation
  3105  000B92  C091  F0DE         	movff	?___wmul+1,??_operation+1
  3106  000B96  C076  F0DB         	movff	_end_time,dec_to_hex@num
  3107  000B9A  0100               	movlb	0	; () banked
  3108  000B9C  6BDC               	clrf	(dec_to_hex@num+1)& (0+255),b
  3109  000B9E  EC06  F019         	call	_dec_to_hex	;wreg free
  3110  000BA2  0100               	movlb	0	; () banked
  3111  000BA4  51DB               	movf	?_dec_to_hex& (0+255),w,b
  3112  000BA6  0100               	movlb	0	; () banked
  3113  000BA8  25DD               	addwf	??_operation& (0+255),w,b
  3114  000BAA  0101               	movlb	1	; () banked
  3115  000BAC  6F31               	movwf	_etime& (0+255),b
  3116  000BAE  0100               	movlb	0	; () banked
  3117  000BB0  51DC               	movf	(?_dec_to_hex+1)& (0+255),w,b
  3118  000BB2  0100               	movlb	0	; () banked
  3119  000BB4  21DE               	addwfc	(??_operation+1)& (0+255),w,b
  3120  000BB6  0101               	movlb	1	; () banked
  3121  000BB8  6F32               	movwf	(_etime+1)& (0+255),b
  3122                           
  3123                           ; BSR set to: 1
  3124                           ;main.c: 588: curr_state = OPERATIONEND;
  3125  000BBA  0E03               	movlw	3
  3126  000BBC  0100               	movlb	0	; () banked
  3127  000BBE  6FED               	movwf	_curr_state& (0+255),b
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;main.c: 589: lcdInst(0b00000001);
  3131  000BC0  0E01               	movlw	1
  3132  000BC2  EC58  F02A         	call	_lcdInst
  3133                           
  3134                           ;main.c: 590: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
  3135  000BC6  0E00               	movlw	0
  3136  000BC8  0100               	movlb	0	; () banked
  3137  000BCA  6FEC               	movwf	(_i+1)& (0+255),b
  3138  000BCC  0E00               	movlw	0
  3139  000BCE  6FEB               	movwf	_i& (0+255),b
  3140  000BD0                     l8262:
  3141                           
  3142                           ; BSR set to: 0
  3143  000BD0  0100               	movlb	0	; () banked
  3144  000BD2  BFEC               	btfsc	(_i+1)& (0+255),7,b
  3145  000BD4  D008               	goto	l8266
  3146  000BD6  0100               	movlb	0	; () banked
  3147  000BD8  51EC               	movf	(_i+1)& (0+255),w,b
  3148  000BDA  E118               	bnz	l8272
  3149  000BDC  0E05               	movlw	5
  3150  000BDE  0100               	movlb	0	; () banked
  3151  000BE0  5DEB               	subwf	_i& (0+255),w,b
  3152  000BE2  B0D8               	btfsc	status,0,c
  3153  000BE4  D013               	goto	l8272
  3154  000BE6                     l8266:
  3155                           
  3156                           ; BSR set to: 0
  3157  000BE6  90D8               	bcf	status,0,c
  3158  000BE8  0100               	movlb	0	; () banked
  3159  000BEA  35EB               	rlcf	_i& (0+255),w,b
  3160  000BEC  6ED9               	movwf	fsr2l,c
  3161  000BEE  0100               	movlb	0	; () banked
  3162  000BF0  35EC               	rlcf	(_i+1)& (0+255),w,b
  3163  000BF2  6EDA               	movwf	fsr2h,c
  3164  000BF4  0E72               	movlw	low _bottle_count_disp
  3165  000BF6  26D9               	addwf	fsr2l,f,c
  3166  000BF8  0E01               	movlw	high _bottle_count_disp
  3167  000BFA  22DA               	addwfc	fsr2h,f,c
  3168  000BFC  0EFF               	movlw	255
  3169  000BFE  6EDE               	movwf	postinc2,c
  3170  000C00  0EFF               	movlw	255
  3171  000C02  6EDD               	movwf	postdec2,c
  3172                           
  3173                           ; BSR set to: 0
  3174  000C04  0100               	movlb	0	; () banked
  3175  000C06  4BEB               	infsnz	_i& (0+255),f,b
  3176  000C08  2BEC               	incf	(_i+1)& (0+255),f,b
  3177  000C0A  D7E2               	goto	l8262
  3178  000C0C                     l8272:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;main.c: 591: savedata();
  3182  000C0C  EC9D  F00B         	call	_savedata	;wreg free
  3183                           
  3184                           ;main.c: 592: return;
  3185  000C10  0012               	return	
  3186  000C12                     l518:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;main.c: 593: }
  3190                           ;main.c: 594: colorprev[0] = color[0];
  3191  000C12  C100  F108         	movff	_color,_colorprev
  3192  000C16  C101  F109         	movff	_color+1,_colorprev+1
  3193                           
  3194                           ;main.c: 595: colorprev[1] = color[1];
  3195  000C1A  C102  F10A         	movff	_color+2,_colorprev+2
  3196  000C1E  C103  F10B         	movff	_color+3,_colorprev+3
  3197                           
  3198                           ;main.c: 596: colorprev[2] = color[2];
  3199  000C22  C104  F10C         	movff	_color+4,_colorprev+4
  3200  000C26  C105  F10D         	movff	_color+5,_colorprev+5
  3201                           
  3202                           ;main.c: 597: colorprev[3] = color[3];
  3203  000C2A  C106  F10E         	movff	_color+6,_colorprev+6
  3204  000C2E  C107  F10F         	movff	_color+7,_colorprev+7
  3205                           
  3206                           ;main.c: 599: GIE = 0;
  3207  000C32  9EF2               	bcf	intcon,7,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;main.c: 600: read_colorsensor();
  3211  000C34  EC1C  F01E         	call	_read_colorsensor	;wreg free
  3212                           
  3213                           ;main.c: 601: if(color[0]>19){
  3214  000C38  0101               	movlb	1	; () banked
  3215  000C3A  5101               	movf	(_color+1)& (0+255),w,b
  3216  000C3C  E105               	bnz	u8360
  3217  000C3E  0E14               	movlw	20
  3218  000C40  0101               	movlb	1	; () banked
  3219  000C42  5D00               	subwf	_color& (0+255),w,b
  3220  000C44  A0D8               	btfss	status,0,c
  3221  000C46  D15A               	goto	l8328
  3222  000C48                     u8360:
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;main.c: 602: flag_bottle = 1;
  3226  000C48  0E00               	movlw	0
  3227  000C4A  0101               	movlb	1	; () banked
  3228  000C4C  6F34               	movwf	(_flag_bottle+1)& (0+255),b
  3229  000C4E  0E01               	movlw	1
  3230  000C50  6F33               	movwf	_flag_bottle& (0+255),b
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;main.c: 603: flag_picbug += 1;
  3234  000C52  0100               	movlb	0	; () banked
  3235  000C54  4BE9               	infsnz	_flag_picbug& (0+255),f,b
  3236  000C56  2BEA               	incf	(_flag_picbug+1)& (0+255),f,b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;main.c: 604: if(color[3]>color[1] && !flag_top_read) flag_eskaC += 1;
  3240  000C58  0101               	movlb	1	; () banked
  3241  000C5A  5106               	movf	(_color+6)& (0+255),w,b
  3242  000C5C  0101               	movlb	1	; () banked
  3243  000C5E  5D02               	subwf	(_color+2)& (0+255),w,b
  3244  000C60  0101               	movlb	1	; () banked
  3245  000C62  5107               	movf	(_color+7)& (0+255),w,b
  3246  000C64  0101               	movlb	1	; () banked
  3247  000C66  5903               	subwfb	(_color+3)& (0+255),w,b
  3248  000C68  B0D8               	btfsc	status,0,c
  3249  000C6A  D009               	goto	l8290
  3250                           
  3251                           ; BSR set to: 1
  3252  000C6C  0101               	movlb	1	; () banked
  3253  000C6E  5139               	movf	_flag_top_read& (0+255),w,b
  3254  000C70  0101               	movlb	1	; () banked
  3255  000C72  113A               	iorwf	(_flag_top_read+1)& (0+255),w,b
  3256  000C74  A4D8               	btfss	status,2,c
  3257  000C76  D003               	goto	l8290
  3258                           
  3259                           ; BSR set to: 1
  3260  000C78  0101               	movlb	1	; () banked
  3261  000C7A  4B37               	infsnz	_flag_eskaC& (0+255),f,b
  3262  000C7C  2B38               	incf	(_flag_eskaC+1)& (0+255),f,b
  3263  000C7E                     l8290:
  3264                           
  3265                           ; BSR set to: 1
  3266                           ;main.c: 605: if(color[1]>130 || color[2]>130)flag_yopNC = 1;
  3267  000C7E  0101               	movlb	1	; () banked
  3268  000C80  5103               	movf	(_color+3)& (0+255),w,b
  3269  000C82  E10D               	bnz	l8294
  3270  000C84  0E83               	movlw	131
  3271  000C86  0101               	movlb	1	; () banked
  3272  000C88  5D02               	subwf	(_color+2)& (0+255),w,b
  3273  000C8A  B0D8               	btfsc	status,0,c
  3274  000C8C  D008               	goto	l8294
  3275                           
  3276                           ; BSR set to: 1
  3277  000C8E  0101               	movlb	1	; () banked
  3278  000C90  5105               	movf	(_color+5)& (0+255),w,b
  3279  000C92  E105               	bnz	l8294
  3280  000C94  0E83               	movlw	131
  3281  000C96  0101               	movlb	1	; () banked
  3282  000C98  5D04               	subwf	(_color+4)& (0+255),w,b
  3283  000C9A  A0D8               	btfss	status,0,c
  3284  000C9C  D005               	goto	l8296
  3285  000C9E                     l8294:
  3286                           
  3287                           ; BSR set to: 1
  3288  000C9E  0E00               	movlw	0
  3289  000CA0  0101               	movlb	1	; () banked
  3290  000CA2  6F3C               	movwf	(_flag_yopNC+1)& (0+255),b
  3291  000CA4  0E01               	movlw	1
  3292  000CA6  6F3B               	movwf	_flag_yopNC& (0+255),b
  3293  000CA8                     l8296:
  3294                           
  3295                           ; BSR set to: 1
  3296                           ;main.c: 606: if(color[0]>30){
  3297  000CA8  0101               	movlb	1	; () banked
  3298  000CAA  5101               	movf	(_color+1)& (0+255),w,b
  3299  000CAC  E105               	bnz	u8410
  3300  000CAE  0E1F               	movlw	31
  3301  000CB0  0101               	movlb	1	; () banked
  3302  000CB2  5D00               	subwf	_color& (0+255),w,b
  3303  000CB4  A0D8               	btfss	status,0,c
  3304  000CB6  D08F               	goto	l8312
  3305  000CB8                     u8410:
  3306                           
  3307                           ; BSR set to: 1
  3308                           ;main.c: 607: if(!flag_top_read){
  3309  000CB8  0101               	movlb	1	; () banked
  3310  000CBA  5139               	movf	_flag_top_read& (0+255),w,b
  3311  000CBC  0101               	movlb	1	; () banked
  3312  000CBE  113A               	iorwf	(_flag_top_read+1)& (0+255),w,b
  3313  000CC0  A4D8               	btfss	status,2,c
  3314  000CC2  D084               	goto	l528
  3315                           
  3316                           ; BSR set to: 1
  3317                           ;main.c: 608: r = (float) color[1];
  3318  000CC4  C102  F098         	movff	_color+2,___lwtoft@c
  3319  000CC8  C103  F099         	movff	_color+3,___lwtoft@c+1
  3320  000CCC  EC71  F029         	call	___lwtoft	;wreg free
  3321  000CD0  C098  F125         	movff	?___lwtoft,_r
  3322  000CD4  C099  F126         	movff	?___lwtoft+1,_r+1
  3323  000CD8  C09A  F127         	movff	?___lwtoft+2,_r+2
  3324                           
  3325                           ;main.c: 609: b = (float) color[3];
  3326  000CDC  C106  F098         	movff	_color+6,___lwtoft@c
  3327  000CE0  C107  F099         	movff	_color+7,___lwtoft@c+1
  3328  000CE4  EC71  F029         	call	___lwtoft	;wreg free
  3329  000CE8  C098  F11F         	movff	?___lwtoft,_b
  3330  000CEC  C099  F120         	movff	?___lwtoft+1,_b+1
  3331  000CF0  C09A  F121         	movff	?___lwtoft+2,_b+2
  3332                           
  3333                           ;main.c: 612: if(r/b > 2 && r>16) bottle_read_top = 1;
  3334  000CF4  0E00               	movlw	0
  3335  000CF6  0100               	movlb	0	; () banked
  3336  000CF8  6FA7               	movwf	___ftge@ff1& (0+255),b
  3337  000CFA  0E00               	movlw	0
  3338  000CFC  0100               	movlb	0	; () banked
  3339  000CFE  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3340  000D00  0E40               	movlw	64
  3341  000D02  0100               	movlb	0	; () banked
  3342  000D04  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3343  000D06  C11F  F09B         	movff	_b,___ftdiv@f2
  3344  000D0A  C120  F09C         	movff	_b+1,___ftdiv@f2+1
  3345  000D0E  C121  F09D         	movff	_b+2,___ftdiv@f2+2
  3346  000D12  C125  F098         	movff	_r,___ftdiv@f1
  3347  000D16  C126  F099         	movff	_r+1,___ftdiv@f1+1
  3348  000D1A  C127  F09A         	movff	_r+2,___ftdiv@f1+2
  3349  000D1E  ECA3  F016         	call	___ftdiv	;wreg free
  3350  000D22  C098  F0AA         	movff	?___ftdiv,___ftge@ff2
  3351  000D26  C099  F0AB         	movff	?___ftdiv+1,___ftge@ff2+1
  3352  000D2A  C09A  F0AC         	movff	?___ftdiv+2,___ftge@ff2+2
  3353  000D2E  EC21  F022         	call	___ftge	;wreg free
  3354  000D32  0100               	movlb	0	; () banked
  3355  000D34  B0D8               	btfsc	status,0,c
  3356  000D36  D019               	goto	l8306
  3357                           
  3358                           ; BSR set to: 0
  3359  000D38  0E00               	movlw	0
  3360  000D3A  0100               	movlb	0	; () banked
  3361  000D3C  6FA7               	movwf	___ftge@ff1& (0+255),b
  3362  000D3E  0E80               	movlw	128
  3363  000D40  0100               	movlb	0	; () banked
  3364  000D42  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3365  000D44  0E41               	movlw	65
  3366  000D46  0100               	movlb	0	; () banked
  3367  000D48  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3368  000D4A  C125  F0AA         	movff	_r,___ftge@ff2
  3369  000D4E  C126  F0AB         	movff	_r+1,___ftge@ff2+1
  3370  000D52  C127  F0AC         	movff	_r+2,___ftge@ff2+2
  3371  000D56  EC21  F022         	call	___ftge	;wreg free
  3372  000D5A  0100               	movlb	0	; () banked
  3373  000D5C  B0D8               	btfsc	status,0,c
  3374  000D5E  D005               	goto	l8306
  3375                           
  3376                           ; BSR set to: 0
  3377  000D60  0E00               	movlw	0
  3378  000D62  0101               	movlb	1	; () banked
  3379  000D64  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3380  000D66  0E01               	movlw	1
  3381  000D68  D02B               	goto	L10
  3382  000D6A                     l8306:
  3383                           
  3384                           ;main.c: 613: else if(r/b < 0.75) bottle_read_top = 2;
  3385  000D6A  C11F  F09B         	movff	_b,___ftdiv@f2
  3386  000D6E  C120  F09C         	movff	_b+1,___ftdiv@f2+1
  3387  000D72  C121  F09D         	movff	_b+2,___ftdiv@f2+2
  3388  000D76  C125  F098         	movff	_r,___ftdiv@f1
  3389  000D7A  C126  F099         	movff	_r+1,___ftdiv@f1+1
  3390  000D7E  C127  F09A         	movff	_r+2,___ftdiv@f1+2
  3391  000D82  ECA3  F016         	call	___ftdiv	;wreg free
  3392  000D86  C098  F0A7         	movff	?___ftdiv,___ftge@ff1
  3393  000D8A  C099  F0A8         	movff	?___ftdiv+1,___ftge@ff1+1
  3394  000D8E  C09A  F0A9         	movff	?___ftdiv+2,___ftge@ff1+2
  3395  000D92  0E00               	movlw	0
  3396  000D94  0100               	movlb	0	; () banked
  3397  000D96  6FAA               	movwf	___ftge@ff2& (0+255),b
  3398  000D98  0E40               	movlw	64
  3399  000D9A  0100               	movlb	0	; () banked
  3400  000D9C  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  3401  000D9E  0E3F               	movlw	63
  3402  000DA0  0100               	movlb	0	; () banked
  3403  000DA2  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  3404  000DA4  EC21  F022         	call	___ftge	;wreg free
  3405  000DA8  0100               	movlb	0	; () banked
  3406  000DAA  B0D8               	btfsc	status,0,c
  3407  000DAC  D005               	goto	l8310
  3408                           
  3409                           ; BSR set to: 0
  3410  000DAE  0E00               	movlw	0
  3411  000DB0  0101               	movlb	1	; () banked
  3412  000DB2  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3413  000DB4  0E02               	movlw	2
  3414  000DB6  D004               	goto	L10
  3415  000DB8                     l8310:
  3416                           
  3417                           ;main.c: 614: else bottle_read_top = 0;
  3418  000DB8  0E00               	movlw	0
  3419  000DBA  0101               	movlb	1	; () banked
  3420  000DBC  6F2E               	movwf	(_bottle_read_top+1)& (0+255),b
  3421  000DBE  0E00               	movlw	0
  3422  000DC0                     L10:
  3423  000DC0  6F2D               	movwf	_bottle_read_top& (0+255),b
  3424                           
  3425                           ; BSR set to: 1
  3426                           ;main.c: 615: flag_top_read = 1;
  3427                           
  3428                           ; BSR set to: 1
  3429  000DC2  0E00               	movlw	0
  3430  000DC4  0101               	movlb	1	; () banked
  3431  000DC6  6F3A               	movwf	(_flag_top_read+1)& (0+255),b
  3432  000DC8  0E01               	movlw	1
  3433  000DCA  6F39               	movwf	_flag_top_read& (0+255),b
  3434  000DCC                     l528:
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;main.c: 616: }
  3438                           ;main.c: 617: flag_bottle_high = 1;
  3439  000DCC  0E00               	movlw	0
  3440  000DCE  0101               	movlb	1	; () banked
  3441  000DD0  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3442  000DD2  0E01               	movlw	1
  3443  000DD4  D091               	goto	L11
  3444  000DD6                     l8312:
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;main.c: 619: else if(color[0]<30){
  3448  000DD6  0101               	movlb	1	; () banked
  3449  000DD8  5101               	movf	(_color+1)& (0+255),w,b
  3450  000DDA  E104               	bnz	u8461
  3451  000DDC  0E1E               	movlw	30
  3452  000DDE  0101               	movlb	1	; () banked
  3453  000DE0  5D00               	subwf	_color& (0+255),w,b
  3454  000DE2  B0D8               	btfsc	status,0,c
  3455  000DE4                     u8461:
  3456  000DE4  D127               	goto	l8382
  3457                           
  3458                           ; BSR set to: 1
  3459                           ;main.c: 620: if(flag_bottle_high){
  3460  000DE6  0101               	movlb	1	; () banked
  3461  000DE8  5135               	movf	_flag_bottle_high& (0+255),w,b
  3462  000DEA  0101               	movlb	1	; () banked
  3463  000DEC  1136               	iorwf	(_flag_bottle_high+1)& (0+255),w,b
  3464  000DEE  B4D8               	btfsc	status,2,c
  3465  000DF0  D121               	goto	l8382
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;main.c: 621: r_p = (float) colorprev[1];
  3469  000DF2  C10A  F098         	movff	_colorprev+2,___lwtoft@c
  3470  000DF6  C10B  F099         	movff	_colorprev+3,___lwtoft@c+1
  3471  000DFA  EC71  F029         	call	___lwtoft	;wreg free
  3472  000DFE  C098  F128         	movff	?___lwtoft,_r_p
  3473  000E02  C099  F129         	movff	?___lwtoft+1,_r_p+1
  3474  000E06  C09A  F12A         	movff	?___lwtoft+2,_r_p+2
  3475                           
  3476                           ;main.c: 622: b_p = (float) colorprev[3];
  3477  000E0A  C10E  F098         	movff	_colorprev+6,___lwtoft@c
  3478  000E0E  C10F  F099         	movff	_colorprev+7,___lwtoft@c+1
  3479  000E12  EC71  F029         	call	___lwtoft	;wreg free
  3480  000E16  C098  F122         	movff	?___lwtoft,_b_p
  3481  000E1A  C099  F123         	movff	?___lwtoft+1,_b_p+1
  3482  000E1E  C09A  F124         	movff	?___lwtoft+2,_b_p+2
  3483                           
  3484                           ;main.c: 623: if(r_p/b_p > 3.2 && r_p>18) bottle_read_bot = 1;
  3485  000E22  0ECD               	movlw	205
  3486  000E24  0100               	movlb	0	; () banked
  3487  000E26  6FA7               	movwf	___ftge@ff1& (0+255),b
  3488  000E28  0E4C               	movlw	76
  3489  000E2A  0100               	movlb	0	; () banked
  3490  000E2C  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3491  000E2E  0E40               	movlw	64
  3492  000E30  0100               	movlb	0	; () banked
  3493  000E32  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3494  000E34  C122  F09B         	movff	_b_p,___ftdiv@f2
  3495  000E38  C123  F09C         	movff	_b_p+1,___ftdiv@f2+1
  3496  000E3C  C124  F09D         	movff	_b_p+2,___ftdiv@f2+2
  3497  000E40  C128  F098         	movff	_r_p,___ftdiv@f1
  3498  000E44  C129  F099         	movff	_r_p+1,___ftdiv@f1+1
  3499  000E48  C12A  F09A         	movff	_r_p+2,___ftdiv@f1+2
  3500  000E4C  ECA3  F016         	call	___ftdiv	;wreg free
  3501  000E50  C098  F0AA         	movff	?___ftdiv,___ftge@ff2
  3502  000E54  C099  F0AB         	movff	?___ftdiv+1,___ftge@ff2+1
  3503  000E58  C09A  F0AC         	movff	?___ftdiv+2,___ftge@ff2+2
  3504  000E5C  EC21  F022         	call	___ftge	;wreg free
  3505  000E60  0100               	movlb	0	; () banked
  3506  000E62  B0D8               	btfsc	status,0,c
  3507  000E64  D019               	goto	l8322
  3508                           
  3509                           ; BSR set to: 0
  3510  000E66  0E00               	movlw	0
  3511  000E68  0100               	movlb	0	; () banked
  3512  000E6A  6FA7               	movwf	___ftge@ff1& (0+255),b
  3513  000E6C  0E90               	movlw	144
  3514  000E6E  0100               	movlb	0	; () banked
  3515  000E70  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  3516  000E72  0E41               	movlw	65
  3517  000E74  0100               	movlb	0	; () banked
  3518  000E76  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  3519  000E78  C128  F0AA         	movff	_r_p,___ftge@ff2
  3520  000E7C  C129  F0AB         	movff	_r_p+1,___ftge@ff2+1
  3521  000E80  C12A  F0AC         	movff	_r_p+2,___ftge@ff2+2
  3522  000E84  EC21  F022         	call	___ftge	;wreg free
  3523  000E88  0100               	movlb	0	; () banked
  3524  000E8A  B0D8               	btfsc	status,0,c
  3525  000E8C  D005               	goto	l8322
  3526                           
  3527                           ; BSR set to: 0
  3528  000E8E  0E00               	movlw	0
  3529  000E90  0101               	movlb	1	; () banked
  3530  000E92  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3531  000E94  0E01               	movlw	1
  3532  000E96  D02B               	goto	L13
  3533  000E98                     l8322:
  3534                           
  3535                           ;main.c: 624: else if(r_p/b_p < 0.75) bottle_read_bot = 2;
  3536  000E98  C122  F09B         	movff	_b_p,___ftdiv@f2
  3537  000E9C  C123  F09C         	movff	_b_p+1,___ftdiv@f2+1
  3538  000EA0  C124  F09D         	movff	_b_p+2,___ftdiv@f2+2
  3539  000EA4  C128  F098         	movff	_r_p,___ftdiv@f1
  3540  000EA8  C129  F099         	movff	_r_p+1,___ftdiv@f1+1
  3541  000EAC  C12A  F09A         	movff	_r_p+2,___ftdiv@f1+2
  3542  000EB0  ECA3  F016         	call	___ftdiv	;wreg free
  3543  000EB4  C098  F0A7         	movff	?___ftdiv,___ftge@ff1
  3544  000EB8  C099  F0A8         	movff	?___ftdiv+1,___ftge@ff1+1
  3545  000EBC  C09A  F0A9         	movff	?___ftdiv+2,___ftge@ff1+2
  3546  000EC0  0E00               	movlw	0
  3547  000EC2  0100               	movlb	0	; () banked
  3548  000EC4  6FAA               	movwf	___ftge@ff2& (0+255),b
  3549  000EC6  0E40               	movlw	64
  3550  000EC8  0100               	movlb	0	; () banked
  3551  000ECA  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  3552  000ECC  0E3F               	movlw	63
  3553  000ECE  0100               	movlb	0	; () banked
  3554  000ED0  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  3555  000ED2  EC21  F022         	call	___ftge	;wreg free
  3556  000ED6  0100               	movlb	0	; () banked
  3557  000ED8  B0D8               	btfsc	status,0,c
  3558  000EDA  D005               	goto	l8326
  3559                           
  3560                           ; BSR set to: 0
  3561  000EDC  0E00               	movlw	0
  3562  000EDE  0101               	movlb	1	; () banked
  3563  000EE0  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3564  000EE2  0E02               	movlw	2
  3565  000EE4  D004               	goto	L13
  3566  000EE6                     l8326:
  3567                           
  3568                           ;main.c: 625: else bottle_read_bot = 0;
  3569  000EE6  0E00               	movlw	0
  3570  000EE8  0101               	movlb	1	; () banked
  3571  000EEA  6F2C               	movwf	(_bottle_read_bot+1)& (0+255),b
  3572  000EEC  0E00               	movlw	0
  3573  000EEE                     L13:
  3574  000EEE  6F2B               	movwf	_bottle_read_bot& (0+255),b
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;main.c: 626: flag_bottle_high = 0;
  3578                           
  3579                           ; BSR set to: 1
  3580  000EF0  0E00               	movlw	0
  3581  000EF2  0101               	movlb	1	; () banked
  3582  000EF4  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3583  000EF6  0E00               	movlw	0
  3584  000EF8                     L11:
  3585  000EF8  6F35               	movwf	_flag_bottle_high& (0+255),b
  3586                           
  3587                           ; BSR set to: 1
  3588                           ;main.c: 627: }
  3589                           ;main.c: 628: }
  3590                           ;main.c: 629: }
  3591                           
  3592                           ; BSR set to: 1
  3593                           
  3594                           ; BSR set to: 1
  3595  000EFA  D09C               	goto	l8382
  3596  000EFC                     l8328:
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;main.c: 630: else if(flag_bottle && flag_picbug > 20){
  3600  000EFC  0101               	movlb	1	; () banked
  3601  000EFE  5133               	movf	_flag_bottle& (0+255),w,b
  3602  000F00  0101               	movlb	1	; () banked
  3603  000F02  1134               	iorwf	(_flag_bottle+1)& (0+255),w,b
  3604  000F04  B4D8               	btfsc	status,2,c
  3605  000F06  D07D               	goto	l8376
  3606                           
  3607                           ; BSR set to: 1
  3608  000F08  0100               	movlb	0	; () banked
  3609  000F0A  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3610  000F0C  D07A               	goto	l8376
  3611  000F0E  0100               	movlb	0	; () banked
  3612  000F10  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3613  000F12  E105               	bnz	u8520
  3614  000F14  0E15               	movlw	21
  3615  000F16  0100               	movlb	0	; () banked
  3616  000F18  5DE9               	subwf	_flag_picbug& (0+255),w,b
  3617  000F1A  A0D8               	btfss	status,0,c
  3618  000F1C  D072               	goto	l8376
  3619  000F1E                     u8520:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;main.c: 631: flag_picbug = 0;
  3623  000F1E  0E00               	movlw	0
  3624  000F20  0100               	movlb	0	; () banked
  3625  000F22  6FEA               	movwf	(_flag_picbug+1)& (0+255),b
  3626  000F24  0E00               	movlw	0
  3627  000F26  6FE9               	movwf	_flag_picbug& (0+255),b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;main.c: 632: bottle_count_array[0] += 1;
  3631  000F28  0100               	movlb	0	; () banked
  3632  000F2A  4BDF               	infsnz	_bottle_count_array& (0+255),f,b
  3633  000F2C  2BE0               	incf	(_bottle_count_array+1)& (0+255),f,b
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;main.c: 633: TMR0 = 0;
  3637  000F2E  0E00               	movlw	0
  3638  000F30  6ED7               	movwf	4055,c	;volatile
  3639  000F32  0E00               	movlw	0
  3640  000F34  6ED6               	movwf	4054,c	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 634: if(bottle_read_top == 2 || bottle_read_bot == 2 || flag_eskaC>1){
  3644  000F36  0E02               	movlw	2
  3645  000F38  0101               	movlb	1	; () banked
  3646  000F3A  192D               	xorwf	_bottle_read_top& (0+255),w,b
  3647  000F3C  0101               	movlb	1	; () banked
  3648  000F3E  112E               	iorwf	(_bottle_read_top+1)& (0+255),w,b
  3649  000F40  B4D8               	btfsc	status,2,c
  3650  000F42  D012               	goto	l8344
  3651                           
  3652                           ; BSR set to: 1
  3653  000F44  0E02               	movlw	2
  3654  000F46  0101               	movlb	1	; () banked
  3655  000F48  192B               	xorwf	_bottle_read_bot& (0+255),w,b
  3656  000F4A  0101               	movlb	1	; () banked
  3657  000F4C  112C               	iorwf	(_bottle_read_bot+1)& (0+255),w,b
  3658  000F4E  B4D8               	btfsc	status,2,c
  3659  000F50  D00B               	goto	l8344
  3660                           
  3661                           ; BSR set to: 1
  3662  000F52  0101               	movlb	1	; () banked
  3663  000F54  BF38               	btfsc	(_flag_eskaC+1)& (0+255),7,b
  3664  000F56  D010               	goto	l8348
  3665  000F58  0101               	movlb	1	; () banked
  3666  000F5A  5138               	movf	(_flag_eskaC+1)& (0+255),w,b
  3667  000F5C  E105               	bnz	l8344
  3668  000F5E  0E02               	movlw	2
  3669  000F60  0101               	movlb	1	; () banked
  3670  000F62  5D37               	subwf	_flag_eskaC& (0+255),w,b
  3671  000F64  A0D8               	btfss	status,0,c
  3672  000F66  D008               	goto	l8348
  3673  000F68                     l8344:
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;main.c: 635: bottle_count_array[3] += 1;
  3677  000F68  0100               	movlb	0	; () banked
  3678  000F6A  4BE5               	infsnz	(_bottle_count_array+6)& (0+255),f,b
  3679  000F6C  2BE6               	incf	(_bottle_count_array+7)& (0+255),f,b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;main.c: 636: servo1_timer = 1;
  3683  000F6E  0E00               	movlw	0
  3684  000F70  0101               	movlb	1	; () banked
  3685  000F72  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  3686  000F74  0E01               	movlw	1
  3687  000F76  D02A               	goto	L14
  3688  000F78                     l8348:
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;main.c: 638: else if(bottle_read_top == 1 || bottle_read_bot == 1){
  3692  000F78  0101               	movlb	1	; () banked
  3693  000F7A  052D               	decf	_bottle_read_top& (0+255),w,b
  3694  000F7C  0101               	movlb	1	; () banked
  3695  000F7E  112E               	iorwf	(_bottle_read_top+1)& (0+255),w,b
  3696  000F80  B4D8               	btfsc	status,2,c
  3697  000F82  D006               	goto	l8352
  3698                           
  3699                           ; BSR set to: 1
  3700  000F84  0101               	movlb	1	; () banked
  3701  000F86  052B               	decf	_bottle_read_bot& (0+255),w,b
  3702  000F88  0101               	movlb	1	; () banked
  3703  000F8A  112C               	iorwf	(_bottle_read_bot+1)& (0+255),w,b
  3704  000F8C  A4D8               	btfss	status,2,c
  3705  000F8E  D008               	goto	l8356
  3706  000F90                     l8352:
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;main.c: 639: bottle_count_array[1] += 1;
  3710  000F90  0100               	movlb	0	; () banked
  3711  000F92  4BE1               	infsnz	(_bottle_count_array+2)& (0+255),f,b
  3712  000F94  2BE2               	incf	(_bottle_count_array+3)& (0+255),f,b
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 640: servo0_timer = 1;
  3716  000F96  0E00               	movlw	0
  3717  000F98  0101               	movlb	1	; () banked
  3718  000F9A  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  3719  000F9C  0E01               	movlw	1
  3720  000F9E  D00D               	goto	L15
  3721  000FA0                     l8356:
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;main.c: 642: else if(flag_yopNC){
  3725  000FA0  0101               	movlb	1	; () banked
  3726  000FA2  513B               	movf	_flag_yopNC& (0+255),w,b
  3727  000FA4  0101               	movlb	1	; () banked
  3728  000FA6  113C               	iorwf	(_flag_yopNC+1)& (0+255),w,b
  3729  000FA8  B4D8               	btfsc	status,2,c
  3730  000FAA  D009               	goto	l8362
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;main.c: 643: bottle_count_array[2] += 1;
  3734  000FAC  0100               	movlb	0	; () banked
  3735  000FAE  4BE3               	infsnz	(_bottle_count_array+4)& (0+255),f,b
  3736  000FB0  2BE4               	incf	(_bottle_count_array+5)& (0+255),f,b
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;main.c: 644: servo0_timer = 0;
  3740  000FB2  0E00               	movlw	0
  3741  000FB4  0101               	movlb	1	; () banked
  3742  000FB6  6F44               	movwf	(_servo0_timer+1)& (0+255),b
  3743  000FB8  0E00               	movlw	0
  3744  000FBA                     L15:
  3745  000FBA  6F43               	movwf	_servo0_timer& (0+255),b
  3746                           
  3747                           ;main.c: 645: }
  3748  000FBC  D008               	goto	l8366
  3749  000FBE                     l8362:
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;main.c: 646: else{
  3753                           ;main.c: 647: bottle_count_array[4] += 1;
  3754  000FBE  0100               	movlb	0	; () banked
  3755  000FC0  4BE7               	infsnz	(_bottle_count_array+8)& (0+255),f,b
  3756  000FC2  2BE8               	incf	(_bottle_count_array+9)& (0+255),f,b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;main.c: 648: servo1_timer = 0;
  3760  000FC4  0E00               	movlw	0
  3761  000FC6  0101               	movlb	1	; () banked
  3762  000FC8  6F46               	movwf	(_servo1_timer+1)& (0+255),b
  3763  000FCA  0E00               	movlw	0
  3764  000FCC                     L14:
  3765  000FCC  6F45               	movwf	_servo1_timer& (0+255),b
  3766  000FCE                     l8366:
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;main.c: 649: }
  3770                           ;main.c: 650: flag_bottle = 0;
  3771  000FCE  0E00               	movlw	0
  3772  000FD0  0101               	movlb	1	; () banked
  3773  000FD2  6F34               	movwf	(_flag_bottle+1)& (0+255),b
  3774  000FD4  0E00               	movlw	0
  3775  000FD6  6F33               	movwf	_flag_bottle& (0+255),b
  3776                           
  3777                           ; BSR set to: 1
  3778                           ;main.c: 651: flag_bottle_high = 0;
  3779  000FD8  0E00               	movlw	0
  3780  000FDA  0101               	movlb	1	; () banked
  3781  000FDC  6F36               	movwf	(_flag_bottle_high+1)& (0+255),b
  3782  000FDE  0E00               	movlw	0
  3783  000FE0  6F35               	movwf	_flag_bottle_high& (0+255),b
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;main.c: 652: flag_top_read = 0;
  3787  000FE2  0E00               	movlw	0
  3788  000FE4  0101               	movlb	1	; () banked
  3789  000FE6  6F3A               	movwf	(_flag_top_read+1)& (0+255),b
  3790  000FE8  0E00               	movlw	0
  3791  000FEA  6F39               	movwf	_flag_top_read& (0+255),b
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;main.c: 653: flag_yopNC = 0;
  3795  000FEC  0E00               	movlw	0
  3796  000FEE  0101               	movlb	1	; () banked
  3797  000FF0  6F3C               	movwf	(_flag_yopNC+1)& (0+255),b
  3798  000FF2  0E00               	movlw	0
  3799  000FF4  6F3B               	movwf	_flag_yopNC& (0+255),b
  3800                           
  3801                           ; BSR set to: 1
  3802                           ;main.c: 657: flag_eskaC = 0;
  3803  000FF6  0E00               	movlw	0
  3804  000FF8  0101               	movlb	1	; () banked
  3805  000FFA  6F38               	movwf	(_flag_eskaC+1)& (0+255),b
  3806  000FFC  0E00               	movlw	0
  3807  000FFE  6F37               	movwf	_flag_eskaC& (0+255),b
  3808                           
  3809                           ;main.c: 662: }
  3810  001000  D019               	goto	l8382
  3811  001002                     l8376:
  3812                           
  3813                           ;main.c: 663: else if(flag_picbug < 3 && flag_picbug > 0) flag_picbug -= 1;
  3814  001002  0100               	movlb	0	; () banked
  3815  001004  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3816  001006  D008               	goto	l8378
  3817  001008  0100               	movlb	0	; () banked
  3818  00100A  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3819  00100C  E113               	bnz	l8382
  3820  00100E  0E03               	movlw	3
  3821  001010  0100               	movlb	0	; () banked
  3822  001012  5DE9               	subwf	_flag_picbug& (0+255),w,b
  3823  001014  B0D8               	btfsc	status,0,c
  3824  001016  D00E               	goto	l8382
  3825  001018                     l8378:
  3826                           
  3827                           ; BSR set to: 0
  3828  001018  0100               	movlb	0	; () banked
  3829  00101A  BFEA               	btfsc	(_flag_picbug+1)& (0+255),7,b
  3830  00101C  D00B               	goto	l8382
  3831  00101E  0100               	movlb	0	; () banked
  3832  001020  51EA               	movf	(_flag_picbug+1)& (0+255),w,b
  3833  001022  E104               	bnz	u8600
  3834  001024  0100               	movlb	0	; () banked
  3835  001026  05E9               	decf	_flag_picbug& (0+255),w,b
  3836  001028  A0D8               	btfss	status,0,c
  3837  00102A  D004               	goto	l8382
  3838  00102C                     u8600:
  3839                           
  3840                           ; BSR set to: 0
  3841  00102C  0100               	movlb	0	; () banked
  3842  00102E  07E9               	decf	_flag_picbug& (0+255),f,b
  3843  001030  A0D8               	btfss	status,0,c
  3844  001032  07EA               	decf	(_flag_picbug+1)& (0+255),f,b
  3845  001034                     l8382:
  3846                           
  3847                           ;main.c: 664: GIE = 1;
  3848  001034  8EF2               	bsf	intcon,7,c	;volatile
  3849  001036  0012               	return	
  3850  001038                     __end_of_operation:
  3851                           	opt stack 0
  3852                           tblptru	equ	0xFF8
  3853                           tblptrh	equ	0xFF7
  3854                           tblptrl	equ	0xFF6
  3855                           tablat	equ	0xFF5
  3856                           intcon	equ	0xFF2
  3857                           intcon2	equ	0xFF1
  3858                           intcon3	equ	0xFF0
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           postdec1	equ	0xFE5
  3862                           fsr1l	equ	0xFE1
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _savedata *****************
  3870 ;; Defined at:
  3871 ;;		line 787 in file "main.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    8
  3892 ;; This function calls:
  3893 ;;		_eeprom_readbyte
  3894 ;;		_eeprom_writebyte
  3895 ;; This function is called by:
  3896 ;;		_operation
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text4
  3901  00173A                     __ptext4:
  3902                           	opt stack 0
  3903  00173A                     _savedata:
  3904                           	opt stack 21
  3905                           
  3906                           ;main.c: 794: eeprom_writebyte(44, eeprom_readbyte(39));
  3907                           
  3908                           ;incstack = 0
  3909  00173A  0E00               	movlw	0
  3910  00173C  0100               	movlb	0	; () banked
  3911  00173E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3912  001740  0E2C               	movlw	44
  3913  001742  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3914  001744  0E00               	movlw	0
  3915  001746  0100               	movlb	0	; () banked
  3916  001748  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3917  00174A  0E27               	movlw	39
  3918  00174C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3919  00174E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  3920  001752  0100               	movlb	0	; () banked
  3921  001754  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3922  001756  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  3923                           
  3924                           ;main.c: 795: eeprom_writebyte(43, eeprom_readbyte(38));
  3925  00175A  0E00               	movlw	0
  3926  00175C  0100               	movlb	0	; () banked
  3927  00175E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3928  001760  0E2B               	movlw	43
  3929  001762  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3930  001764  0E00               	movlw	0
  3931  001766  0100               	movlb	0	; () banked
  3932  001768  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3933  00176A  0E26               	movlw	38
  3934  00176C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3935  00176E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  3936  001772  0100               	movlb	0	; () banked
  3937  001774  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3938  001776  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  3939                           
  3940                           ;main.c: 796: eeprom_writebyte(42, eeprom_readbyte(37));
  3941  00177A  0E00               	movlw	0
  3942  00177C  0100               	movlb	0	; () banked
  3943  00177E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3944  001780  0E2A               	movlw	42
  3945  001782  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3946  001784  0E00               	movlw	0
  3947  001786  0100               	movlb	0	; () banked
  3948  001788  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3949  00178A  0E25               	movlw	37
  3950  00178C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3951  00178E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  3952  001792  0100               	movlb	0	; () banked
  3953  001794  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3954  001796  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  3955                           
  3956                           ;main.c: 797: eeprom_writebyte(41, eeprom_readbyte(36));
  3957  00179A  0E00               	movlw	0
  3958  00179C  0100               	movlb	0	; () banked
  3959  00179E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3960  0017A0  0E29               	movlw	41
  3961  0017A2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3962  0017A4  0E00               	movlw	0
  3963  0017A6  0100               	movlb	0	; () banked
  3964  0017A8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3965  0017AA  0E24               	movlw	36
  3966  0017AC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3967  0017AE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  3968  0017B2  0100               	movlb	0	; () banked
  3969  0017B4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3970  0017B6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  3971                           
  3972                           ;main.c: 798: eeprom_writebyte(40, eeprom_readbyte(35));
  3973  0017BA  0E00               	movlw	0
  3974  0017BC  0100               	movlb	0	; () banked
  3975  0017BE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3976  0017C0  0E28               	movlw	40
  3977  0017C2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3978  0017C4  0E00               	movlw	0
  3979  0017C6  0100               	movlb	0	; () banked
  3980  0017C8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3981  0017CA  0E23               	movlw	35
  3982  0017CC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3983  0017CE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  3984  0017D2  0100               	movlb	0	; () banked
  3985  0017D4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  3986  0017D6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  3987                           
  3988                           ;main.c: 800: eeprom_writebyte(39, eeprom_readbyte(34));
  3989  0017DA  0E00               	movlw	0
  3990  0017DC  0100               	movlb	0	; () banked
  3991  0017DE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  3992  0017E0  0E27               	movlw	39
  3993  0017E2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  3994  0017E4  0E00               	movlw	0
  3995  0017E6  0100               	movlb	0	; () banked
  3996  0017E8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  3997  0017EA  0E22               	movlw	34
  3998  0017EC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  3999  0017EE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4000  0017F2  0100               	movlb	0	; () banked
  4001  0017F4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4002  0017F6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4003                           
  4004                           ;main.c: 801: eeprom_writebyte(38, eeprom_readbyte(33));
  4005  0017FA  0E00               	movlw	0
  4006  0017FC  0100               	movlb	0	; () banked
  4007  0017FE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4008  001800  0E26               	movlw	38
  4009  001802  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4010  001804  0E00               	movlw	0
  4011  001806  0100               	movlb	0	; () banked
  4012  001808  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4013  00180A  0E21               	movlw	33
  4014  00180C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4015  00180E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4016  001812  0100               	movlb	0	; () banked
  4017  001814  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4018  001816  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4019                           
  4020                           ;main.c: 802: eeprom_writebyte(37, eeprom_readbyte(32));
  4021  00181A  0E00               	movlw	0
  4022  00181C  0100               	movlb	0	; () banked
  4023  00181E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4024  001820  0E25               	movlw	37
  4025  001822  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4026  001824  0E00               	movlw	0
  4027  001826  0100               	movlb	0	; () banked
  4028  001828  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4029  00182A  0E20               	movlw	32
  4030  00182C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4031  00182E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4032  001832  0100               	movlb	0	; () banked
  4033  001834  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4034  001836  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4035                           
  4036                           ;main.c: 803: eeprom_writebyte(36, eeprom_readbyte(31));
  4037  00183A  0E00               	movlw	0
  4038  00183C  0100               	movlb	0	; () banked
  4039  00183E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4040  001840  0E24               	movlw	36
  4041  001842  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4042  001844  0E00               	movlw	0
  4043  001846  0100               	movlb	0	; () banked
  4044  001848  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4045  00184A  0E1F               	movlw	31
  4046  00184C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4047  00184E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4048  001852  0100               	movlb	0	; () banked
  4049  001854  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4050  001856  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4051                           
  4052                           ;main.c: 804: eeprom_writebyte(35, eeprom_readbyte(30));
  4053  00185A  0E00               	movlw	0
  4054  00185C  0100               	movlb	0	; () banked
  4055  00185E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4056  001860  0E23               	movlw	35
  4057  001862  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4058  001864  0E00               	movlw	0
  4059  001866  0100               	movlb	0	; () banked
  4060  001868  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4061  00186A  0E1E               	movlw	30
  4062  00186C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4063  00186E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4064  001872  0100               	movlb	0	; () banked
  4065  001874  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4066  001876  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4067                           
  4068                           ;main.c: 806: eeprom_writebyte(34, eeprom_readbyte(29));
  4069  00187A  0E00               	movlw	0
  4070  00187C  0100               	movlb	0	; () banked
  4071  00187E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4072  001880  0E22               	movlw	34
  4073  001882  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4074  001884  0E00               	movlw	0
  4075  001886  0100               	movlb	0	; () banked
  4076  001888  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4077  00188A  0E1D               	movlw	29
  4078  00188C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4079  00188E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4080  001892  0100               	movlb	0	; () banked
  4081  001894  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4082  001896  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4083                           
  4084                           ;main.c: 807: eeprom_writebyte(33, eeprom_readbyte(28));
  4085  00189A  0E00               	movlw	0
  4086  00189C  0100               	movlb	0	; () banked
  4087  00189E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4088  0018A0  0E21               	movlw	33
  4089  0018A2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4090  0018A4  0E00               	movlw	0
  4091  0018A6  0100               	movlb	0	; () banked
  4092  0018A8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4093  0018AA  0E1C               	movlw	28
  4094  0018AC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4095  0018AE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4096  0018B2  0100               	movlb	0	; () banked
  4097  0018B4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4098  0018B6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4099                           
  4100                           ;main.c: 808: eeprom_writebyte(32, eeprom_readbyte(27));
  4101  0018BA  0E00               	movlw	0
  4102  0018BC  0100               	movlb	0	; () banked
  4103  0018BE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4104  0018C0  0E20               	movlw	32
  4105  0018C2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4106  0018C4  0E00               	movlw	0
  4107  0018C6  0100               	movlb	0	; () banked
  4108  0018C8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4109  0018CA  0E1B               	movlw	27
  4110  0018CC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4111  0018CE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4112  0018D2  0100               	movlb	0	; () banked
  4113  0018D4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4114  0018D6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4115                           
  4116                           ;main.c: 809: eeprom_writebyte(31, eeprom_readbyte(26));
  4117  0018DA  0E00               	movlw	0
  4118  0018DC  0100               	movlb	0	; () banked
  4119  0018DE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4120  0018E0  0E1F               	movlw	31
  4121  0018E2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4122  0018E4  0E00               	movlw	0
  4123  0018E6  0100               	movlb	0	; () banked
  4124  0018E8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4125  0018EA  0E1A               	movlw	26
  4126  0018EC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4127  0018EE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4128  0018F2  0100               	movlb	0	; () banked
  4129  0018F4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4130  0018F6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4131                           
  4132                           ;main.c: 810: eeprom_writebyte(30, eeprom_readbyte(25));
  4133  0018FA  0E00               	movlw	0
  4134  0018FC  0100               	movlb	0	; () banked
  4135  0018FE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4136  001900  0E1E               	movlw	30
  4137  001902  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4138  001904  0E00               	movlw	0
  4139  001906  0100               	movlb	0	; () banked
  4140  001908  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4141  00190A  0E19               	movlw	25
  4142  00190C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4143  00190E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4144  001912  0100               	movlb	0	; () banked
  4145  001914  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4146  001916  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4147                           
  4148                           ;main.c: 812: eeprom_writebyte(29, eeprom_readbyte(34));
  4149  00191A  0E00               	movlw	0
  4150  00191C  0100               	movlb	0	; () banked
  4151  00191E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4152  001920  0E1D               	movlw	29
  4153  001922  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4154  001924  0E00               	movlw	0
  4155  001926  0100               	movlb	0	; () banked
  4156  001928  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4157  00192A  0E22               	movlw	34
  4158  00192C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4159  00192E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4160  001932  0100               	movlb	0	; () banked
  4161  001934  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4162  001936  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4163                           
  4164                           ;main.c: 813: eeprom_writebyte(28, eeprom_readbyte(23));
  4165  00193A  0E00               	movlw	0
  4166  00193C  0100               	movlb	0	; () banked
  4167  00193E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4168  001940  0E1C               	movlw	28
  4169  001942  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4170  001944  0E00               	movlw	0
  4171  001946  0100               	movlb	0	; () banked
  4172  001948  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4173  00194A  0E17               	movlw	23
  4174  00194C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4175  00194E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4176  001952  0100               	movlb	0	; () banked
  4177  001954  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4178  001956  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4179                           
  4180                           ;main.c: 814: eeprom_writebyte(27, eeprom_readbyte(22));
  4181  00195A  0E00               	movlw	0
  4182  00195C  0100               	movlb	0	; () banked
  4183  00195E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4184  001960  0E1B               	movlw	27
  4185  001962  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4186  001964  0E00               	movlw	0
  4187  001966  0100               	movlb	0	; () banked
  4188  001968  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4189  00196A  0E16               	movlw	22
  4190  00196C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4191  00196E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4192  001972  0100               	movlb	0	; () banked
  4193  001974  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4194  001976  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4195                           
  4196                           ;main.c: 815: eeprom_writebyte(26, eeprom_readbyte(21));
  4197  00197A  0E00               	movlw	0
  4198  00197C  0100               	movlb	0	; () banked
  4199  00197E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4200  001980  0E1A               	movlw	26
  4201  001982  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4202  001984  0E00               	movlw	0
  4203  001986  0100               	movlb	0	; () banked
  4204  001988  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4205  00198A  0E15               	movlw	21
  4206  00198C  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4207  00198E  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4208  001992  0100               	movlb	0	; () banked
  4209  001994  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4210  001996  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4211                           
  4212                           ;main.c: 816: eeprom_writebyte(25, eeprom_readbyte(20));
  4213  00199A  0E00               	movlw	0
  4214  00199C  0100               	movlb	0	; () banked
  4215  00199E  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4216  0019A0  0E19               	movlw	25
  4217  0019A2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4218  0019A4  0E00               	movlw	0
  4219  0019A6  0100               	movlb	0	; () banked
  4220  0019A8  6F91               	movwf	(eeprom_readbyte@address+1)& (0+255),b
  4221  0019AA  0E14               	movlw	20
  4222  0019AC  6F90               	movwf	eeprom_readbyte@address& (0+255),b
  4223  0019AE  EC26  F02A         	call	_eeprom_readbyte	;wreg free
  4224  0019B2  0100               	movlb	0	; () banked
  4225  0019B4  6F94               	movwf	eeprom_writebyte@data& (0+255),b
  4226  0019B6  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4227                           
  4228                           ;main.c: 818: eeprom_writebyte(24, bottle_count_array[4]);
  4229  0019BA  0E00               	movlw	0
  4230  0019BC  0100               	movlb	0	; () banked
  4231  0019BE  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4232  0019C0  0E18               	movlw	24
  4233  0019C2  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4234  0019C4  C0E7  F094         	movff	_bottle_count_array+8,eeprom_writebyte@data
  4235  0019C8  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4236                           
  4237                           ;main.c: 819: eeprom_writebyte(23, bottle_count_array[3]);
  4238  0019CC  0E00               	movlw	0
  4239  0019CE  0100               	movlb	0	; () banked
  4240  0019D0  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4241  0019D2  0E17               	movlw	23
  4242  0019D4  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4243  0019D6  C0E5  F094         	movff	_bottle_count_array+6,eeprom_writebyte@data
  4244  0019DA  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4245                           
  4246                           ;main.c: 820: eeprom_writebyte(22, bottle_count_array[2]);
  4247  0019DE  0E00               	movlw	0
  4248  0019E0  0100               	movlb	0	; () banked
  4249  0019E2  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4250  0019E4  0E16               	movlw	22
  4251  0019E6  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4252  0019E8  C0E3  F094         	movff	_bottle_count_array+4,eeprom_writebyte@data
  4253  0019EC  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4254                           
  4255                           ;main.c: 821: eeprom_writebyte(21, bottle_count_array[1]);
  4256  0019F0  0E00               	movlw	0
  4257  0019F2  0100               	movlb	0	; () banked
  4258  0019F4  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4259  0019F6  0E15               	movlw	21
  4260  0019F8  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4261  0019FA  C0E1  F094         	movff	_bottle_count_array+2,eeprom_writebyte@data
  4262  0019FE  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4263                           
  4264                           ;main.c: 822: eeprom_writebyte(20, bottle_count_array[0]);
  4265  001A02  0E00               	movlw	0
  4266  001A04  0100               	movlb	0	; () banked
  4267  001A06  6F93               	movwf	(eeprom_writebyte@address+1)& (0+255),b
  4268  001A08  0E14               	movlw	20
  4269  001A0A  6F92               	movwf	eeprom_writebyte@address& (0+255),b
  4270  001A0C  C0DF  F094         	movff	_bottle_count_array,eeprom_writebyte@data
  4271  001A10  EC9B  F029         	call	_eeprom_writebyte	;wreg free
  4272  001A14  0012               	return		;funcret
  4273  001A16                     __end_of_savedata:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           intcon	equ	0xFF2
  4280                           intcon2	equ	0xFF1
  4281                           intcon3	equ	0xFF0
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           postdec1	equ	0xFE5
  4285                           fsr1l	equ	0xFE1
  4286                           postinc2	equ	0xFDE
  4287                           postdec2	equ	0xFDD
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _eeprom_writebyte *****************
  4293 ;; Defined at:
  4294 ;;		line 761 in file "main.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  address         2   18[BANK0 ] unsigned int 
  4297 ;;  data            1   20[BANK0 ] unsigned char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        3 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    7
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;;		_savedata
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text5
  4325  005336                     __ptext5:
  4326                           	opt stack 0
  4327  005336                     _eeprom_writebyte:
  4328                           	opt stack 21
  4329                           
  4330                           ;main.c: 763: EEADRH = (uint8_t)(address >> 8);
  4331                           
  4332                           ;incstack = 0
  4333  005336  0100               	movlb	0	; () banked
  4334  005338  5193               	movf	(eeprom_writebyte@address+1)& (0+255),w,b
  4335  00533A  6EAA               	movwf	4010,c	;volatile
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;main.c: 764: EEADR = (uint8_t)address;
  4339  00533C  C092  FFA9         	movff	eeprom_writebyte@address,4009	;volatile
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;main.c: 766: EEDATA = data;
  4343  005340  C094  FFA8         	movff	eeprom_writebyte@data,4008	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;main.c: 767: EECON1bits.EEPGD = 0;
  4347  005344  9EA6               	bcf	4006,7,c	;volatile
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;main.c: 768: EECON1bits.CFGS = 0;
  4351  005346  9CA6               	bcf	4006,6,c	;volatile
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;main.c: 769: EECON1bits.WREN = 1;
  4355  005348  84A6               	bsf	4006,2,c	;volatile
  4356                           
  4357                           ;main.c: 773: EECON2 = 0x55;
  4358  00534A  0E55               	movlw	85
  4359  00534C  6EA7               	movwf	4007,c	;volatile
  4360                           
  4361                           ;main.c: 774: EECON2 = 0xAA;
  4362  00534E  0EAA               	movlw	170
  4363  005350  6EA7               	movwf	4007,c	;volatile
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;main.c: 775: EECON1bits.WR = 1;
  4367  005352  82A6               	bsf	4006,1,c	;volatile
  4368  005354                     l596:
  4369  005354  A8A1               	btfss	4001,4,c	;volatile
  4370  005356  D7FE               	goto	l596
  4371                           
  4372                           ;main.c: 781: }
  4373                           ;main.c: 783: PIR2bits.EEIF = 0;
  4374  005358  98A1               	bcf	4001,4,c	;volatile
  4375                           
  4376                           ;main.c: 784: EECON1bits.WREN = 0;
  4377  00535A  94A6               	bcf	4006,2,c	;volatile
  4378  00535C  0012               	return		;funcret
  4379  00535E                     __end_of_eeprom_writebyte:
  4380                           	opt stack 0
  4381                           tblptru	equ	0xFF8
  4382                           tblptrh	equ	0xFF7
  4383                           tblptrl	equ	0xFF6
  4384                           tablat	equ	0xFF5
  4385                           intcon	equ	0xFF2
  4386                           intcon2	equ	0xFF1
  4387                           intcon3	equ	0xFF0
  4388                           postinc0	equ	0xFEE
  4389                           wreg	equ	0xFE8
  4390                           postdec1	equ	0xFE5
  4391                           fsr1l	equ	0xFE1
  4392                           postinc2	equ	0xFDE
  4393                           postdec2	equ	0xFDD
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398 ;; *************** function _eeprom_readbyte *****************
  4399 ;; Defined at:
  4400 ;;		line 744 in file "main.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  address         2   16[BANK0 ] unsigned int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      unsigned char 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    7
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_savedata
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text6
  4429  00544C                     __ptext6:
  4430                           	opt stack 0
  4431  00544C                     _eeprom_readbyte:
  4432                           	opt stack 21
  4433                           
  4434                           ;main.c: 747: EEADRH = (uint8_t)(address >> 8);
  4435                           
  4436                           ;incstack = 0
  4437  00544C  0100               	movlb	0	; () banked
  4438  00544E  5191               	movf	(eeprom_readbyte@address+1)& (0+255),w,b
  4439  005450  6EAA               	movwf	4010,c	;volatile
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;main.c: 748: EEADR = (uint8_t)address;
  4443  005452  C090  FFA9         	movff	eeprom_readbyte@address,4009	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;main.c: 750: EECON1bits.EEPGD = 0;
  4447  005456  9EA6               	bcf	4006,7,c	;volatile
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;main.c: 751: EECON1bits.CFGS = 0;
  4451  005458  9CA6               	bcf	4006,6,c	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;main.c: 752: EECON1bits.RD = 1;
  4455  00545A  80A6               	bsf	4006,0,c	;volatile
  4456  00545C                     l590:
  4457  00545C  B0A6               	btfsc	4006,0,c	;volatile
  4458  00545E  D7FE               	goto	l590
  4459                           
  4460                           ;main.c: 758: return EEDATA;
  4461  005460  50A8               	movf	4008,w,c	;volatile
  4462  005462  0012               	return	
  4463  005464                     __end_of_eeprom_readbyte:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           intcon3	equ	0xFF0
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function _read_time *****************
  4483 ;; Defined at:
  4484 ;;		line 398 in file "main.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  i               1   19[BANK0 ] unsigned char 
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;Total ram usage:        1 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    9
  4505 ;; This function calls:
  4506 ;;		_I2C_Master_Read
  4507 ;;		_I2C_Master_Start
  4508 ;;		_I2C_Master_Stop
  4509 ;;		_I2C_Master_Write
  4510 ;; This function is called by:
  4511 ;;		_operation
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text7
  4516  004CF6                     __ptext7:
  4517                           	opt stack 0
  4518  004CF6                     _read_time:
  4519                           	opt stack 20
  4520                           
  4521                           ;main.c: 400: I2C_Master_Start();
  4522                           
  4523                           ;incstack = 0
  4524  004CF6  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
  4525                           
  4526                           ;main.c: 401: I2C_Master_Write(0b11010000);
  4527  004CFA  0E00               	movlw	0
  4528  004CFC  0100               	movlb	0	; () banked
  4529  004CFE  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4530  004D00  0ED0               	movlw	208
  4531  004D02  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4532  004D04  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  4533                           
  4534                           ;main.c: 402: I2C_Master_Write(0x00);
  4535  004D08  0E00               	movlw	0
  4536  004D0A  0100               	movlb	0	; () banked
  4537  004D0C  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4538  004D0E  0E00               	movlw	0
  4539  004D10  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4540  004D12  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  4541                           
  4542                           ;main.c: 403: I2C_Master_Stop();
  4543  004D16  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
  4544                           
  4545                           ;main.c: 406: I2C_Master_Start();
  4546  004D1A  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
  4547                           
  4548                           ;main.c: 407: I2C_Master_Write(0b11010001);
  4549  004D1E  0E00               	movlw	0
  4550  004D20  0100               	movlb	0	; () banked
  4551  004D22  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4552  004D24  0ED1               	movlw	209
  4553  004D26  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4554  004D28  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  4555                           
  4556                           ;main.c: 408: for(unsigned char i=0;i<0x06;i++){
  4557  004D2C  0E00               	movlw	0
  4558  004D2E  0100               	movlb	0	; () banked
  4559  004D30  6F93               	movwf	read_time@i& (0+255),b
  4560  004D32                     l7966:
  4561                           
  4562                           ; BSR set to: 0
  4563  004D32  0E05               	movlw	5
  4564  004D34  0100               	movlb	0	; () banked
  4565  004D36  6593               	cpfsgt	read_time@i& (0+255),b
  4566  004D38  D001               	goto	l7970
  4567  004D3A  D010               	goto	l7976
  4568  004D3C                     l7970:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;main.c: 409: time[i] = I2C_Master_Read(1);
  4572  004D3C  0100               	movlb	0	; () banked
  4573  004D3E  5193               	movf	read_time@i& (0+255),w,b
  4574  004D40  0D01               	mullw	1
  4575  004D42  0E10               	movlw	low _time
  4576  004D44  24F3               	addwf	prodl,w,c
  4577  004D46  6ED9               	movwf	fsr2l,c
  4578  004D48  0E01               	movlw	high _time
  4579  004D4A  20F4               	addwfc	prodh,w,c
  4580  004D4C  6EDA               	movwf	fsr2h,c
  4581  004D4E  0E01               	movlw	1
  4582  004D50  EC5A  F029         	call	_I2C_Master_Read
  4583  004D54  6EDF               	movwf	indf2,c
  4584  004D56  0100               	movlb	0	; () banked
  4585  004D58  2B93               	incf	read_time@i& (0+255),f,b
  4586  004D5A  D7EB               	goto	l7966
  4587  004D5C                     l7976:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;main.c: 410: }
  4591                           ;main.c: 411: time[6] = I2C_Master_Read(0);
  4592  004D5C  0E00               	movlw	0
  4593  004D5E  EC5A  F029         	call	_I2C_Master_Read
  4594  004D62  0101               	movlb	1	; () banked
  4595  004D64  6F16               	movwf	(_time+6)& (0+255),b
  4596                           
  4597                           ;main.c: 412: I2C_Master_Stop();
  4598  004D66  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
  4599  004D6A  0012               	return	
  4600  004D6C                     __end_of_read_time:
  4601                           	opt stack 0
  4602                           tblptru	equ	0xFF8
  4603                           tblptrh	equ	0xFF7
  4604                           tblptrl	equ	0xFF6
  4605                           tablat	equ	0xFF5
  4606                           prodh	equ	0xFF4
  4607                           prodl	equ	0xFF3
  4608                           intcon	equ	0xFF2
  4609                           intcon2	equ	0xFF1
  4610                           intcon3	equ	0xFF0
  4611                           postinc0	equ	0xFEE
  4612                           wreg	equ	0xFE8
  4613                           postdec1	equ	0xFE5
  4614                           fsr1l	equ	0xFE1
  4615                           indf2	equ	0xFDF
  4616                           postinc2	equ	0xFDE
  4617                           postdec2	equ	0xFDD
  4618                           fsr2h	equ	0xFDA
  4619                           fsr2l	equ	0xFD9
  4620                           status	equ	0xFD8
  4621                           
  4622 ;; *************** function _read_colorsensor *****************
  4623 ;; Defined at:
  4624 ;;		line 706 in file "main.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;Total ram usage:        2 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    9
  4645 ;; This function calls:
  4646 ;;		_I2C_Master_Read
  4647 ;;		_I2C_Master_Start
  4648 ;;		_I2C_Master_Stop
  4649 ;;		_I2C_Master_Write
  4650 ;; This function is called by:
  4651 ;;		_standby
  4652 ;;		_operation
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text8
  4657  003C38                     __ptext8:
  4658                           	opt stack 0
  4659  003C38                     _read_colorsensor:
  4660                           	opt stack 20
  4661                           
  4662                           ;main.c: 725: I2C_Master_Start();
  4663                           
  4664                           ;incstack = 0
  4665  003C38  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
  4666                           
  4667                           ;main.c: 726: I2C_Master_Write(0b01010011);
  4668  003C3C  0E00               	movlw	0
  4669  003C3E  0100               	movlb	0	; () banked
  4670  003C40  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  4671  003C42  0E53               	movlw	83
  4672  003C44  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  4673  003C46  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  4674                           
  4675                           ;main.c: 727: color_low[0] = I2C_Master_Read(1);
  4676  003C4A  0E01               	movlw	1
  4677  003C4C  EC5A  F029         	call	_I2C_Master_Read
  4678  003C50  0101               	movlb	1	; () banked
  4679  003C52  6F1B               	movwf	_color_low& (0+255),b
  4680                           
  4681                           ;main.c: 728: color_high[0] = I2C_Master_Read(1);
  4682  003C54  0E01               	movlw	1
  4683  003C56  EC5A  F029         	call	_I2C_Master_Read
  4684  003C5A  0101               	movlb	1	; () banked
  4685  003C5C  6F17               	movwf	_color_high& (0+255),b
  4686                           
  4687                           ;main.c: 729: color_low[1] = I2C_Master_Read(1);
  4688  003C5E  0E01               	movlw	1
  4689  003C60  EC5A  F029         	call	_I2C_Master_Read
  4690  003C64  0101               	movlb	1	; () banked
  4691  003C66  6F1C               	movwf	(_color_low+1)& (0+255),b
  4692                           
  4693                           ;main.c: 730: color_high[1] = I2C_Master_Read(1);
  4694  003C68  0E01               	movlw	1
  4695  003C6A  EC5A  F029         	call	_I2C_Master_Read
  4696  003C6E  0101               	movlb	1	; () banked
  4697  003C70  6F18               	movwf	(_color_high+1)& (0+255),b
  4698                           
  4699                           ;main.c: 731: color_low[2] = I2C_Master_Read(1);
  4700  003C72  0E01               	movlw	1
  4701  003C74  EC5A  F029         	call	_I2C_Master_Read
  4702  003C78  0101               	movlb	1	; () banked
  4703  003C7A  6F1D               	movwf	(_color_low+2)& (0+255),b
  4704                           
  4705                           ;main.c: 732: color_high[2] = I2C_Master_Read(1);
  4706  003C7C  0E01               	movlw	1
  4707  003C7E  EC5A  F029         	call	_I2C_Master_Read
  4708  003C82  0101               	movlb	1	; () banked
  4709  003C84  6F19               	movwf	(_color_high+2)& (0+255),b
  4710                           
  4711                           ;main.c: 733: color_low[3] = I2C_Master_Read(1);
  4712  003C86  0E01               	movlw	1
  4713  003C88  EC5A  F029         	call	_I2C_Master_Read
  4714  003C8C  0101               	movlb	1	; () banked
  4715  003C8E  6F1E               	movwf	(_color_low+3)& (0+255),b
  4716                           
  4717                           ;main.c: 734: color_high[3] = I2C_Master_Read(0);
  4718  003C90  0E00               	movlw	0
  4719  003C92  EC5A  F029         	call	_I2C_Master_Read
  4720  003C96  0101               	movlb	1	; () banked
  4721  003C98  6F1A               	movwf	(_color_high+3)& (0+255),b
  4722                           
  4723                           ;main.c: 735: I2C_Master_Stop();
  4724  003C9A  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
  4725                           
  4726                           ;main.c: 736: color[0] = (color_high[0] << 8)|(color_low[0]);
  4727  003C9E  0101               	movlb	1	; () banked
  4728  003CA0  511B               	movf	_color_low& (0+255),w,b
  4729  003CA2  C117  F093         	movff	_color_high,??_read_colorsensor
  4730  003CA6  0100               	movlb	0	; () banked
  4731  003CA8  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4732  003CAA  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4733  003CAE  0100               	movlb	0	; () banked
  4734  003CB0  6B93               	clrf	??_read_colorsensor& (0+255),b
  4735  003CB2  0100               	movlb	0	; () banked
  4736  003CB4  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4737  003CB6  0101               	movlb	1	; () banked
  4738  003CB8  6F00               	movwf	_color& (0+255),b
  4739  003CBA  0100               	movlb	0	; () banked
  4740  003CBC  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4741  003CBE  0101               	movlb	1	; () banked
  4742  003CC0  6F01               	movwf	(_color+1)& (0+255),b
  4743                           
  4744                           ; BSR set to: 1
  4745                           ;main.c: 737: color[1] = (color_high[1] << 8)|(color_low[1]);
  4746  003CC2  0101               	movlb	1	; () banked
  4747  003CC4  511C               	movf	(_color_low+1)& (0+255),w,b
  4748  003CC6  C118  F093         	movff	_color_high+1,??_read_colorsensor
  4749  003CCA  0100               	movlb	0	; () banked
  4750  003CCC  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4751  003CCE  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4752  003CD2  0100               	movlb	0	; () banked
  4753  003CD4  6B93               	clrf	??_read_colorsensor& (0+255),b
  4754  003CD6  0100               	movlb	0	; () banked
  4755  003CD8  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4756  003CDA  0101               	movlb	1	; () banked
  4757  003CDC  6F02               	movwf	(_color+2)& (0+255),b
  4758  003CDE  0100               	movlb	0	; () banked
  4759  003CE0  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4760  003CE2  0101               	movlb	1	; () banked
  4761  003CE4  6F03               	movwf	(_color+3)& (0+255),b
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;main.c: 738: color[2] = (color_high[2] << 8)|(color_low[2]);
  4765  003CE6  0101               	movlb	1	; () banked
  4766  003CE8  511D               	movf	(_color_low+2)& (0+255),w,b
  4767  003CEA  C119  F093         	movff	_color_high+2,??_read_colorsensor
  4768  003CEE  0100               	movlb	0	; () banked
  4769  003CF0  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4770  003CF2  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4771  003CF6  0100               	movlb	0	; () banked
  4772  003CF8  6B93               	clrf	??_read_colorsensor& (0+255),b
  4773  003CFA  0100               	movlb	0	; () banked
  4774  003CFC  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4775  003CFE  0101               	movlb	1	; () banked
  4776  003D00  6F04               	movwf	(_color+4)& (0+255),b
  4777  003D02  0100               	movlb	0	; () banked
  4778  003D04  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4779  003D06  0101               	movlb	1	; () banked
  4780  003D08  6F05               	movwf	(_color+5)& (0+255),b
  4781                           
  4782                           ; BSR set to: 1
  4783                           ;main.c: 739: color[3] = (color_high[3] << 8)|(color_low[3]);
  4784  003D0A  0101               	movlb	1	; () banked
  4785  003D0C  511E               	movf	(_color_low+3)& (0+255),w,b
  4786  003D0E  C11A  F093         	movff	_color_high+3,??_read_colorsensor
  4787  003D12  0100               	movlb	0	; () banked
  4788  003D14  6B94               	clrf	(??_read_colorsensor+1)& (0+255),b
  4789  003D16  C093  F094         	movff	??_read_colorsensor,??_read_colorsensor+1
  4790  003D1A  0100               	movlb	0	; () banked
  4791  003D1C  6B93               	clrf	??_read_colorsensor& (0+255),b
  4792  003D1E  0100               	movlb	0	; () banked
  4793  003D20  1193               	iorwf	??_read_colorsensor& (0+255),w,b
  4794  003D22  0101               	movlb	1	; () banked
  4795  003D24  6F06               	movwf	(_color+6)& (0+255),b
  4796  003D26  0100               	movlb	0	; () banked
  4797  003D28  5194               	movf	(??_read_colorsensor+1)& (0+255),w,b
  4798  003D2A  0101               	movlb	1	; () banked
  4799  003D2C  6F07               	movwf	(_color+7)& (0+255),b
  4800  003D2E  0012               	return	
  4801  003D30                     __end_of_read_colorsensor:
  4802                           	opt stack 0
  4803                           tblptru	equ	0xFF8
  4804                           tblptrh	equ	0xFF7
  4805                           tblptrl	equ	0xFF6
  4806                           tablat	equ	0xFF5
  4807                           prodh	equ	0xFF4
  4808                           prodl	equ	0xFF3
  4809                           intcon	equ	0xFF2
  4810                           intcon2	equ	0xFF1
  4811                           intcon3	equ	0xFF0
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           postdec1	equ	0xFE5
  4815                           fsr1l	equ	0xFE1
  4816                           indf2	equ	0xFDF
  4817                           postinc2	equ	0xFDE
  4818                           postdec2	equ	0xFDD
  4819                           fsr2h	equ	0xFDA
  4820                           fsr2l	equ	0xFD9
  4821                           status	equ	0xFD8
  4822                           
  4823 ;; *************** function _dec_to_hex *****************
  4824 ;; Defined at:
  4825 ;;		line 361 in file "main.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  num             2   91[BANK0 ] int 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  quotient        2   35[BANK1 ] int 
  4830 ;;  hexnum          2   33[BANK1 ] int 
  4831 ;;  i               2   31[BANK1 ] int 
  4832 ;;  temp            2   29[BANK1 ] int 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2   91[BANK0 ] int 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;Total ram usage:       16 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   12
  4849 ;; This function calls:
  4850 ;;		___awdiv
  4851 ;;		___awtoft
  4852 ;;		___ftadd
  4853 ;;		___ftmul
  4854 ;;		___fttol
  4855 ;;		_pow
  4856 ;; This function is called by:
  4857 ;;		_operation
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text9
  4862  00320C                     __ptext9:
  4863                           	opt stack 0
  4864  00320C                     _dec_to_hex:
  4865                           	opt stack 17
  4866                           
  4867                           ;main.c: 362: int i = 0, quotient = num, temp, hexnum = 0;
  4868                           
  4869                           ; BSR set to: 1
  4870                           ;incstack = 0
  4871  00320C  0E00               	movlw	0
  4872  00320E  0101               	movlb	1	; () banked
  4873  003210  6F69               	movwf	(dec_to_hex@i+1)& (0+255),b
  4874  003212  0E00               	movlw	0
  4875  003214  6F68               	movwf	dec_to_hex@i& (0+255),b
  4876                           
  4877                           ; BSR set to: 1
  4878  003216  C0DB  F16C         	movff	dec_to_hex@num,dec_to_hex@quotient
  4879  00321A  C0DC  F16D         	movff	dec_to_hex@num+1,dec_to_hex@quotient+1
  4880  00321E  0E00               	movlw	0
  4881  003220  0101               	movlb	1	; () banked
  4882  003222  6F6B               	movwf	(dec_to_hex@hexnum+1)& (0+255),b
  4883  003224  0E00               	movlw	0
  4884  003226  6F6A               	movwf	dec_to_hex@hexnum& (0+255),b
  4885                           
  4886                           ;main.c: 364: while (quotient != 0) {
  4887  003228  D070               	goto	l8130
  4888  00322A                     l8118:
  4889                           
  4890                           ; BSR set to: 1
  4891                           ;main.c: 365: temp = quotient % 16;
  4892  00322A  0E0F               	movlw	15
  4893  00322C  0101               	movlb	1	; () banked
  4894  00322E  156C               	andwf	dec_to_hex@quotient& (0+255),w,b
  4895  003230  0101               	movlb	1	; () banked
  4896  003232  6F66               	movwf	dec_to_hex@temp& (0+255),b
  4897  003234  0101               	movlb	1	; () banked
  4898  003236  6B67               	clrf	(dec_to_hex@temp+1)& (0+255),b
  4899                           
  4900                           ; BSR set to: 1
  4901                           ;main.c: 366: hexnum += temp*pow(10,i);
  4902  003238  C168  F098         	movff	dec_to_hex@i,___awtoft@c
  4903  00323C  C169  F099         	movff	dec_to_hex@i+1,___awtoft@c+1
  4904  003240  EC70  F028         	call	___awtoft	;wreg free
  4905  003244  C098  F160         	movff	?___awtoft,_dec_to_hex$1410
  4906  003248  C099  F161         	movff	?___awtoft+1,_dec_to_hex$1410+1
  4907  00324C  C09A  F162         	movff	?___awtoft+2,_dec_to_hex$1410+2
  4908                           
  4909                           ;main.c: 366: hexnum += temp*pow(10,i);
  4910  003250  C160  F152         	movff	_dec_to_hex$1410,pow@y
  4911  003254  C161  F153         	movff	_dec_to_hex$1410+1,pow@y+1
  4912  003258  C162  F154         	movff	_dec_to_hex$1410+2,pow@y+2
  4913  00325C  0E00               	movlw	0
  4914  00325E  0101               	movlb	1	; () banked
  4915  003260  6F4F               	movwf	pow@x& (0+255),b
  4916  003262  0E20               	movlw	32
  4917  003264  0101               	movlb	1	; () banked
  4918  003266  6F50               	movwf	(pow@x+1)& (0+255),b
  4919  003268  0E41               	movlw	65
  4920  00326A  0101               	movlb	1	; () banked
  4921  00326C  6F51               	movwf	(pow@x+2)& (0+255),b
  4922  00326E  ECE1  F012         	call	_pow	;wreg free
  4923  003272  C14F  F163         	movff	?_pow,_dec_to_hex$1411
  4924  003276  C150  F164         	movff	?_pow+1,_dec_to_hex$1411+1
  4925  00327A  C151  F165         	movff	?_pow+2,_dec_to_hex$1411+2
  4926                           
  4927                           ;main.c: 366: hexnum += temp*pow(10,i);
  4928  00327E  C163  F09F         	movff	_dec_to_hex$1411,___ftmul@f2
  4929  003282  C164  F0A0         	movff	_dec_to_hex$1411+1,___ftmul@f2+1
  4930  003286  C165  F0A1         	movff	_dec_to_hex$1411+2,___ftmul@f2+2
  4931  00328A  C166  F098         	movff	dec_to_hex@temp,___awtoft@c
  4932  00328E  C167  F099         	movff	dec_to_hex@temp+1,___awtoft@c+1
  4933  003292  EC70  F028         	call	___awtoft	;wreg free
  4934  003296  C098  F09C         	movff	?___awtoft,___ftmul@f1
  4935  00329A  C099  F09D         	movff	?___awtoft+1,___ftmul@f1+1
  4936  00329E  C09A  F09E         	movff	?___awtoft+2,___ftmul@f1+2
  4937  0032A2  EC4C  F015         	call	___ftmul	;wreg free
  4938  0032A6  C09C  F0AE         	movff	?___ftmul,___ftadd@f2
  4939  0032AA  C09D  F0AF         	movff	?___ftmul+1,___ftadd@f2+1
  4940  0032AE  C09E  F0B0         	movff	?___ftmul+2,___ftadd@f2+2
  4941  0032B2  C16A  F098         	movff	dec_to_hex@hexnum,___awtoft@c
  4942  0032B6  C16B  F099         	movff	dec_to_hex@hexnum+1,___awtoft@c+1
  4943  0032BA  EC70  F028         	call	___awtoft	;wreg free
  4944  0032BE  C098  F0AB         	movff	?___awtoft,___ftadd@f1
  4945  0032C2  C099  F0AC         	movff	?___awtoft+1,___ftadd@f1+1
  4946  0032C6  C09A  F0AD         	movff	?___awtoft+2,___ftadd@f1+2
  4947  0032CA  EC6F  F00E         	call	___ftadd	;wreg free
  4948  0032CE  C0AB  F0B7         	movff	?___ftadd,___fttol@f1
  4949  0032D2  C0AC  F0B8         	movff	?___ftadd+1,___fttol@f1+1
  4950  0032D6  C0AD  F0B9         	movff	?___ftadd+2,___fttol@f1+2
  4951  0032DA  EC49  F017         	call	___fttol	;wreg free
  4952  0032DE  C0B7  F16A         	movff	?___fttol,dec_to_hex@hexnum
  4953  0032E2  C0B8  F16B         	movff	?___fttol+1,dec_to_hex@hexnum+1
  4954                           
  4955                           ;main.c: 367: quotient = quotient / 16;
  4956  0032E6  C16C  F090         	movff	dec_to_hex@quotient,___awdiv@dividend
  4957  0032EA  C16D  F091         	movff	dec_to_hex@quotient+1,___awdiv@dividend+1
  4958  0032EE  0E00               	movlw	0
  4959  0032F0  0100               	movlb	0	; () banked
  4960  0032F2  6F93               	movwf	(___awdiv@divisor+1)& (0+255),b
  4961  0032F4  0E10               	movlw	16
  4962  0032F6  6F92               	movwf	___awdiv@divisor& (0+255),b
  4963  0032F8  ECE8  F022         	call	___awdiv	;wreg free
  4964  0032FC  C090  F16C         	movff	?___awdiv,dec_to_hex@quotient
  4965  003300  C091  F16D         	movff	?___awdiv+1,dec_to_hex@quotient+1
  4966                           
  4967                           ;main.c: 368: i += 1;
  4968  003304  0101               	movlb	1	; () banked
  4969  003306  4B68               	infsnz	dec_to_hex@i& (0+255),f,b
  4970  003308  2B69               	incf	(dec_to_hex@i+1)& (0+255),f,b
  4971  00330A                     l8130:
  4972                           
  4973                           ; BSR set to: 1
  4974  00330A  0101               	movlb	1	; () banked
  4975  00330C  516C               	movf	dec_to_hex@quotient& (0+255),w,b
  4976  00330E  0101               	movlb	1	; () banked
  4977  003310  116D               	iorwf	(dec_to_hex@quotient+1)& (0+255),w,b
  4978  003312  A4D8               	btfss	status,2,c
  4979  003314  D78A               	goto	l8118
  4980                           
  4981                           ; BSR set to: 1
  4982                           ;main.c: 369: }
  4983                           ;main.c: 370: return hexnum;
  4984  003316  C16A  F0DB         	movff	dec_to_hex@hexnum,?_dec_to_hex
  4985  00331A  C16B  F0DC         	movff	dec_to_hex@hexnum+1,?_dec_to_hex+1
  4986                           
  4987                           ; BSR set to: 1
  4988  00331E  0012               	return		;funcret
  4989  003320                     __end_of_dec_to_hex:
  4990                           	opt stack 0
  4991                           tblptru	equ	0xFF8
  4992                           tblptrh	equ	0xFF7
  4993                           tblptrl	equ	0xFF6
  4994                           tablat	equ	0xFF5
  4995                           prodh	equ	0xFF4
  4996                           prodl	equ	0xFF3
  4997                           intcon	equ	0xFF2
  4998                           intcon2	equ	0xFF1
  4999                           intcon3	equ	0xFF0
  5000                           postinc0	equ	0xFEE
  5001                           wreg	equ	0xFE8
  5002                           postdec1	equ	0xFE5
  5003                           fsr1l	equ	0xFE1
  5004                           indf2	equ	0xFDF
  5005                           postinc2	equ	0xFDE
  5006                           postdec2	equ	0xFDD
  5007                           fsr2h	equ	0xFDA
  5008                           fsr2l	equ	0xFD9
  5009                           status	equ	0xFD8
  5010                           
  5011 ;; *************** function _pow *****************
  5012 ;; Defined at:
  5013 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\pow.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  x               3    6[BANK1 ] int 
  5016 ;;  y               3    9[BANK1 ] int 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  yi              4   19[BANK1 ] unsigned long 
  5019 ;;  sign            1   18[BANK1 ] unsigned char 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  3    6[BANK1 ] unsigned char 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5029 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;Total ram usage:       17 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:   11
  5036 ;; This function calls:
  5037 ;;		___ftge
  5038 ;;		___ftmul
  5039 ;;		___ftneg
  5040 ;;		___fttol
  5041 ;;		___lltoft
  5042 ;;		_exp
  5043 ;;		_log
  5044 ;; This function is called by:
  5045 ;;		_dec_to_hex
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text10
  5050  0025C2                     __ptext10:
  5051                           	opt stack 0
  5052  0025C2                     _pow:
  5053                           	opt stack 17
  5054                           
  5055                           ; BSR set to: 1
  5056                           ;incstack = 0
  5057  0025C2  0E00               	movlw	0
  5058  0025C4  0101               	movlb	1	; () banked
  5059  0025C6  6F5B               	movwf	pow@sign& (0+255),b
  5060                           
  5061                           ; BSR set to: 1
  5062  0025C8  0101               	movlb	1	; () banked
  5063  0025CA  514F               	movf	pow@x& (0+255),w,b
  5064  0025CC  0101               	movlb	1	; () banked
  5065  0025CE  1150               	iorwf	(pow@x+1)& (0+255),w,b
  5066  0025D0  0101               	movlb	1	; () banked
  5067  0025D2  1151               	iorwf	(pow@x+2)& (0+255),w,b
  5068  0025D4  A4D8               	btfss	status,2,c
  5069  0025D6  D023               	goto	l7884
  5070                           
  5071                           ; BSR set to: 1
  5072  0025D8  0E00               	movlw	0
  5073  0025DA  0100               	movlb	0	; () banked
  5074  0025DC  6FA7               	movwf	___ftge@ff1& (0+255),b
  5075  0025DE  0E00               	movlw	0
  5076  0025E0  0100               	movlb	0	; () banked
  5077  0025E2  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  5078  0025E4  0E00               	movlw	0
  5079  0025E6  0100               	movlb	0	; () banked
  5080  0025E8  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  5081  0025EA  C152  F0AA         	movff	pow@y,___ftge@ff2
  5082  0025EE  C153  F0AB         	movff	pow@y+1,___ftge@ff2+1
  5083  0025F2  C154  F0AC         	movff	pow@y+2,___ftge@ff2+2
  5084  0025F6  EC21  F022         	call	___ftge	;wreg free
  5085  0025FA  0100               	movlb	0	; () banked
  5086  0025FC  A0D8               	btfss	status,0,c
  5087  0025FE  D005               	goto	l1114
  5088                           
  5089                           ; BSR set to: 0
  5090  002600  0E00               	movlw	0
  5091  002602  0101               	movlb	1	; () banked
  5092  002604  6F30               	movwf	(_errno+1)& (0+255),b
  5093  002606  0E21               	movlw	33
  5094  002608  6F2F               	movwf	_errno& (0+255),b
  5095  00260A                     l1114:
  5096  00260A  0E00               	movlw	0
  5097  00260C  0101               	movlb	1	; () banked
  5098  00260E  6F4F               	movwf	?_pow& (0+255),b
  5099  002610  0E00               	movlw	0
  5100  002612  0101               	movlb	1	; () banked
  5101  002614  6F50               	movwf	(?_pow+1)& (0+255),b
  5102  002616  0E00               	movlw	0
  5103  002618  0101               	movlb	1	; () banked
  5104  00261A  6F51               	movwf	(?_pow+2)& (0+255),b
  5105                           
  5106                           ; BSR set to: 1
  5107  00261C  0012               	return	
  5108  00261E                     l7884:
  5109                           
  5110                           ; BSR set to: 1
  5111  00261E  0101               	movlb	1	; () banked
  5112  002620  5152               	movf	pow@y& (0+255),w,b
  5113  002622  0101               	movlb	1	; () banked
  5114  002624  1153               	iorwf	(pow@y+1)& (0+255),w,b
  5115  002626  0101               	movlb	1	; () banked
  5116  002628  1154               	iorwf	(pow@y+2)& (0+255),w,b
  5117  00262A  A4D8               	btfss	status,2,c
  5118  00262C  D00A               	goto	l7890
  5119                           
  5120                           ; BSR set to: 1
  5121  00262E  0E00               	movlw	0
  5122  002630  0101               	movlb	1	; () banked
  5123  002632  6F4F               	movwf	?_pow& (0+255),b
  5124  002634  0E80               	movlw	128
  5125  002636  0101               	movlb	1	; () banked
  5126  002638  6F50               	movwf	(?_pow+1)& (0+255),b
  5127  00263A  0E3F               	movlw	63
  5128  00263C  0101               	movlb	1	; () banked
  5129  00263E  6F51               	movwf	(?_pow+2)& (0+255),b
  5130                           
  5131                           ; BSR set to: 1
  5132  002640  0012               	return	
  5133  002642                     l7890:
  5134                           
  5135                           ; BSR set to: 1
  5136  002642  0101               	movlb	1	; () banked
  5137  002644  AF51               	btfss	(pow@x+2)& (0+255),7,b
  5138  002646  D04C               	goto	l7902
  5139                           
  5140                           ; BSR set to: 1
  5141  002648  C152  F0B7         	movff	pow@y,___fttol@f1
  5142  00264C  C153  F0B8         	movff	pow@y+1,___fttol@f1+1
  5143  002650  C154  F0B9         	movff	pow@y+2,___fttol@f1+2
  5144  002654  EC49  F017         	call	___fttol	;wreg free
  5145  002658  C0B7  F15C         	movff	?___fttol,pow@yi
  5146  00265C  C0B8  F15D         	movff	?___fttol+1,pow@yi+1
  5147  002660  C0B9  F15E         	movff	?___fttol+2,pow@yi+2
  5148  002664  C0BA  F15F         	movff	?___fttol+3,pow@yi+3
  5149  002668  C15C  F098         	movff	pow@yi,___lltoft@c
  5150  00266C  C15D  F099         	movff	pow@yi+1,___lltoft@c+1
  5151  002670  C15E  F09A         	movff	pow@yi+2,___lltoft@c+2
  5152  002674  C15F  F09B         	movff	pow@yi+3,___lltoft@c+3
  5153  002678  ECC5  F025         	call	___lltoft	;wreg free
  5154  00267C  0101               	movlb	1	; () banked
  5155  00267E  5152               	movf	pow@y& (0+255),w,b
  5156  002680  0100               	movlb	0	; () banked
  5157  002682  1998               	xorwf	?___lltoft& (0+255),w,b
  5158  002684  E10B               	bnz	u7990
  5159  002686  0101               	movlb	1	; () banked
  5160  002688  5153               	movf	(pow@y+1)& (0+255),w,b
  5161  00268A  0100               	movlb	0	; () banked
  5162  00268C  1999               	xorwf	(?___lltoft+1)& (0+255),w,b
  5163  00268E  E106               	bnz	u7990
  5164  002690  0101               	movlb	1	; () banked
  5165  002692  5154               	movf	(pow@y+2)& (0+255),w,b
  5166  002694  0100               	movlb	0	; () banked
  5167  002696  199A               	xorwf	(?___lltoft+2)& (0+255),w,b
  5168  002698  B4D8               	btfsc	status,2,c
  5169  00269A  D00F               	goto	l7898
  5170  00269C                     u7990:
  5171                           
  5172                           ; BSR set to: 0
  5173  00269C  0E00               	movlw	0
  5174  00269E  0101               	movlb	1	; () banked
  5175  0026A0  6F30               	movwf	(_errno+1)& (0+255),b
  5176  0026A2  0E21               	movlw	33
  5177  0026A4  6F2F               	movwf	_errno& (0+255),b
  5178  0026A6  0E00               	movlw	0
  5179  0026A8  0101               	movlb	1	; () banked
  5180  0026AA  6F4F               	movwf	?_pow& (0+255),b
  5181  0026AC  0E00               	movlw	0
  5182  0026AE  0101               	movlb	1	; () banked
  5183  0026B0  6F50               	movwf	(?_pow+1)& (0+255),b
  5184  0026B2  0E00               	movlw	0
  5185  0026B4  0101               	movlb	1	; () banked
  5186  0026B6  6F51               	movwf	(?_pow+2)& (0+255),b
  5187                           
  5188                           ; BSR set to: 1
  5189  0026B8  0012               	return	
  5190  0026BA                     l7898:
  5191  0026BA  0101               	movlb	1	; () banked
  5192  0026BC  515C               	movf	pow@yi& (0+255),w,b
  5193  0026BE  0B01               	andlw	1
  5194  0026C0  0101               	movlb	1	; () banked
  5195  0026C2  6F5B               	movwf	pow@sign& (0+255),b
  5196                           
  5197                           ; BSR set to: 1
  5198  0026C4  C14F  F090         	movff	pow@x,___ftneg@f1
  5199  0026C8  C150  F091         	movff	pow@x+1,___ftneg@f1+1
  5200  0026CC  C151  F092         	movff	pow@x+2,___ftneg@f1+2
  5201  0026D0  EC42  F029         	call	___ftneg	;wreg free
  5202  0026D4  C090  F14F         	movff	?___ftneg,pow@x
  5203  0026D8  C091  F150         	movff	?___ftneg+1,pow@x+1
  5204  0026DC  C092  F151         	movff	?___ftneg+2,pow@x+2
  5205  0026E0                     l7902:
  5206  0026E0  C14F  F0C3         	movff	pow@x,log@x
  5207  0026E4  C150  F0C4         	movff	pow@x+1,log@x+1
  5208  0026E8  C151  F0C5         	movff	pow@x+2,log@x+2
  5209  0026EC  ECFB  F015         	call	_log	;wreg free
  5210  0026F0  C0C3  F155         	movff	?_log,_pow$1413
  5211  0026F4  C0C4  F156         	movff	?_log+1,_pow$1413+1
  5212  0026F8  C0C5  F157         	movff	?_log+2,_pow$1413+2
  5213  0026FC  C155  F09C         	movff	_pow$1413,___ftmul@f1
  5214  002700  C156  F09D         	movff	_pow$1413+1,___ftmul@f1+1
  5215  002704  C157  F09E         	movff	_pow$1413+2,___ftmul@f1+2
  5216  002708  C152  F09F         	movff	pow@y,___ftmul@f2
  5217  00270C  C153  F0A0         	movff	pow@y+1,___ftmul@f2+1
  5218  002710  C154  F0A1         	movff	pow@y+2,___ftmul@f2+2
  5219  002714  EC4C  F015         	call	___ftmul	;wreg free
  5220  002718  C09C  F158         	movff	?___ftmul,_pow$1414
  5221  00271C  C09D  F159         	movff	?___ftmul+1,_pow$1414+1
  5222  002720  C09E  F15A         	movff	?___ftmul+2,_pow$1414+2
  5223  002724  C158  F0D8         	movff	_pow$1414,exp@x
  5224  002728  C159  F0D9         	movff	_pow$1414+1,exp@x+1
  5225  00272C  C15A  F0DA         	movff	_pow$1414+2,exp@x+2
  5226  002730  ECD0  F010         	call	_exp	;wreg free
  5227  002734  C0D8  F14F         	movff	?_exp,pow@x
  5228  002738  C0D9  F150         	movff	?_exp+1,pow@x+1
  5229  00273C  C0DA  F151         	movff	?_exp+2,pow@x+2
  5230  002740  0101               	movlb	1	; () banked
  5231  002742  515B               	movf	pow@sign& (0+255),w,b
  5232  002744  0101               	movlb	1	; () banked
  5233  002746  B4D8               	btfsc	status,2,c
  5234  002748  D00F               	goto	l1119
  5235                           
  5236                           ; BSR set to: 1
  5237  00274A  C14F  F090         	movff	pow@x,___ftneg@f1
  5238  00274E  C150  F091         	movff	pow@x+1,___ftneg@f1+1
  5239  002752  C151  F092         	movff	pow@x+2,___ftneg@f1+2
  5240  002756  EC42  F029         	call	___ftneg	;wreg free
  5241  00275A  C090  F14F         	movff	?___ftneg,?_pow
  5242  00275E  C091  F150         	movff	?___ftneg+1,?_pow+1
  5243  002762  C092  F151         	movff	?___ftneg+2,?_pow+2
  5244  002766  0012               	return	
  5245  002768                     l1119:
  5246                           
  5247                           ; BSR set to: 1
  5248  002768  C14F  F14F         	movff	pow@x,?_pow
  5249  00276C  C150  F150         	movff	pow@x+1,?_pow+1
  5250  002770  C151  F151         	movff	pow@x+2,?_pow+2
  5251  002774  0012               	return		;funcret
  5252  002776                     __end_of_pow:
  5253                           	opt stack 0
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           intcon	equ	0xFF2
  5261                           intcon2	equ	0xFF1
  5262                           intcon3	equ	0xFF0
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1l	equ	0xFE1
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _log *****************
  5275 ;; Defined at:
  5276 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\log.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  x               3   67[BANK0 ] unsigned char 
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  exponent        2   70[BANK0 ] int 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  3   67[BANK0 ] int 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5290 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;Total ram usage:        5 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:   10
  5297 ;; This function calls:
  5298 ;;		___awtoft
  5299 ;;		___ftadd
  5300 ;;		___ftmul
  5301 ;;		_eval_poly
  5302 ;;		_frexp
  5303 ;; This function is called by:
  5304 ;;		_pow
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text11
  5309  002BF6                     __ptext11:
  5310                           	opt stack 0
  5311  002BF6                     _log:
  5312                           	opt stack 17
  5313                           
  5314                           ;incstack = 0
  5315  002BF6  0100               	movlb	0	; () banked
  5316  002BF8  AFC5               	btfss	(log@x+2)& (0+255),7,b
  5317  002BFA  D00F               	goto	l7756
  5318                           
  5319                           ; BSR set to: 0
  5320  002BFC  0E00               	movlw	0
  5321  002BFE  0101               	movlb	1	; () banked
  5322  002C00  6F30               	movwf	(_errno+1)& (0+255),b
  5323  002C02  0E21               	movlw	33
  5324  002C04  6F2F               	movwf	_errno& (0+255),b
  5325  002C06  0E00               	movlw	0
  5326  002C08  0100               	movlb	0	; () banked
  5327  002C0A  6FC3               	movwf	?_log& (0+255),b
  5328  002C0C  0E00               	movlw	0
  5329  002C0E  0100               	movlb	0	; () banked
  5330  002C10  6FC4               	movwf	(?_log+1)& (0+255),b
  5331  002C12  0E00               	movlw	0
  5332  002C14  0100               	movlb	0	; () banked
  5333  002C16  6FC5               	movwf	(?_log+2)& (0+255),b
  5334                           
  5335                           ; BSR set to: 0
  5336  002C18  0012               	return	
  5337  002C1A                     l7756:
  5338                           
  5339                           ; BSR set to: 0
  5340  002C1A  0100               	movlb	0	; () banked
  5341  002C1C  51C3               	movf	log@x& (0+255),w,b
  5342  002C1E  0100               	movlb	0	; () banked
  5343  002C20  11C4               	iorwf	(log@x+1)& (0+255),w,b
  5344  002C22  0100               	movlb	0	; () banked
  5345  002C24  11C5               	iorwf	(log@x+2)& (0+255),w,b
  5346  002C26  A4D8               	btfss	status,2,c
  5347  002C28  D00F               	goto	l7762
  5348                           
  5349                           ; BSR set to: 0
  5350  002C2A  0E00               	movlw	0
  5351  002C2C  0101               	movlb	1	; () banked
  5352  002C2E  6F30               	movwf	(_errno+1)& (0+255),b
  5353  002C30  0E22               	movlw	34
  5354  002C32  6F2F               	movwf	_errno& (0+255),b
  5355  002C34  0E00               	movlw	0
  5356  002C36  0100               	movlb	0	; () banked
  5357  002C38  6FC3               	movwf	?_log& (0+255),b
  5358  002C3A  0E00               	movlw	0
  5359  002C3C  0100               	movlb	0	; () banked
  5360  002C3E  6FC4               	movwf	(?_log+1)& (0+255),b
  5361  002C40  0E00               	movlw	0
  5362  002C42  0100               	movlb	0	; () banked
  5363  002C44  6FC5               	movwf	(?_log+2)& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366  002C46  0012               	return	
  5367  002C48                     l7762:
  5368                           
  5369                           ; BSR set to: 0
  5370  002C48  0E00               	movlw	0
  5371  002C4A  0100               	movlb	0	; () banked
  5372  002C4C  6F9F               	movwf	___ftmul@f2& (0+255),b
  5373  002C4E  0E00               	movlw	0
  5374  002C50  0100               	movlb	0	; () banked
  5375  002C52  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5376  002C54  0E40               	movlw	64
  5377  002C56  0100               	movlb	0	; () banked
  5378  002C58  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5379  002C5A  0EC6               	movlw	low log@exponent
  5380  002C5C  0100               	movlb	0	; () banked
  5381  002C5E  6F93               	movwf	frexp@eptr& (0+255),b
  5382  002C60  0E00               	movlw	high log@exponent
  5383  002C62  0100               	movlb	0	; () banked
  5384  002C64  6F94               	movwf	(frexp@eptr+1)& (0+255),b
  5385  002C66  C0C3  F090         	movff	log@x,frexp@value
  5386  002C6A  C0C4  F091         	movff	log@x+1,frexp@value+1
  5387  002C6E  C0C5  F092         	movff	log@x+2,frexp@value+2
  5388  002C72  ECA5  F023         	call	_frexp	;wreg free
  5389  002C76  C090  F09C         	movff	?_frexp,___ftmul@f1
  5390  002C7A  C091  F09D         	movff	?_frexp+1,___ftmul@f1+1
  5391  002C7E  C092  F09E         	movff	?_frexp+2,___ftmul@f1+2
  5392  002C82  EC4C  F015         	call	___ftmul	;wreg free
  5393  002C86  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  5394  002C8A  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  5395  002C8E  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  5396  002C92  0E00               	movlw	0
  5397  002C94  0100               	movlb	0	; () banked
  5398  002C96  6FAE               	movwf	___ftadd@f2& (0+255),b
  5399  002C98  0E80               	movlw	128
  5400  002C9A  0100               	movlb	0	; () banked
  5401  002C9C  6FAF               	movwf	(___ftadd@f2+1)& (0+255),b
  5402  002C9E  0EBF               	movlw	191
  5403  002CA0  0100               	movlb	0	; () banked
  5404  002CA2  6FB0               	movwf	(___ftadd@f2+2)& (0+255),b
  5405  002CA4  EC6F  F00E         	call	___ftadd	;wreg free
  5406  002CA8  C0AB  F0C3         	movff	?___ftadd,log@x
  5407  002CAC  C0AC  F0C4         	movff	?___ftadd+1,log@x+1
  5408  002CB0  C0AD  F0C5         	movff	?___ftadd+2,log@x+2
  5409  002CB4  0100               	movlb	0	; () banked
  5410  002CB6  07C6               	decf	log@exponent& (0+255),f,b
  5411  002CB8  A0D8               	btfss	status,0,c
  5412  002CBA  07C7               	decf	(log@exponent+1)& (0+255),f,b
  5413                           
  5414                           ; BSR set to: 0
  5415  002CBC  C0C3  F0B7         	movff	log@x,eval_poly@x
  5416  002CC0  C0C4  F0B8         	movff	log@x+1,eval_poly@x+1
  5417  002CC4  C0C5  F0B9         	movff	log@x+2,eval_poly@x+2
  5418  002CC8  0EDB               	movlw	low log@coeff
  5419  002CCA  0100               	movlb	0	; () banked
  5420  002CCC  6FBA               	movwf	eval_poly@d& (0+255),b
  5421  002CCE  0EFD               	movlw	high log@coeff
  5422  002CD0  0100               	movlb	0	; () banked
  5423  002CD2  6FBB               	movwf	(eval_poly@d+1)& (0+255),b
  5424  002CD4  0E00               	movlw	0
  5425  002CD6  0100               	movlb	0	; () banked
  5426  002CD8  6FBD               	movwf	(eval_poly@n+1)& (0+255),b
  5427  002CDA  0E08               	movlw	8
  5428  002CDC  6FBC               	movwf	eval_poly@n& (0+255),b
  5429  002CDE  EC8C  F01F         	call	_eval_poly	;wreg free
  5430  002CE2  C0B7  F0C3         	movff	?_eval_poly,log@x
  5431  002CE6  C0B8  F0C4         	movff	?_eval_poly+1,log@x+1
  5432  002CEA  C0B9  F0C5         	movff	?_eval_poly+2,log@x+2
  5433  002CEE  0E72               	movlw	114
  5434  002CF0  0100               	movlb	0	; () banked
  5435  002CF2  6F9F               	movwf	___ftmul@f2& (0+255),b
  5436  002CF4  0E31               	movlw	49
  5437  002CF6  0100               	movlb	0	; () banked
  5438  002CF8  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5439  002CFA  0E3F               	movlw	63
  5440  002CFC  0100               	movlb	0	; () banked
  5441  002CFE  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5442  002D00  C0C6  F098         	movff	log@exponent,___awtoft@c
  5443  002D04  C0C7  F099         	movff	log@exponent+1,___awtoft@c+1
  5444  002D08  EC70  F028         	call	___awtoft	;wreg free
  5445  002D0C  C098  F09C         	movff	?___awtoft,___ftmul@f1
  5446  002D10  C099  F09D         	movff	?___awtoft+1,___ftmul@f1+1
  5447  002D14  C09A  F09E         	movff	?___awtoft+2,___ftmul@f1+2
  5448  002D18  EC4C  F015         	call	___ftmul	;wreg free
  5449  002D1C  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  5450  002D20  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  5451  002D24  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  5452  002D28  C0C3  F0AE         	movff	log@x,___ftadd@f2
  5453  002D2C  C0C4  F0AF         	movff	log@x+1,___ftadd@f2+1
  5454  002D30  C0C5  F0B0         	movff	log@x+2,___ftadd@f2+2
  5455  002D34  EC6F  F00E         	call	___ftadd	;wreg free
  5456  002D38  C0AB  F0C3         	movff	?___ftadd,?_log
  5457  002D3C  C0AC  F0C4         	movff	?___ftadd+1,?_log+1
  5458  002D40  C0AD  F0C5         	movff	?___ftadd+2,?_log+2
  5459  002D44  0012               	return	
  5460  002D46                     __end_of_log:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           prodh	equ	0xFF4
  5467                           prodl	equ	0xFF3
  5468                           intcon	equ	0xFF2
  5469                           intcon2	equ	0xFF1
  5470                           intcon3	equ	0xFF0
  5471                           postinc0	equ	0xFEE
  5472                           wreg	equ	0xFE8
  5473                           postdec1	equ	0xFE5
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function _exp *****************
  5483 ;; Defined at:
  5484 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\exp.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  x               3   88[BANK0 ] int 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  exponent        2    3[BANK1 ] int 
  5489 ;;  sign            1    5[BANK1 ] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  3   88[BANK0 ] unsigned char 
  5492 ;; Registers used:
  5493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5499 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Totals:         0       3       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;Total ram usage:        9 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:   10
  5506 ;; This function calls:
  5507 ;;		___awtoft
  5508 ;;		___ftdiv
  5509 ;;		___ftge
  5510 ;;		___ftmul
  5511 ;;		___ftneg
  5512 ;;		___ftsub
  5513 ;;		___fttol
  5514 ;;		_eval_poly
  5515 ;;		_floor
  5516 ;;		_ldexp
  5517 ;; This function is called by:
  5518 ;;		_pow
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text12
  5523  0021A0                     __ptext12:
  5524                           	opt stack 0
  5525  0021A0                     _exp:
  5526                           	opt stack 17
  5527                           
  5528                           ;incstack = 0
  5529  0021A0  0100               	movlb	0	; () banked
  5530  0021A2  51D8               	movf	exp@x& (0+255),w,b
  5531  0021A4  0100               	movlb	0	; () banked
  5532  0021A6  11D9               	iorwf	(exp@x+1)& (0+255),w,b
  5533  0021A8  0100               	movlb	0	; () banked
  5534  0021AA  11DA               	iorwf	(exp@x+2)& (0+255),w,b
  5535  0021AC  A4D8               	btfss	status,2,c
  5536  0021AE  D00A               	goto	l7778
  5537                           
  5538                           ; BSR set to: 0
  5539  0021B0  0E00               	movlw	0
  5540  0021B2  0100               	movlb	0	; () banked
  5541  0021B4  6FD8               	movwf	?_exp& (0+255),b
  5542  0021B6  0E80               	movlw	128
  5543  0021B8  0100               	movlb	0	; () banked
  5544  0021BA  6FD9               	movwf	(?_exp+1)& (0+255),b
  5545  0021BC  0E3F               	movlw	63
  5546  0021BE  0100               	movlb	0	; () banked
  5547  0021C0  6FDA               	movwf	(?_exp+2)& (0+255),b
  5548                           
  5549                           ; BSR set to: 0
  5550  0021C2  0012               	return	
  5551  0021C4                     l7778:
  5552                           
  5553                           ; BSR set to: 0
  5554  0021C4  0E72               	movlw	114
  5555  0021C6  0100               	movlb	0	; () banked
  5556  0021C8  6FA7               	movwf	___ftge@ff1& (0+255),b
  5557  0021CA  0E31               	movlw	49
  5558  0021CC  0100               	movlb	0	; () banked
  5559  0021CE  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  5560  0021D0  0E44               	movlw	68
  5561  0021D2  0100               	movlb	0	; () banked
  5562  0021D4  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  5563  0021D6  C0D8  F0AA         	movff	exp@x,___ftge@ff2
  5564  0021DA  C0D9  F0AB         	movff	exp@x+1,___ftge@ff2+1
  5565  0021DE  C0DA  F0AC         	movff	exp@x+2,___ftge@ff2+2
  5566  0021E2  EC21  F022         	call	___ftge	;wreg free
  5567  0021E6  0100               	movlb	0	; () banked
  5568  0021E8  B0D8               	btfsc	status,0,c
  5569  0021EA  D00F               	goto	l7784
  5570                           
  5571                           ; BSR set to: 0
  5572  0021EC  0E00               	movlw	0
  5573  0021EE  0101               	movlb	1	; () banked
  5574  0021F0  6F30               	movwf	(_errno+1)& (0+255),b
  5575  0021F2  0E22               	movlw	34
  5576  0021F4  6F2F               	movwf	_errno& (0+255),b
  5577  0021F6  0EFF               	movlw	255
  5578  0021F8  0100               	movlb	0	; () banked
  5579  0021FA  6FD8               	movwf	?_exp& (0+255),b
  5580  0021FC  0E7F               	movlw	127
  5581  0021FE  0100               	movlb	0	; () banked
  5582  002200  6FD9               	movwf	(?_exp+1)& (0+255),b
  5583  002202  0E7F               	movlw	127
  5584  002204  0100               	movlb	0	; () banked
  5585  002206  6FDA               	movwf	(?_exp+2)& (0+255),b
  5586                           
  5587                           ; BSR set to: 0
  5588  002208  0012               	return	
  5589  00220A                     l7784:
  5590                           
  5591                           ; BSR set to: 0
  5592  00220A  C0D8  F0A7         	movff	exp@x,___ftge@ff1
  5593  00220E  C0D9  F0A8         	movff	exp@x+1,___ftge@ff1+1
  5594  002212  C0DA  F0A9         	movff	exp@x+2,___ftge@ff1+2
  5595  002216  0E49               	movlw	73
  5596  002218  0100               	movlb	0	; () banked
  5597  00221A  6FAA               	movwf	___ftge@ff2& (0+255),b
  5598  00221C  0E3A               	movlw	58
  5599  00221E  0100               	movlb	0	; () banked
  5600  002220  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  5601  002222  0EC4               	movlw	196
  5602  002224  0100               	movlb	0	; () banked
  5603  002226  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  5604  002228  EC21  F022         	call	___ftge	;wreg free
  5605  00222C  0100               	movlb	0	; () banked
  5606  00222E  B0D8               	btfsc	status,0,c
  5607  002230  D00F               	goto	l7790
  5608                           
  5609                           ; BSR set to: 0
  5610  002232  0E00               	movlw	0
  5611  002234  0101               	movlb	1	; () banked
  5612  002236  6F30               	movwf	(_errno+1)& (0+255),b
  5613  002238  0E22               	movlw	34
  5614  00223A  6F2F               	movwf	_errno& (0+255),b
  5615  00223C  0E00               	movlw	0
  5616  00223E  0100               	movlb	0	; () banked
  5617  002240  6FD8               	movwf	?_exp& (0+255),b
  5618  002242  0E00               	movlw	0
  5619  002244  0100               	movlb	0	; () banked
  5620  002246  6FD9               	movwf	(?_exp+1)& (0+255),b
  5621  002248  0E00               	movlw	0
  5622  00224A  0100               	movlb	0	; () banked
  5623  00224C  6FDA               	movwf	(?_exp+2)& (0+255),b
  5624                           
  5625                           ; BSR set to: 0
  5626  00224E  0012               	return	
  5627  002250                     l7790:
  5628                           
  5629                           ; BSR set to: 0
  5630  002250  0100               	movlb	0	; () banked
  5631  002252  AFDA               	btfss	(exp@x+2)& (0+255),7,b
  5632  002254  D002               	goto	u7860
  5633  002256  0E01               	movlw	1
  5634  002258  D001               	goto	u7870
  5635  00225A                     u7860:
  5636  00225A  0E00               	movlw	0
  5637  00225C                     u7870:
  5638  00225C  0101               	movlb	1	; () banked
  5639  00225E  6F4E               	movwf	exp@sign& (0+255),b
  5640                           
  5641                           ; BSR set to: 1
  5642  002260  0101               	movlb	1	; () banked
  5643  002262  514E               	movf	exp@sign& (0+255),w,b
  5644  002264  0101               	movlb	1	; () banked
  5645  002266  B4D8               	btfsc	status,2,c
  5646  002268  D00E               	goto	l1277
  5647                           
  5648                           ; BSR set to: 1
  5649  00226A  C0D8  F090         	movff	exp@x,___ftneg@f1
  5650  00226E  C0D9  F091         	movff	exp@x+1,___ftneg@f1+1
  5651  002272  C0DA  F092         	movff	exp@x+2,___ftneg@f1+2
  5652  002276  EC42  F029         	call	___ftneg	;wreg free
  5653  00227A  C090  F0D8         	movff	?___ftneg,exp@x
  5654  00227E  C091  F0D9         	movff	?___ftneg+1,exp@x+1
  5655  002282  C092  F0DA         	movff	?___ftneg+2,exp@x+2
  5656  002286                     l1277:
  5657  002286  C0D8  F09C         	movff	exp@x,___ftmul@f1
  5658  00228A  C0D9  F09D         	movff	exp@x+1,___ftmul@f1+1
  5659  00228E  C0DA  F09E         	movff	exp@x+2,___ftmul@f1+2
  5660  002292  0EAA               	movlw	170
  5661  002294  0100               	movlb	0	; () banked
  5662  002296  6F9F               	movwf	___ftmul@f2& (0+255),b
  5663  002298  0EB8               	movlw	184
  5664  00229A  0100               	movlb	0	; () banked
  5665  00229C  6FA0               	movwf	(___ftmul@f2+1)& (0+255),b
  5666  00229E  0E3F               	movlw	63
  5667  0022A0  0100               	movlb	0	; () banked
  5668  0022A2  6FA1               	movwf	(___ftmul@f2+2)& (0+255),b
  5669  0022A4  EC4C  F015         	call	___ftmul	;wreg free
  5670  0022A8  C09C  F0D8         	movff	?___ftmul,exp@x
  5671  0022AC  C09D  F0D9         	movff	?___ftmul+1,exp@x+1
  5672  0022B0  C09E  F0DA         	movff	?___ftmul+2,exp@x+2
  5673  0022B4  C0D8  F0D0         	movff	exp@x,floor@x
  5674  0022B8  C0D9  F0D1         	movff	exp@x+1,floor@x+1
  5675  0022BC  C0DA  F0D2         	movff	exp@x+2,floor@x+2
  5676  0022C0  ECA0  F01C         	call	_floor	;wreg free
  5677  0022C4  C0D0  F149         	movff	?_floor,_exp$1415
  5678  0022C8  C0D1  F14A         	movff	?_floor+1,_exp$1415+1
  5679  0022CC  C0D2  F14B         	movff	?_floor+2,_exp$1415+2
  5680  0022D0  C149  F0B7         	movff	_exp$1415,___fttol@f1
  5681  0022D4  C14A  F0B8         	movff	_exp$1415+1,___fttol@f1+1
  5682  0022D8  C14B  F0B9         	movff	_exp$1415+2,___fttol@f1+2
  5683  0022DC  EC49  F017         	call	___fttol	;wreg free
  5684  0022E0  C0B7  F14C         	movff	?___fttol,exp@exponent
  5685  0022E4  C0B8  F14D         	movff	?___fttol+1,exp@exponent+1
  5686  0022E8  C0D8  F0B7         	movff	exp@x,___ftsub@f1
  5687  0022EC  C0D9  F0B8         	movff	exp@x+1,___ftsub@f1+1
  5688  0022F0  C0DA  F0B9         	movff	exp@x+2,___ftsub@f1+2
  5689  0022F4  C14C  F098         	movff	exp@exponent,___awtoft@c
  5690  0022F8  C14D  F099         	movff	exp@exponent+1,___awtoft@c+1
  5691  0022FC  EC70  F028         	call	___awtoft	;wreg free
  5692  002300  C098  F0BA         	movff	?___awtoft,___ftsub@f2
  5693  002304  C099  F0BB         	movff	?___awtoft+1,___ftsub@f2+1
  5694  002308  C09A  F0BC         	movff	?___awtoft+2,___ftsub@f2+2
  5695  00230C  EC4A  F028         	call	___ftsub	;wreg free
  5696  002310  C0B7  F0D8         	movff	?___ftsub,exp@x
  5697  002314  C0B8  F0D9         	movff	?___ftsub+1,exp@x+1
  5698  002318  C0B9  F0DA         	movff	?___ftsub+2,exp@x+2
  5699  00231C  C0D8  F0B7         	movff	exp@x,eval_poly@x
  5700  002320  C0D9  F0B8         	movff	exp@x+1,eval_poly@x+1
  5701  002324  C0DA  F0B9         	movff	exp@x+2,eval_poly@x+2
  5702  002328  0EBD               	movlw	low exp@coeff
  5703  00232A  0100               	movlb	0	; () banked
  5704  00232C  6FBA               	movwf	eval_poly@d& (0+255),b
  5705  00232E  0EFD               	movlw	high exp@coeff
  5706  002330  0100               	movlb	0	; () banked
  5707  002332  6FBB               	movwf	(eval_poly@d+1)& (0+255),b
  5708  002334  0E00               	movlw	0
  5709  002336  0100               	movlb	0	; () banked
  5710  002338  6FBD               	movwf	(eval_poly@n+1)& (0+255),b
  5711  00233A  0E09               	movlw	9
  5712  00233C  6FBC               	movwf	eval_poly@n& (0+255),b
  5713  00233E  EC8C  F01F         	call	_eval_poly	;wreg free
  5714  002342  C0B7  F0C3         	movff	?_eval_poly,ldexp@value
  5715  002346  C0B8  F0C4         	movff	?_eval_poly+1,ldexp@value+1
  5716  00234A  C0B9  F0C5         	movff	?_eval_poly+2,ldexp@value+2
  5717  00234E  C14C  F0C6         	movff	exp@exponent,ldexp@newexp
  5718  002352  C14D  F0C7         	movff	exp@exponent+1,ldexp@newexp+1
  5719  002356  EC7A  F018         	call	_ldexp	;wreg free
  5720  00235A  C0C3  F0D8         	movff	?_ldexp,exp@x
  5721  00235E  C0C4  F0D9         	movff	?_ldexp+1,exp@x+1
  5722  002362  C0C5  F0DA         	movff	?_ldexp+2,exp@x+2
  5723  002366  0101               	movlb	1	; () banked
  5724  002368  514E               	movf	exp@sign& (0+255),w,b
  5725  00236A  0101               	movlb	1	; () banked
  5726  00236C  B4D8               	btfsc	status,2,c
  5727  00236E  D02E               	goto	l1278
  5728                           
  5729                           ; BSR set to: 1
  5730  002370  0100               	movlb	0	; () banked
  5731  002372  29D8               	incf	exp@x& (0+255),w,b
  5732  002374  E113               	bnz	l7812
  5733  002376  0E7F               	movlw	127
  5734  002378  0100               	movlb	0	; () banked
  5735  00237A  19D9               	xorwf	(exp@x+1)& (0+255),w,b
  5736  00237C  E10F               	bnz	l7812
  5737  00237E  0E7F               	movlw	127
  5738  002380  0100               	movlb	0	; () banked
  5739  002382  19DA               	xorwf	(exp@x+2)& (0+255),w,b
  5740  002384  A4D8               	btfss	status,2,c
  5741  002386  D00A               	goto	l7812
  5742                           
  5743                           ; BSR set to: 0
  5744  002388  0E00               	movlw	0
  5745  00238A  0100               	movlb	0	; () banked
  5746  00238C  6FD8               	movwf	?_exp& (0+255),b
  5747  00238E  0E00               	movlw	0
  5748  002390  0100               	movlb	0	; () banked
  5749  002392  6FD9               	movwf	(?_exp+1)& (0+255),b
  5750  002394  0E00               	movlw	0
  5751  002396  0100               	movlb	0	; () banked
  5752  002398  6FDA               	movwf	(?_exp+2)& (0+255),b
  5753                           
  5754                           ; BSR set to: 0
  5755  00239A  0012               	return	
  5756  00239C                     l7812:
  5757                           
  5758                           ; BSR set to: 0
  5759  00239C  0E00               	movlw	0
  5760  00239E  0100               	movlb	0	; () banked
  5761  0023A0  6F98               	movwf	___ftdiv@f1& (0+255),b
  5762  0023A2  0E80               	movlw	128
  5763  0023A4  0100               	movlb	0	; () banked
  5764  0023A6  6F99               	movwf	(___ftdiv@f1+1)& (0+255),b
  5765  0023A8  0E3F               	movlw	63
  5766  0023AA  0100               	movlb	0	; () banked
  5767  0023AC  6F9A               	movwf	(___ftdiv@f1+2)& (0+255),b
  5768  0023AE  C0D8  F09B         	movff	exp@x,___ftdiv@f2
  5769  0023B2  C0D9  F09C         	movff	exp@x+1,___ftdiv@f2+1
  5770  0023B6  C0DA  F09D         	movff	exp@x+2,___ftdiv@f2+2
  5771  0023BA  ECA3  F016         	call	___ftdiv	;wreg free
  5772  0023BE  C098  F0D8         	movff	?___ftdiv,?_exp
  5773  0023C2  C099  F0D9         	movff	?___ftdiv+1,?_exp+1
  5774  0023C6  C09A  F0DA         	movff	?___ftdiv+2,?_exp+2
  5775  0023CA  0012               	return	
  5776  0023CC                     l1278:
  5777                           
  5778                           ; BSR set to: 1
  5779  0023CC  C0D8  F0D8         	movff	exp@x,?_exp
  5780  0023D0  C0D9  F0D9         	movff	exp@x+1,?_exp+1
  5781  0023D4  C0DA  F0DA         	movff	exp@x+2,?_exp+2
  5782  0023D8  0012               	return		;funcret
  5783  0023DA                     __end_of_exp:
  5784                           	opt stack 0
  5785                           tblptru	equ	0xFF8
  5786                           tblptrh	equ	0xFF7
  5787                           tblptrl	equ	0xFF6
  5788                           tablat	equ	0xFF5
  5789                           prodh	equ	0xFF4
  5790                           prodl	equ	0xFF3
  5791                           intcon	equ	0xFF2
  5792                           intcon2	equ	0xFF1
  5793                           intcon3	equ	0xFF0
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           postdec1	equ	0xFE5
  5797                           fsr1l	equ	0xFE1
  5798                           indf2	equ	0xFDF
  5799                           postinc2	equ	0xFDE
  5800                           postdec2	equ	0xFDD
  5801                           fsr2h	equ	0xFDA
  5802                           fsr2l	equ	0xFD9
  5803                           status	equ	0xFD8
  5804                           
  5805 ;; *************** function _ldexp *****************
  5806 ;; Defined at:
  5807 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  value           3   67[BANK0 ] unsigned char 
  5810 ;;  newexp          2   70[BANK0 ] int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  3   67[BANK0 ] int 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2, status,0
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5822 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;Total ram usage:        7 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    7
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_exp
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text13
  5837  0030F4                     __ptext13:
  5838                           	opt stack 0
  5839  0030F4                     _ldexp:
  5840                           	opt stack 19
  5841                           
  5842                           ;incstack = 0
  5843  0030F4  0100               	movlb	0	; () banked
  5844  0030F6  51C3               	movf	ldexp@value& (0+255),w,b
  5845  0030F8  0100               	movlb	0	; () banked
  5846  0030FA  11C4               	iorwf	(ldexp@value+1)& (0+255),w,b
  5847  0030FC  0100               	movlb	0	; () banked
  5848  0030FE  11C5               	iorwf	(ldexp@value+2)& (0+255),w,b
  5849  003100  A4D8               	btfss	status,2,c
  5850  003102  D00A               	goto	l7688
  5851                           
  5852                           ; BSR set to: 0
  5853  003104  0E00               	movlw	0
  5854  003106  0100               	movlb	0	; () banked
  5855  003108  6FC3               	movwf	?_ldexp& (0+255),b
  5856  00310A  0E00               	movlw	0
  5857  00310C  0100               	movlb	0	; () banked
  5858  00310E  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5859  003110  0E00               	movlw	0
  5860  003112  0100               	movlb	0	; () banked
  5861  003114  6FC5               	movwf	(?_ldexp+2)& (0+255),b
  5862                           
  5863                           ; BSR set to: 0
  5864  003116  0012               	return	
  5865  003118                     l7688:
  5866                           
  5867                           ; BSR set to: 0
  5868  003118  0100               	movlb	0	; () banked
  5869  00311A  51C5               	movf	(ldexp@value+2)& (0+255),w,b
  5870  00311C  0B7F               	andlw	127
  5871  00311E  0100               	movlb	0	; () banked
  5872  003120  6FC8               	movwf	??_ldexp& (0+255),b
  5873  003122  6BC9               	clrf	(??_ldexp+1)& (0+255),b
  5874  003124  90D8               	bcf	status,0,c
  5875  003126  0100               	movlb	0	; () banked
  5876  003128  37C8               	rlcf	??_ldexp& (0+255),f,b
  5877  00312A  37C9               	rlcf	(??_ldexp+1)& (0+255),f,b
  5878  00312C  0100               	movlb	0	; () banked
  5879  00312E  51C8               	movf	??_ldexp& (0+255),w,b
  5880  003130  0100               	movlb	0	; () banked
  5881  003132  27C6               	addwf	ldexp@newexp& (0+255),f,b
  5882  003134  0100               	movlb	0	; () banked
  5883  003136  51C9               	movf	(??_ldexp+1)& (0+255),w,b
  5884  003138  0100               	movlb	0	; () banked
  5885  00313A  23C7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5886  00313C  0100               	movlb	0	; () banked
  5887  00313E  AFC4               	btfss	(ldexp@value+1)& (0+255),7,b
  5888  003140  D004               	goto	u7740
  5889  003142  0100               	movlb	0	; () banked
  5890  003144  6BC8               	clrf	??_ldexp& (0+255),b
  5891  003146  2BC8               	incf	??_ldexp& (0+255),f,b
  5892  003148  D002               	goto	u7748
  5893  00314A                     u7740:
  5894  00314A  0100               	movlb	0	; () banked
  5895  00314C  6BC8               	clrf	??_ldexp& (0+255),b
  5896  00314E                     u7748:
  5897  00314E  0100               	movlb	0	; () banked
  5898  003150  51C8               	movf	??_ldexp& (0+255),w,b
  5899  003152  0100               	movlb	0	; () banked
  5900  003154  27C6               	addwf	ldexp@newexp& (0+255),f,b
  5901  003156  0E00               	movlw	0
  5902  003158  23C7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5903  00315A  0100               	movlb	0	; () banked
  5904  00315C  AFC7               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5905  00315E  D00F               	goto	l7696
  5906                           
  5907                           ; BSR set to: 0
  5908  003160  0E00               	movlw	0
  5909  003162  0101               	movlb	1	; () banked
  5910  003164  6F30               	movwf	(_errno+1)& (0+255),b
  5911  003166  0E22               	movlw	34
  5912  003168  6F2F               	movwf	_errno& (0+255),b
  5913  00316A  0E00               	movlw	0
  5914  00316C  0100               	movlb	0	; () banked
  5915  00316E  6FC3               	movwf	?_ldexp& (0+255),b
  5916  003170  0E00               	movlw	0
  5917  003172  0100               	movlb	0	; () banked
  5918  003174  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5919  003176  0E00               	movlw	0
  5920  003178                     L16:
  5921  003178  0100               	movlb	0	; () banked
  5922  00317A  6FC5               	movwf	(?_ldexp+2)& (0+255),b
  5923                           
  5924                           ; BSR set to: 0
  5925  00317C  0012               	return	
  5926  00317E                     l7696:
  5927                           
  5928                           ; BSR set to: 0
  5929  00317E  0100               	movlb	0	; () banked
  5930  003180  BFC7               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5931  003182  D01C               	goto	l7712
  5932  003184  0100               	movlb	0	; () banked
  5933  003186  05C7               	decf	(ldexp@newexp+1)& (0+255),w,b
  5934  003188  A0D8               	btfss	status,0,c
  5935  00318A  D018               	goto	l7712
  5936                           
  5937                           ; BSR set to: 0
  5938  00318C  0E00               	movlw	0
  5939  00318E  0101               	movlb	1	; () banked
  5940  003190  6F30               	movwf	(_errno+1)& (0+255),b
  5941  003192  0E22               	movlw	34
  5942  003194  6F2F               	movwf	_errno& (0+255),b
  5943                           
  5944                           ; BSR set to: 1
  5945  003196  0100               	movlb	0	; () banked
  5946  003198  AFC5               	btfss	(ldexp@value+2)& (0+255),7,b
  5947  00319A  D008               	goto	l7708
  5948                           
  5949                           ; BSR set to: 0
  5950  00319C  0EFF               	movlw	255
  5951  00319E  0100               	movlb	0	; () banked
  5952  0031A0  6FC3               	movwf	?_ldexp& (0+255),b
  5953  0031A2  0E7F               	movlw	127
  5954  0031A4  0100               	movlb	0	; () banked
  5955  0031A6  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5956  0031A8  0EFF               	movlw	255
  5957  0031AA  D7E6               	goto	L16
  5958  0031AC                     l7708:
  5959                           
  5960                           ; BSR set to: 0
  5961  0031AC  0EFF               	movlw	255
  5962  0031AE  0100               	movlb	0	; () banked
  5963  0031B0  6FC3               	movwf	?_ldexp& (0+255),b
  5964  0031B2  0E7F               	movlw	127
  5965  0031B4  0100               	movlb	0	; () banked
  5966  0031B6  6FC4               	movwf	(?_ldexp+1)& (0+255),b
  5967  0031B8  0E7F               	movlw	127
  5968  0031BA  D7DE               	goto	L16
  5969  0031BC                     l7712:
  5970                           
  5971                           ; BSR set to: 0
  5972  0031BC  0100               	movlb	0	; () banked
  5973  0031BE  35C7               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5974  0031C0  31C7               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5975  0031C2  0100               	movlb	0	; () banked
  5976  0031C4  6FC9               	movwf	(??_ldexp+1)& (0+255),b
  5977  0031C6  0100               	movlb	0	; () banked
  5978  0031C8  31C6               	rrcf	ldexp@newexp& (0+255),w,b
  5979  0031CA  0100               	movlb	0	; () banked
  5980  0031CC  6FC8               	movwf	??_ldexp& (0+255),b
  5981  0031CE  0100               	movlb	0	; () banked
  5982  0031D0  51C5               	movf	(ldexp@value+2)& (0+255),w,b
  5983  0031D2  0100               	movlb	0	; () banked
  5984  0031D4  19C8               	xorwf	??_ldexp& (0+255),w,b
  5985  0031D6  0B80               	andlw	-128
  5986  0031D8  19C8               	xorwf	??_ldexp& (0+255),w,b
  5987  0031DA  0100               	movlb	0	; () banked
  5988  0031DC  6FC5               	movwf	(ldexp@value+2)& (0+255),b
  5989  0031DE  C0C6  F0C8         	movff	ldexp@newexp,??_ldexp
  5990  0031E2  0E01               	movlw	1
  5991  0031E4  0100               	movlb	0	; () banked
  5992  0031E6  17C8               	andwf	??_ldexp& (0+255),f,b
  5993  0031E8  0100               	movlb	0	; () banked
  5994  0031EA  33C8               	rrcf	??_ldexp& (0+255),f,b
  5995  0031EC  33C8               	rrcf	??_ldexp& (0+255),f,b
  5996  0031EE  0100               	movlb	0	; () banked
  5997  0031F0  51C4               	movf	(ldexp@value+1)& (0+255),w,b
  5998  0031F2  0100               	movlb	0	; () banked
  5999  0031F4  19C8               	xorwf	??_ldexp& (0+255),w,b
  6000  0031F6  0B7F               	andlw	-129
  6001  0031F8  19C8               	xorwf	??_ldexp& (0+255),w,b
  6002  0031FA  0100               	movlb	0	; () banked
  6003  0031FC  6FC4               	movwf	(ldexp@value+1)& (0+255),b
  6004                           
  6005                           ; BSR set to: 0
  6006                           
  6007                           ; BSR set to: 0
  6008                           
  6009                           ; BSR set to: 0
  6010  0031FE  C0C3  F0C3         	movff	ldexp@value,?_ldexp
  6011  003202  C0C4  F0C4         	movff	ldexp@value+1,?_ldexp+1
  6012  003206  C0C5  F0C5         	movff	ldexp@value+2,?_ldexp+2
  6013  00320A  0012               	return	
  6014  00320C                     __end_of_ldexp:
  6015                           	opt stack 0
  6016                           tblptru	equ	0xFF8
  6017                           tblptrh	equ	0xFF7
  6018                           tblptrl	equ	0xFF6
  6019                           tablat	equ	0xFF5
  6020                           prodh	equ	0xFF4
  6021                           prodl	equ	0xFF3
  6022                           intcon	equ	0xFF2
  6023                           intcon2	equ	0xFF1
  6024                           intcon3	equ	0xFF0
  6025                           postinc0	equ	0xFEE
  6026                           wreg	equ	0xFE8
  6027                           postdec1	equ	0xFE5
  6028                           fsr1l	equ	0xFE1
  6029                           indf2	equ	0xFDF
  6030                           postinc2	equ	0xFDE
  6031                           postdec2	equ	0xFDD
  6032                           fsr2h	equ	0xFDA
  6033                           fsr2l	equ	0xFD9
  6034                           status	equ	0xFD8
  6035                           
  6036 ;; *************** function _floor *****************
  6037 ;; Defined at:
  6038 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\floor.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  x               3   80[BANK0 ] int 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  i               3   83[BANK0 ] int 
  6043 ;;  expon           2   86[BANK0 ] int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  3   80[BANK0 ] int 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6053 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;Total ram usage:        8 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    9
  6060 ;; This function calls:
  6061 ;;		___altoft
  6062 ;;		___ftadd
  6063 ;;		___ftge
  6064 ;;		___fttol
  6065 ;;		_frexp
  6066 ;; This function is called by:
  6067 ;;		_exp
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text14
  6072  003940                     __ptext14:
  6073                           	opt stack 0
  6074  003940                     _floor:
  6075                           	opt stack 17
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;incstack = 0
  6079  003940  C0D0  F090         	movff	floor@x,frexp@value
  6080  003944  C0D1  F091         	movff	floor@x+1,frexp@value+1
  6081  003948  C0D2  F092         	movff	floor@x+2,frexp@value+2
  6082  00394C  0ED6               	movlw	low floor@expon
  6083  00394E  0100               	movlb	0	; () banked
  6084  003950  6F93               	movwf	frexp@eptr& (0+255),b
  6085  003952  0E00               	movlw	high floor@expon
  6086  003954  0100               	movlb	0	; () banked
  6087  003956  6F94               	movwf	(frexp@eptr+1)& (0+255),b
  6088  003958  ECA5  F023         	call	_frexp	;wreg free
  6089  00395C  0100               	movlb	0	; () banked
  6090  00395E  AFD7               	btfss	(floor@expon+1)& (0+255),7,b
  6091  003960  D017               	goto	l7666
  6092                           
  6093                           ; BSR set to: 0
  6094  003962  0100               	movlb	0	; () banked
  6095  003964  AFD2               	btfss	(floor@x+2)& (0+255),7,b
  6096  003966  D00A               	goto	l7662
  6097                           
  6098                           ; BSR set to: 0
  6099  003968  0E00               	movlw	0
  6100  00396A  0100               	movlb	0	; () banked
  6101  00396C  6FD0               	movwf	?_floor& (0+255),b
  6102  00396E  0E80               	movlw	128
  6103  003970  0100               	movlb	0	; () banked
  6104  003972  6FD1               	movwf	(?_floor+1)& (0+255),b
  6105  003974  0EBF               	movlw	191
  6106  003976  0100               	movlb	0	; () banked
  6107  003978  6FD2               	movwf	(?_floor+2)& (0+255),b
  6108                           
  6109                           ; BSR set to: 0
  6110  00397A  0012               	return	
  6111  00397C                     l7662:
  6112                           
  6113                           ; BSR set to: 0
  6114  00397C  0E00               	movlw	0
  6115  00397E  0100               	movlb	0	; () banked
  6116  003980  6FD0               	movwf	?_floor& (0+255),b
  6117  003982  0E00               	movlw	0
  6118  003984  0100               	movlb	0	; () banked
  6119  003986  6FD1               	movwf	(?_floor+1)& (0+255),b
  6120  003988  0E00               	movlw	0
  6121  00398A  0100               	movlb	0	; () banked
  6122  00398C  6FD2               	movwf	(?_floor+2)& (0+255),b
  6123                           
  6124                           ; BSR set to: 0
  6125  00398E  0012               	return	
  6126  003990                     l7666:
  6127                           
  6128                           ; BSR set to: 0
  6129  003990  0100               	movlb	0	; () banked
  6130  003992  51D7               	movf	(floor@expon+1)& (0+255),w,b
  6131  003994  E105               	bnz	u7700
  6132  003996  0E15               	movlw	21
  6133  003998  0100               	movlb	0	; () banked
  6134  00399A  5DD6               	subwf	floor@expon& (0+255),w,b
  6135  00399C  A0D8               	btfss	status,0,c
  6136  00399E  D007               	goto	l7670
  6137  0039A0                     u7700:
  6138                           
  6139                           ; BSR set to: 0
  6140  0039A0  C0D0  F0D0         	movff	floor@x,?_floor
  6141  0039A4  C0D1  F0D1         	movff	floor@x+1,?_floor+1
  6142  0039A8  C0D2  F0D2         	movff	floor@x+2,?_floor+2
  6143  0039AC  0012               	return	
  6144  0039AE                     l7670:
  6145                           
  6146                           ; BSR set to: 0
  6147  0039AE  C0D0  F0B7         	movff	floor@x,___fttol@f1
  6148  0039B2  C0D1  F0B8         	movff	floor@x+1,___fttol@f1+1
  6149  0039B6  C0D2  F0B9         	movff	floor@x+2,___fttol@f1+2
  6150  0039BA  EC49  F017         	call	___fttol	;wreg free
  6151  0039BE  C0B7  F0C6         	movff	?___fttol,___altoft@c
  6152  0039C2  C0B8  F0C7         	movff	?___fttol+1,___altoft@c+1
  6153  0039C6  C0B9  F0C8         	movff	?___fttol+2,___altoft@c+2
  6154  0039CA  C0BA  F0C9         	movff	?___fttol+3,___altoft@c+3
  6155  0039CE  ECA4  F024         	call	___altoft	;wreg free
  6156  0039D2  C0C6  F0D3         	movff	?___altoft,floor@i
  6157  0039D6  C0C7  F0D4         	movff	?___altoft+1,floor@i+1
  6158  0039DA  C0C8  F0D5         	movff	?___altoft+2,floor@i+2
  6159  0039DE  C0D0  F0A7         	movff	floor@x,___ftge@ff1
  6160  0039E2  C0D1  F0A8         	movff	floor@x+1,___ftge@ff1+1
  6161  0039E6  C0D2  F0A9         	movff	floor@x+2,___ftge@ff1+2
  6162  0039EA  C0D3  F0AA         	movff	floor@i,___ftge@ff2
  6163  0039EE  C0D4  F0AB         	movff	floor@i+1,___ftge@ff2+1
  6164  0039F2  C0D5  F0AC         	movff	floor@i+2,___ftge@ff2+2
  6165  0039F6  EC21  F022         	call	___ftge	;wreg free
  6166  0039FA  0100               	movlb	0	; () banked
  6167  0039FC  B0D8               	btfsc	status,0,c
  6168  0039FE  D018               	goto	l1288
  6169                           
  6170                           ; BSR set to: 0
  6171  003A00  C0D3  F0AB         	movff	floor@i,___ftadd@f1
  6172  003A04  C0D4  F0AC         	movff	floor@i+1,___ftadd@f1+1
  6173  003A08  C0D5  F0AD         	movff	floor@i+2,___ftadd@f1+2
  6174  003A0C  0E00               	movlw	0
  6175  003A0E  0100               	movlb	0	; () banked
  6176  003A10  6FAE               	movwf	___ftadd@f2& (0+255),b
  6177  003A12  0E80               	movlw	128
  6178  003A14  0100               	movlb	0	; () banked
  6179  003A16  6FAF               	movwf	(___ftadd@f2+1)& (0+255),b
  6180  003A18  0EBF               	movlw	191
  6181  003A1A  0100               	movlb	0	; () banked
  6182  003A1C  6FB0               	movwf	(___ftadd@f2+2)& (0+255),b
  6183  003A1E  EC6F  F00E         	call	___ftadd	;wreg free
  6184  003A22  C0AB  F0D0         	movff	?___ftadd,?_floor
  6185  003A26  C0AC  F0D1         	movff	?___ftadd+1,?_floor+1
  6186  003A2A  C0AD  F0D2         	movff	?___ftadd+2,?_floor+2
  6187  003A2E  0012               	return	
  6188  003A30                     l1288:
  6189                           
  6190                           ; BSR set to: 0
  6191  003A30  C0D3  F0D0         	movff	floor@i,?_floor
  6192  003A34  C0D4  F0D1         	movff	floor@i+1,?_floor+1
  6193  003A38  C0D5  F0D2         	movff	floor@i+2,?_floor+2
  6194  003A3C  0012               	return		;funcret
  6195  003A3E                     __end_of_floor:
  6196                           	opt stack 0
  6197                           tblptru	equ	0xFF8
  6198                           tblptrh	equ	0xFF7
  6199                           tblptrl	equ	0xFF6
  6200                           tablat	equ	0xFF5
  6201                           prodh	equ	0xFF4
  6202                           prodl	equ	0xFF3
  6203                           intcon	equ	0xFF2
  6204                           intcon2	equ	0xFF1
  6205                           intcon3	equ	0xFF0
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           postdec1	equ	0xFE5
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function _frexp *****************
  6218 ;; Defined at:
  6219 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  value           3   16[BANK0 ] int 
  6222 ;;  eptr            2   19[BANK0 ] PTR int 
  6223 ;;		 -> log@exponent(2), floor@expon(2), 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  3   16[BANK0 ] PTR int 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6235 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;Total ram usage:        7 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    7
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_floor
  6246 ;;		_log
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text15
  6251  00474A                     __ptext15:
  6252                           	opt stack 0
  6253  00474A                     _frexp:
  6254                           	opt stack 19
  6255                           
  6256                           ;incstack = 0
  6257  00474A  0100               	movlb	0	; () banked
  6258  00474C  5190               	movf	frexp@value& (0+255),w,b
  6259  00474E  0100               	movlb	0	; () banked
  6260  004750  1191               	iorwf	(frexp@value+1)& (0+255),w,b
  6261  004752  0100               	movlb	0	; () banked
  6262  004754  1192               	iorwf	(frexp@value+2)& (0+255),w,b
  6263  004756  A4D8               	btfss	status,2,c
  6264  004758  D012               	goto	l7570
  6265                           
  6266                           ; BSR set to: 0
  6267  00475A  C093  FFD9         	movff	frexp@eptr,fsr2l
  6268  00475E  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6269  004762  0E00               	movlw	0
  6270  004764  6EDE               	movwf	postinc2,c
  6271  004766  0E00               	movlw	0
  6272  004768  6EDD               	movwf	postdec2,c
  6273                           
  6274                           ; BSR set to: 0
  6275  00476A  0E00               	movlw	0
  6276  00476C  0100               	movlb	0	; () banked
  6277  00476E  6F90               	movwf	?_frexp& (0+255),b
  6278  004770  0E00               	movlw	0
  6279  004772  0100               	movlb	0	; () banked
  6280  004774  6F91               	movwf	(?_frexp+1)& (0+255),b
  6281  004776  0E00               	movlw	0
  6282  004778  0100               	movlb	0	; () banked
  6283  00477A  6F92               	movwf	(?_frexp+2)& (0+255),b
  6284                           
  6285                           ; BSR set to: 0
  6286  00477C  0012               	return	
  6287  00477E                     l7570:
  6288                           
  6289                           ; BSR set to: 0
  6290  00477E  0100               	movlb	0	; () banked
  6291  004780  5192               	movf	(frexp@value+2)& (0+255),w,b
  6292  004782  0B7F               	andlw	127
  6293  004784  0100               	movlb	0	; () banked
  6294  004786  6F95               	movwf	??_frexp& (0+255),b
  6295  004788  6B96               	clrf	(??_frexp+1)& (0+255),b
  6296  00478A  90D8               	bcf	status,0,c
  6297  00478C  0100               	movlb	0	; () banked
  6298  00478E  3795               	rlcf	??_frexp& (0+255),f,b
  6299  004790  3796               	rlcf	(??_frexp+1)& (0+255),f,b
  6300  004792  C093  FFD9         	movff	frexp@eptr,fsr2l
  6301  004796  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6302  00479A  C095  FFDE         	movff	??_frexp,postinc2
  6303  00479E  C096  FFDD         	movff	??_frexp+1,postdec2
  6304  0047A2  0100               	movlb	0	; () banked
  6305  0047A4  AF91               	btfss	(frexp@value+1)& (0+255),7,b
  6306  0047A6  D004               	goto	u7590
  6307  0047A8  0100               	movlb	0	; () banked
  6308  0047AA  6B95               	clrf	??_frexp& (0+255),b
  6309  0047AC  2B95               	incf	??_frexp& (0+255),f,b
  6310  0047AE  D002               	goto	u7598
  6311  0047B0                     u7590:
  6312  0047B0  0100               	movlb	0	; () banked
  6313  0047B2  6B95               	clrf	??_frexp& (0+255),b
  6314  0047B4                     u7598:
  6315  0047B4  0100               	movlb	0	; () banked
  6316  0047B6  5195               	movf	??_frexp& (0+255),w,b
  6317  0047B8  C093  FFD9         	movff	frexp@eptr,fsr2l
  6318  0047BC  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6319  0047C0  12DE               	iorwf	postinc2,f,c
  6320  0047C2  0E00               	movlw	0
  6321  0047C4  12DD               	iorwf	postdec2,f,c
  6322                           
  6323                           ; BSR set to: 0
  6324  0047C6  C093  FFD9         	movff	frexp@eptr,fsr2l
  6325  0047CA  C094  FFDA         	movff	frexp@eptr+1,fsr2h
  6326  0047CE  0E82               	movlw	130
  6327  0047D0  26DE               	addwf	postinc2,f,c
  6328  0047D2  0EFF               	movlw	255
  6329  0047D4  22DD               	addwfc	postdec2,f,c
  6330                           
  6331                           ; BSR set to: 0
  6332  0047D6  0100               	movlb	0	; () banked
  6333  0047D8  8192               	bsf	(frexp@value+2)& (0+255),0,b
  6334  0047DA  8392               	bsf	(frexp@value+2)& (0+255),1,b
  6335  0047DC  8592               	bsf	(frexp@value+2)& (0+255),2,b
  6336  0047DE  8792               	bsf	(frexp@value+2)& (0+255),3,b
  6337  0047E0  8992               	bsf	(frexp@value+2)& (0+255),4,b
  6338  0047E2  8B92               	bsf	(frexp@value+2)& (0+255),5,b
  6339  0047E4  9D92               	bcf	(frexp@value+2)& (0+255),6,b
  6340                           
  6341                           ; BSR set to: 0
  6342  0047E6  0100               	movlb	0	; () banked
  6343  0047E8  9F91               	bcf	(frexp@value+1)& (0+255),7,b
  6344                           
  6345                           ; BSR set to: 0
  6346  0047EA  C090  F090         	movff	frexp@value,?_frexp
  6347  0047EE  C091  F091         	movff	frexp@value+1,?_frexp+1
  6348  0047F2  C092  F092         	movff	frexp@value+2,?_frexp+2
  6349  0047F6  0012               	return	
  6350  0047F8                     __end_of_frexp:
  6351                           	opt stack 0
  6352                           tblptru	equ	0xFF8
  6353                           tblptrh	equ	0xFF7
  6354                           tblptrl	equ	0xFF6
  6355                           tablat	equ	0xFF5
  6356                           prodh	equ	0xFF4
  6357                           prodl	equ	0xFF3
  6358                           intcon	equ	0xFF2
  6359                           intcon2	equ	0xFF1
  6360                           intcon3	equ	0xFF0
  6361                           postinc0	equ	0xFEE
  6362                           wreg	equ	0xFE8
  6363                           postdec1	equ	0xFE5
  6364                           fsr1l	equ	0xFE1
  6365                           indf2	equ	0xFDF
  6366                           postinc2	equ	0xFDE
  6367                           postdec2	equ	0xFDD
  6368                           fsr2h	equ	0xFDA
  6369                           fsr2l	equ	0xFD9
  6370                           status	equ	0xFD8
  6371                           
  6372 ;; *************** function ___fttol *****************
  6373 ;; Defined at:
  6374 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  f1              3   55[BANK0 ] float 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  lval            4   65[BANK0 ] unsigned long 
  6379 ;;  exp1            1   69[BANK0 ] unsigned char 
  6380 ;;  sign1           1   64[BANK0 ] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  4   55[BANK0 ] long 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;Total ram usage:       15 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    7
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_dec_to_hex
  6401 ;;		_pow
  6402 ;;		_exp
  6403 ;;		_floor
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text16
  6408  002E92                     __ptext16:
  6409                           	opt stack 0
  6410  002E92                     ___fttol:
  6411                           	opt stack 18
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;incstack = 0
  6415  002E92  C0B9  F0BB         	movff	___fttol@f1+2,??___fttol
  6416  002E96  0100               	movlb	0	; () banked
  6417  002E98  6BBC               	clrf	(??___fttol+1)& (0+255),b
  6418  002E9A  6BBD               	clrf	(??___fttol+2)& (0+255),b
  6419  002E9C  0100               	movlb	0	; () banked
  6420  002E9E  35B8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  6421  002EA0  0100               	movlb	0	; () banked
  6422  002EA2  37BB               	rlcf	??___fttol& (0+255),f,b
  6423  002EA4  E301               	bnc	u7501
  6424  002EA6  81BC               	bsf	(??___fttol+1)& (0+255),0,b
  6425  002EA8                     u7501:
  6426  002EA8  0100               	movlb	0	; () banked
  6427  002EAA  51BB               	movf	??___fttol& (0+255),w,b
  6428  002EAC  0100               	movlb	0	; () banked
  6429  002EAE  6FC5               	movwf	___fttol@exp1& (0+255),b
  6430  002EB0  0100               	movlb	0	; () banked
  6431  002EB2  51C5               	movf	___fttol@exp1& (0+255),w,b
  6432  002EB4  A4D8               	btfss	status,2,c
  6433  002EB6  D00A               	goto	l7522
  6434                           
  6435                           ; BSR set to: 0
  6436  002EB8  0E00               	movlw	0
  6437  002EBA  0100               	movlb	0	; () banked
  6438  002EBC  6FB7               	movwf	?___fttol& (0+255),b
  6439  002EBE  0E00               	movlw	0
  6440  002EC0  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6441  002EC2  0E00               	movlw	0
  6442  002EC4  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6443  002EC6  0E00               	movlw	0
  6444  002EC8  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6445                           
  6446                           ; BSR set to: 0
  6447  002ECA  0012               	return	
  6448  002ECC                     l7522:
  6449                           
  6450                           ; BSR set to: 0
  6451  002ECC  0E17               	movlw	23
  6452  002ECE  0100               	movlb	0	; () banked
  6453  002ED0  6FBB               	movwf	??___fttol& (0+255),b
  6454  002ED2  C0B7  F0BC         	movff	___fttol@f1,??___fttol+1
  6455  002ED6  C0B8  F0BD         	movff	___fttol@f1+1,??___fttol+2
  6456  002EDA  C0B9  F0BE         	movff	___fttol@f1+2,??___fttol+3
  6457  002EDE  0100               	movlb	0	; () banked
  6458  002EE0  29BB               	incf	??___fttol& (0+255),w,b
  6459  002EE2  0100               	movlb	0	; () banked
  6460  002EE4  6FBF               	movwf	(??___fttol+4)& (0+255),b
  6461  002EE6  D005               	goto	u7520
  6462  002EE8                     u7525:
  6463  002EE8  0100               	movlb	0	; () banked
  6464  002EEA  90D8               	bcf	status,0,c
  6465  002EEC  33BE               	rrcf	(??___fttol+3)& (0+255),f,b
  6466  002EEE  33BD               	rrcf	(??___fttol+2)& (0+255),f,b
  6467  002EF0  33BC               	rrcf	(??___fttol+1)& (0+255),f,b
  6468  002EF2                     u7520:
  6469  002EF2  0100               	movlb	0	; () banked
  6470  002EF4  2FBF               	decfsz	(??___fttol+4)& (0+255),f,b
  6471  002EF6  D7F8               	goto	u7525
  6472  002EF8  0100               	movlb	0	; () banked
  6473  002EFA  51BC               	movf	(??___fttol+1)& (0+255),w,b
  6474  002EFC  0100               	movlb	0	; () banked
  6475  002EFE  6FC0               	movwf	___fttol@sign1& (0+255),b
  6476                           
  6477                           ; BSR set to: 0
  6478  002F00  0100               	movlb	0	; () banked
  6479  002F02  8FB8               	bsf	(___fttol@f1+1)& (0+255),7,b
  6480                           
  6481                           ; BSR set to: 0
  6482  002F04  0EFF               	movlw	255
  6483  002F06  0100               	movlb	0	; () banked
  6484  002F08  17B7               	andwf	___fttol@f1& (0+255),f,b
  6485  002F0A  0EFF               	movlw	255
  6486  002F0C  0100               	movlb	0	; () banked
  6487  002F0E  17B8               	andwf	(___fttol@f1+1)& (0+255),f,b
  6488  002F10  0E00               	movlw	0
  6489  002F12  0100               	movlb	0	; () banked
  6490  002F14  17B9               	andwf	(___fttol@f1+2)& (0+255),f,b
  6491                           
  6492                           ; BSR set to: 0
  6493  002F16  0100               	movlb	0	; () banked
  6494  002F18  51B7               	movf	___fttol@f1& (0+255),w,b
  6495  002F1A  0100               	movlb	0	; () banked
  6496  002F1C  6FC1               	movwf	___fttol@lval& (0+255),b
  6497  002F1E  0100               	movlb	0	; () banked
  6498  002F20  51B8               	movf	(___fttol@f1+1)& (0+255),w,b
  6499  002F22  0100               	movlb	0	; () banked
  6500  002F24  6FC2               	movwf	(___fttol@lval+1)& (0+255),b
  6501  002F26  0100               	movlb	0	; () banked
  6502  002F28  51B9               	movf	(___fttol@f1+2)& (0+255),w,b
  6503  002F2A  0100               	movlb	0	; () banked
  6504  002F2C  6FC3               	movwf	(___fttol@lval+2)& (0+255),b
  6505  002F2E  0100               	movlb	0	; () banked
  6506  002F30  6BC4               	clrf	(___fttol@lval+3)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509  002F32  0E8E               	movlw	142
  6510  002F34  0100               	movlb	0	; () banked
  6511  002F36  5FC5               	subwf	___fttol@exp1& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514  002F38  0100               	movlb	0	; () banked
  6515  002F3A  AFC5               	btfss	___fttol@exp1& (0+255),7,b
  6516  002F3C  D01A               	goto	l7544
  6517                           
  6518                           ; BSR set to: 0
  6519  002F3E  0100               	movlb	0	; () banked
  6520  002F40  51C5               	movf	___fttol@exp1& (0+255),w,b
  6521  002F42  0A80               	xorlw	128
  6522  002F44  0F8F               	addlw	143
  6523  002F46  B0D8               	btfsc	status,0,c
  6524  002F48  D00A               	goto	l7540
  6525                           
  6526                           ; BSR set to: 0
  6527  002F4A  0E00               	movlw	0
  6528  002F4C  0100               	movlb	0	; () banked
  6529  002F4E  6FB7               	movwf	?___fttol& (0+255),b
  6530  002F50  0E00               	movlw	0
  6531  002F52  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6532  002F54  0E00               	movlw	0
  6533  002F56  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6534  002F58  0E00               	movlw	0
  6535  002F5A  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538  002F5C  0012               	return	
  6539  002F5E                     l7540:
  6540                           
  6541                           ; BSR set to: 0
  6542  002F5E  0100               	movlb	0	; () banked
  6543  002F60  90D8               	bcf	status,0,c
  6544  002F62  33C4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6545  002F64  33C3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6546  002F66  33C2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6547  002F68  33C1               	rrcf	___fttol@lval& (0+255),f,b
  6548                           
  6549                           ; BSR set to: 0
  6550  002F6A  0100               	movlb	0	; () banked
  6551  002F6C  3FC5               	incfsz	___fttol@exp1& (0+255),f,b
  6552  002F6E  D7F7               	goto	l7540
  6553                           
  6554                           ; BSR set to: 0
  6555  002F70  D01B               	goto	l7554
  6556  002F72                     l7544:
  6557                           
  6558                           ; BSR set to: 0
  6559  002F72  0E17               	movlw	23
  6560  002F74  0100               	movlb	0	; () banked
  6561  002F76  65C5               	cpfsgt	___fttol@exp1& (0+255),b
  6562  002F78  D012               	goto	l7552
  6563                           
  6564                           ; BSR set to: 0
  6565  002F7A  0E00               	movlw	0
  6566  002F7C  0100               	movlb	0	; () banked
  6567  002F7E  6FB7               	movwf	?___fttol& (0+255),b
  6568  002F80  0E00               	movlw	0
  6569  002F82  6FB8               	movwf	(?___fttol+1)& (0+255),b
  6570  002F84  0E00               	movlw	0
  6571  002F86  6FB9               	movwf	(?___fttol+2)& (0+255),b
  6572  002F88  0E00               	movlw	0
  6573  002F8A  6FBA               	movwf	(?___fttol+3)& (0+255),b
  6574                           
  6575                           ; BSR set to: 0
  6576  002F8C  0012               	return	
  6577  002F8E                     l7550:
  6578                           
  6579                           ; BSR set to: 0
  6580  002F8E  0100               	movlb	0	; () banked
  6581  002F90  90D8               	bcf	status,0,c
  6582  002F92  37C1               	rlcf	___fttol@lval& (0+255),f,b
  6583  002F94  37C2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6584  002F96  37C3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6585  002F98  37C4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6586  002F9A  0100               	movlb	0	; () banked
  6587  002F9C  07C5               	decf	___fttol@exp1& (0+255),f,b
  6588  002F9E                     l7552:
  6589                           
  6590                           ; BSR set to: 0
  6591  002F9E  0100               	movlb	0	; () banked
  6592  002FA0  51C5               	movf	___fttol@exp1& (0+255),w,b
  6593  002FA2  0100               	movlb	0	; () banked
  6594  002FA4  A4D8               	btfss	status,2,c
  6595  002FA6  D7F3               	goto	l7550
  6596  002FA8                     l7554:
  6597                           
  6598                           ; BSR set to: 0
  6599  002FA8  0100               	movlb	0	; () banked
  6600  002FAA  51C0               	movf	___fttol@sign1& (0+255),w,b
  6601  002FAC  0100               	movlb	0	; () banked
  6602  002FAE  B4D8               	btfsc	status,2,c
  6603  002FB0  D009               	goto	l7558
  6604                           
  6605                           ; BSR set to: 0
  6606  002FB2  0100               	movlb	0	; () banked
  6607  002FB4  1FC4               	comf	(___fttol@lval+3)& (0+255),f,b
  6608  002FB6  1FC3               	comf	(___fttol@lval+2)& (0+255),f,b
  6609  002FB8  1FC2               	comf	(___fttol@lval+1)& (0+255),f,b
  6610  002FBA  6DC1               	negf	___fttol@lval& (0+255),b
  6611  002FBC  0E00               	movlw	0
  6612  002FBE  23C2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6613  002FC0  23C3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6614  002FC2  23C4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6615  002FC4                     l7558:
  6616                           
  6617                           ; BSR set to: 0
  6618  002FC4  C0C1  F0B7         	movff	___fttol@lval,?___fttol
  6619  002FC8  C0C2  F0B8         	movff	___fttol@lval+1,?___fttol+1
  6620  002FCC  C0C3  F0B9         	movff	___fttol@lval+2,?___fttol+2
  6621  002FD0  C0C4  F0BA         	movff	___fttol@lval+3,?___fttol+3
  6622  002FD4  0012               	return	
  6623  002FD6                     __end_of___fttol:
  6624                           	opt stack 0
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           intcon	equ	0xFF2
  6632                           intcon2	equ	0xFF1
  6633                           intcon3	equ	0xFF0
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postdec1	equ	0xFE5
  6637                           fsr1l	equ	0xFE1
  6638                           indf2	equ	0xFDF
  6639                           postinc2	equ	0xFDE
  6640                           postdec2	equ	0xFDD
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8
  6644                           
  6645 ;; *************** function ___ftge *****************
  6646 ;; Defined at:
  6647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  ff1             3   39[BANK0 ] float 
  6650 ;;  ff2             3   42[BANK0 ] float 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6662 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;Total ram usage:        9 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:    7
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_operation
  6673 ;;		_pow
  6674 ;;		_exp
  6675 ;;		_floor
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text17
  6680  004442                     __ptext17:
  6681                           	opt stack 0
  6682  004442                     ___ftge:
  6683                           	opt stack 18
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;incstack = 0
  6687  004442  0100               	movlb	0	; () banked
  6688  004444  AFA9               	btfss	(___ftge@ff1+2)& (0+255),7,b
  6689  004446  D01D               	goto	l7502
  6690                           
  6691                           ; BSR set to: 0
  6692  004448  C0A7  F0AD         	movff	___ftge@ff1,??___ftge
  6693  00444C  C0A8  F0AE         	movff	___ftge@ff1+1,??___ftge+1
  6694  004450  C0A9  F0AF         	movff	___ftge@ff1+2,??___ftge+2
  6695  004454  0100               	movlb	0	; () banked
  6696  004456  1FAD               	comf	??___ftge& (0+255),f,b
  6697  004458  1FAE               	comf	(??___ftge+1)& (0+255),f,b
  6698  00445A  1FAF               	comf	(??___ftge+2)& (0+255),f,b
  6699  00445C  2BAD               	incf	??___ftge& (0+255),f,b
  6700  00445E  0E00               	movlw	0
  6701  004460  23AE               	addwfc	(??___ftge+1)& (0+255),f,b
  6702  004462  23AF               	addwfc	(??___ftge+2)& (0+255),f,b
  6703  004464  0E00               	movlw	0
  6704  004466  0100               	movlb	0	; () banked
  6705  004468  25AD               	addwf	??___ftge& (0+255),w,b
  6706  00446A  0100               	movlb	0	; () banked
  6707  00446C  6FA7               	movwf	___ftge@ff1& (0+255),b
  6708  00446E  0E00               	movlw	0
  6709  004470  0100               	movlb	0	; () banked
  6710  004472  21AE               	addwfc	(??___ftge+1)& (0+255),w,b
  6711  004474  0100               	movlb	0	; () banked
  6712  004476  6FA8               	movwf	(___ftge@ff1+1)& (0+255),b
  6713  004478  0E80               	movlw	128
  6714  00447A  0100               	movlb	0	; () banked
  6715  00447C  21AF               	addwfc	(??___ftge+2)& (0+255),w,b
  6716  00447E  0100               	movlb	0	; () banked
  6717  004480  6FA9               	movwf	(___ftge@ff1+2)& (0+255),b
  6718  004482                     l7502:
  6719                           
  6720                           ; BSR set to: 0
  6721  004482  0100               	movlb	0	; () banked
  6722  004484  AFAC               	btfss	(___ftge@ff2+2)& (0+255),7,b
  6723  004486  D01D               	goto	l7506
  6724                           
  6725                           ; BSR set to: 0
  6726  004488  C0AA  F0AD         	movff	___ftge@ff2,??___ftge
  6727  00448C  C0AB  F0AE         	movff	___ftge@ff2+1,??___ftge+1
  6728  004490  C0AC  F0AF         	movff	___ftge@ff2+2,??___ftge+2
  6729  004494  0100               	movlb	0	; () banked
  6730  004496  1FAD               	comf	??___ftge& (0+255),f,b
  6731  004498  1FAE               	comf	(??___ftge+1)& (0+255),f,b
  6732  00449A  1FAF               	comf	(??___ftge+2)& (0+255),f,b
  6733  00449C  2BAD               	incf	??___ftge& (0+255),f,b
  6734  00449E  0E00               	movlw	0
  6735  0044A0  23AE               	addwfc	(??___ftge+1)& (0+255),f,b
  6736  0044A2  23AF               	addwfc	(??___ftge+2)& (0+255),f,b
  6737  0044A4  0E00               	movlw	0
  6738  0044A6  0100               	movlb	0	; () banked
  6739  0044A8  25AD               	addwf	??___ftge& (0+255),w,b
  6740  0044AA  0100               	movlb	0	; () banked
  6741  0044AC  6FAA               	movwf	___ftge@ff2& (0+255),b
  6742  0044AE  0E00               	movlw	0
  6743  0044B0  0100               	movlb	0	; () banked
  6744  0044B2  21AE               	addwfc	(??___ftge+1)& (0+255),w,b
  6745  0044B4  0100               	movlb	0	; () banked
  6746  0044B6  6FAB               	movwf	(___ftge@ff2+1)& (0+255),b
  6747  0044B8  0E80               	movlw	128
  6748  0044BA  0100               	movlb	0	; () banked
  6749  0044BC  21AF               	addwfc	(??___ftge+2)& (0+255),w,b
  6750  0044BE  0100               	movlb	0	; () banked
  6751  0044C0  6FAC               	movwf	(___ftge@ff2+2)& (0+255),b
  6752  0044C2                     l7506:
  6753                           
  6754                           ; BSR set to: 0
  6755  0044C2  0E00               	movlw	0
  6756  0044C4  0100               	movlb	0	; () banked
  6757  0044C6  1BA7               	xorwf	___ftge@ff1& (0+255),f,b
  6758  0044C8  0E00               	movlw	0
  6759  0044CA  0100               	movlb	0	; () banked
  6760  0044CC  1BA8               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  6761  0044CE  0E80               	movlw	128
  6762  0044D0  0100               	movlb	0	; () banked
  6763  0044D2  1BA9               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  6764                           
  6765                           ; BSR set to: 0
  6766  0044D4  0E00               	movlw	0
  6767  0044D6  0100               	movlb	0	; () banked
  6768  0044D8  1BAA               	xorwf	___ftge@ff2& (0+255),f,b
  6769  0044DA  0E00               	movlw	0
  6770  0044DC  0100               	movlb	0	; () banked
  6771  0044DE  1BAB               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  6772  0044E0  0E80               	movlw	128
  6773  0044E2  0100               	movlb	0	; () banked
  6774  0044E4  1BAC               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  6775  0044E6  0100               	movlb	0	; () banked
  6776  0044E8  51AA               	movf	___ftge@ff2& (0+255),w,b
  6777  0044EA  0100               	movlb	0	; () banked
  6778  0044EC  5DA7               	subwf	___ftge@ff1& (0+255),w,b
  6779  0044EE  0100               	movlb	0	; () banked
  6780  0044F0  51AB               	movf	(___ftge@ff2+1)& (0+255),w,b
  6781  0044F2  0100               	movlb	0	; () banked
  6782  0044F4  59A8               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  6783  0044F6  0100               	movlb	0	; () banked
  6784  0044F8  51AC               	movf	(___ftge@ff2+2)& (0+255),w,b
  6785  0044FA  0100               	movlb	0	; () banked
  6786  0044FC  59A9               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  6787  0044FE  B0D8               	btfsc	status,0,c
  6788  004500  D002               	goto	l7512
  6789                           
  6790                           ; BSR set to: 0
  6791  004502  90D8               	bcf	status,0,c
  6792  004504  0012               	return	
  6793  004506                     l7512:
  6794                           
  6795                           ; BSR set to: 0
  6796  004506  80D8               	bsf	status,0,c
  6797                           
  6798                           ; BSR set to: 0
  6799  004508  0012               	return	
  6800  00450A                     __end_of___ftge:
  6801                           	opt stack 0
  6802                           tblptru	equ	0xFF8
  6803                           tblptrh	equ	0xFF7
  6804                           tblptrl	equ	0xFF6
  6805                           tablat	equ	0xFF5
  6806                           prodh	equ	0xFF4
  6807                           prodl	equ	0xFF3
  6808                           intcon	equ	0xFF2
  6809                           intcon2	equ	0xFF1
  6810                           intcon3	equ	0xFF0
  6811                           postinc0	equ	0xFEE
  6812                           wreg	equ	0xFE8
  6813                           postdec1	equ	0xFE5
  6814                           fsr1l	equ	0xFE1
  6815                           indf2	equ	0xFDF
  6816                           postinc2	equ	0xFDE
  6817                           postdec2	equ	0xFDD
  6818                           fsr2h	equ	0xFDA
  6819                           fsr2l	equ	0xFD9
  6820                           status	equ	0xFD8
  6821                           
  6822 ;; *************** function ___altoft *****************
  6823 ;; Defined at:
  6824 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  c               4   70[BANK0 ] long 
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  sign            1   79[BANK0 ] unsigned char 
  6829 ;;  exp             1   78[BANK0 ] unsigned char 
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  3   70[BANK0 ] float 
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;Total ram usage:       10 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    8
  6846 ;; This function calls:
  6847 ;;		___ftpack
  6848 ;; This function is called by:
  6849 ;;		_floor
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text18
  6854  004948                     __ptext18:
  6855                           	opt stack 0
  6856  004948                     ___altoft:
  6857                           	opt stack 17
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;incstack = 0
  6861  004948  0E00               	movlw	0
  6862  00494A  0100               	movlb	0	; () banked
  6863  00494C  6FCF               	movwf	___altoft@sign& (0+255),b
  6864  00494E  0E8E               	movlw	142
  6865  004950  0100               	movlb	0	; () banked
  6866  004952  6FCE               	movwf	___altoft@exp& (0+255),b
  6867                           
  6868                           ; BSR set to: 0
  6869  004954  0100               	movlb	0	; () banked
  6870  004956  AFC9               	btfss	(___altoft@c+3)& (0+255),7,b
  6871  004958  D015               	goto	l7374
  6872                           
  6873                           ; BSR set to: 0
  6874  00495A  0100               	movlb	0	; () banked
  6875  00495C  1FC9               	comf	(___altoft@c+3)& (0+255),f,b
  6876  00495E  1FC8               	comf	(___altoft@c+2)& (0+255),f,b
  6877  004960  1FC7               	comf	(___altoft@c+1)& (0+255),f,b
  6878  004962  6DC6               	negf	___altoft@c& (0+255),b
  6879  004964  0E00               	movlw	0
  6880  004966  23C7               	addwfc	(___altoft@c+1)& (0+255),f,b
  6881  004968  23C8               	addwfc	(___altoft@c+2)& (0+255),f,b
  6882  00496A  23C9               	addwfc	(___altoft@c+3)& (0+255),f,b
  6883                           
  6884                           ; BSR set to: 0
  6885  00496C  0E01               	movlw	1
  6886  00496E  0100               	movlb	0	; () banked
  6887  004970  6FCF               	movwf	___altoft@sign& (0+255),b
  6888                           
  6889                           ; BSR set to: 0
  6890  004972  D008               	goto	l7374
  6891  004974                     l7372:
  6892                           
  6893                           ; BSR set to: 0
  6894  004974  0100               	movlb	0	; () banked
  6895  004976  90D8               	bcf	status,0,c
  6896  004978  33C9               	rrcf	(___altoft@c+3)& (0+255),f,b
  6897  00497A  33C8               	rrcf	(___altoft@c+2)& (0+255),f,b
  6898  00497C  33C7               	rrcf	(___altoft@c+1)& (0+255),f,b
  6899  00497E  33C6               	rrcf	___altoft@c& (0+255),f,b
  6900  004980  0100               	movlb	0	; () banked
  6901  004982  2BCE               	incf	___altoft@exp& (0+255),f,b
  6902  004984                     l7374:
  6903                           
  6904                           ; BSR set to: 0
  6905  004984  0E00               	movlw	0
  6906  004986  0100               	movlb	0	; () banked
  6907  004988  15C6               	andwf	___altoft@c& (0+255),w,b
  6908  00498A  0100               	movlb	0	; () banked
  6909  00498C  6FCA               	movwf	??___altoft& (0+255),b
  6910  00498E  0E00               	movlw	0
  6911  004990  0100               	movlb	0	; () banked
  6912  004992  15C7               	andwf	(___altoft@c+1)& (0+255),w,b
  6913  004994  0100               	movlb	0	; () banked
  6914  004996  6FCB               	movwf	(??___altoft+1)& (0+255),b
  6915  004998  0E00               	movlw	0
  6916  00499A  0100               	movlb	0	; () banked
  6917  00499C  15C8               	andwf	(___altoft@c+2)& (0+255),w,b
  6918  00499E  0100               	movlb	0	; () banked
  6919  0049A0  6FCC               	movwf	(??___altoft+2)& (0+255),b
  6920  0049A2  0EFF               	movlw	255
  6921  0049A4  0100               	movlb	0	; () banked
  6922  0049A6  15C9               	andwf	(___altoft@c+3)& (0+255),w,b
  6923  0049A8  0100               	movlb	0	; () banked
  6924  0049AA  6FCD               	movwf	(??___altoft+3)& (0+255),b
  6925  0049AC  0100               	movlb	0	; () banked
  6926  0049AE  51CA               	movf	??___altoft& (0+255),w,b
  6927  0049B0  0100               	movlb	0	; () banked
  6928  0049B2  11CB               	iorwf	(??___altoft+1)& (0+255),w,b
  6929  0049B4  0100               	movlb	0	; () banked
  6930  0049B6  11CC               	iorwf	(??___altoft+2)& (0+255),w,b
  6931  0049B8  0100               	movlb	0	; () banked
  6932  0049BA  11CD               	iorwf	(??___altoft+3)& (0+255),w,b
  6933  0049BC  A4D8               	btfss	status,2,c
  6934  0049BE  D7DA               	goto	l7372
  6935                           
  6936                           ; BSR set to: 0
  6937                           
  6938                           ; BSR set to: 0
  6939  0049C0  C0C6  F090         	movff	___altoft@c,___ftpack@arg
  6940  0049C4  C0C7  F091         	movff	___altoft@c+1,___ftpack@arg+1
  6941  0049C8  C0C8  F092         	movff	___altoft@c+2,___ftpack@arg+2
  6942  0049CC  C0CE  F093         	movff	___altoft@exp,___ftpack@exp
  6943  0049D0  C0CF  F094         	movff	___altoft@sign,___ftpack@sign
  6944  0049D4  EC90  F019         	call	___ftpack	;wreg free
  6945  0049D8  C090  F0C6         	movff	?___ftpack,?___altoft
  6946  0049DC  C091  F0C7         	movff	?___ftpack+1,?___altoft+1
  6947  0049E0  C092  F0C8         	movff	?___ftpack+2,?___altoft+2
  6948  0049E4  0012               	return	
  6949  0049E6                     __end_of___altoft:
  6950                           	opt stack 0
  6951                           tblptru	equ	0xFF8
  6952                           tblptrh	equ	0xFF7
  6953                           tblptrl	equ	0xFF6
  6954                           tablat	equ	0xFF5
  6955                           prodh	equ	0xFF4
  6956                           prodl	equ	0xFF3
  6957                           intcon	equ	0xFF2
  6958                           intcon2	equ	0xFF1
  6959                           intcon3	equ	0xFF0
  6960                           postinc0	equ	0xFEE
  6961                           wreg	equ	0xFE8
  6962                           postdec1	equ	0xFE5
  6963                           fsr1l	equ	0xFE1
  6964                           indf2	equ	0xFDF
  6965                           postinc2	equ	0xFDE
  6966                           postdec2	equ	0xFDD
  6967                           fsr2h	equ	0xFDA
  6968                           fsr2l	equ	0xFD9
  6969                           status	equ	0xFD8
  6970                           
  6971 ;; *************** function _eval_poly *****************
  6972 ;; Defined at:
  6973 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\evalpoly.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  x               3   55[BANK0 ] float 
  6976 ;;  d               2   58[BANK0 ] PTR const 
  6977 ;;		 -> log@coeff(27), exp@coeff(30), 
  6978 ;;  n               2   60[BANK0 ] int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  res             3   64[BANK0 ] int 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  3   55[BANK0 ] int 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6990 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;Total ram usage:       12 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    9
  6997 ;; This function calls:
  6998 ;;		___ftadd
  6999 ;;		___ftmul
  7000 ;;		___wmul
  7001 ;; This function is called by:
  7002 ;;		_exp
  7003 ;;		_log
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text19
  7008  003F18                     __ptext19:
  7009                           	opt stack 0
  7010  003F18                     _eval_poly:
  7011                           	opt stack 17
  7012                           
  7013                           ;incstack = 0
  7014  003F18  C0BC  F090         	movff	eval_poly@n,___wmul@multiplier
  7015  003F1C  C0BD  F091         	movff	eval_poly@n+1,___wmul@multiplier+1
  7016  003F20  0E00               	movlw	0
  7017  003F22  0100               	movlb	0	; () banked
  7018  003F24  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7019  003F26  0E03               	movlw	3
  7020  003F28  6F92               	movwf	___wmul@multiplicand& (0+255),b
  7021  003F2A  EC27  F029         	call	___wmul	;wreg free
  7022  003F2E  C0BA  F0BE         	movff	eval_poly@d,??_eval_poly
  7023  003F32  C0BB  F0BF         	movff	eval_poly@d+1,??_eval_poly+1
  7024  003F36  0100               	movlb	0	; () banked
  7025  003F38  5190               	movf	?___wmul& (0+255),w,b
  7026  003F3A  0100               	movlb	0	; () banked
  7027  003F3C  27BE               	addwf	??_eval_poly& (0+255),f,b
  7028  003F3E  0100               	movlb	0	; () banked
  7029  003F40  5191               	movf	(?___wmul+1)& (0+255),w,b
  7030  003F42  0100               	movlb	0	; () banked
  7031  003F44  23BF               	addwfc	(??_eval_poly+1)& (0+255),f,b
  7032  003F46  C0BE  FFF6         	movff	??_eval_poly,tblptrl
  7033  003F4A  C0BF  FFF7         	movff	??_eval_poly+1,tblptrh
  7034  003F4E                     	if	0	;tblptru may be non-zero
  7035  003F4E                     	endif
  7036  003F4E                     	if	0	;tblptru may be non-zero
  7037  003F4E                     	endif
  7038  003F4E  0009               	tblrd		*+
  7039  003F50  CFF5 F0C0          	movff	tablat,eval_poly@res
  7040  003F54  0009               	tblrd		*+
  7041  003F56  CFF5 F0C1          	movff	tablat,eval_poly@res+1
  7042  003F5A  000A               	tblrd		*-
  7043  003F5C  CFF5 F0C2          	movff	tablat,eval_poly@res+2
  7044  003F60  D044               	goto	l7680
  7045  003F62                     l7678:
  7046                           
  7047                           ; BSR set to: 0
  7048  003F62  C0C0  F09F         	movff	eval_poly@res,___ftmul@f2
  7049  003F66  C0C1  F0A0         	movff	eval_poly@res+1,___ftmul@f2+1
  7050  003F6A  C0C2  F0A1         	movff	eval_poly@res+2,___ftmul@f2+2
  7051  003F6E  C0B7  F09C         	movff	eval_poly@x,___ftmul@f1
  7052  003F72  C0B8  F09D         	movff	eval_poly@x+1,___ftmul@f1+1
  7053  003F76  C0B9  F09E         	movff	eval_poly@x+2,___ftmul@f1+2
  7054  003F7A  EC4C  F015         	call	___ftmul	;wreg free
  7055  003F7E  C09C  F0AB         	movff	?___ftmul,___ftadd@f1
  7056  003F82  C09D  F0AC         	movff	?___ftmul+1,___ftadd@f1+1
  7057  003F86  C09E  F0AD         	movff	?___ftmul+2,___ftadd@f1+2
  7058  003F8A  0E00               	movlw	0
  7059  003F8C  0100               	movlb	0	; () banked
  7060  003F8E  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7061  003F90  0E03               	movlw	3
  7062  003F92  6F92               	movwf	___wmul@multiplicand& (0+255),b
  7063  003F94  0100               	movlb	0	; () banked
  7064  003F96  07BC               	decf	eval_poly@n& (0+255),f,b
  7065  003F98  A0D8               	btfss	status,0,c
  7066  003F9A  07BD               	decf	(eval_poly@n+1)& (0+255),f,b
  7067  003F9C  C0BC  F090         	movff	eval_poly@n,___wmul@multiplier
  7068  003FA0  C0BD  F091         	movff	eval_poly@n+1,___wmul@multiplier+1
  7069  003FA4  EC27  F029         	call	___wmul	;wreg free
  7070  003FA8  C0BA  F0BE         	movff	eval_poly@d,??_eval_poly
  7071  003FAC  C0BB  F0BF         	movff	eval_poly@d+1,??_eval_poly+1
  7072  003FB0  0100               	movlb	0	; () banked
  7073  003FB2  5190               	movf	?___wmul& (0+255),w,b
  7074  003FB4  0100               	movlb	0	; () banked
  7075  003FB6  27BE               	addwf	??_eval_poly& (0+255),f,b
  7076  003FB8  0100               	movlb	0	; () banked
  7077  003FBA  5191               	movf	(?___wmul+1)& (0+255),w,b
  7078  003FBC  0100               	movlb	0	; () banked
  7079  003FBE  23BF               	addwfc	(??_eval_poly+1)& (0+255),f,b
  7080  003FC0  C0BE  FFF6         	movff	??_eval_poly,tblptrl
  7081  003FC4  C0BF  FFF7         	movff	??_eval_poly+1,tblptrh
  7082  003FC8                     	if	0	;tblptru may be non-zero
  7083  003FC8                     	endif
  7084  003FC8                     	if	0	;tblptru may be non-zero
  7085  003FC8                     	endif
  7086  003FC8  0009               	tblrd		*+
  7087  003FCA  CFF5 F0AE          	movff	tablat,___ftadd@f2
  7088  003FCE  0009               	tblrd		*+
  7089  003FD0  CFF5 F0AF          	movff	tablat,___ftadd@f2+1
  7090  003FD4  000A               	tblrd		*-
  7091  003FD6  CFF5 F0B0          	movff	tablat,___ftadd@f2+2
  7092  003FDA  EC6F  F00E         	call	___ftadd	;wreg free
  7093  003FDE  C0AB  F0C0         	movff	?___ftadd,eval_poly@res
  7094  003FE2  C0AC  F0C1         	movff	?___ftadd+1,eval_poly@res+1
  7095  003FE6  C0AD  F0C2         	movff	?___ftadd+2,eval_poly@res+2
  7096  003FEA                     l7680:
  7097  003FEA  0100               	movlb	0	; () banked
  7098  003FEC  51BC               	movf	eval_poly@n& (0+255),w,b
  7099  003FEE  0100               	movlb	0	; () banked
  7100  003FF0  11BD               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7101  003FF2  A4D8               	btfss	status,2,c
  7102  003FF4  D7B6               	goto	l7678
  7103                           
  7104                           ; BSR set to: 0
  7105  003FF6  C0C0  F0B7         	movff	eval_poly@res,?_eval_poly
  7106  003FFA  C0C1  F0B8         	movff	eval_poly@res+1,?_eval_poly+1
  7107  003FFE  C0C2  F0B9         	movff	eval_poly@res+2,?_eval_poly+2
  7108                           
  7109                           ; BSR set to: 0
  7110  004002  0012               	return		;funcret
  7111  004004                     __end_of_eval_poly:
  7112                           	opt stack 0
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           intcon2	equ	0xFF1
  7121                           intcon3	equ	0xFF0
  7122                           postinc0	equ	0xFEE
  7123                           wreg	equ	0xFE8
  7124                           postdec1	equ	0xFE5
  7125                           fsr1l	equ	0xFE1
  7126                           indf2	equ	0xFDF
  7127                           postinc2	equ	0xFDE
  7128                           postdec2	equ	0xFDD
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function ___ftmul *****************
  7134 ;; Defined at:
  7135 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  f1              3   28[BANK0 ] float 
  7138 ;;  f2              3   31[BANK0 ] float 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  7141 ;;  sign            1   42[BANK0 ] unsigned char 
  7142 ;;  cntr            1   41[BANK0 ] unsigned char 
  7143 ;;  exp             1   37[BANK0 ] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  3   28[BANK0 ] float 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0, cstack
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7153 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;Total ram usage:       15 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    8
  7160 ;; This function calls:
  7161 ;;		___ftpack
  7162 ;; This function is called by:
  7163 ;;		_dec_to_hex
  7164 ;;		_pow
  7165 ;;		_exp
  7166 ;;		_log
  7167 ;;		_eval_poly
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text20
  7172  002A98                     __ptext20:
  7173                           	opt stack 0
  7174  002A98                     ___ftmul:
  7175                           	opt stack 17
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;incstack = 0
  7179  002A98  C09E  F0A2         	movff	___ftmul@f1+2,??___ftmul
  7180  002A9C  0100               	movlb	0	; () banked
  7181  002A9E  6BA3               	clrf	(??___ftmul+1)& (0+255),b
  7182  002AA0  6BA4               	clrf	(??___ftmul+2)& (0+255),b
  7183  002AA2  0100               	movlb	0	; () banked
  7184  002AA4  359D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7185  002AA6  0100               	movlb	0	; () banked
  7186  002AA8  37A2               	rlcf	??___ftmul& (0+255),f,b
  7187  002AAA  E301               	bnc	u7411
  7188  002AAC  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
  7189  002AAE                     u7411:
  7190  002AAE  0100               	movlb	0	; () banked
  7191  002AB0  51A2               	movf	??___ftmul& (0+255),w,b
  7192  002AB2  0100               	movlb	0	; () banked
  7193  002AB4  6FA5               	movwf	___ftmul@exp& (0+255),b
  7194  002AB6  0100               	movlb	0	; () banked
  7195  002AB8  51A5               	movf	___ftmul@exp& (0+255),w,b
  7196  002ABA  A4D8               	btfss	status,2,c
  7197  002ABC  D00A               	goto	l7456
  7198                           
  7199                           ; BSR set to: 0
  7200  002ABE  0E00               	movlw	0
  7201  002AC0  0100               	movlb	0	; () banked
  7202  002AC2  6F9C               	movwf	?___ftmul& (0+255),b
  7203  002AC4  0E00               	movlw	0
  7204  002AC6  0100               	movlb	0	; () banked
  7205  002AC8  6F9D               	movwf	(?___ftmul+1)& (0+255),b
  7206  002ACA  0E00               	movlw	0
  7207  002ACC  0100               	movlb	0	; () banked
  7208  002ACE  6F9E               	movwf	(?___ftmul+2)& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211  002AD0  0012               	return	
  7212  002AD2                     l7456:
  7213                           
  7214                           ; BSR set to: 0
  7215  002AD2  C0A1  F0A2         	movff	___ftmul@f2+2,??___ftmul
  7216  002AD6  0100               	movlb	0	; () banked
  7217  002AD8  6BA3               	clrf	(??___ftmul+1)& (0+255),b
  7218  002ADA  6BA4               	clrf	(??___ftmul+2)& (0+255),b
  7219  002ADC  0100               	movlb	0	; () banked
  7220  002ADE  35A0               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7221  002AE0  0100               	movlb	0	; () banked
  7222  002AE2  37A2               	rlcf	??___ftmul& (0+255),f,b
  7223  002AE4  E301               	bnc	u7431
  7224  002AE6  81A3               	bsf	(??___ftmul+1)& (0+255),0,b
  7225  002AE8                     u7431:
  7226  002AE8  0100               	movlb	0	; () banked
  7227  002AEA  51A2               	movf	??___ftmul& (0+255),w,b
  7228  002AEC  0100               	movlb	0	; () banked
  7229  002AEE  6FAA               	movwf	___ftmul@sign& (0+255),b
  7230  002AF0  0100               	movlb	0	; () banked
  7231  002AF2  51AA               	movf	___ftmul@sign& (0+255),w,b
  7232  002AF4  A4D8               	btfss	status,2,c
  7233  002AF6  D00A               	goto	l7462
  7234                           
  7235                           ; BSR set to: 0
  7236  002AF8  0E00               	movlw	0
  7237  002AFA  0100               	movlb	0	; () banked
  7238  002AFC  6F9C               	movwf	?___ftmul& (0+255),b
  7239  002AFE  0E00               	movlw	0
  7240  002B00  0100               	movlb	0	; () banked
  7241  002B02  6F9D               	movwf	(?___ftmul+1)& (0+255),b
  7242  002B04  0E00               	movlw	0
  7243  002B06  0100               	movlb	0	; () banked
  7244  002B08  6F9E               	movwf	(?___ftmul+2)& (0+255),b
  7245                           
  7246                           ; BSR set to: 0
  7247  002B0A  0012               	return	
  7248  002B0C                     l7462:
  7249                           
  7250                           ; BSR set to: 0
  7251  002B0C  0100               	movlb	0	; () banked
  7252  002B0E  51AA               	movf	___ftmul@sign& (0+255),w,b
  7253  002B10  0F7B               	addlw	123
  7254  002B12  0100               	movlb	0	; () banked
  7255  002B14  27A5               	addwf	___ftmul@exp& (0+255),f,b
  7256                           
  7257                           ; BSR set to: 0
  7258  002B16  C09E  F0AA         	movff	___ftmul@f1+2,___ftmul@sign
  7259  002B1A  0100               	movlb	0	; () banked
  7260  002B1C  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7261  002B1E  0100               	movlb	0	; () banked
  7262  002B20  1BAA               	xorwf	___ftmul@sign& (0+255),f,b
  7263  002B22  0E80               	movlw	128
  7264  002B24  0100               	movlb	0	; () banked
  7265  002B26  17AA               	andwf	___ftmul@sign& (0+255),f,b
  7266                           
  7267                           ; BSR set to: 0
  7268  002B28  0100               	movlb	0	; () banked
  7269  002B2A  8F9D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7270                           
  7271                           ; BSR set to: 0
  7272  002B2C  0100               	movlb	0	; () banked
  7273  002B2E  8FA0               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7274                           
  7275                           ; BSR set to: 0
  7276  002B30  0EFF               	movlw	255
  7277  002B32  0100               	movlb	0	; () banked
  7278  002B34  179F               	andwf	___ftmul@f2& (0+255),f,b
  7279  002B36  0EFF               	movlw	255
  7280  002B38  0100               	movlb	0	; () banked
  7281  002B3A  17A0               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7282  002B3C  0E00               	movlw	0
  7283  002B3E  0100               	movlb	0	; () banked
  7284  002B40  17A1               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7285                           
  7286                           ; BSR set to: 0
  7287  002B42  0E00               	movlw	0
  7288  002B44  0100               	movlb	0	; () banked
  7289  002B46  6FA6               	movwf	___ftmul@f3_as_product& (0+255),b
  7290  002B48  0E00               	movlw	0
  7291  002B4A  0100               	movlb	0	; () banked
  7292  002B4C  6FA7               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7293  002B4E  0E00               	movlw	0
  7294  002B50  0100               	movlb	0	; () banked
  7295  002B52  6FA8               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7296                           
  7297                           ; BSR set to: 0
  7298  002B54  0E07               	movlw	7
  7299  002B56  0100               	movlb	0	; () banked
  7300  002B58  6FA9               	movwf	___ftmul@cntr& (0+255),b
  7301  002B5A                     l7476:
  7302                           
  7303                           ; BSR set to: 0
  7304  002B5A  0100               	movlb	0	; () banked
  7305  002B5C  A19C               	btfss	___ftmul@f1& (0+255),0,b
  7306  002B5E  D00C               	goto	l7480
  7307                           
  7308                           ; BSR set to: 0
  7309  002B60  0100               	movlb	0	; () banked
  7310  002B62  519F               	movf	___ftmul@f2& (0+255),w,b
  7311  002B64  0100               	movlb	0	; () banked
  7312  002B66  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7313  002B68  0100               	movlb	0	; () banked
  7314  002B6A  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
  7315  002B6C  0100               	movlb	0	; () banked
  7316  002B6E  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7317  002B70  0100               	movlb	0	; () banked
  7318  002B72  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7319  002B74  0100               	movlb	0	; () banked
  7320  002B76  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7321  002B78                     l7480:
  7322                           
  7323                           ; BSR set to: 0
  7324  002B78  0100               	movlb	0	; () banked
  7325  002B7A  90D8               	bcf	status,0,c
  7326  002B7C  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7327  002B7E  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7328  002B80  339C               	rrcf	___ftmul@f1& (0+255),f,b
  7329  002B82  0100               	movlb	0	; () banked
  7330  002B84  90D8               	bcf	status,0,c
  7331  002B86  379F               	rlcf	___ftmul@f2& (0+255),f,b
  7332  002B88  37A0               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7333  002B8A  37A1               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 0
  7336  002B8C  0100               	movlb	0	; () banked
  7337  002B8E  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
  7338  002B90  D7E4               	goto	l7476
  7339                           
  7340                           ; BSR set to: 0
  7341                           
  7342                           ; BSR set to: 0
  7343  002B92  0E09               	movlw	9
  7344  002B94  0100               	movlb	0	; () banked
  7345  002B96  6FA9               	movwf	___ftmul@cntr& (0+255),b
  7346  002B98                     l7486:
  7347                           
  7348                           ; BSR set to: 0
  7349  002B98  0100               	movlb	0	; () banked
  7350  002B9A  A19C               	btfss	___ftmul@f1& (0+255),0,b
  7351  002B9C  D00C               	goto	l7490
  7352                           
  7353                           ; BSR set to: 0
  7354  002B9E  0100               	movlb	0	; () banked
  7355  002BA0  519F               	movf	___ftmul@f2& (0+255),w,b
  7356  002BA2  0100               	movlb	0	; () banked
  7357  002BA4  27A6               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7358  002BA6  0100               	movlb	0	; () banked
  7359  002BA8  51A0               	movf	(___ftmul@f2+1)& (0+255),w,b
  7360  002BAA  0100               	movlb	0	; () banked
  7361  002BAC  23A7               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7362  002BAE  0100               	movlb	0	; () banked
  7363  002BB0  51A1               	movf	(___ftmul@f2+2)& (0+255),w,b
  7364  002BB2  0100               	movlb	0	; () banked
  7365  002BB4  23A8               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7366  002BB6                     l7490:
  7367                           
  7368                           ; BSR set to: 0
  7369  002BB6  0100               	movlb	0	; () banked
  7370  002BB8  90D8               	bcf	status,0,c
  7371  002BBA  339E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7372  002BBC  339D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7373  002BBE  339C               	rrcf	___ftmul@f1& (0+255),f,b
  7374  002BC0  0100               	movlb	0	; () banked
  7375  002BC2  90D8               	bcf	status,0,c
  7376  002BC4  33A8               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7377  002BC6  33A7               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7378  002BC8  33A6               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7379                           
  7380                           ; BSR set to: 0
  7381  002BCA  0100               	movlb	0	; () banked
  7382  002BCC  2FA9               	decfsz	___ftmul@cntr& (0+255),f,b
  7383  002BCE  D7E4               	goto	l7486
  7384                           
  7385                           ; BSR set to: 0
  7386                           
  7387                           ; BSR set to: 0
  7388  002BD0  C0A6  F090         	movff	___ftmul@f3_as_product,___ftpack@arg
  7389  002BD4  C0A7  F091         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7390  002BD8  C0A8  F092         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7391  002BDC  C0A5  F093         	movff	___ftmul@exp,___ftpack@exp
  7392  002BE0  C0AA  F094         	movff	___ftmul@sign,___ftpack@sign
  7393  002BE4  EC90  F019         	call	___ftpack	;wreg free
  7394  002BE8  C090  F09C         	movff	?___ftpack,?___ftmul
  7395  002BEC  C091  F09D         	movff	?___ftpack+1,?___ftmul+1
  7396  002BF0  C092  F09E         	movff	?___ftpack+2,?___ftmul+2
  7397  002BF4  0012               	return	
  7398  002BF6                     __end_of___ftmul:
  7399                           	opt stack 0
  7400                           tblptru	equ	0xFF8
  7401                           tblptrh	equ	0xFF7
  7402                           tblptrl	equ	0xFF6
  7403                           tablat	equ	0xFF5
  7404                           prodh	equ	0xFF4
  7405                           prodl	equ	0xFF3
  7406                           intcon	equ	0xFF2
  7407                           intcon2	equ	0xFF1
  7408                           intcon3	equ	0xFF0
  7409                           postinc0	equ	0xFEE
  7410                           wreg	equ	0xFE8
  7411                           postdec1	equ	0xFE5
  7412                           fsr1l	equ	0xFE1
  7413                           indf2	equ	0xFDF
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           fsr2h	equ	0xFDA
  7417                           fsr2l	equ	0xFD9
  7418                           status	equ	0xFD8
  7419                           
  7420 ;; *************** function ___ftsub *****************
  7421 ;; Defined at:
  7422 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  f1              3   55[BANK0 ] float 
  7425 ;;  f2              3   58[BANK0 ] float 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  3   55[BANK0 ] float 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;Total ram usage:        6 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    9
  7444 ;; This function calls:
  7445 ;;		___ftadd
  7446 ;; This function is called by:
  7447 ;;		_exp
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text21
  7452  005094                     __ptext21:
  7453                           	opt stack 0
  7454  005094                     ___ftsub:
  7455                           	opt stack 17
  7456                           
  7457                           ;incstack = 0
  7458  005094  0100               	movlb	0	; () banked
  7459  005096  51BA               	movf	___ftsub@f2& (0+255),w,b
  7460  005098  0100               	movlb	0	; () banked
  7461  00509A  11BB               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  7462  00509C  0100               	movlb	0	; () banked
  7463  00509E  11BC               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  7464  0050A0  B4D8               	btfsc	status,2,c
  7465  0050A2  D009               	goto	l7632
  7466                           
  7467                           ; BSR set to: 0
  7468  0050A4  0E00               	movlw	0
  7469  0050A6  0100               	movlb	0	; () banked
  7470  0050A8  1BBA               	xorwf	___ftsub@f2& (0+255),f,b
  7471  0050AA  0E00               	movlw	0
  7472  0050AC  0100               	movlb	0	; () banked
  7473  0050AE  1BBB               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  7474  0050B0  0E80               	movlw	128
  7475  0050B2  0100               	movlb	0	; () banked
  7476  0050B4  1BBC               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  7477  0050B6                     l7632:
  7478                           
  7479                           ; BSR set to: 0
  7480  0050B6  C0B7  F0AB         	movff	___ftsub@f1,___ftadd@f1
  7481  0050BA  C0B8  F0AC         	movff	___ftsub@f1+1,___ftadd@f1+1
  7482  0050BE  C0B9  F0AD         	movff	___ftsub@f1+2,___ftadd@f1+2
  7483  0050C2  C0BA  F0AE         	movff	___ftsub@f2,___ftadd@f2
  7484  0050C6  C0BB  F0AF         	movff	___ftsub@f2+1,___ftadd@f2+1
  7485  0050CA  C0BC  F0B0         	movff	___ftsub@f2+2,___ftadd@f2+2
  7486  0050CE  EC6F  F00E         	call	___ftadd	;wreg free
  7487  0050D2  C0AB  F0B7         	movff	?___ftadd,?___ftsub
  7488  0050D6  C0AC  F0B8         	movff	?___ftadd+1,?___ftsub+1
  7489  0050DA  C0AD  F0B9         	movff	?___ftadd+2,?___ftsub+2
  7490  0050DE  0012               	return	
  7491  0050E0                     __end_of___ftsub:
  7492                           	opt stack 0
  7493                           tblptru	equ	0xFF8
  7494                           tblptrh	equ	0xFF7
  7495                           tblptrl	equ	0xFF6
  7496                           tablat	equ	0xFF5
  7497                           prodh	equ	0xFF4
  7498                           prodl	equ	0xFF3
  7499                           intcon	equ	0xFF2
  7500                           intcon2	equ	0xFF1
  7501                           intcon3	equ	0xFF0
  7502                           postinc0	equ	0xFEE
  7503                           wreg	equ	0xFE8
  7504                           postdec1	equ	0xFE5
  7505                           fsr1l	equ	0xFE1
  7506                           indf2	equ	0xFDF
  7507                           postinc2	equ	0xFDE
  7508                           postdec2	equ	0xFDD
  7509                           fsr2h	equ	0xFDA
  7510                           fsr2l	equ	0xFD9
  7511                           status	equ	0xFD8
  7512                           
  7513 ;; *************** function ___ftadd *****************
  7514 ;; Defined at:
  7515 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  f1              3   43[BANK0 ] float 
  7518 ;;  f2              3   46[BANK0 ] float 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  exp1            1   54[BANK0 ] unsigned char 
  7521 ;;  exp2            1   53[BANK0 ] unsigned char 
  7522 ;;  sign            1   52[BANK0 ] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  3   43[BANK0 ] float 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, cstack
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7532 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;Total ram usage:       12 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    8
  7539 ;; This function calls:
  7540 ;;		___ftpack
  7541 ;; This function is called by:
  7542 ;;		_dec_to_hex
  7543 ;;		___ftsub
  7544 ;;		_floor
  7545 ;;		_log
  7546 ;;		_eval_poly
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           	psect	text22
  7551  001CDE                     __ptext22:
  7552                           	opt stack 0
  7553  001CDE                     ___ftadd:
  7554                           	opt stack 17
  7555                           
  7556                           ;incstack = 0
  7557  001CDE  C0AD  F0B1         	movff	___ftadd@f1+2,??___ftadd
  7558  001CE2  0100               	movlb	0	; () banked
  7559  001CE4  6BB2               	clrf	(??___ftadd+1)& (0+255),b
  7560  001CE6  6BB3               	clrf	(??___ftadd+2)& (0+255),b
  7561  001CE8  0100               	movlb	0	; () banked
  7562  001CEA  35AC               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7563  001CEC  0100               	movlb	0	; () banked
  7564  001CEE  37B1               	rlcf	??___ftadd& (0+255),f,b
  7565  001CF0  E301               	bnc	u7201
  7566  001CF2  81B2               	bsf	(??___ftadd+1)& (0+255),0,b
  7567  001CF4                     u7201:
  7568  001CF4  0100               	movlb	0	; () banked
  7569  001CF6  51B1               	movf	??___ftadd& (0+255),w,b
  7570  001CF8  0100               	movlb	0	; () banked
  7571  001CFA  6FB6               	movwf	___ftadd@exp1& (0+255),b
  7572  001CFC  C0B0  F0B1         	movff	___ftadd@f2+2,??___ftadd
  7573  001D00  0100               	movlb	0	; () banked
  7574  001D02  6BB2               	clrf	(??___ftadd+1)& (0+255),b
  7575  001D04  6BB3               	clrf	(??___ftadd+2)& (0+255),b
  7576  001D06  0100               	movlb	0	; () banked
  7577  001D08  35AF               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7578  001D0A  0100               	movlb	0	; () banked
  7579  001D0C  37B1               	rlcf	??___ftadd& (0+255),f,b
  7580  001D0E  E301               	bnc	u7211
  7581  001D10  81B2               	bsf	(??___ftadd+1)& (0+255),0,b
  7582  001D12                     u7211:
  7583  001D12  0100               	movlb	0	; () banked
  7584  001D14  51B1               	movf	??___ftadd& (0+255),w,b
  7585  001D16  0100               	movlb	0	; () banked
  7586  001D18  6FB5               	movwf	___ftadd@exp2& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589  001D1A  0100               	movlb	0	; () banked
  7590  001D1C  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7591  001D1E  0100               	movlb	0	; () banked
  7592  001D20  B4D8               	btfsc	status,2,c
  7593  001D22  D011               	goto	l922
  7594                           
  7595                           ; BSR set to: 0
  7596  001D24  0100               	movlb	0	; () banked
  7597  001D26  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7598  001D28  0100               	movlb	0	; () banked
  7599  001D2A  5DB6               	subwf	___ftadd@exp1& (0+255),w,b
  7600  001D2C  B0D8               	btfsc	status,0,c
  7601  001D2E  D012               	goto	l7388
  7602                           
  7603                           ; BSR set to: 0
  7604  001D30  0100               	movlb	0	; () banked
  7605  001D32  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7606  001D34  0800               	sublw	0
  7607  001D36  0100               	movlb	0	; () banked
  7608  001D38  25B5               	addwf	___ftadd@exp2& (0+255),w,b
  7609  001D3A  0100               	movlb	0	; () banked
  7610  001D3C  6FB1               	movwf	??___ftadd& (0+255),b
  7611  001D3E  0E18               	movlw	24
  7612  001D40  0100               	movlb	0	; () banked
  7613  001D42  65B1               	cpfsgt	??___ftadd& (0+255),b
  7614  001D44  D007               	goto	l7388
  7615  001D46                     l922:
  7616                           
  7617                           ; BSR set to: 0
  7618  001D46  C0AE  F0AB         	movff	___ftadd@f2,?___ftadd
  7619  001D4A  C0AF  F0AC         	movff	___ftadd@f2+1,?___ftadd+1
  7620  001D4E  C0B0  F0AD         	movff	___ftadd@f2+2,?___ftadd+2
  7621  001D52  0012               	return	
  7622  001D54                     l7388:
  7623                           
  7624                           ; BSR set to: 0
  7625  001D54  0100               	movlb	0	; () banked
  7626  001D56  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7627  001D58  0100               	movlb	0	; () banked
  7628  001D5A  B4D8               	btfsc	status,2,c
  7629  001D5C  D011               	goto	l926
  7630                           
  7631                           ; BSR set to: 0
  7632  001D5E  0100               	movlb	0	; () banked
  7633  001D60  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7634  001D62  0100               	movlb	0	; () banked
  7635  001D64  5DB5               	subwf	___ftadd@exp2& (0+255),w,b
  7636  001D66  B0D8               	btfsc	status,0,c
  7637  001D68  D012               	goto	l7394
  7638                           
  7639                           ; BSR set to: 0
  7640  001D6A  0100               	movlb	0	; () banked
  7641  001D6C  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7642  001D6E  0800               	sublw	0
  7643  001D70  0100               	movlb	0	; () banked
  7644  001D72  25B6               	addwf	___ftadd@exp1& (0+255),w,b
  7645  001D74  0100               	movlb	0	; () banked
  7646  001D76  6FB1               	movwf	??___ftadd& (0+255),b
  7647  001D78  0E18               	movlw	24
  7648  001D7A  0100               	movlb	0	; () banked
  7649  001D7C  65B1               	cpfsgt	??___ftadd& (0+255),b
  7650  001D7E  D007               	goto	l7394
  7651  001D80                     l926:
  7652                           
  7653                           ; BSR set to: 0
  7654  001D80  C0AB  F0AB         	movff	___ftadd@f1,?___ftadd
  7655  001D84  C0AC  F0AC         	movff	___ftadd@f1+1,?___ftadd+1
  7656  001D88  C0AD  F0AD         	movff	___ftadd@f1+2,?___ftadd+2
  7657  001D8C  0012               	return	
  7658  001D8E                     l7394:
  7659                           
  7660                           ; BSR set to: 0
  7661  001D8E  0E06               	movlw	6
  7662  001D90  0100               	movlb	0	; () banked
  7663  001D92  6FB4               	movwf	___ftadd@sign& (0+255),b
  7664                           
  7665                           ; BSR set to: 0
  7666  001D94  0100               	movlb	0	; () banked
  7667  001D96  AFAD               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7668  001D98  D002               	goto	l7400
  7669                           
  7670                           ; BSR set to: 0
  7671  001D9A  0100               	movlb	0	; () banked
  7672  001D9C  8FB4               	bsf	___ftadd@sign& (0+255),7,b
  7673  001D9E                     l7400:
  7674                           
  7675                           ; BSR set to: 0
  7676  001D9E  0100               	movlb	0	; () banked
  7677  001DA0  AFB0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7678  001DA2  D002               	goto	l928
  7679                           
  7680                           ; BSR set to: 0
  7681  001DA4  0100               	movlb	0	; () banked
  7682  001DA6  8DB4               	bsf	___ftadd@sign& (0+255),6,b
  7683  001DA8                     l928:
  7684                           
  7685                           ; BSR set to: 0
  7686  001DA8  0100               	movlb	0	; () banked
  7687  001DAA  8FAC               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7688                           
  7689                           ; BSR set to: 0
  7690  001DAC  0EFF               	movlw	255
  7691  001DAE  0100               	movlb	0	; () banked
  7692  001DB0  17AB               	andwf	___ftadd@f1& (0+255),f,b
  7693  001DB2  0EFF               	movlw	255
  7694  001DB4  0100               	movlb	0	; () banked
  7695  001DB6  17AC               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7696  001DB8  0E00               	movlw	0
  7697  001DBA  0100               	movlb	0	; () banked
  7698  001DBC  17AD               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7699  001DBE  0100               	movlb	0	; () banked
  7700  001DC0  8FAF               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7701                           
  7702                           ; BSR set to: 0
  7703  001DC2  0EFF               	movlw	255
  7704  001DC4  0100               	movlb	0	; () banked
  7705  001DC6  17AE               	andwf	___ftadd@f2& (0+255),f,b
  7706  001DC8  0EFF               	movlw	255
  7707  001DCA  0100               	movlb	0	; () banked
  7708  001DCC  17AF               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7709  001DCE  0E00               	movlw	0
  7710  001DD0  0100               	movlb	0	; () banked
  7711  001DD2  17B0               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7712                           
  7713                           ; BSR set to: 0
  7714  001DD4  0100               	movlb	0	; () banked
  7715  001DD6  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7716  001DD8  0100               	movlb	0	; () banked
  7717  001DDA  5DB6               	subwf	___ftadd@exp1& (0+255),w,b
  7718  001DDC  B0D8               	btfsc	status,0,c
  7719  001DDE  D025               	goto	l7420
  7720  001DE0                     l7410:
  7721                           
  7722                           ; BSR set to: 0
  7723  001DE0  0100               	movlb	0	; () banked
  7724  001DE2  90D8               	bcf	status,0,c
  7725  001DE4  37AE               	rlcf	___ftadd@f2& (0+255),f,b
  7726  001DE6  37AF               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7727  001DE8  37B0               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7728  001DEA  0100               	movlb	0	; () banked
  7729  001DEC  07B5               	decf	___ftadd@exp2& (0+255),f,b
  7730                           
  7731                           ; BSR set to: 0
  7732  001DEE  0100               	movlb	0	; () banked
  7733  001DF0  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7734  001DF2  0100               	movlb	0	; () banked
  7735  001DF4  19B5               	xorwf	___ftadd@exp2& (0+255),w,b
  7736  001DF6  B4D8               	btfsc	status,2,c
  7737  001DF8  D011               	goto	l7418
  7738                           
  7739                           ; BSR set to: 0
  7740  001DFA  0100               	movlb	0	; () banked
  7741  001DFC  07B4               	decf	___ftadd@sign& (0+255),f,b
  7742  001DFE  C0B4  F0B1         	movff	___ftadd@sign,??___ftadd
  7743  001E02  0E07               	movlw	7
  7744  001E04  0100               	movlb	0	; () banked
  7745  001E06  17B1               	andwf	??___ftadd& (0+255),f,b
  7746  001E08  B4D8               	btfsc	status,2,c
  7747  001E0A  D008               	goto	l7418
  7748  001E0C  D7E9               	goto	l7410
  7749  001E0E                     l7416:
  7750                           
  7751                           ; BSR set to: 0
  7752  001E0E  0100               	movlb	0	; () banked
  7753  001E10  90D8               	bcf	status,0,c
  7754  001E12  33AD               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7755  001E14  33AC               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7756  001E16  33AB               	rrcf	___ftadd@f1& (0+255),f,b
  7757  001E18  0100               	movlb	0	; () banked
  7758  001E1A  2BB6               	incf	___ftadd@exp1& (0+255),f,b
  7759  001E1C                     l7418:
  7760                           
  7761                           ; BSR set to: 0
  7762  001E1C  0100               	movlb	0	; () banked
  7763  001E1E  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7764  001E20  0100               	movlb	0	; () banked
  7765  001E22  19B6               	xorwf	___ftadd@exp1& (0+255),w,b
  7766  001E24  B4D8               	btfsc	status,2,c
  7767  001E26  D02B               	goto	l937
  7768  001E28  D7F2               	goto	l7416
  7769  001E2A                     l7420:
  7770                           
  7771                           ; BSR set to: 0
  7772  001E2A  0100               	movlb	0	; () banked
  7773  001E2C  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7774  001E2E  0100               	movlb	0	; () banked
  7775  001E30  5DB5               	subwf	___ftadd@exp2& (0+255),w,b
  7776  001E32  B0D8               	btfsc	status,0,c
  7777  001E34  D024               	goto	l937
  7778  001E36                     l7422:
  7779                           
  7780                           ; BSR set to: 0
  7781  001E36  0100               	movlb	0	; () banked
  7782  001E38  90D8               	bcf	status,0,c
  7783  001E3A  37AB               	rlcf	___ftadd@f1& (0+255),f,b
  7784  001E3C  37AC               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7785  001E3E  37AD               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7786  001E40  0100               	movlb	0	; () banked
  7787  001E42  07B6               	decf	___ftadd@exp1& (0+255),f,b
  7788                           
  7789                           ; BSR set to: 0
  7790  001E44  0100               	movlb	0	; () banked
  7791  001E46  51B6               	movf	___ftadd@exp1& (0+255),w,b
  7792  001E48  0100               	movlb	0	; () banked
  7793  001E4A  19B5               	xorwf	___ftadd@exp2& (0+255),w,b
  7794  001E4C  B4D8               	btfsc	status,2,c
  7795  001E4E  D011               	goto	l7430
  7796                           
  7797                           ; BSR set to: 0
  7798  001E50  0100               	movlb	0	; () banked
  7799  001E52  07B4               	decf	___ftadd@sign& (0+255),f,b
  7800  001E54  C0B4  F0B1         	movff	___ftadd@sign,??___ftadd
  7801  001E58  0E07               	movlw	7
  7802  001E5A  0100               	movlb	0	; () banked
  7803  001E5C  17B1               	andwf	??___ftadd& (0+255),f,b
  7804  001E5E  B4D8               	btfsc	status,2,c
  7805  001E60  D008               	goto	l7430
  7806  001E62  D7E9               	goto	l7422
  7807  001E64                     l7428:
  7808                           
  7809                           ; BSR set to: 0
  7810  001E64  0100               	movlb	0	; () banked
  7811  001E66  90D8               	bcf	status,0,c
  7812  001E68  33B0               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7813  001E6A  33AF               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7814  001E6C  33AE               	rrcf	___ftadd@f2& (0+255),f,b
  7815  001E6E  0100               	movlb	0	; () banked
  7816  001E70  2BB5               	incf	___ftadd@exp2& (0+255),f,b
  7817  001E72                     l7430:
  7818                           
  7819                           ; BSR set to: 0
  7820  001E72  0100               	movlb	0	; () banked
  7821  001E74  51B5               	movf	___ftadd@exp2& (0+255),w,b
  7822  001E76  0100               	movlb	0	; () banked
  7823  001E78  19B6               	xorwf	___ftadd@exp1& (0+255),w,b
  7824  001E7A  A4D8               	btfss	status,2,c
  7825  001E7C  D7F3               	goto	l7428
  7826  001E7E                     l937:
  7827                           
  7828                           ; BSR set to: 0
  7829  001E7E  0100               	movlb	0	; () banked
  7830  001E80  AFB4               	btfss	___ftadd@sign& (0+255),7,b
  7831  001E82  D012               	goto	l946
  7832                           
  7833                           ; BSR set to: 0
  7834  001E84  0EFF               	movlw	255
  7835  001E86  0100               	movlb	0	; () banked
  7836  001E88  1BAB               	xorwf	___ftadd@f1& (0+255),f,b
  7837  001E8A  0EFF               	movlw	255
  7838  001E8C  0100               	movlb	0	; () banked
  7839  001E8E  1BAC               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7840  001E90  0EFF               	movlw	255
  7841  001E92  0100               	movlb	0	; () banked
  7842  001E94  1BAD               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7843  001E96  0E01               	movlw	1
  7844  001E98  0100               	movlb	0	; () banked
  7845  001E9A  27AB               	addwf	___ftadd@f1& (0+255),f,b
  7846  001E9C  0E00               	movlw	0
  7847  001E9E  0100               	movlb	0	; () banked
  7848  001EA0  23AC               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7849  001EA2  0E00               	movlw	0
  7850  001EA4  0100               	movlb	0	; () banked
  7851  001EA6  23AD               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7852  001EA8                     l946:
  7853                           
  7854                           ; BSR set to: 0
  7855  001EA8  0100               	movlb	0	; () banked
  7856  001EAA  ADB4               	btfss	___ftadd@sign& (0+255),6,b
  7857  001EAC  D012               	goto	l7436
  7858                           
  7859                           ; BSR set to: 0
  7860  001EAE  0EFF               	movlw	255
  7861  001EB0  0100               	movlb	0	; () banked
  7862  001EB2  1BAE               	xorwf	___ftadd@f2& (0+255),f,b
  7863  001EB4  0EFF               	movlw	255
  7864  001EB6  0100               	movlb	0	; () banked
  7865  001EB8  1BAF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7866  001EBA  0EFF               	movlw	255
  7867  001EBC  0100               	movlb	0	; () banked
  7868  001EBE  1BB0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7869  001EC0  0E01               	movlw	1
  7870  001EC2  0100               	movlb	0	; () banked
  7871  001EC4  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7872  001EC6  0E00               	movlw	0
  7873  001EC8  0100               	movlb	0	; () banked
  7874  001ECA  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7875  001ECC  0E00               	movlw	0
  7876  001ECE  0100               	movlb	0	; () banked
  7877  001ED0  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7878  001ED2                     l7436:
  7879                           
  7880                           ; BSR set to: 0
  7881  001ED2  0E00               	movlw	0
  7882  001ED4  0100               	movlb	0	; () banked
  7883  001ED6  6FB4               	movwf	___ftadd@sign& (0+255),b
  7884                           
  7885                           ; BSR set to: 0
  7886  001ED8  0100               	movlb	0	; () banked
  7887  001EDA  51AB               	movf	___ftadd@f1& (0+255),w,b
  7888  001EDC  0100               	movlb	0	; () banked
  7889  001EDE  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7890  001EE0  0100               	movlb	0	; () banked
  7891  001EE2  51AC               	movf	(___ftadd@f1+1)& (0+255),w,b
  7892  001EE4  0100               	movlb	0	; () banked
  7893  001EE6  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7894  001EE8  0100               	movlb	0	; () banked
  7895  001EEA  51AD               	movf	(___ftadd@f1+2)& (0+255),w,b
  7896  001EEC  0100               	movlb	0	; () banked
  7897  001EEE  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7898                           
  7899                           ; BSR set to: 0
  7900  001EF0  0100               	movlb	0	; () banked
  7901  001EF2  AFB0               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7902  001EF4  D015               	goto	l7446
  7903                           
  7904                           ; BSR set to: 0
  7905  001EF6  0EFF               	movlw	255
  7906  001EF8  0100               	movlb	0	; () banked
  7907  001EFA  1BAE               	xorwf	___ftadd@f2& (0+255),f,b
  7908  001EFC  0EFF               	movlw	255
  7909  001EFE  0100               	movlb	0	; () banked
  7910  001F00  1BAF               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7911  001F02  0EFF               	movlw	255
  7912  001F04  0100               	movlb	0	; () banked
  7913  001F06  1BB0               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7914  001F08  0E01               	movlw	1
  7915  001F0A  0100               	movlb	0	; () banked
  7916  001F0C  27AE               	addwf	___ftadd@f2& (0+255),f,b
  7917  001F0E  0E00               	movlw	0
  7918  001F10  0100               	movlb	0	; () banked
  7919  001F12  23AF               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7920  001F14  0E00               	movlw	0
  7921  001F16  0100               	movlb	0	; () banked
  7922  001F18  23B0               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7923                           
  7924                           ; BSR set to: 0
  7925  001F1A  0E01               	movlw	1
  7926  001F1C  0100               	movlb	0	; () banked
  7927  001F1E  6FB4               	movwf	___ftadd@sign& (0+255),b
  7928  001F20                     l7446:
  7929                           
  7930                           ; BSR set to: 0
  7931  001F20  C0AE  F090         	movff	___ftadd@f2,___ftpack@arg
  7932  001F24  C0AF  F091         	movff	___ftadd@f2+1,___ftpack@arg+1
  7933  001F28  C0B0  F092         	movff	___ftadd@f2+2,___ftpack@arg+2
  7934  001F2C  C0B6  F093         	movff	___ftadd@exp1,___ftpack@exp
  7935  001F30  C0B4  F094         	movff	___ftadd@sign,___ftpack@sign
  7936  001F34  EC90  F019         	call	___ftpack	;wreg free
  7937  001F38  C090  F0AB         	movff	?___ftpack,?___ftadd
  7938  001F3C  C091  F0AC         	movff	?___ftpack+1,?___ftadd+1
  7939  001F40  C092  F0AD         	movff	?___ftpack+2,?___ftadd+2
  7940  001F44  0012               	return	
  7941  001F46                     __end_of___ftadd:
  7942                           	opt stack 0
  7943                           tblptru	equ	0xFF8
  7944                           tblptrh	equ	0xFF7
  7945                           tblptrl	equ	0xFF6
  7946                           tablat	equ	0xFF5
  7947                           prodh	equ	0xFF4
  7948                           prodl	equ	0xFF3
  7949                           intcon	equ	0xFF2
  7950                           intcon2	equ	0xFF1
  7951                           intcon3	equ	0xFF0
  7952                           postinc0	equ	0xFEE
  7953                           wreg	equ	0xFE8
  7954                           postdec1	equ	0xFE5
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function ___ftneg *****************
  7964 ;; Defined at:
  7965 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  f1              3   16[BANK0 ] float 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  3   16[BANK0 ] float 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7979 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;Total ram usage:        3 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    7
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_pow
  7990 ;;		_exp
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text23
  7995  005284                     __ptext23:
  7996                           	opt stack 0
  7997  005284                     ___ftneg:
  7998                           	opt stack 19
  7999                           
  8000                           ;incstack = 0
  8001  005284  0100               	movlb	0	; () banked
  8002  005286  5190               	movf	___ftneg@f1& (0+255),w,b
  8003  005288  0100               	movlb	0	; () banked
  8004  00528A  1191               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  8005  00528C  0100               	movlb	0	; () banked
  8006  00528E  1192               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  8007  005290  B4D8               	btfsc	status,2,c
  8008  005292  D009               	goto	l979
  8009                           
  8010                           ; BSR set to: 0
  8011  005294  0E00               	movlw	0
  8012  005296  0100               	movlb	0	; () banked
  8013  005298  1B90               	xorwf	___ftneg@f1& (0+255),f,b
  8014  00529A  0E00               	movlw	0
  8015  00529C  0100               	movlb	0	; () banked
  8016  00529E  1B91               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  8017  0052A0  0E80               	movlw	128
  8018  0052A2  0100               	movlb	0	; () banked
  8019  0052A4  1B92               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  8020  0052A6                     l979:
  8021                           
  8022                           ; BSR set to: 0
  8023  0052A6  C090  F090         	movff	___ftneg@f1,?___ftneg
  8024  0052AA  C091  F091         	movff	___ftneg@f1+1,?___ftneg+1
  8025  0052AE  C092  F092         	movff	___ftneg@f1+2,?___ftneg+2
  8026                           
  8027                           ; BSR set to: 0
  8028  0052B2  0012               	return		;funcret
  8029  0052B4                     __end_of___ftneg:
  8030                           	opt stack 0
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           intcon2	equ	0xFF1
  8039                           intcon3	equ	0xFF0
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           postdec1	equ	0xFE5
  8043                           fsr1l	equ	0xFE1
  8044                           indf2	equ	0xFDF
  8045                           postinc2	equ	0xFDE
  8046                           postdec2	equ	0xFDD
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function ___ftdiv *****************
  8052 ;; Defined at:
  8053 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  f1              3   24[BANK0 ] float 
  8056 ;;  f2              3   27[BANK0 ] float 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  f3              3   34[BANK0 ] float 
  8059 ;;  sign            1   38[BANK0 ] unsigned char 
  8060 ;;  exp             1   37[BANK0 ] unsigned char 
  8061 ;;  cntr            1   33[BANK0 ] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  3   24[BANK0 ] float 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2, status,0, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8071 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;Total ram usage:       15 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    8
  8078 ;; This function calls:
  8079 ;;		___ftpack
  8080 ;; This function is called by:
  8081 ;;		_operation
  8082 ;;		_exp
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           	psect	text24
  8087  002D46                     __ptext24:
  8088                           	opt stack 0
  8089  002D46                     ___ftdiv:
  8090                           	opt stack 18
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;incstack = 0
  8094  002D46  C09A  F09E         	movff	___ftdiv@f1+2,??___ftdiv
  8095  002D4A  0100               	movlb	0	; () banked
  8096  002D4C  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  8097  002D4E  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  8098  002D50  0100               	movlb	0	; () banked
  8099  002D52  3599               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8100  002D54  0100               	movlb	0	; () banked
  8101  002D56  379E               	rlcf	??___ftdiv& (0+255),f,b
  8102  002D58  E301               	bnc	u7601
  8103  002D5A  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8104  002D5C                     u7601:
  8105  002D5C  0100               	movlb	0	; () banked
  8106  002D5E  519E               	movf	??___ftdiv& (0+255),w,b
  8107  002D60  0100               	movlb	0	; () banked
  8108  002D62  6FA5               	movwf	___ftdiv@exp& (0+255),b
  8109  002D64  0100               	movlb	0	; () banked
  8110  002D66  51A5               	movf	___ftdiv@exp& (0+255),w,b
  8111  002D68  A4D8               	btfss	status,2,c
  8112  002D6A  D00A               	goto	l7588
  8113                           
  8114                           ; BSR set to: 0
  8115  002D6C  0E00               	movlw	0
  8116  002D6E  0100               	movlb	0	; () banked
  8117  002D70  6F98               	movwf	?___ftdiv& (0+255),b
  8118  002D72  0E00               	movlw	0
  8119  002D74  0100               	movlb	0	; () banked
  8120  002D76  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  8121  002D78  0E00               	movlw	0
  8122  002D7A  0100               	movlb	0	; () banked
  8123  002D7C  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  8124                           
  8125                           ; BSR set to: 0
  8126  002D7E  0012               	return	
  8127  002D80                     l7588:
  8128                           
  8129                           ; BSR set to: 0
  8130  002D80  C09D  F09E         	movff	___ftdiv@f2+2,??___ftdiv
  8131  002D84  0100               	movlb	0	; () banked
  8132  002D86  6B9F               	clrf	(??___ftdiv+1)& (0+255),b
  8133  002D88  6BA0               	clrf	(??___ftdiv+2)& (0+255),b
  8134  002D8A  0100               	movlb	0	; () banked
  8135  002D8C  359C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8136  002D8E  0100               	movlb	0	; () banked
  8137  002D90  379E               	rlcf	??___ftdiv& (0+255),f,b
  8138  002D92  E301               	bnc	u7621
  8139  002D94  819F               	bsf	(??___ftdiv+1)& (0+255),0,b
  8140  002D96                     u7621:
  8141  002D96  0100               	movlb	0	; () banked
  8142  002D98  519E               	movf	??___ftdiv& (0+255),w,b
  8143  002D9A  0100               	movlb	0	; () banked
  8144  002D9C  6FA6               	movwf	___ftdiv@sign& (0+255),b
  8145  002D9E  0100               	movlb	0	; () banked
  8146  002DA0  51A6               	movf	___ftdiv@sign& (0+255),w,b
  8147  002DA2  A4D8               	btfss	status,2,c
  8148  002DA4  D00A               	goto	l7594
  8149                           
  8150                           ; BSR set to: 0
  8151  002DA6  0E00               	movlw	0
  8152  002DA8  0100               	movlb	0	; () banked
  8153  002DAA  6F98               	movwf	?___ftdiv& (0+255),b
  8154  002DAC  0E00               	movlw	0
  8155  002DAE  0100               	movlb	0	; () banked
  8156  002DB0  6F99               	movwf	(?___ftdiv+1)& (0+255),b
  8157  002DB2  0E00               	movlw	0
  8158  002DB4  0100               	movlb	0	; () banked
  8159  002DB6  6F9A               	movwf	(?___ftdiv+2)& (0+255),b
  8160                           
  8161                           ; BSR set to: 0
  8162  002DB8  0012               	return	
  8163  002DBA                     l7594:
  8164                           
  8165                           ; BSR set to: 0
  8166  002DBA  0E00               	movlw	0
  8167  002DBC  0100               	movlb	0	; () banked
  8168  002DBE  6FA2               	movwf	___ftdiv@f3& (0+255),b
  8169  002DC0  0E00               	movlw	0
  8170  002DC2  0100               	movlb	0	; () banked
  8171  002DC4  6FA3               	movwf	(___ftdiv@f3+1)& (0+255),b
  8172  002DC6  0E00               	movlw	0
  8173  002DC8  0100               	movlb	0	; () banked
  8174  002DCA  6FA4               	movwf	(___ftdiv@f3+2)& (0+255),b
  8175                           
  8176                           ; BSR set to: 0
  8177  002DCC  0100               	movlb	0	; () banked
  8178  002DCE  51A6               	movf	___ftdiv@sign& (0+255),w,b
  8179  002DD0  0F89               	addlw	137
  8180  002DD2  0100               	movlb	0	; () banked
  8181  002DD4  5FA5               	subwf	___ftdiv@exp& (0+255),f,b
  8182                           
  8183                           ; BSR set to: 0
  8184  002DD6  C09A  F0A6         	movff	___ftdiv@f1+2,___ftdiv@sign
  8185                           
  8186                           ; BSR set to: 0
  8187  002DDA  0100               	movlb	0	; () banked
  8188  002DDC  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8189  002DDE  0100               	movlb	0	; () banked
  8190  002DE0  1BA6               	xorwf	___ftdiv@sign& (0+255),f,b
  8191                           
  8192                           ; BSR set to: 0
  8193  002DE2  0E80               	movlw	128
  8194  002DE4  0100               	movlb	0	; () banked
  8195  002DE6  17A6               	andwf	___ftdiv@sign& (0+255),f,b
  8196                           
  8197                           ; BSR set to: 0
  8198  002DE8  0100               	movlb	0	; () banked
  8199  002DEA  8F99               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8200                           
  8201                           ; BSR set to: 0
  8202  002DEC  0EFF               	movlw	255
  8203  002DEE  0100               	movlb	0	; () banked
  8204  002DF0  1798               	andwf	___ftdiv@f1& (0+255),f,b
  8205  002DF2  0EFF               	movlw	255
  8206  002DF4  0100               	movlb	0	; () banked
  8207  002DF6  1799               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8208  002DF8  0E00               	movlw	0
  8209  002DFA  0100               	movlb	0	; () banked
  8210  002DFC  179A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 0
  8213  002DFE  0100               	movlb	0	; () banked
  8214  002E00  8F9C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8215                           
  8216                           ; BSR set to: 0
  8217  002E02  0EFF               	movlw	255
  8218  002E04  0100               	movlb	0	; () banked
  8219  002E06  179B               	andwf	___ftdiv@f2& (0+255),f,b
  8220  002E08  0EFF               	movlw	255
  8221  002E0A  0100               	movlb	0	; () banked
  8222  002E0C  179C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8223  002E0E  0E00               	movlw	0
  8224  002E10  0100               	movlb	0	; () banked
  8225  002E12  179D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 0
  8228  002E14  0E18               	movlw	24
  8229  002E16  0100               	movlb	0	; () banked
  8230  002E18  6FA1               	movwf	___ftdiv@cntr& (0+255),b
  8231  002E1A                     l7614:
  8232                           
  8233                           ; BSR set to: 0
  8234  002E1A  0100               	movlb	0	; () banked
  8235  002E1C  90D8               	bcf	status,0,c
  8236  002E1E  37A2               	rlcf	___ftdiv@f3& (0+255),f,b
  8237  002E20  37A3               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8238  002E22  37A4               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8239                           
  8240                           ; BSR set to: 0
  8241  002E24  0100               	movlb	0	; () banked
  8242  002E26  519B               	movf	___ftdiv@f2& (0+255),w,b
  8243  002E28  0100               	movlb	0	; () banked
  8244  002E2A  5D98               	subwf	___ftdiv@f1& (0+255),w,b
  8245  002E2C  0100               	movlb	0	; () banked
  8246  002E2E  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8247  002E30  0100               	movlb	0	; () banked
  8248  002E32  5999               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8249  002E34  0100               	movlb	0	; () banked
  8250  002E36  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8251  002E38  0100               	movlb	0	; () banked
  8252  002E3A  599A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8253  002E3C  A0D8               	btfss	status,0,c
  8254  002E3E  D00E               	goto	l957
  8255                           
  8256                           ; BSR set to: 0
  8257  002E40  0100               	movlb	0	; () banked
  8258  002E42  519B               	movf	___ftdiv@f2& (0+255),w,b
  8259  002E44  0100               	movlb	0	; () banked
  8260  002E46  5F98               	subwf	___ftdiv@f1& (0+255),f,b
  8261  002E48  0100               	movlb	0	; () banked
  8262  002E4A  519C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8263  002E4C  0100               	movlb	0	; () banked
  8264  002E4E  5B99               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8265  002E50  0100               	movlb	0	; () banked
  8266  002E52  519D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8267  002E54  0100               	movlb	0	; () banked
  8268  002E56  5B9A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8269                           
  8270                           ; BSR set to: 0
  8271  002E58  0100               	movlb	0	; () banked
  8272  002E5A  81A2               	bsf	___ftdiv@f3& (0+255),0,b
  8273  002E5C                     l957:
  8274                           
  8275                           ; BSR set to: 0
  8276  002E5C  0100               	movlb	0	; () banked
  8277  002E5E  90D8               	bcf	status,0,c
  8278  002E60  3798               	rlcf	___ftdiv@f1& (0+255),f,b
  8279  002E62  3799               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8280  002E64  379A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8281                           
  8282                           ; BSR set to: 0
  8283  002E66  0100               	movlb	0	; () banked
  8284  002E68  2FA1               	decfsz	___ftdiv@cntr& (0+255),f,b
  8285  002E6A  D7D7               	goto	l7614
  8286                           
  8287                           ; BSR set to: 0
  8288                           
  8289                           ; BSR set to: 0
  8290  002E6C  C0A2  F090         	movff	___ftdiv@f3,___ftpack@arg
  8291  002E70  C0A3  F091         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8292  002E74  C0A4  F092         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8293  002E78  C0A5  F093         	movff	___ftdiv@exp,___ftpack@exp
  8294  002E7C  C0A6  F094         	movff	___ftdiv@sign,___ftpack@sign
  8295  002E80  EC90  F019         	call	___ftpack	;wreg free
  8296  002E84  C090  F098         	movff	?___ftpack,?___ftdiv
  8297  002E88  C091  F099         	movff	?___ftpack+1,?___ftdiv+1
  8298  002E8C  C092  F09A         	movff	?___ftpack+2,?___ftdiv+2
  8299  002E90  0012               	return	
  8300  002E92                     __end_of___ftdiv:
  8301                           	opt stack 0
  8302                           tblptru	equ	0xFF8
  8303                           tblptrh	equ	0xFF7
  8304                           tblptrl	equ	0xFF6
  8305                           tablat	equ	0xFF5
  8306                           prodh	equ	0xFF4
  8307                           prodl	equ	0xFF3
  8308                           intcon	equ	0xFF2
  8309                           intcon2	equ	0xFF1
  8310                           intcon3	equ	0xFF0
  8311                           postinc0	equ	0xFEE
  8312                           wreg	equ	0xFE8
  8313                           postdec1	equ	0xFE5
  8314                           fsr1l	equ	0xFE1
  8315                           indf2	equ	0xFDF
  8316                           postinc2	equ	0xFDE
  8317                           postdec2	equ	0xFDD
  8318                           fsr2h	equ	0xFDA
  8319                           fsr2l	equ	0xFD9
  8320                           status	equ	0xFD8
  8321                           
  8322 ;; *************** function ___awtoft *****************
  8323 ;; Defined at:
  8324 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  c               2   24[BANK0 ] int 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  sign            1   27[BANK0 ] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  3   24[BANK0 ] float 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8338 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        4 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    8
  8345 ;; This function calls:
  8346 ;;		___ftpack
  8347 ;; This function is called by:
  8348 ;;		_dec_to_hex
  8349 ;;		_exp
  8350 ;;		_log
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text25
  8355  0050E0                     __ptext25:
  8356                           	opt stack 0
  8357  0050E0                     ___awtoft:
  8358                           	opt stack 18
  8359                           
  8360                           ;incstack = 0
  8361  0050E0  0E00               	movlw	0
  8362  0050E2  0100               	movlb	0	; () banked
  8363  0050E4  6F9B               	movwf	___awtoft@sign& (0+255),b
  8364                           
  8365                           ; BSR set to: 0
  8366  0050E6  0100               	movlb	0	; () banked
  8367  0050E8  AF99               	btfss	(___awtoft@c+1)& (0+255),7,b
  8368  0050EA  D008               	goto	l7644
  8369                           
  8370                           ; BSR set to: 0
  8371  0050EC  0100               	movlb	0	; () banked
  8372  0050EE  6D98               	negf	___awtoft@c& (0+255),b
  8373  0050F0  1F99               	comf	(___awtoft@c+1)& (0+255),f,b
  8374  0050F2  B0D8               	btfsc	status,0,c
  8375  0050F4  2B99               	incf	(___awtoft@c+1)& (0+255),f,b
  8376                           
  8377                           ; BSR set to: 0
  8378  0050F6  0E01               	movlw	1
  8379  0050F8  0100               	movlb	0	; () banked
  8380  0050FA  6F9B               	movwf	___awtoft@sign& (0+255),b
  8381  0050FC                     l7644:
  8382                           
  8383                           ; BSR set to: 0
  8384  0050FC  C098  F090         	movff	___awtoft@c,___ftpack@arg
  8385  005100  C099  F091         	movff	___awtoft@c+1,___ftpack@arg+1
  8386  005104  0100               	movlb	0	; () banked
  8387  005106  6B92               	clrf	(___ftpack@arg+2)& (0+255),b
  8388  005108  0E8E               	movlw	142
  8389  00510A  0100               	movlb	0	; () banked
  8390  00510C  6F93               	movwf	___ftpack@exp& (0+255),b
  8391  00510E  C09B  F094         	movff	___awtoft@sign,___ftpack@sign
  8392  005112  EC90  F019         	call	___ftpack	;wreg free
  8393  005116  C090  F098         	movff	?___ftpack,?___awtoft
  8394  00511A  C091  F099         	movff	?___ftpack+1,?___awtoft+1
  8395  00511E  C092  F09A         	movff	?___ftpack+2,?___awtoft+2
  8396  005122  0012               	return	
  8397  005124                     __end_of___awtoft:
  8398                           	opt stack 0
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           intcon2	equ	0xFF1
  8407                           intcon3	equ	0xFF0
  8408                           postinc0	equ	0xFEE
  8409                           wreg	equ	0xFE8
  8410                           postdec1	equ	0xFE5
  8411                           fsr1l	equ	0xFE1
  8412                           indf2	equ	0xFDF
  8413                           postinc2	equ	0xFDE
  8414                           postdec2	equ	0xFDD
  8415                           fsr2h	equ	0xFDA
  8416                           fsr2l	equ	0xFD9
  8417                           status	equ	0xFD8
  8418                           
  8419 ;; *************** function ___lltoft *****************
  8420 ;; Defined at:
  8421 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  c               4   24[BANK0 ] unsigned long 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  exp             1   32[BANK0 ] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  3   24[BANK0 ] float 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;Total ram usage:        9 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    8
  8442 ;; This function calls:
  8443 ;;		___ftpack
  8444 ;; This function is called by:
  8445 ;;		_pow
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text26
  8450  004B8A                     __ptext26:
  8451                           	opt stack 0
  8452  004B8A                     ___lltoft:
  8453                           	opt stack 19
  8454                           
  8455                           ;incstack = 0
  8456  004B8A  0E8E               	movlw	142
  8457  004B8C  0100               	movlb	0	; () banked
  8458  004B8E  6FA0               	movwf	___lltoft@exp& (0+255),b
  8459  004B90  D008               	goto	l7744
  8460  004B92                     l7742:
  8461                           
  8462                           ; BSR set to: 0
  8463  004B92  0100               	movlb	0	; () banked
  8464  004B94  90D8               	bcf	status,0,c
  8465  004B96  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  8466  004B98  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  8467  004B9A  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
  8468  004B9C  3398               	rrcf	___lltoft@c& (0+255),f,b
  8469  004B9E  0100               	movlb	0	; () banked
  8470  004BA0  2BA0               	incf	___lltoft@exp& (0+255),f,b
  8471  004BA2                     l7744:
  8472                           
  8473                           ; BSR set to: 0
  8474  004BA2  0E00               	movlw	0
  8475  004BA4  0100               	movlb	0	; () banked
  8476  004BA6  1598               	andwf	___lltoft@c& (0+255),w,b
  8477  004BA8  0100               	movlb	0	; () banked
  8478  004BAA  6F9C               	movwf	??___lltoft& (0+255),b
  8479  004BAC  0E00               	movlw	0
  8480  004BAE  0100               	movlb	0	; () banked
  8481  004BB0  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
  8482  004BB2  0100               	movlb	0	; () banked
  8483  004BB4  6F9D               	movwf	(??___lltoft+1)& (0+255),b
  8484  004BB6  0E00               	movlw	0
  8485  004BB8  0100               	movlb	0	; () banked
  8486  004BBA  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
  8487  004BBC  0100               	movlb	0	; () banked
  8488  004BBE  6F9E               	movwf	(??___lltoft+2)& (0+255),b
  8489  004BC0  0EFF               	movlw	255
  8490  004BC2  0100               	movlb	0	; () banked
  8491  004BC4  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
  8492  004BC6  0100               	movlb	0	; () banked
  8493  004BC8  6F9F               	movwf	(??___lltoft+3)& (0+255),b
  8494  004BCA  0100               	movlb	0	; () banked
  8495  004BCC  519C               	movf	??___lltoft& (0+255),w,b
  8496  004BCE  0100               	movlb	0	; () banked
  8497  004BD0  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
  8498  004BD2  0100               	movlb	0	; () banked
  8499  004BD4  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
  8500  004BD6  0100               	movlb	0	; () banked
  8501  004BD8  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
  8502  004BDA  A4D8               	btfss	status,2,c
  8503  004BDC  D7DA               	goto	l7742
  8504                           
  8505                           ; BSR set to: 0
  8506                           
  8507                           ; BSR set to: 0
  8508  004BDE  C098  F090         	movff	___lltoft@c,___ftpack@arg
  8509  004BE2  C099  F091         	movff	___lltoft@c+1,___ftpack@arg+1
  8510  004BE6  C09A  F092         	movff	___lltoft@c+2,___ftpack@arg+2
  8511  004BEA  C0A0  F093         	movff	___lltoft@exp,___ftpack@exp
  8512  004BEE  0E00               	movlw	0
  8513  004BF0  0100               	movlb	0	; () banked
  8514  004BF2  6F94               	movwf	___ftpack@sign& (0+255),b
  8515  004BF4  EC90  F019         	call	___ftpack	;wreg free
  8516  004BF8  C090  F098         	movff	?___ftpack,?___lltoft
  8517  004BFC  C091  F099         	movff	?___ftpack+1,?___lltoft+1
  8518  004C00  C092  F09A         	movff	?___ftpack+2,?___lltoft+2
  8519  004C04  0012               	return	
  8520  004C06                     __end_of___lltoft:
  8521                           	opt stack 0
  8522                           tblptru	equ	0xFF8
  8523                           tblptrh	equ	0xFF7
  8524                           tblptrl	equ	0xFF6
  8525                           tablat	equ	0xFF5
  8526                           prodh	equ	0xFF4
  8527                           prodl	equ	0xFF3
  8528                           intcon	equ	0xFF2
  8529                           intcon2	equ	0xFF1
  8530                           intcon3	equ	0xFF0
  8531                           postinc0	equ	0xFEE
  8532                           wreg	equ	0xFE8
  8533                           postdec1	equ	0xFE5
  8534                           fsr1l	equ	0xFE1
  8535                           indf2	equ	0xFDF
  8536                           postinc2	equ	0xFDE
  8537                           postdec2	equ	0xFDD
  8538                           fsr2h	equ	0xFDA
  8539                           fsr2l	equ	0xFD9
  8540                           status	equ	0xFD8
  8541                           
  8542 ;; *************** function ___awdiv *****************
  8543 ;; Defined at:
  8544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  dividend        2   16[BANK0 ] int 
  8547 ;;  divisor         2   18[BANK0 ] int 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  quotient        2   22[BANK0 ] int 
  8550 ;;  sign            1   21[BANK0 ] unsigned char 
  8551 ;;  counter         1   20[BANK0 ] unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2   16[BANK0 ] int 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;Total ram usage:        8 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    7
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_dec_to_hex
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text27
  8576  0045D0                     __ptext27:
  8577                           	opt stack 0
  8578  0045D0                     ___awdiv:
  8579                           	opt stack 21
  8580                           
  8581                           ;incstack = 0
  8582  0045D0  0E00               	movlw	0
  8583  0045D2  0100               	movlb	0	; () banked
  8584  0045D4  6F95               	movwf	___awdiv@sign& (0+255),b
  8585                           
  8586                           ; BSR set to: 0
  8587  0045D6  0100               	movlb	0	; () banked
  8588  0045D8  AF93               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8589  0045DA  D008               	goto	l7922
  8590                           
  8591                           ; BSR set to: 0
  8592  0045DC  0100               	movlb	0	; () banked
  8593  0045DE  6D92               	negf	___awdiv@divisor& (0+255),b
  8594  0045E0  1F93               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8595  0045E2  B0D8               	btfsc	status,0,c
  8596  0045E4  2B93               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8597                           
  8598                           ; BSR set to: 0
  8599  0045E6  0E01               	movlw	1
  8600  0045E8  0100               	movlb	0	; () banked
  8601  0045EA  6F95               	movwf	___awdiv@sign& (0+255),b
  8602  0045EC                     l7922:
  8603                           
  8604                           ; BSR set to: 0
  8605  0045EC  0100               	movlb	0	; () banked
  8606  0045EE  AF91               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8607  0045F0  D008               	goto	l7928
  8608                           
  8609                           ; BSR set to: 0
  8610  0045F2  0100               	movlb	0	; () banked
  8611  0045F4  6D90               	negf	___awdiv@dividend& (0+255),b
  8612  0045F6  1F91               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8613  0045F8  B0D8               	btfsc	status,0,c
  8614  0045FA  2B91               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8615                           
  8616                           ; BSR set to: 0
  8617  0045FC  0E01               	movlw	1
  8618  0045FE  0100               	movlb	0	; () banked
  8619  004600  1B95               	xorwf	___awdiv@sign& (0+255),f,b
  8620  004602                     l7928:
  8621                           
  8622                           ; BSR set to: 0
  8623  004602  0E00               	movlw	0
  8624  004604  0100               	movlb	0	; () banked
  8625  004606  6F97               	movwf	(___awdiv@quotient+1)& (0+255),b
  8626  004608  0E00               	movlw	0
  8627  00460A  6F96               	movwf	___awdiv@quotient& (0+255),b
  8628                           
  8629                           ; BSR set to: 0
  8630  00460C  0100               	movlb	0	; () banked
  8631  00460E  5192               	movf	___awdiv@divisor& (0+255),w,b
  8632  004610  0100               	movlb	0	; () banked
  8633  004612  1193               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8634  004614  B4D8               	btfsc	status,2,c
  8635  004616  D02C               	goto	l7950
  8636                           
  8637                           ; BSR set to: 0
  8638  004618  0E01               	movlw	1
  8639  00461A  0100               	movlb	0	; () banked
  8640  00461C  6F94               	movwf	___awdiv@counter& (0+255),b
  8641  00461E  D006               	goto	l7936
  8642  004620                     l7934:
  8643                           
  8644                           ; BSR set to: 0
  8645  004620  0100               	movlb	0	; () banked
  8646  004622  90D8               	bcf	status,0,c
  8647  004624  3792               	rlcf	___awdiv@divisor& (0+255),f,b
  8648  004626  3793               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8649  004628  0100               	movlb	0	; () banked
  8650  00462A  2B94               	incf	___awdiv@counter& (0+255),f,b
  8651  00462C                     l7936:
  8652                           
  8653                           ; BSR set to: 0
  8654  00462C  0100               	movlb	0	; () banked
  8655  00462E  AF93               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8656  004630  D7F7               	goto	l7934
  8657  004632                     l7938:
  8658                           
  8659                           ; BSR set to: 0
  8660  004632  0100               	movlb	0	; () banked
  8661  004634  90D8               	bcf	status,0,c
  8662  004636  3796               	rlcf	___awdiv@quotient& (0+255),f,b
  8663  004638  3797               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8664                           
  8665                           ; BSR set to: 0
  8666  00463A  0100               	movlb	0	; () banked
  8667  00463C  5192               	movf	___awdiv@divisor& (0+255),w,b
  8668  00463E  0100               	movlb	0	; () banked
  8669  004640  5D90               	subwf	___awdiv@dividend& (0+255),w,b
  8670  004642  0100               	movlb	0	; () banked
  8671  004644  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8672  004646  0100               	movlb	0	; () banked
  8673  004648  5991               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8674  00464A  A0D8               	btfss	status,0,c
  8675  00464C  D00A               	goto	l7946
  8676                           
  8677                           ; BSR set to: 0
  8678  00464E  0100               	movlb	0	; () banked
  8679  004650  5192               	movf	___awdiv@divisor& (0+255),w,b
  8680  004652  0100               	movlb	0	; () banked
  8681  004654  5F90               	subwf	___awdiv@dividend& (0+255),f,b
  8682  004656  0100               	movlb	0	; () banked
  8683  004658  5193               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8684  00465A  0100               	movlb	0	; () banked
  8685  00465C  5B91               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8686                           
  8687                           ; BSR set to: 0
  8688  00465E  0100               	movlb	0	; () banked
  8689  004660  8196               	bsf	___awdiv@quotient& (0+255),0,b
  8690  004662                     l7946:
  8691                           
  8692                           ; BSR set to: 0
  8693  004662  0100               	movlb	0	; () banked
  8694  004664  90D8               	bcf	status,0,c
  8695  004666  3393               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8696  004668  3392               	rrcf	___awdiv@divisor& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  00466A  0100               	movlb	0	; () banked
  8700  00466C  2F94               	decfsz	___awdiv@counter& (0+255),f,b
  8701  00466E  D7E1               	goto	l7938
  8702  004670                     l7950:
  8703                           
  8704                           ; BSR set to: 0
  8705  004670  0100               	movlb	0	; () banked
  8706  004672  5195               	movf	___awdiv@sign& (0+255),w,b
  8707  004674  0100               	movlb	0	; () banked
  8708  004676  B4D8               	btfsc	status,2,c
  8709  004678  D005               	goto	l7954
  8710                           
  8711                           ; BSR set to: 0
  8712  00467A  0100               	movlb	0	; () banked
  8713  00467C  6D96               	negf	___awdiv@quotient& (0+255),b
  8714  00467E  1F97               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8715  004680  B0D8               	btfsc	status,0,c
  8716  004682  2B97               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8717  004684                     l7954:
  8718                           
  8719                           ; BSR set to: 0
  8720  004684  C096  F090         	movff	___awdiv@quotient,?___awdiv
  8721  004688  C097  F091         	movff	___awdiv@quotient+1,?___awdiv+1
  8722  00468C  0012               	return	
  8723  00468E                     __end_of___awdiv:
  8724                           	opt stack 0
  8725                           tblptru	equ	0xFF8
  8726                           tblptrh	equ	0xFF7
  8727                           tblptrl	equ	0xFF6
  8728                           tablat	equ	0xFF5
  8729                           prodh	equ	0xFF4
  8730                           prodl	equ	0xFF3
  8731                           intcon	equ	0xFF2
  8732                           intcon2	equ	0xFF1
  8733                           intcon3	equ	0xFF0
  8734                           postinc0	equ	0xFEE
  8735                           wreg	equ	0xFE8
  8736                           postdec1	equ	0xFE5
  8737                           fsr1l	equ	0xFE1
  8738                           indf2	equ	0xFDF
  8739                           postinc2	equ	0xFDE
  8740                           postdec2	equ	0xFDD
  8741                           fsr2h	equ	0xFDA
  8742                           fsr2l	equ	0xFD9
  8743                           status	equ	0xFD8
  8744                           
  8745 ;; *************** function ___lwtoft *****************
  8746 ;; Defined at:
  8747 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwtoft.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  c               2   24[BANK0 ] unsigned int 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;		None
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  3   24[BANK0 ] float 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0, cstack
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8761 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8764 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;Total ram usage:        3 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    8
  8768 ;; This function calls:
  8769 ;;		___ftpack
  8770 ;; This function is called by:
  8771 ;;		_operation
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text28
  8776  0052E2                     __ptext28:
  8777                           	opt stack 0
  8778  0052E2                     ___lwtoft:
  8779                           	opt stack 21
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;incstack = 0
  8783  0052E2  C098  F090         	movff	___lwtoft@c,___ftpack@arg
  8784  0052E6  C099  F091         	movff	___lwtoft@c+1,___ftpack@arg+1
  8785  0052EA  0100               	movlb	0	; () banked
  8786  0052EC  6B92               	clrf	(___ftpack@arg+2)& (0+255),b
  8787  0052EE  0E8E               	movlw	142
  8788  0052F0  0100               	movlb	0	; () banked
  8789  0052F2  6F93               	movwf	___ftpack@exp& (0+255),b
  8790  0052F4  0E00               	movlw	0
  8791  0052F6  0100               	movlb	0	; () banked
  8792  0052F8  6F94               	movwf	___ftpack@sign& (0+255),b
  8793  0052FA  EC90  F019         	call	___ftpack	;wreg free
  8794  0052FE  C090  F098         	movff	?___ftpack,?___lwtoft
  8795  005302  C091  F099         	movff	?___ftpack+1,?___lwtoft+1
  8796  005306  C092  F09A         	movff	?___ftpack+2,?___lwtoft+2
  8797  00530A  0012               	return	
  8798  00530C                     __end_of___lwtoft:
  8799                           	opt stack 0
  8800                           tblptru	equ	0xFF8
  8801                           tblptrh	equ	0xFF7
  8802                           tblptrl	equ	0xFF6
  8803                           tablat	equ	0xFF5
  8804                           prodh	equ	0xFF4
  8805                           prodl	equ	0xFF3
  8806                           intcon	equ	0xFF2
  8807                           intcon2	equ	0xFF1
  8808                           intcon3	equ	0xFF0
  8809                           postinc0	equ	0xFEE
  8810                           wreg	equ	0xFE8
  8811                           postdec1	equ	0xFE5
  8812                           fsr1l	equ	0xFE1
  8813                           indf2	equ	0xFDF
  8814                           postinc2	equ	0xFDE
  8815                           postdec2	equ	0xFDD
  8816                           fsr2h	equ	0xFDA
  8817                           fsr2l	equ	0xFD9
  8818                           status	equ	0xFD8
  8819                           
  8820 ;; *************** function ___ftpack *****************
  8821 ;; Defined at:
  8822 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;  arg             3   16[BANK0 ] unsigned um
  8825 ;;  exp             1   19[BANK0 ] unsigned char 
  8826 ;;  sign            1   20[BANK0 ] unsigned char 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;		None
  8829 ;; Return value:  Size  Location     Type
  8830 ;;                  3   16[BANK0 ] float 
  8831 ;; Registers used:
  8832 ;;		wreg, status,2, status,0
  8833 ;; Tracked objects:
  8834 ;;		On entry : 0/0
  8835 ;;		On exit  : 0/0
  8836 ;;		Unchanged: 0/0
  8837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8838 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8842 ;;Total ram usage:        8 bytes
  8843 ;; Hardware stack levels used:    1
  8844 ;; Hardware stack levels required when called:    7
  8845 ;; This function calls:
  8846 ;;		Nothing
  8847 ;; This function is called by:
  8848 ;;		___altoft
  8849 ;;		___awtoft
  8850 ;;		___ftadd
  8851 ;;		___ftdiv
  8852 ;;		___ftmul
  8853 ;;		___lltoft
  8854 ;;		___lwtoft
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text29
  8859  003320                     __ptext29:
  8860                           	opt stack 0
  8861  003320                     ___ftpack:
  8862                           	opt stack 17
  8863                           
  8864                           ;incstack = 0
  8865  003320  0100               	movlb	0	; () banked
  8866  003322  5193               	movf	___ftpack@exp& (0+255),w,b
  8867  003324  0100               	movlb	0	; () banked
  8868  003326  B4D8               	btfsc	status,2,c
  8869  003328  D008               	goto	l7326
  8870                           
  8871                           ; BSR set to: 0
  8872  00332A  0100               	movlb	0	; () banked
  8873  00332C  5190               	movf	___ftpack@arg& (0+255),w,b
  8874  00332E  0100               	movlb	0	; () banked
  8875  003330  1191               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8876  003332  0100               	movlb	0	; () banked
  8877  003334  1192               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8878  003336  A4D8               	btfss	status,2,c
  8879  003338  D011               	goto	l7332
  8880  00333A                     l7326:
  8881                           
  8882                           ; BSR set to: 0
  8883  00333A  0E00               	movlw	0
  8884  00333C  0100               	movlb	0	; () banked
  8885  00333E  6F90               	movwf	?___ftpack& (0+255),b
  8886  003340  0E00               	movlw	0
  8887  003342  0100               	movlb	0	; () banked
  8888  003344  6F91               	movwf	(?___ftpack+1)& (0+255),b
  8889  003346  0E00               	movlw	0
  8890  003348  0100               	movlb	0	; () banked
  8891  00334A  6F92               	movwf	(?___ftpack+2)& (0+255),b
  8892                           
  8893                           ; BSR set to: 0
  8894  00334C  0012               	return	
  8895  00334E                     l7330:
  8896                           
  8897                           ; BSR set to: 0
  8898  00334E  0100               	movlb	0	; () banked
  8899  003350  2B93               	incf	___ftpack@exp& (0+255),f,b
  8900  003352  0100               	movlb	0	; () banked
  8901  003354  90D8               	bcf	status,0,c
  8902  003356  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8903  003358  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8904  00335A  3390               	rrcf	___ftpack@arg& (0+255),f,b
  8905  00335C                     l7332:
  8906                           
  8907                           ; BSR set to: 0
  8908  00335C  0E00               	movlw	0
  8909  00335E  0100               	movlb	0	; () banked
  8910  003360  1590               	andwf	___ftpack@arg& (0+255),w,b
  8911  003362  0100               	movlb	0	; () banked
  8912  003364  6F95               	movwf	??___ftpack& (0+255),b
  8913  003366  0E00               	movlw	0
  8914  003368  0100               	movlb	0	; () banked
  8915  00336A  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8916  00336C  0100               	movlb	0	; () banked
  8917  00336E  6F96               	movwf	(??___ftpack+1)& (0+255),b
  8918  003370  0EFE               	movlw	254
  8919  003372  0100               	movlb	0	; () banked
  8920  003374  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8921  003376  0100               	movlb	0	; () banked
  8922  003378  6F97               	movwf	(??___ftpack+2)& (0+255),b
  8923  00337A  0100               	movlb	0	; () banked
  8924  00337C  5195               	movf	??___ftpack& (0+255),w,b
  8925  00337E  0100               	movlb	0	; () banked
  8926  003380  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  8927  003382  0100               	movlb	0	; () banked
  8928  003384  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  8929  003386  B4D8               	btfsc	status,2,c
  8930  003388  D011               	goto	l7338
  8931  00338A  D7E1               	goto	l7330
  8932  00338C                     l7334:
  8933                           
  8934                           ; BSR set to: 0
  8935  00338C  0100               	movlb	0	; () banked
  8936  00338E  2B93               	incf	___ftpack@exp& (0+255),f,b
  8937                           
  8938                           ; BSR set to: 0
  8939  003390  0E01               	movlw	1
  8940  003392  0100               	movlb	0	; () banked
  8941  003394  2790               	addwf	___ftpack@arg& (0+255),f,b
  8942  003396  0E00               	movlw	0
  8943  003398  0100               	movlb	0	; () banked
  8944  00339A  2391               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8945  00339C  0E00               	movlw	0
  8946  00339E  0100               	movlb	0	; () banked
  8947  0033A0  2392               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8948  0033A2  0100               	movlb	0	; () banked
  8949  0033A4  90D8               	bcf	status,0,c
  8950  0033A6  3392               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8951  0033A8  3391               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8952  0033AA  3390               	rrcf	___ftpack@arg& (0+255),f,b
  8953  0033AC                     l7338:
  8954                           
  8955                           ; BSR set to: 0
  8956  0033AC  0E00               	movlw	0
  8957  0033AE  0100               	movlb	0	; () banked
  8958  0033B0  1590               	andwf	___ftpack@arg& (0+255),w,b
  8959  0033B2  0100               	movlb	0	; () banked
  8960  0033B4  6F95               	movwf	??___ftpack& (0+255),b
  8961  0033B6  0E00               	movlw	0
  8962  0033B8  0100               	movlb	0	; () banked
  8963  0033BA  1591               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8964  0033BC  0100               	movlb	0	; () banked
  8965  0033BE  6F96               	movwf	(??___ftpack+1)& (0+255),b
  8966  0033C0  0EFF               	movlw	255
  8967  0033C2  0100               	movlb	0	; () banked
  8968  0033C4  1592               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8969  0033C6  0100               	movlb	0	; () banked
  8970  0033C8  6F97               	movwf	(??___ftpack+2)& (0+255),b
  8971  0033CA  0100               	movlb	0	; () banked
  8972  0033CC  5195               	movf	??___ftpack& (0+255),w,b
  8973  0033CE  0100               	movlb	0	; () banked
  8974  0033D0  1196               	iorwf	(??___ftpack+1)& (0+255),w,b
  8975  0033D2  0100               	movlb	0	; () banked
  8976  0033D4  1197               	iorwf	(??___ftpack+2)& (0+255),w,b
  8977  0033D6  B4D8               	btfsc	status,2,c
  8978  0033D8  D008               	goto	l7342
  8979  0033DA  D7D8               	goto	l7334
  8980  0033DC                     l7340:
  8981                           
  8982                           ; BSR set to: 0
  8983  0033DC  0100               	movlb	0	; () banked
  8984  0033DE  0793               	decf	___ftpack@exp& (0+255),f,b
  8985  0033E0  0100               	movlb	0	; () banked
  8986  0033E2  90D8               	bcf	status,0,c
  8987  0033E4  3790               	rlcf	___ftpack@arg& (0+255),f,b
  8988  0033E6  3791               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8989  0033E8  3792               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8990  0033EA                     l7342:
  8991                           
  8992                           ; BSR set to: 0
  8993  0033EA  0100               	movlb	0	; () banked
  8994  0033EC  BF91               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8995  0033EE  D004               	goto	l899
  8996                           
  8997                           ; BSR set to: 0
  8998  0033F0  0E02               	movlw	2
  8999  0033F2  0100               	movlb	0	; () banked
  9000  0033F4  6193               	cpfslt	___ftpack@exp& (0+255),b
  9001  0033F6  D7F2               	goto	l7340
  9002  0033F8                     l899:
  9003                           
  9004                           ; BSR set to: 0
  9005  0033F8  0100               	movlb	0	; () banked
  9006  0033FA  B193               	btfsc	___ftpack@exp& (0+255),0,b
  9007  0033FC  D002               	goto	l7348
  9008                           
  9009                           ; BSR set to: 0
  9010  0033FE  0100               	movlb	0	; () banked
  9011  003400  9F91               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9012  003402                     l7348:
  9013                           
  9014                           ; BSR set to: 0
  9015  003402  0100               	movlb	0	; () banked
  9016  003404  90D8               	bcf	status,0,c
  9017  003406  3393               	rrcf	___ftpack@exp& (0+255),f,b
  9018  003408  0100               	movlb	0	; () banked
  9019  00340A  5193               	movf	___ftpack@exp& (0+255),w,b
  9020  00340C  0100               	movlb	0	; () banked
  9021  00340E  1392               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9022                           
  9023                           ; BSR set to: 0
  9024  003410  0100               	movlb	0	; () banked
  9025  003412  5194               	movf	___ftpack@sign& (0+255),w,b
  9026  003414  0100               	movlb	0	; () banked
  9027  003416  B4D8               	btfsc	status,2,c
  9028  003418  D002               	goto	l7354
  9029                           
  9030                           ; BSR set to: 0
  9031  00341A  0100               	movlb	0	; () banked
  9032  00341C  8F92               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9033  00341E                     l7354:
  9034                           
  9035                           ; BSR set to: 0
  9036  00341E  C090  F090         	movff	___ftpack@arg,?___ftpack
  9037  003422  C091  F091         	movff	___ftpack@arg+1,?___ftpack+1
  9038  003426  C092  F092         	movff	___ftpack@arg+2,?___ftpack+2
  9039  00342A  0012               	return	
  9040  00342C                     __end_of___ftpack:
  9041                           	opt stack 0
  9042                           tblptru	equ	0xFF8
  9043                           tblptrh	equ	0xFF7
  9044                           tblptrl	equ	0xFF6
  9045                           tablat	equ	0xFF5
  9046                           prodh	equ	0xFF4
  9047                           prodl	equ	0xFF3
  9048                           intcon	equ	0xFF2
  9049                           intcon2	equ	0xFF1
  9050                           intcon3	equ	0xFF0
  9051                           postinc0	equ	0xFEE
  9052                           wreg	equ	0xFE8
  9053                           postdec1	equ	0xFE5
  9054                           fsr1l	equ	0xFE1
  9055                           indf2	equ	0xFDF
  9056                           postinc2	equ	0xFDE
  9057                           postdec2	equ	0xFDD
  9058                           fsr2h	equ	0xFDA
  9059                           fsr2l	equ	0xFD9
  9060                           status	equ	0xFD8
  9061                           
  9062 ;; *************** function _initLCD *****************
  9063 ;; Defined at:
  9064 ;;		line 14 in file "lcd.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9081 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9082 ;;Total ram usage:        1 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    9
  9085 ;; This function calls:
  9086 ;;		_lcdInst
  9087 ;; This function is called by:
  9088 ;;		_main
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text30
  9093  004FF6                     __ptext30:
  9094                           	opt stack 0
  9095  004FF6                     _initLCD:
  9096                           	opt stack 21
  9097                           
  9098                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;incstack = 0
  9102  004FF6  0E31               	movlw	49
  9103  004FF8  0100               	movlb	0	; () banked
  9104  004FFA  6F93               	movwf	??_initLCD& (0+255),b
  9105  004FFC  0EB2               	movlw	178
  9106  004FFE                     u8817:
  9107  004FFE  2EE8               	decfsz	wreg,f,c
  9108  005000  D7FE               	bra	u8817
  9109  005002  2F93               	decfsz	??_initLCD& (0+255),f,b
  9110  005004  D7FC               	bra	u8817
  9111  005006  F000               	nop	
  9112                           
  9113                           ;lcd.c: 16: lcdInst(0b00110011);
  9114  005008  0E33               	movlw	51
  9115  00500A  EC58  F02A         	call	_lcdInst
  9116                           
  9117                           ;lcd.c: 17: lcdInst(0b00110011);
  9118  00500E  0E33               	movlw	51
  9119  005010  EC58  F02A         	call	_lcdInst
  9120                           
  9121                           ;lcd.c: 18: lcdInst(0b00110010);
  9122  005014  0E32               	movlw	50
  9123  005016  EC58  F02A         	call	_lcdInst
  9124                           
  9125                           ;lcd.c: 19: lcdInst(0b00101000);
  9126  00501A  0E28               	movlw	40
  9127  00501C  EC58  F02A         	call	_lcdInst
  9128                           
  9129                           ;lcd.c: 20: lcdInst(0b00001111);
  9130  005020  0E0F               	movlw	15
  9131  005022  EC58  F02A         	call	_lcdInst
  9132                           
  9133                           ;lcd.c: 21: lcdInst(0b00000110);
  9134  005026  0E06               	movlw	6
  9135  005028  EC58  F02A         	call	_lcdInst
  9136                           
  9137                           ;lcd.c: 22: lcdInst(0b00000001);
  9138  00502C  0E01               	movlw	1
  9139  00502E  EC58  F02A         	call	_lcdInst
  9140                           
  9141                           ;lcd.c: 23: _delay((unsigned long)((15)*(10000000/4000.0)));
  9142  005032  0E31               	movlw	49
  9143  005034  0100               	movlb	0	; () banked
  9144  005036  6F93               	movwf	??_initLCD& (0+255),b
  9145  005038  0EB2               	movlw	178
  9146  00503A                     u8827:
  9147  00503A  2EE8               	decfsz	wreg,f,c
  9148  00503C  D7FE               	bra	u8827
  9149  00503E  2F93               	decfsz	??_initLCD& (0+255),f,b
  9150  005040  D7FC               	bra	u8827
  9151  005042  F000               	nop	
  9152  005044  0012               	return		;funcret
  9153  005046                     __end_of_initLCD:
  9154                           	opt stack 0
  9155                           tblptru	equ	0xFF8
  9156                           tblptrh	equ	0xFF7
  9157                           tblptrl	equ	0xFF6
  9158                           tablat	equ	0xFF5
  9159                           prodh	equ	0xFF4
  9160                           prodl	equ	0xFF3
  9161                           intcon	equ	0xFF2
  9162                           intcon2	equ	0xFF1
  9163                           intcon3	equ	0xFF0
  9164                           postinc0	equ	0xFEE
  9165                           wreg	equ	0xFE8
  9166                           postdec1	equ	0xFE5
  9167                           fsr1l	equ	0xFE1
  9168                           indf2	equ	0xFDF
  9169                           postinc2	equ	0xFDE
  9170                           postdec2	equ	0xFDD
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function _emergencystop *****************
  9176 ;; Defined at:
  9177 ;;		line 674 in file "main.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;		None
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;		None
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:   10
  9198 ;; This function calls:
  9199 ;;		_lcdInst
  9200 ;;		_printf
  9201 ;; This function is called by:
  9202 ;;		_main
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text31
  9207  0053F4                     __ptext31:
  9208                           	opt stack 0
  9209  0053F4                     _emergencystop:
  9210                           	opt stack 20
  9211                           
  9212                           ;main.c: 675: (INTCONbits.GIE = 0);
  9213                           
  9214                           ;incstack = 0
  9215  0053F4  9EF2               	bcf	intcon,7,c	;volatile
  9216                           
  9217                           ;main.c: 676: PORTAbits.RA2 = 0;
  9218  0053F6  9480               	bcf	3968,2,c	;volatile
  9219                           
  9220                           ;main.c: 677: lcdInst(0b00000001);
  9221  0053F8  0E01               	movlw	1
  9222  0053FA  EC58  F02A         	call	_lcdInst
  9223                           
  9224                           ;main.c: 678: lcdInst(0b10000000);
  9225  0053FE  0E80               	movlw	128
  9226  005400  EC58  F02A         	call	_lcdInst
  9227                           
  9228                           ;main.c: 679: printf("EMERGENCY STOP          ");
  9229  005404  0E43               	movlw	low STR_47
  9230  005406  0100               	movlb	0	; () banked
  9231  005408  6F9C               	movwf	printf@f& (0+255),b
  9232  00540A  0EFE               	movlw	high STR_47
  9233  00540C  0100               	movlb	0	; () banked
  9234  00540E  6F9D               	movwf	(printf@f+1)& (0+255),b
  9235  005410  EC1C  F008         	call	_printf	;wreg free
  9236  005414                     l559:
  9237  005414  D7FF               	goto	l559
  9238  005416                     __end_of_emergencystop:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodh	equ	0xFF4
  9245                           prodl	equ	0xFF3
  9246                           intcon	equ	0xFF2
  9247                           intcon2	equ	0xFF1
  9248                           intcon3	equ	0xFF0
  9249                           postinc0	equ	0xFEE
  9250                           wreg	equ	0xFE8
  9251                           postdec1	equ	0xFE5
  9252                           fsr1l	equ	0xFE1
  9253                           indf2	equ	0xFDF
  9254                           postinc2	equ	0xFDE
  9255                           postdec2	equ	0xFDD
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function _date_time *****************
  9261 ;; Defined at:
  9262 ;;		line 373 in file "main.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;		None
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  i               1   50[BANK0 ] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  1    wreg      void 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;Total ram usage:        1 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:   10
  9283 ;; This function calls:
  9284 ;;		_I2C_Master_Read
  9285 ;;		_I2C_Master_Start
  9286 ;;		_I2C_Master_Stop
  9287 ;;		_I2C_Master_Write
  9288 ;;		_lcdInst
  9289 ;;		_printf
  9290 ;; This function is called by:
  9291 ;;		_main
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           	psect	text32
  9296  00429E                     __ptext32:
  9297                           	opt stack 0
  9298  00429E                     _date_time:
  9299                           	opt stack 20
  9300                           
  9301                           ;main.c: 375: I2C_Master_Start();
  9302                           
  9303                           ;incstack = 0
  9304  00429E  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
  9305                           
  9306                           ;main.c: 376: I2C_Master_Write(0b11010000);
  9307  0042A2  0E00               	movlw	0
  9308  0042A4  0100               	movlb	0	; () banked
  9309  0042A6  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9310  0042A8  0ED0               	movlw	208
  9311  0042AA  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9312  0042AC  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  9313                           
  9314                           ;main.c: 377: I2C_Master_Write(0x00);
  9315  0042B0  0E00               	movlw	0
  9316  0042B2  0100               	movlb	0	; () banked
  9317  0042B4  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9318  0042B6  0E00               	movlw	0
  9319  0042B8  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9320  0042BA  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  9321                           
  9322                           ;main.c: 378: I2C_Master_Stop();
  9323  0042BE  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
  9324                           
  9325                           ;main.c: 381: I2C_Master_Start();
  9326  0042C2  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
  9327                           
  9328                           ;main.c: 382: I2C_Master_Write(0b11010001);
  9329  0042C6  0E00               	movlw	0
  9330  0042C8  0100               	movlb	0	; () banked
  9331  0042CA  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  9332  0042CC  0ED1               	movlw	209
  9333  0042CE  6F91               	movwf	I2C_Master_Write@d& (0+255),b
  9334  0042D0  EC71  F02A         	call	_I2C_Master_Write	;wreg free
  9335                           
  9336                           ;main.c: 383: for(unsigned char i=0;i<0x06;i++){
  9337  0042D4  0E00               	movlw	0
  9338  0042D6  0100               	movlb	0	; () banked
  9339  0042D8  6FB2               	movwf	date_time@i& (0+255),b
  9340  0042DA                     l8396:
  9341                           
  9342                           ; BSR set to: 0
  9343  0042DA  0E05               	movlw	5
  9344  0042DC  0100               	movlb	0	; () banked
  9345  0042DE  65B2               	cpfsgt	date_time@i& (0+255),b
  9346  0042E0  D001               	goto	l8400
  9347  0042E2  D010               	goto	l8406
  9348  0042E4                     l8400:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;main.c: 384: time[i] = I2C_Master_Read(1);
  9352  0042E4  0100               	movlb	0	; () banked
  9353  0042E6  51B2               	movf	date_time@i& (0+255),w,b
  9354  0042E8  0D01               	mullw	1
  9355  0042EA  0E10               	movlw	low _time
  9356  0042EC  24F3               	addwf	prodl,w,c
  9357  0042EE  6ED9               	movwf	fsr2l,c
  9358  0042F0  0E01               	movlw	high _time
  9359  0042F2  20F4               	addwfc	prodh,w,c
  9360  0042F4  6EDA               	movwf	fsr2h,c
  9361  0042F6  0E01               	movlw	1
  9362  0042F8  EC5A  F029         	call	_I2C_Master_Read
  9363  0042FC  6EDF               	movwf	indf2,c
  9364  0042FE  0100               	movlb	0	; () banked
  9365  004300  2BB2               	incf	date_time@i& (0+255),f,b
  9366  004302  D7EB               	goto	l8396
  9367  004304                     l8406:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;main.c: 385: }
  9371                           ;main.c: 386: time[6] = I2C_Master_Read(0);
  9372  004304  0E00               	movlw	0
  9373  004306  EC5A  F029         	call	_I2C_Master_Read
  9374  00430A  0101               	movlb	1	; () banked
  9375  00430C  6F16               	movwf	(_time+6)& (0+255),b
  9376                           
  9377                           ;main.c: 387: I2C_Master_Stop();
  9378  00430E  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
  9379                           
  9380                           ;main.c: 390: lcdInst(0b10000000);
  9381  004312  0E80               	movlw	128
  9382  004314  EC58  F02A         	call	_lcdInst
  9383                           
  9384                           ;main.c: 391: printf("Date: %02x/%02x/%02x  ", time[5],time[4],time[6]);
  9385  004318  0E02               	movlw	low STR_7
  9386  00431A  0100               	movlb	0	; () banked
  9387  00431C  6F9C               	movwf	printf@f& (0+255),b
  9388  00431E  0EFF               	movlw	high STR_7
  9389  004320  0100               	movlb	0	; () banked
  9390  004322  6F9D               	movwf	(printf@f+1)& (0+255),b
  9391  004324  C115  F09E         	movff	_time+5,?_printf+2
  9392  004328  0100               	movlb	0	; () banked
  9393  00432A  6B9F               	clrf	(?_printf+3)& (0+255),b
  9394  00432C  C114  F0A0         	movff	_time+4,?_printf+4
  9395  004330  0100               	movlb	0	; () banked
  9396  004332  6BA1               	clrf	(?_printf+5)& (0+255),b
  9397  004334  C116  F0A2         	movff	_time+6,?_printf+6
  9398  004338  0100               	movlb	0	; () banked
  9399  00433A  6BA3               	clrf	(?_printf+7)& (0+255),b
  9400  00433C  EC1C  F008         	call	_printf	;wreg free
  9401                           
  9402                           ;main.c: 392: lcdInst(0b11000000);
  9403  004340  0EC0               	movlw	192
  9404  004342  EC58  F02A         	call	_lcdInst
  9405                           
  9406                           ;main.c: 393: printf("Time: %02x:%02x:%02x  ", time[2],time[1],time[0]);
  9407  004346  0E19               	movlw	low STR_8
  9408  004348  0100               	movlb	0	; () banked
  9409  00434A  6F9C               	movwf	printf@f& (0+255),b
  9410  00434C  0EFF               	movlw	high STR_8
  9411  00434E  0100               	movlb	0	; () banked
  9412  004350  6F9D               	movwf	(printf@f+1)& (0+255),b
  9413  004352  C112  F09E         	movff	_time+2,?_printf+2
  9414  004356  0100               	movlb	0	; () banked
  9415  004358  6B9F               	clrf	(?_printf+3)& (0+255),b
  9416  00435A  C111  F0A0         	movff	_time+1,?_printf+4
  9417  00435E  0100               	movlb	0	; () banked
  9418  004360  6BA1               	clrf	(?_printf+5)& (0+255),b
  9419  004362  C110  F0A2         	movff	_time,?_printf+6
  9420  004366  0100               	movlb	0	; () banked
  9421  004368  6BA3               	clrf	(?_printf+7)& (0+255),b
  9422  00436A  EC1C  F008         	call	_printf	;wreg free
  9423  00436E  0012               	return	
  9424  004370                     __end_of_date_time:
  9425                           	opt stack 0
  9426                           tblptru	equ	0xFF8
  9427                           tblptrh	equ	0xFF7
  9428                           tblptrl	equ	0xFF6
  9429                           tablat	equ	0xFF5
  9430                           prodh	equ	0xFF4
  9431                           prodl	equ	0xFF3
  9432                           intcon	equ	0xFF2
  9433                           intcon2	equ	0xFF1
  9434                           intcon3	equ	0xFF0
  9435                           postinc0	equ	0xFEE
  9436                           wreg	equ	0xFE8
  9437                           postdec1	equ	0xFE5
  9438                           fsr1l	equ	0xFE1
  9439                           indf2	equ	0xFDF
  9440                           postinc2	equ	0xFDE
  9441                           postdec2	equ	0xFDD
  9442                           fsr2h	equ	0xFDA
  9443                           fsr2l	equ	0xFD9
  9444                           status	equ	0xFD8
  9445                           
  9446 ;; *************** function _I2C_Master_Read *****************
  9447 ;; Defined at:
  9448 ;;		line 110 in file "I2C.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  a               1    wreg     unsigned char 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  a               1   17[BANK0 ] unsigned char 
  9453 ;;  temp            1   18[BANK0 ] unsigned char 
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      unsigned char 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;Total ram usage:        2 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    8
  9470 ;; This function calls:
  9471 ;;		_I2C_Master_Wait
  9472 ;; This function is called by:
  9473 ;;		_date_time
  9474 ;;		_read_time
  9475 ;;		_read_colorsensor
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text33
  9480  0052B4                     __ptext33:
  9481                           	opt stack 0
  9482  0052B4                     _I2C_Master_Read:
  9483                           	opt stack 20
  9484                           
  9485                           ;incstack = 0
  9486                           ;I2C_Master_Read@a stored from wreg
  9487  0052B4  0100               	movlb	0	; () banked
  9488  0052B6  6F91               	movwf	I2C_Master_Read@a& (0+255),b
  9489                           
  9490                           ;I2C.c: 112: unsigned char temp;
  9491                           ;I2C.c: 113: I2C_Master_Wait();
  9492  0052B8  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
  9493                           
  9494                           ;I2C.c: 114: RCEN = 1;
  9495  0052BC  86C5               	bsf	4037,3,c	;volatile
  9496                           
  9497                           ;I2C.c: 115: I2C_Master_Wait();
  9498  0052BE  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
  9499                           
  9500                           ;I2C.c: 116: temp = SSPBUF;
  9501  0052C2  CFC9 F092          	movff	4041,I2C_Master_Read@temp	;volatile
  9502                           
  9503                           ;I2C.c: 117: I2C_Master_Wait();
  9504  0052C6  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
  9505                           
  9506                           ;I2C.c: 118: ACKDT = (a)?0:1;
  9507  0052CA  0100               	movlb	0	; () banked
  9508  0052CC  5191               	movf	I2C_Master_Read@a& (0+255),w,b
  9509  0052CE  0100               	movlb	0	; () banked
  9510  0052D0  A4D8               	btfss	status,2,c
  9511  0052D2  D002               	goto	u7910
  9512  0052D4  8AC5               	bsf	4037,5,c	;volatile
  9513  0052D6  D001               	goto	l7836
  9514  0052D8                     u7910:
  9515  0052D8  9AC5               	bcf	4037,5,c	;volatile
  9516  0052DA                     l7836:
  9517                           
  9518                           ;I2C.c: 119: ACKEN = 1;
  9519  0052DA  88C5               	bsf	4037,4,c	;volatile
  9520                           
  9521                           ;I2C.c: 120: return temp;
  9522  0052DC  0100               	movlb	0	; () banked
  9523  0052DE  5192               	movf	I2C_Master_Read@temp& (0+255),w,b
  9524  0052E0  0012               	return	
  9525  0052E2                     __end_of_I2C_Master_Read:
  9526                           	opt stack 0
  9527                           tblptru	equ	0xFF8
  9528                           tblptrh	equ	0xFF7
  9529                           tblptrl	equ	0xFF6
  9530                           tablat	equ	0xFF5
  9531                           prodh	equ	0xFF4
  9532                           prodl	equ	0xFF3
  9533                           intcon	equ	0xFF2
  9534                           intcon2	equ	0xFF1
  9535                           intcon3	equ	0xFF0
  9536                           postinc0	equ	0xFEE
  9537                           wreg	equ	0xFE8
  9538                           postdec1	equ	0xFE5
  9539                           fsr1l	equ	0xFE1
  9540                           indf2	equ	0xFDF
  9541                           postinc2	equ	0xFDE
  9542                           postdec2	equ	0xFDD
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function _bottle_time *****************
  9548 ;; Defined at:
  9549 ;;		line 566 in file "main.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:   10
  9570 ;; This function calls:
  9571 ;;		_lcdInst
  9572 ;;		_printf
  9573 ;; This function is called by:
  9574 ;;		_main
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text34
  9579  005218                     __ptext34:
  9580                           	opt stack 0
  9581  005218                     _bottle_time:
  9582                           	opt stack 20
  9583                           
  9584                           ;main.c: 567: lcdInst(0b10000000);
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;incstack = 0
  9588  005218  0E80               	movlw	128
  9589  00521A  EC58  F02A         	call	_lcdInst
  9590                           
  9591                           ;main.c: 568: printf("Total Operation          ");
  9592  00521E  0E10               	movlw	low STR_44
  9593  005220  0100               	movlb	0	; () banked
  9594  005222  6F9C               	movwf	printf@f& (0+255),b
  9595  005224  0EFE               	movlw	high STR_44
  9596  005226  0100               	movlb	0	; () banked
  9597  005228  6F9D               	movwf	(printf@f+1)& (0+255),b
  9598  00522A  EC1C  F008         	call	_printf	;wreg free
  9599                           
  9600                           ;main.c: 569: lcdInst(0b11000000);
  9601  00522E  0EC0               	movlw	192
  9602  005230  EC58  F02A         	call	_lcdInst
  9603                           
  9604                           ;main.c: 570: printf("Time: %d s             ", operation_time);
  9605  005234  0E8C               	movlw	low STR_45
  9606  005236  0100               	movlb	0	; () banked
  9607  005238  6F9C               	movwf	printf@f& (0+255),b
  9608  00523A  0EFE               	movlw	high STR_45
  9609  00523C  0100               	movlb	0	; () banked
  9610  00523E  6F9D               	movwf	(printf@f+1)& (0+255),b
  9611  005240  C13F  F09E         	movff	_operation_time,?_printf+2
  9612  005244  C140  F09F         	movff	_operation_time+1,?_printf+3
  9613  005248  EC1C  F008         	call	_printf	;wreg free
  9614  00524C  0012               	return	
  9615  00524E                     __end_of_bottle_time:
  9616                           	opt stack 0
  9617                           tblptru	equ	0xFF8
  9618                           tblptrh	equ	0xFF7
  9619                           tblptrl	equ	0xFF6
  9620                           tablat	equ	0xFF5
  9621                           prodh	equ	0xFF4
  9622                           prodl	equ	0xFF3
  9623                           intcon	equ	0xFF2
  9624                           intcon2	equ	0xFF1
  9625                           intcon3	equ	0xFF0
  9626                           postinc0	equ	0xFEE
  9627                           wreg	equ	0xFE8
  9628                           postdec1	equ	0xFE5
  9629                           fsr1l	equ	0xFE1
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _bottle_count4 *****************
  9638 ;; Defined at:
  9639 ;;		line 536 in file "main.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  1    wreg      void 
  9646 ;; Registers used:
  9647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;Total ram usage:        0 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:   10
  9660 ;; This function calls:
  9661 ;;		___awmod
  9662 ;;		_lcdInst
  9663 ;;		_printf
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text35
  9670  00342C                     __ptext35:
  9671                           	opt stack 0
  9672  00342C                     _bottle_count4:
  9673                           	opt stack 20
  9674                           
  9675                           ;main.c: 537: switch(bottle_count_disp[4] % 3){
  9676                           
  9677                           ;incstack = 0
  9678  00342C  D065               	goto	l8568
  9679  00342E                     l8544:
  9680                           
  9681                           ;main.c: 539: lcdInst(0b10000000);
  9682  00342E  0E80               	movlw	128
  9683  003430  EC58  F02A         	call	_lcdInst
  9684                           
  9685                           ;main.c: 540: printf("BttlCnt Prev 4          ");
  9686  003434  0E2A               	movlw	low STR_37
  9687  003436  0100               	movlb	0	; () banked
  9688  003438  6F9C               	movwf	printf@f& (0+255),b
  9689  00343A  0EFE               	movlw	high STR_37
  9690  00343C  0100               	movlb	0	; () banked
  9691  00343E  6F9D               	movwf	(printf@f+1)& (0+255),b
  9692  003440  EC1C  F008         	call	_printf	;wreg free
  9693                           
  9694                           ;main.c: 541: lcdInst(0b11000000);
  9695  003444  0EC0               	movlw	192
  9696  003446  EC58  F02A         	call	_lcdInst
  9697                           
  9698                           ;main.c: 542: printf("Total: %d           ", bottle_count_array[0]);
  9699  00344A  0E5C               	movlw	low STR_17
  9700  00344C  0100               	movlb	0	; () banked
  9701  00344E  6F9C               	movwf	printf@f& (0+255),b
  9702  003450  0EFF               	movlw	high STR_17
  9703  003452  0100               	movlb	0	; () banked
  9704  003454  6F9D               	movwf	(printf@f+1)& (0+255),b
  9705  003456  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
  9706  00345A  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
  9707  00345E  EC1C  F008         	call	_printf	;wreg free
  9708                           
  9709                           ;main.c: 543: break;
  9710  003462  0012               	return	
  9711  003464                     l8550:
  9712                           
  9713                           ;main.c: 545: lcdInst(0b10000000);
  9714  003464  0E80               	movlw	128
  9715  003466  EC58  F02A         	call	_lcdInst
  9716                           
  9717                           ;main.c: 546: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
  9718  00346A  0E94               	movlw	low STR_11
  9719  00346C  0100               	movlb	0	; () banked
  9720  00346E  6F9C               	movwf	printf@f& (0+255),b
  9721  003470  0EFF               	movlw	high STR_11
  9722  003472  0100               	movlb	0	; () banked
  9723  003474  6F9D               	movwf	(printf@f+1)& (0+255),b
  9724  003476  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
  9725  00347A  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
  9726  00347E  EC1C  F008         	call	_printf	;wreg free
  9727                           
  9728                           ;main.c: 547: lcdInst(0b11000000);
  9729  003482  0EC0               	movlw	192
  9730  003484  EC58  F02A         	call	_lcdInst
  9731                           
  9732                           ;main.c: 548: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
  9733  003488  0EA5               	movlw	low STR_12
  9734  00348A  0100               	movlb	0	; () banked
  9735  00348C  6F9C               	movwf	printf@f& (0+255),b
  9736  00348E  0EFF               	movlw	high STR_12
  9737  003490  0100               	movlb	0	; () banked
  9738  003492  6F9D               	movwf	(printf@f+1)& (0+255),b
  9739  003494  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
  9740  003498  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
  9741  00349C  EC1C  F008         	call	_printf	;wreg free
  9742                           
  9743                           ;main.c: 549: break;
  9744  0034A0  0012               	return	
  9745  0034A2                     l8556:
  9746                           
  9747                           ;main.c: 551: lcdInst(0b10000000);
  9748  0034A2  0E80               	movlw	128
  9749  0034A4  EC58  F02A         	call	_lcdInst
  9750                           
  9751                           ;main.c: 552: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
  9752  0034A8  0EB6               	movlw	low STR_13
  9753  0034AA  0100               	movlb	0	; () banked
  9754  0034AC  6F9C               	movwf	printf@f& (0+255),b
  9755  0034AE  0EFF               	movlw	high STR_13
  9756  0034B0  0100               	movlb	0	; () banked
  9757  0034B2  6F9D               	movwf	(printf@f+1)& (0+255),b
  9758  0034B4  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
  9759  0034B8  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
  9760  0034BC  EC1C  F008         	call	_printf	;wreg free
  9761                           
  9762                           ;main.c: 553: lcdInst(0b11000000);
  9763  0034C0  0EC0               	movlw	192
  9764  0034C2  EC58  F02A         	call	_lcdInst
  9765                           
  9766                           ;main.c: 554: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
  9767  0034C6  0EC7               	movlw	low STR_14
  9768  0034C8  0100               	movlb	0	; () banked
  9769  0034CA  6F9C               	movwf	printf@f& (0+255),b
  9770  0034CC  0EFF               	movlw	high STR_14
  9771  0034CE  0100               	movlb	0	; () banked
  9772  0034D0  6F9D               	movwf	(printf@f+1)& (0+255),b
  9773  0034D2  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
  9774  0034D6  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
  9775  0034DA  EC1C  F008         	call	_printf	;wreg free
  9776                           
  9777                           ;main.c: 555: break;
  9778  0034DE  0012               	return	
  9779  0034E0                     l8562:
  9780                           
  9781                           ;main.c: 558: lcdInst(0b10000000);
  9782  0034E0  0E80               	movlw	128
  9783  0034E2  EC58  F02A         	call	_lcdInst
  9784                           
  9785                           ;main.c: 559: printf("ERR: BAD BTLCNT");
  9786  0034E6  0ED8               	movlw	low STR_15
  9787  0034E8  0100               	movlb	0	; () banked
  9788  0034EA  6F9C               	movwf	printf@f& (0+255),b
  9789  0034EC  0EFF               	movlw	high STR_15
  9790  0034EE  0100               	movlb	0	; () banked
  9791  0034F0  6F9D               	movwf	(printf@f+1)& (0+255),b
  9792  0034F2  EC1C  F008         	call	_printf	;wreg free
  9793  0034F6  D7F4               	goto	l8562
  9794  0034F8                     l8568:
  9795  0034F8  C17A  F090         	movff	_bottle_count_disp+8,___awmod@dividend
  9796  0034FC  C17B  F091         	movff	_bottle_count_disp+9,___awmod@dividend+1
  9797  003500  0E00               	movlw	0
  9798  003502  0100               	movlb	0	; () banked
  9799  003504  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  9800  003506  0E03               	movlw	3
  9801  003508  6F92               	movwf	___awmod@divisor& (0+255),b
  9802  00350A  EC53  F024         	call	___awmod	;wreg free
  9803                           
  9804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9805                           ; Switch size 1, requested type "space"
  9806                           ; Number of cases is 1, Range of values is 0 to 0
  9807                           ; switch strategies available:
  9808                           ; Name         Instructions Cycles
  9809                           ; simple_byte            4     3 (average)
  9810                           ;	Chosen strategy is simple_byte
  9811  00350E  0100               	movlb	0	; () banked
  9812  003510  5191               	movf	(?___awmod+1)& (0+255),w,b
  9813  003512  0A00               	xorlw	0	; case 0
  9814  003514  A4D8               	btfss	status,2,c
  9815  003516  D7E4               	goto	l8562
  9816                           
  9817                           ; BSR set to: 0
  9818                           ; Switch size 1, requested type "space"
  9819                           ; Number of cases is 3, Range of values is 0 to 2
  9820                           ; switch strategies available:
  9821                           ; Name         Instructions Cycles
  9822                           ; simple_byte           10     6 (average)
  9823                           ;	Chosen strategy is simple_byte
  9824  003518  0100               	movlb	0	; () banked
  9825  00351A  5190               	movf	?___awmod& (0+255),w,b
  9826  00351C  0A00               	xorlw	0	; case 0
  9827  00351E  B4D8               	btfsc	status,2,c
  9828  003520  D786               	goto	l8544
  9829  003522  0A01               	xorlw	1	; case 1
  9830  003524  B4D8               	btfsc	status,2,c
  9831  003526  D79E               	goto	l8550
  9832  003528  0A03               	xorlw	3	; case 2
  9833  00352A  B4D8               	btfsc	status,2,c
  9834  00352C  D7BA               	goto	l8556
  9835  00352E  D7D8               	goto	l8562
  9836  003530                     __end_of_bottle_count4:
  9837                           	opt stack 0
  9838                           tblptru	equ	0xFF8
  9839                           tblptrh	equ	0xFF7
  9840                           tblptrl	equ	0xFF6
  9841                           tablat	equ	0xFF5
  9842                           prodh	equ	0xFF4
  9843                           prodl	equ	0xFF3
  9844                           intcon	equ	0xFF2
  9845                           intcon2	equ	0xFF1
  9846                           intcon3	equ	0xFF0
  9847                           postinc0	equ	0xFEE
  9848                           wreg	equ	0xFE8
  9849                           postdec1	equ	0xFE5
  9850                           fsr1l	equ	0xFE1
  9851                           indf2	equ	0xFDF
  9852                           postinc2	equ	0xFDE
  9853                           postdec2	equ	0xFDD
  9854                           fsr2h	equ	0xFDA
  9855                           fsr2l	equ	0xFD9
  9856                           status	equ	0xFD8
  9857                           
  9858 ;; *************** function _bottle_count3 *****************
  9859 ;; Defined at:
  9860 ;;		line 506 in file "main.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;		None
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;Total ram usage:        0 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:   10
  9881 ;; This function calls:
  9882 ;;		___awmod
  9883 ;;		_lcdInst
  9884 ;;		_printf
  9885 ;; This function is called by:
  9886 ;;		_main
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text36
  9891  003530                     __ptext36:
  9892                           	opt stack 0
  9893  003530                     _bottle_count3:
  9894                           	opt stack 20
  9895                           
  9896                           ;main.c: 507: switch(bottle_count_disp[3] % 3){
  9897                           
  9898                           ;incstack = 0
  9899  003530  D065               	goto	l8536
  9900  003532                     l8512:
  9901                           
  9902                           ;main.c: 509: lcdInst(0b10000000);
  9903  003532  0E80               	movlw	128
  9904  003534  EC58  F02A         	call	_lcdInst
  9905                           
  9906                           ;main.c: 510: printf("BttlCnt Prev 3         ");
  9907  003538  0EBC               	movlw	low STR_30
  9908  00353A  0100               	movlb	0	; () banked
  9909  00353C  6F9C               	movwf	printf@f& (0+255),b
  9910  00353E  0EFE               	movlw	high STR_30
  9911  003540  0100               	movlb	0	; () banked
  9912  003542  6F9D               	movwf	(printf@f+1)& (0+255),b
  9913  003544  EC1C  F008         	call	_printf	;wreg free
  9914                           
  9915                           ;main.c: 511: lcdInst(0b11000000);
  9916  003548  0EC0               	movlw	192
  9917  00354A  EC58  F02A         	call	_lcdInst
  9918                           
  9919                           ;main.c: 512: printf("Total: %d            ", bottle_count_array[0]);
  9920  00354E  0E30               	movlw	low STR_10
  9921  003550  0100               	movlb	0	; () banked
  9922  003552  6F9C               	movwf	printf@f& (0+255),b
  9923  003554  0EFF               	movlw	high STR_10
  9924  003556  0100               	movlb	0	; () banked
  9925  003558  6F9D               	movwf	(printf@f+1)& (0+255),b
  9926  00355A  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
  9927  00355E  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
  9928  003562  EC1C  F008         	call	_printf	;wreg free
  9929                           
  9930                           ;main.c: 513: break;
  9931  003566  0012               	return	
  9932  003568                     l8518:
  9933                           
  9934                           ;main.c: 515: lcdInst(0b10000000);
  9935  003568  0E80               	movlw	128
  9936  00356A  EC58  F02A         	call	_lcdInst
  9937                           
  9938                           ;main.c: 516: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
  9939  00356E  0E94               	movlw	low STR_11
  9940  003570  0100               	movlb	0	; () banked
  9941  003572  6F9C               	movwf	printf@f& (0+255),b
  9942  003574  0EFF               	movlw	high STR_11
  9943  003576  0100               	movlb	0	; () banked
  9944  003578  6F9D               	movwf	(printf@f+1)& (0+255),b
  9945  00357A  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
  9946  00357E  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
  9947  003582  EC1C  F008         	call	_printf	;wreg free
  9948                           
  9949                           ;main.c: 517: lcdInst(0b11000000);
  9950  003586  0EC0               	movlw	192
  9951  003588  EC58  F02A         	call	_lcdInst
  9952                           
  9953                           ;main.c: 518: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
  9954  00358C  0EA5               	movlw	low STR_12
  9955  00358E  0100               	movlb	0	; () banked
  9956  003590  6F9C               	movwf	printf@f& (0+255),b
  9957  003592  0EFF               	movlw	high STR_12
  9958  003594  0100               	movlb	0	; () banked
  9959  003596  6F9D               	movwf	(printf@f+1)& (0+255),b
  9960  003598  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
  9961  00359C  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
  9962  0035A0  EC1C  F008         	call	_printf	;wreg free
  9963                           
  9964                           ;main.c: 519: break;
  9965  0035A4  0012               	return	
  9966  0035A6                     l8524:
  9967                           
  9968                           ;main.c: 521: lcdInst(0b10000000);
  9969  0035A6  0E80               	movlw	128
  9970  0035A8  EC58  F02A         	call	_lcdInst
  9971                           
  9972                           ;main.c: 522: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
  9973  0035AC  0EB6               	movlw	low STR_13
  9974  0035AE  0100               	movlb	0	; () banked
  9975  0035B0  6F9C               	movwf	printf@f& (0+255),b
  9976  0035B2  0EFF               	movlw	high STR_13
  9977  0035B4  0100               	movlb	0	; () banked
  9978  0035B6  6F9D               	movwf	(printf@f+1)& (0+255),b
  9979  0035B8  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
  9980  0035BC  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
  9981  0035C0  EC1C  F008         	call	_printf	;wreg free
  9982                           
  9983                           ;main.c: 523: lcdInst(0b11000000);
  9984  0035C4  0EC0               	movlw	192
  9985  0035C6  EC58  F02A         	call	_lcdInst
  9986                           
  9987                           ;main.c: 524: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
  9988  0035CA  0EC7               	movlw	low STR_14
  9989  0035CC  0100               	movlb	0	; () banked
  9990  0035CE  6F9C               	movwf	printf@f& (0+255),b
  9991  0035D0  0EFF               	movlw	high STR_14
  9992  0035D2  0100               	movlb	0	; () banked
  9993  0035D4  6F9D               	movwf	(printf@f+1)& (0+255),b
  9994  0035D6  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
  9995  0035DA  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
  9996  0035DE  EC1C  F008         	call	_printf	;wreg free
  9997                           
  9998                           ;main.c: 525: break;
  9999  0035E2  0012               	return	
 10000  0035E4                     l8530:
 10001                           
 10002                           ;main.c: 528: lcdInst(0b10000000);
 10003  0035E4  0E80               	movlw	128
 10004  0035E6  EC58  F02A         	call	_lcdInst
 10005                           
 10006                           ;main.c: 529: printf("ERR: BAD BTLCNT");
 10007  0035EA  0ED8               	movlw	low STR_15
 10008  0035EC  0100               	movlb	0	; () banked
 10009  0035EE  6F9C               	movwf	printf@f& (0+255),b
 10010  0035F0  0EFF               	movlw	high STR_15
 10011  0035F2  0100               	movlb	0	; () banked
 10012  0035F4  6F9D               	movwf	(printf@f+1)& (0+255),b
 10013  0035F6  EC1C  F008         	call	_printf	;wreg free
 10014  0035FA  D7F4               	goto	l8530
 10015  0035FC                     l8536:
 10016  0035FC  C178  F090         	movff	_bottle_count_disp+6,___awmod@dividend
 10017  003600  C179  F091         	movff	_bottle_count_disp+7,___awmod@dividend+1
 10018  003604  0E00               	movlw	0
 10019  003606  0100               	movlb	0	; () banked
 10020  003608  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10021  00360A  0E03               	movlw	3
 10022  00360C  6F92               	movwf	___awmod@divisor& (0+255),b
 10023  00360E  EC53  F024         	call	___awmod	;wreg free
 10024                           
 10025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10026                           ; Switch size 1, requested type "space"
 10027                           ; Number of cases is 1, Range of values is 0 to 0
 10028                           ; switch strategies available:
 10029                           ; Name         Instructions Cycles
 10030                           ; simple_byte            4     3 (average)
 10031                           ;	Chosen strategy is simple_byte
 10032  003612  0100               	movlb	0	; () banked
 10033  003614  5191               	movf	(?___awmod+1)& (0+255),w,b
 10034  003616  0A00               	xorlw	0	; case 0
 10035  003618  A4D8               	btfss	status,2,c
 10036  00361A  D7E4               	goto	l8530
 10037                           
 10038                           ; BSR set to: 0
 10039                           ; Switch size 1, requested type "space"
 10040                           ; Number of cases is 3, Range of values is 0 to 2
 10041                           ; switch strategies available:
 10042                           ; Name         Instructions Cycles
 10043                           ; simple_byte           10     6 (average)
 10044                           ;	Chosen strategy is simple_byte
 10045  00361C  0100               	movlb	0	; () banked
 10046  00361E  5190               	movf	?___awmod& (0+255),w,b
 10047  003620  0A00               	xorlw	0	; case 0
 10048  003622  B4D8               	btfsc	status,2,c
 10049  003624  D786               	goto	l8512
 10050  003626  0A01               	xorlw	1	; case 1
 10051  003628  B4D8               	btfsc	status,2,c
 10052  00362A  D79E               	goto	l8518
 10053  00362C  0A03               	xorlw	3	; case 2
 10054  00362E  B4D8               	btfsc	status,2,c
 10055  003630  D7BA               	goto	l8524
 10056  003632  D7D8               	goto	l8530
 10057  003634                     __end_of_bottle_count3:
 10058                           	opt stack 0
 10059                           tblptru	equ	0xFF8
 10060                           tblptrh	equ	0xFF7
 10061                           tblptrl	equ	0xFF6
 10062                           tablat	equ	0xFF5
 10063                           prodh	equ	0xFF4
 10064                           prodl	equ	0xFF3
 10065                           intcon	equ	0xFF2
 10066                           intcon2	equ	0xFF1
 10067                           intcon3	equ	0xFF0
 10068                           postinc0	equ	0xFEE
 10069                           wreg	equ	0xFE8
 10070                           postdec1	equ	0xFE5
 10071                           fsr1l	equ	0xFE1
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function _bottle_count2 *****************
 10080 ;; Defined at:
 10081 ;;		line 476 in file "main.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:   10
 10102 ;; This function calls:
 10103 ;;		___awmod
 10104 ;;		_lcdInst
 10105 ;;		_printf
 10106 ;; This function is called by:
 10107 ;;		_main
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text37
 10112  003634                     __ptext37:
 10113                           	opt stack 0
 10114  003634                     _bottle_count2:
 10115                           	opt stack 20
 10116                           
 10117                           ;main.c: 477: switch(bottle_count_disp[2] % 3){
 10118                           
 10119                           ;incstack = 0
 10120  003634  D065               	goto	l8504
 10121  003636                     l8480:
 10122                           
 10123                           ;main.c: 479: lcdInst(0b10000000);
 10124  003636  0E80               	movlw	128
 10125  003638  EC58  F02A         	call	_lcdInst
 10126                           
 10127                           ;main.c: 480: printf("BttlCnt Prev 2         ");
 10128  00363C  0EA4               	movlw	low STR_23
 10129  00363E  0100               	movlb	0	; () banked
 10130  003640  6F9C               	movwf	printf@f& (0+255),b
 10131  003642  0EFE               	movlw	high STR_23
 10132  003644  0100               	movlb	0	; () banked
 10133  003646  6F9D               	movwf	(printf@f+1)& (0+255),b
 10134  003648  EC1C  F008         	call	_printf	;wreg free
 10135                           
 10136                           ;main.c: 481: lcdInst(0b11000000);
 10137  00364C  0EC0               	movlw	192
 10138  00364E  EC58  F02A         	call	_lcdInst
 10139                           
 10140                           ;main.c: 482: printf("Total: %d            ", bottle_count_array[0]);
 10141  003652  0E30               	movlw	low STR_10
 10142  003654  0100               	movlb	0	; () banked
 10143  003656  6F9C               	movwf	printf@f& (0+255),b
 10144  003658  0EFF               	movlw	high STR_10
 10145  00365A  0100               	movlb	0	; () banked
 10146  00365C  6F9D               	movwf	(printf@f+1)& (0+255),b
 10147  00365E  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10148  003662  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10149  003666  EC1C  F008         	call	_printf	;wreg free
 10150                           
 10151                           ;main.c: 483: break;
 10152  00366A  0012               	return	
 10153  00366C                     l8486:
 10154                           
 10155                           ;main.c: 485: lcdInst(0b10000000);
 10156  00366C  0E80               	movlw	128
 10157  00366E  EC58  F02A         	call	_lcdInst
 10158                           
 10159                           ;main.c: 486: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10160  003672  0E94               	movlw	low STR_11
 10161  003674  0100               	movlb	0	; () banked
 10162  003676  6F9C               	movwf	printf@f& (0+255),b
 10163  003678  0EFF               	movlw	high STR_11
 10164  00367A  0100               	movlb	0	; () banked
 10165  00367C  6F9D               	movwf	(printf@f+1)& (0+255),b
 10166  00367E  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10167  003682  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10168  003686  EC1C  F008         	call	_printf	;wreg free
 10169                           
 10170                           ;main.c: 487: lcdInst(0b11000000);
 10171  00368A  0EC0               	movlw	192
 10172  00368C  EC58  F02A         	call	_lcdInst
 10173                           
 10174                           ;main.c: 488: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10175  003690  0EA5               	movlw	low STR_12
 10176  003692  0100               	movlb	0	; () banked
 10177  003694  6F9C               	movwf	printf@f& (0+255),b
 10178  003696  0EFF               	movlw	high STR_12
 10179  003698  0100               	movlb	0	; () banked
 10180  00369A  6F9D               	movwf	(printf@f+1)& (0+255),b
 10181  00369C  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10182  0036A0  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10183  0036A4  EC1C  F008         	call	_printf	;wreg free
 10184                           
 10185                           ;main.c: 489: break;
 10186  0036A8  0012               	return	
 10187  0036AA                     l8492:
 10188                           
 10189                           ;main.c: 491: lcdInst(0b10000000);
 10190  0036AA  0E80               	movlw	128
 10191  0036AC  EC58  F02A         	call	_lcdInst
 10192                           
 10193                           ;main.c: 492: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10194  0036B0  0EB6               	movlw	low STR_13
 10195  0036B2  0100               	movlb	0	; () banked
 10196  0036B4  6F9C               	movwf	printf@f& (0+255),b
 10197  0036B6  0EFF               	movlw	high STR_13
 10198  0036B8  0100               	movlb	0	; () banked
 10199  0036BA  6F9D               	movwf	(printf@f+1)& (0+255),b
 10200  0036BC  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10201  0036C0  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10202  0036C4  EC1C  F008         	call	_printf	;wreg free
 10203                           
 10204                           ;main.c: 493: lcdInst(0b11000000);
 10205  0036C8  0EC0               	movlw	192
 10206  0036CA  EC58  F02A         	call	_lcdInst
 10207                           
 10208                           ;main.c: 494: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10209  0036CE  0EC7               	movlw	low STR_14
 10210  0036D0  0100               	movlb	0	; () banked
 10211  0036D2  6F9C               	movwf	printf@f& (0+255),b
 10212  0036D4  0EFF               	movlw	high STR_14
 10213  0036D6  0100               	movlb	0	; () banked
 10214  0036D8  6F9D               	movwf	(printf@f+1)& (0+255),b
 10215  0036DA  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10216  0036DE  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10217  0036E2  EC1C  F008         	call	_printf	;wreg free
 10218                           
 10219                           ;main.c: 495: break;
 10220  0036E6  0012               	return	
 10221  0036E8                     l8498:
 10222                           
 10223                           ;main.c: 498: lcdInst(0b10000000);
 10224  0036E8  0E80               	movlw	128
 10225  0036EA  EC58  F02A         	call	_lcdInst
 10226                           
 10227                           ;main.c: 499: printf("ERR: BAD BTLCNT");
 10228  0036EE  0ED8               	movlw	low STR_15
 10229  0036F0  0100               	movlb	0	; () banked
 10230  0036F2  6F9C               	movwf	printf@f& (0+255),b
 10231  0036F4  0EFF               	movlw	high STR_15
 10232  0036F6  0100               	movlb	0	; () banked
 10233  0036F8  6F9D               	movwf	(printf@f+1)& (0+255),b
 10234  0036FA  EC1C  F008         	call	_printf	;wreg free
 10235  0036FE  D7F4               	goto	l8498
 10236  003700                     l8504:
 10237  003700  C176  F090         	movff	_bottle_count_disp+4,___awmod@dividend
 10238  003704  C177  F091         	movff	_bottle_count_disp+5,___awmod@dividend+1
 10239  003708  0E00               	movlw	0
 10240  00370A  0100               	movlb	0	; () banked
 10241  00370C  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10242  00370E  0E03               	movlw	3
 10243  003710  6F92               	movwf	___awmod@divisor& (0+255),b
 10244  003712  EC53  F024         	call	___awmod	;wreg free
 10245                           
 10246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10247                           ; Switch size 1, requested type "space"
 10248                           ; Number of cases is 1, Range of values is 0 to 0
 10249                           ; switch strategies available:
 10250                           ; Name         Instructions Cycles
 10251                           ; simple_byte            4     3 (average)
 10252                           ;	Chosen strategy is simple_byte
 10253  003716  0100               	movlb	0	; () banked
 10254  003718  5191               	movf	(?___awmod+1)& (0+255),w,b
 10255  00371A  0A00               	xorlw	0	; case 0
 10256  00371C  A4D8               	btfss	status,2,c
 10257  00371E  D7E4               	goto	l8498
 10258                           
 10259                           ; BSR set to: 0
 10260                           ; Switch size 1, requested type "space"
 10261                           ; Number of cases is 3, Range of values is 0 to 2
 10262                           ; switch strategies available:
 10263                           ; Name         Instructions Cycles
 10264                           ; simple_byte           10     6 (average)
 10265                           ;	Chosen strategy is simple_byte
 10266  003720  0100               	movlb	0	; () banked
 10267  003722  5190               	movf	?___awmod& (0+255),w,b
 10268  003724  0A00               	xorlw	0	; case 0
 10269  003726  B4D8               	btfsc	status,2,c
 10270  003728  D786               	goto	l8480
 10271  00372A  0A01               	xorlw	1	; case 1
 10272  00372C  B4D8               	btfsc	status,2,c
 10273  00372E  D79E               	goto	l8486
 10274  003730  0A03               	xorlw	3	; case 2
 10275  003732  B4D8               	btfsc	status,2,c
 10276  003734  D7BA               	goto	l8492
 10277  003736  D7D8               	goto	l8498
 10278  003738                     __end_of_bottle_count2:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           intcon3	equ	0xFF0
 10289                           postinc0	equ	0xFEE
 10290                           wreg	equ	0xFE8
 10291                           postdec1	equ	0xFE5
 10292                           fsr1l	equ	0xFE1
 10293                           indf2	equ	0xFDF
 10294                           postinc2	equ	0xFDE
 10295                           postdec2	equ	0xFDD
 10296                           fsr2h	equ	0xFDA
 10297                           fsr2l	equ	0xFD9
 10298                           status	equ	0xFD8
 10299                           
 10300 ;; *************** function _bottle_count1 *****************
 10301 ;; Defined at:
 10302 ;;		line 446 in file "main.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;		None
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;Total ram usage:        0 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:   10
 10323 ;; This function calls:
 10324 ;;		___awmod
 10325 ;;		_lcdInst
 10326 ;;		_printf
 10327 ;; This function is called by:
 10328 ;;		_main
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text38
 10333  003738                     __ptext38:
 10334                           	opt stack 0
 10335  003738                     _bottle_count1:
 10336                           	opt stack 20
 10337                           
 10338                           ;main.c: 447: switch(bottle_count_disp[1] % 3){
 10339                           
 10340                           ;incstack = 0
 10341  003738  D065               	goto	l8472
 10342  00373A                     l8448:
 10343                           
 10344                           ;main.c: 449: lcdInst(0b10000000);
 10345  00373A  0E80               	movlw	128
 10346  00373C  EC58  F02A         	call	_lcdInst
 10347                           
 10348                           ;main.c: 450: printf("BttlCnt Prev 1        ");
 10349  003740  0EEB               	movlw	low STR_16
 10350  003742  0100               	movlb	0	; () banked
 10351  003744  6F9C               	movwf	printf@f& (0+255),b
 10352  003746  0EFE               	movlw	high STR_16
 10353  003748  0100               	movlb	0	; () banked
 10354  00374A  6F9D               	movwf	(printf@f+1)& (0+255),b
 10355  00374C  EC1C  F008         	call	_printf	;wreg free
 10356                           
 10357                           ;main.c: 451: lcdInst(0b11000000);
 10358  003750  0EC0               	movlw	192
 10359  003752  EC58  F02A         	call	_lcdInst
 10360                           
 10361                           ;main.c: 452: printf("Total: %d           ", bottle_count_array[0]);
 10362  003756  0E5C               	movlw	low STR_17
 10363  003758  0100               	movlb	0	; () banked
 10364  00375A  6F9C               	movwf	printf@f& (0+255),b
 10365  00375C  0EFF               	movlw	high STR_17
 10366  00375E  0100               	movlb	0	; () banked
 10367  003760  6F9D               	movwf	(printf@f+1)& (0+255),b
 10368  003762  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10369  003766  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10370  00376A  EC1C  F008         	call	_printf	;wreg free
 10371                           
 10372                           ;main.c: 453: break;
 10373  00376E  0012               	return	
 10374  003770                     l8454:
 10375                           
 10376                           ;main.c: 455: lcdInst(0b10000000);
 10377  003770  0E80               	movlw	128
 10378  003772  EC58  F02A         	call	_lcdInst
 10379                           
 10380                           ;main.c: 456: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10381  003776  0E94               	movlw	low STR_11
 10382  003778  0100               	movlb	0	; () banked
 10383  00377A  6F9C               	movwf	printf@f& (0+255),b
 10384  00377C  0EFF               	movlw	high STR_11
 10385  00377E  0100               	movlb	0	; () banked
 10386  003780  6F9D               	movwf	(printf@f+1)& (0+255),b
 10387  003782  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10388  003786  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10389  00378A  EC1C  F008         	call	_printf	;wreg free
 10390                           
 10391                           ;main.c: 457: lcdInst(0b11000000);
 10392  00378E  0EC0               	movlw	192
 10393  003790  EC58  F02A         	call	_lcdInst
 10394                           
 10395                           ;main.c: 458: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10396  003794  0EA5               	movlw	low STR_12
 10397  003796  0100               	movlb	0	; () banked
 10398  003798  6F9C               	movwf	printf@f& (0+255),b
 10399  00379A  0EFF               	movlw	high STR_12
 10400  00379C  0100               	movlb	0	; () banked
 10401  00379E  6F9D               	movwf	(printf@f+1)& (0+255),b
 10402  0037A0  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10403  0037A4  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10404  0037A8  EC1C  F008         	call	_printf	;wreg free
 10405                           
 10406                           ;main.c: 459: break;
 10407  0037AC  0012               	return	
 10408  0037AE                     l8460:
 10409                           
 10410                           ;main.c: 461: lcdInst(0b10000000);
 10411  0037AE  0E80               	movlw	128
 10412  0037B0  EC58  F02A         	call	_lcdInst
 10413                           
 10414                           ;main.c: 462: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10415  0037B4  0EB6               	movlw	low STR_13
 10416  0037B6  0100               	movlb	0	; () banked
 10417  0037B8  6F9C               	movwf	printf@f& (0+255),b
 10418  0037BA  0EFF               	movlw	high STR_13
 10419  0037BC  0100               	movlb	0	; () banked
 10420  0037BE  6F9D               	movwf	(printf@f+1)& (0+255),b
 10421  0037C0  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10422  0037C4  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10423  0037C8  EC1C  F008         	call	_printf	;wreg free
 10424                           
 10425                           ;main.c: 463: lcdInst(0b11000000);
 10426  0037CC  0EC0               	movlw	192
 10427  0037CE  EC58  F02A         	call	_lcdInst
 10428                           
 10429                           ;main.c: 464: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10430  0037D2  0EC7               	movlw	low STR_14
 10431  0037D4  0100               	movlb	0	; () banked
 10432  0037D6  6F9C               	movwf	printf@f& (0+255),b
 10433  0037D8  0EFF               	movlw	high STR_14
 10434  0037DA  0100               	movlb	0	; () banked
 10435  0037DC  6F9D               	movwf	(printf@f+1)& (0+255),b
 10436  0037DE  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10437  0037E2  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10438  0037E6  EC1C  F008         	call	_printf	;wreg free
 10439                           
 10440                           ;main.c: 465: break;
 10441  0037EA  0012               	return	
 10442  0037EC                     l8466:
 10443                           
 10444                           ;main.c: 468: lcdInst(0b10000000);
 10445  0037EC  0E80               	movlw	128
 10446  0037EE  EC58  F02A         	call	_lcdInst
 10447                           
 10448                           ;main.c: 469: printf("ERR: BAD BTLCNT");
 10449  0037F2  0ED8               	movlw	low STR_15
 10450  0037F4  0100               	movlb	0	; () banked
 10451  0037F6  6F9C               	movwf	printf@f& (0+255),b
 10452  0037F8  0EFF               	movlw	high STR_15
 10453  0037FA  0100               	movlb	0	; () banked
 10454  0037FC  6F9D               	movwf	(printf@f+1)& (0+255),b
 10455  0037FE  EC1C  F008         	call	_printf	;wreg free
 10456  003802  D7F4               	goto	l8466
 10457  003804                     l8472:
 10458  003804  C174  F090         	movff	_bottle_count_disp+2,___awmod@dividend
 10459  003808  C175  F091         	movff	_bottle_count_disp+3,___awmod@dividend+1
 10460  00380C  0E00               	movlw	0
 10461  00380E  0100               	movlb	0	; () banked
 10462  003810  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10463  003812  0E03               	movlw	3
 10464  003814  6F92               	movwf	___awmod@divisor& (0+255),b
 10465  003816  EC53  F024         	call	___awmod	;wreg free
 10466                           
 10467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10468                           ; Switch size 1, requested type "space"
 10469                           ; Number of cases is 1, Range of values is 0 to 0
 10470                           ; switch strategies available:
 10471                           ; Name         Instructions Cycles
 10472                           ; simple_byte            4     3 (average)
 10473                           ;	Chosen strategy is simple_byte
 10474  00381A  0100               	movlb	0	; () banked
 10475  00381C  5191               	movf	(?___awmod+1)& (0+255),w,b
 10476  00381E  0A00               	xorlw	0	; case 0
 10477  003820  A4D8               	btfss	status,2,c
 10478  003822  D7E4               	goto	l8466
 10479                           
 10480                           ; BSR set to: 0
 10481                           ; Switch size 1, requested type "space"
 10482                           ; Number of cases is 3, Range of values is 0 to 2
 10483                           ; switch strategies available:
 10484                           ; Name         Instructions Cycles
 10485                           ; simple_byte           10     6 (average)
 10486                           ;	Chosen strategy is simple_byte
 10487  003824  0100               	movlb	0	; () banked
 10488  003826  5190               	movf	?___awmod& (0+255),w,b
 10489  003828  0A00               	xorlw	0	; case 0
 10490  00382A  B4D8               	btfsc	status,2,c
 10491  00382C  D786               	goto	l8448
 10492  00382E  0A01               	xorlw	1	; case 1
 10493  003830  B4D8               	btfsc	status,2,c
 10494  003832  D79E               	goto	l8454
 10495  003834  0A03               	xorlw	3	; case 2
 10496  003836  B4D8               	btfsc	status,2,c
 10497  003838  D7BA               	goto	l8460
 10498  00383A  D7D8               	goto	l8466
 10499  00383C                     __end_of_bottle_count1:
 10500                           	opt stack 0
 10501                           tblptru	equ	0xFF8
 10502                           tblptrh	equ	0xFF7
 10503                           tblptrl	equ	0xFF6
 10504                           tablat	equ	0xFF5
 10505                           prodh	equ	0xFF4
 10506                           prodl	equ	0xFF3
 10507                           intcon	equ	0xFF2
 10508                           intcon2	equ	0xFF1
 10509                           intcon3	equ	0xFF0
 10510                           postinc0	equ	0xFEE
 10511                           wreg	equ	0xFE8
 10512                           postdec1	equ	0xFE5
 10513                           fsr1l	equ	0xFE1
 10514                           indf2	equ	0xFDF
 10515                           postinc2	equ	0xFDE
 10516                           postdec2	equ	0xFDD
 10517                           fsr2h	equ	0xFDA
 10518                           fsr2l	equ	0xFD9
 10519                           status	equ	0xFD8
 10520                           
 10521 ;; *************** function _bottle_count *****************
 10522 ;; Defined at:
 10523 ;;		line 416 in file "main.c"
 10524 ;; Parameters:    Size  Location     Type
 10525 ;;		None
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;		None
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  1    wreg      void 
 10530 ;; Registers used:
 10531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;Total ram usage:        0 bytes
 10542 ;; Hardware stack levels used:    1
 10543 ;; Hardware stack levels required when called:   10
 10544 ;; This function calls:
 10545 ;;		___awmod
 10546 ;;		_lcdInst
 10547 ;;		_printf
 10548 ;; This function is called by:
 10549 ;;		_main
 10550 ;; This function uses a non-reentrant model
 10551 ;;
 10552                           
 10553                           	psect	text39
 10554  00383C                     __ptext39:
 10555                           	opt stack 0
 10556  00383C                     _bottle_count:
 10557                           	opt stack 20
 10558                           
 10559                           ;main.c: 417: switch(bottle_count_disp[0] % 3){
 10560                           
 10561                           ;incstack = 0
 10562  00383C  D065               	goto	l8440
 10563  00383E                     l8416:
 10564                           
 10565                           ;main.c: 419: lcdInst(0b10000000);
 10566  00383E  0E80               	movlw	128
 10567  003840  EC58  F02A         	call	_lcdInst
 10568                           
 10569                           ;main.c: 420: printf("Bottle Count         ");
 10570  003844  0E46               	movlw	low STR_9
 10571  003846  0100               	movlb	0	; () banked
 10572  003848  6F9C               	movwf	printf@f& (0+255),b
 10573  00384A  0EFF               	movlw	high STR_9
 10574  00384C  0100               	movlb	0	; () banked
 10575  00384E  6F9D               	movwf	(printf@f+1)& (0+255),b
 10576  003850  EC1C  F008         	call	_printf	;wreg free
 10577                           
 10578                           ;main.c: 421: lcdInst(0b11000000);
 10579  003854  0EC0               	movlw	192
 10580  003856  EC58  F02A         	call	_lcdInst
 10581                           
 10582                           ;main.c: 422: printf("Total: %d            ", bottle_count_array[0]);
 10583  00385A  0E30               	movlw	low STR_10
 10584  00385C  0100               	movlb	0	; () banked
 10585  00385E  6F9C               	movwf	printf@f& (0+255),b
 10586  003860  0EFF               	movlw	high STR_10
 10587  003862  0100               	movlb	0	; () banked
 10588  003864  6F9D               	movwf	(printf@f+1)& (0+255),b
 10589  003866  C0DF  F09E         	movff	_bottle_count_array,?_printf+2
 10590  00386A  C0E0  F09F         	movff	_bottle_count_array+1,?_printf+3
 10591  00386E  EC1C  F008         	call	_printf	;wreg free
 10592                           
 10593                           ;main.c: 423: break;
 10594  003872  0012               	return	
 10595  003874                     l8422:
 10596                           
 10597                           ;main.c: 425: lcdInst(0b10000000);
 10598  003874  0E80               	movlw	128
 10599  003876  EC58  F02A         	call	_lcdInst
 10600                           
 10601                           ;main.c: 426: printf("YOP W/ CAP: %d  ", bottle_count_array[1]);
 10602  00387A  0E94               	movlw	low STR_11
 10603  00387C  0100               	movlb	0	; () banked
 10604  00387E  6F9C               	movwf	printf@f& (0+255),b
 10605  003880  0EFF               	movlw	high STR_11
 10606  003882  0100               	movlb	0	; () banked
 10607  003884  6F9D               	movwf	(printf@f+1)& (0+255),b
 10608  003886  C0E1  F09E         	movff	_bottle_count_array+2,?_printf+2
 10609  00388A  C0E2  F09F         	movff	_bottle_count_array+3,?_printf+3
 10610  00388E  EC1C  F008         	call	_printf	;wreg free
 10611                           
 10612                           ;main.c: 427: lcdInst(0b11000000);
 10613  003892  0EC0               	movlw	192
 10614  003894  EC58  F02A         	call	_lcdInst
 10615                           
 10616                           ;main.c: 428: printf("YOP NO CAP: %d  ", bottle_count_array[2]);
 10617  003898  0EA5               	movlw	low STR_12
 10618  00389A  0100               	movlb	0	; () banked
 10619  00389C  6F9C               	movwf	printf@f& (0+255),b
 10620  00389E  0EFF               	movlw	high STR_12
 10621  0038A0  0100               	movlb	0	; () banked
 10622  0038A2  6F9D               	movwf	(printf@f+1)& (0+255),b
 10623  0038A4  C0E3  F09E         	movff	_bottle_count_array+4,?_printf+2
 10624  0038A8  C0E4  F09F         	movff	_bottle_count_array+5,?_printf+3
 10625  0038AC  EC1C  F008         	call	_printf	;wreg free
 10626                           
 10627                           ;main.c: 429: break;
 10628  0038B0  0012               	return	
 10629  0038B2                     l8428:
 10630                           
 10631                           ;main.c: 431: lcdInst(0b10000000);
 10632  0038B2  0E80               	movlw	128
 10633  0038B4  EC58  F02A         	call	_lcdInst
 10634                           
 10635                           ;main.c: 432: printf("ESKA W/ CAP: %d ", bottle_count_array[3]);
 10636  0038B8  0EB6               	movlw	low STR_13
 10637  0038BA  0100               	movlb	0	; () banked
 10638  0038BC  6F9C               	movwf	printf@f& (0+255),b
 10639  0038BE  0EFF               	movlw	high STR_13
 10640  0038C0  0100               	movlb	0	; () banked
 10641  0038C2  6F9D               	movwf	(printf@f+1)& (0+255),b
 10642  0038C4  C0E5  F09E         	movff	_bottle_count_array+6,?_printf+2
 10643  0038C8  C0E6  F09F         	movff	_bottle_count_array+7,?_printf+3
 10644  0038CC  EC1C  F008         	call	_printf	;wreg free
 10645                           
 10646                           ;main.c: 433: lcdInst(0b11000000);
 10647  0038D0  0EC0               	movlw	192
 10648  0038D2  EC58  F02A         	call	_lcdInst
 10649                           
 10650                           ;main.c: 434: printf("ESKA NO CAP: %d ", bottle_count_array[4]);
 10651  0038D6  0EC7               	movlw	low STR_14
 10652  0038D8  0100               	movlb	0	; () banked
 10653  0038DA  6F9C               	movwf	printf@f& (0+255),b
 10654  0038DC  0EFF               	movlw	high STR_14
 10655  0038DE  0100               	movlb	0	; () banked
 10656  0038E0  6F9D               	movwf	(printf@f+1)& (0+255),b
 10657  0038E2  C0E7  F09E         	movff	_bottle_count_array+8,?_printf+2
 10658  0038E6  C0E8  F09F         	movff	_bottle_count_array+9,?_printf+3
 10659  0038EA  EC1C  F008         	call	_printf	;wreg free
 10660                           
 10661                           ;main.c: 435: break;
 10662  0038EE  0012               	return	
 10663  0038F0                     l8434:
 10664                           
 10665                           ;main.c: 438: lcdInst(0b10000000);
 10666  0038F0  0E80               	movlw	128
 10667  0038F2  EC58  F02A         	call	_lcdInst
 10668                           
 10669                           ;main.c: 439: printf("ERR: BAD BTLCNT");
 10670  0038F6  0ED8               	movlw	low STR_15
 10671  0038F8  0100               	movlb	0	; () banked
 10672  0038FA  6F9C               	movwf	printf@f& (0+255),b
 10673  0038FC  0EFF               	movlw	high STR_15
 10674  0038FE  0100               	movlb	0	; () banked
 10675  003900  6F9D               	movwf	(printf@f+1)& (0+255),b
 10676  003902  EC1C  F008         	call	_printf	;wreg free
 10677  003906  D7F4               	goto	l8434
 10678  003908                     l8440:
 10679  003908  C172  F090         	movff	_bottle_count_disp,___awmod@dividend
 10680  00390C  C173  F091         	movff	_bottle_count_disp+1,___awmod@dividend+1
 10681  003910  0E00               	movlw	0
 10682  003912  0100               	movlb	0	; () banked
 10683  003914  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
 10684  003916  0E03               	movlw	3
 10685  003918  6F92               	movwf	___awmod@divisor& (0+255),b
 10686  00391A  EC53  F024         	call	___awmod	;wreg free
 10687                           
 10688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10689                           ; Switch size 1, requested type "space"
 10690                           ; Number of cases is 1, Range of values is 0 to 0
 10691                           ; switch strategies available:
 10692                           ; Name         Instructions Cycles
 10693                           ; simple_byte            4     3 (average)
 10694                           ;	Chosen strategy is simple_byte
 10695  00391E  0100               	movlb	0	; () banked
 10696  003920  5191               	movf	(?___awmod+1)& (0+255),w,b
 10697  003922  0A00               	xorlw	0	; case 0
 10698  003924  A4D8               	btfss	status,2,c
 10699  003926  D7E4               	goto	l8434
 10700                           
 10701                           ; BSR set to: 0
 10702                           ; Switch size 1, requested type "space"
 10703                           ; Number of cases is 3, Range of values is 0 to 2
 10704                           ; switch strategies available:
 10705                           ; Name         Instructions Cycles
 10706                           ; simple_byte           10     6 (average)
 10707                           ;	Chosen strategy is simple_byte
 10708  003928  0100               	movlb	0	; () banked
 10709  00392A  5190               	movf	?___awmod& (0+255),w,b
 10710  00392C  0A00               	xorlw	0	; case 0
 10711  00392E  B4D8               	btfsc	status,2,c
 10712  003930  D786               	goto	l8416
 10713  003932  0A01               	xorlw	1	; case 1
 10714  003934  B4D8               	btfsc	status,2,c
 10715  003936  D79E               	goto	l8422
 10716  003938  0A03               	xorlw	3	; case 2
 10717  00393A  B4D8               	btfsc	status,2,c
 10718  00393C  D7BA               	goto	l8428
 10719  00393E  D7D8               	goto	l8434
 10720  003940                     __end_of_bottle_count:
 10721                           	opt stack 0
 10722                           tblptru	equ	0xFF8
 10723                           tblptrh	equ	0xFF7
 10724                           tblptrl	equ	0xFF6
 10725                           tablat	equ	0xFF5
 10726                           prodh	equ	0xFF4
 10727                           prodl	equ	0xFF3
 10728                           intcon	equ	0xFF2
 10729                           intcon2	equ	0xFF1
 10730                           intcon3	equ	0xFF0
 10731                           postinc0	equ	0xFEE
 10732                           wreg	equ	0xFE8
 10733                           postdec1	equ	0xFE5
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8
 10741                           
 10742 ;; *************** function _printf *****************
 10743 ;; Defined at:
 10744 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;  f               2   28[BANK0 ] PTR const unsigned char 
 10747 ;;		 -> STR_47(25), STR_46(26), STR_45(24), STR_44(26), 
 10748 ;;		 -> STR_43(16), STR_42(17), STR_41(17), STR_40(17), 
 10749 ;;		 -> STR_39(17), STR_38(21), STR_37(25), STR_36(16), 
 10750 ;;		 -> STR_35(17), STR_34(17), STR_33(17), STR_32(17), 
 10751 ;;		 -> STR_31(22), STR_30(24), STR_29(16), STR_28(17), 
 10752 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(22), 
 10753 ;;		 -> STR_23(24), STR_22(16), STR_21(17), STR_20(17), 
 10754 ;;		 -> STR_19(17), STR_18(17), STR_17(21), STR_16(23), 
 10755 ;;		 -> STR_15(16), STR_14(17), STR_13(17), STR_12(17), 
 10756 ;;		 -> STR_11(17), STR_10(22), STR_9(22), STR_8(23), 
 10757 ;;		 -> STR_7(23), STR_6(9), STR_5(18), STR_4(13), 
 10758 ;;		 -> STR_3(24), STR_2(24), STR_1(23), 
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;  idx             1   40[BANK0 ] unsigned char 
 10761 ;;  tmpval          4    0        struct .
 10762 ;;  cp              3    0        PTR const unsigned char 
 10763 ;;  width           2   47[BANK0 ] int 
 10764 ;;  val             2   44[BANK0 ] unsigned int 
 10765 ;;  ap              2   41[BANK0 ] PTR void [1]
 10766 ;;		 -> ?i2_printf(2), ?_printf(2), 
 10767 ;;  len             2    0        unsigned int 
 10768 ;;  c               1   49[BANK0 ] char 
 10769 ;;  flag            1   46[BANK0 ] unsigned char 
 10770 ;;  prec            1   43[BANK0 ] char 
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  2   28[BANK0 ] int 
 10773 ;; Registers used:
 10774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10780 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;Total ram usage:       22 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    9
 10787 ;; This function calls:
 10788 ;;		___lwdiv
 10789 ;;		___lwmod
 10790 ;;		___wmul
 10791 ;;		_isdigit
 10792 ;;		_putch
 10793 ;; This function is called by:
 10794 ;;		_standby
 10795 ;;		_date_time
 10796 ;;		_bottle_count
 10797 ;;		_bottle_count1
 10798 ;;		_bottle_count2
 10799 ;;		_bottle_count3
 10800 ;;		_bottle_count4
 10801 ;;		_bottle_time
 10802 ;;		_operationend
 10803 ;;		_emergencystop
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text40
 10808  001038                     __ptext40:
 10809                           	opt stack 0
 10810  001038                     _printf:
 10811                           	opt stack 20
 10812                           
 10813                           ;doprnt.c: 466: va_list ap;
 10814                           ;doprnt.c: 499: signed char c;
 10815                           ;doprnt.c: 501: int width;
 10816                           ;doprnt.c: 506: signed char prec;
 10817                           ;doprnt.c: 508: unsigned char flag;
 10818                           ;doprnt.c: 523: union {
 10819                           ;doprnt.c: 524: unsigned long vd;
 10820                           ;doprnt.c: 525: double integ;
 10821                           ;doprnt.c: 526: } tmpval;
 10822                           ;doprnt.c: 528: unsigned int val;
 10823                           ;doprnt.c: 529: unsigned len;
 10824                           ;doprnt.c: 530: const char * cp;
 10825                           ;doprnt.c: 533: *ap = __va_start();
 10826                           
 10827                           ;incstack = 0
 10828  001038  0E9E               	movlw	low (?_printf+2)
 10829  00103A  0100               	movlb	0	; () banked
 10830  00103C  6FA9               	movwf	printf@ap& (0+255),b
 10831  00103E  0E00               	movlw	high (?_printf+2)
 10832  001040  0100               	movlb	0	; () banked
 10833  001042  6FAA               	movwf	(printf@ap+1)& (0+255),b
 10834                           
 10835                           ;doprnt.c: 536: while(c = *f++) {
 10836  001044  D1D5               	goto	l8112
 10837  001046                     l7982:
 10838                           
 10839                           ; BSR set to: 0
 10840                           ;doprnt.c: 538: if(c != '%')
 10841  001046  0E25               	movlw	37
 10842  001048  0100               	movlb	0	; () banked
 10843  00104A  19B1               	xorwf	printf@c& (0+255),w,b
 10844  00104C  B4D8               	btfsc	status,2,c
 10845  00104E  D005               	goto	l7986
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;doprnt.c: 540: {
 10849                           ;doprnt.c: 541: (putch(c) );
 10850  001050  0100               	movlb	0	; () banked
 10851  001052  51B1               	movf	printf@c& (0+255),w,b
 10852  001054  EC50  F02A         	call	_putch
 10853                           
 10854                           ;doprnt.c: 542: continue;
 10855  001058  D1CB               	goto	l8112
 10856  00105A                     l7986:
 10857                           
 10858                           ;doprnt.c: 543: }
 10859                           ;doprnt.c: 546: width = 0;
 10860  00105A  0E00               	movlw	0
 10861  00105C  0100               	movlb	0	; () banked
 10862  00105E  6FB0               	movwf	(printf@width+1)& (0+255),b
 10863  001060  0E00               	movlw	0
 10864  001062  6FAF               	movwf	printf@width& (0+255),b
 10865                           
 10866                           ;doprnt.c: 548: flag = 0;
 10867  001064  0E00               	movlw	0
 10868  001066  0100               	movlb	0	; () banked
 10869  001068  6FAE               	movwf	printf@flag& (0+255),b
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;doprnt.c: 551: switch(*f) {
 10873                           
 10874                           ;doprnt.c: 550: for(;;) {
 10875  00106A  D005               	goto	l7992
 10876  00106C                     l7988:
 10877                           
 10878                           ;doprnt.c: 580: flag |= 0x04;
 10879  00106C  0100               	movlb	0	; () banked
 10880  00106E  85AE               	bsf	printf@flag& (0+255),2,b
 10881                           
 10882                           ;doprnt.c: 581: f++;
 10883  001070  0100               	movlb	0	; () banked
 10884  001072  4B9C               	infsnz	printf@f& (0+255),f,b
 10885  001074  2B9D               	incf	(printf@f+1)& (0+255),f,b
 10886  001076                     l7992:
 10887  001076  C09C  FFF6         	movff	printf@f,tblptrl
 10888  00107A  C09D  FFF7         	movff	printf@f+1,tblptrh
 10889  00107E                     	if	0	;tblptru may be non-zero
 10890  00107E                     	endif
 10891  00107E                     	if	0	;tblptru may be non-zero
 10892  00107E                     	endif
 10893  00107E  0008               	tblrd		*
 10894  001080  50F5               	movf	tablat,w,c
 10895                           
 10896                           ; Switch size 1, requested type "space"
 10897                           ; Number of cases is 1, Range of values is 48 to 48
 10898                           ; switch strategies available:
 10899                           ; Name         Instructions Cycles
 10900                           ; simple_byte            4     3 (average)
 10901                           ;	Chosen strategy is simple_byte
 10902  001082  0A30               	xorlw	48	; case 48
 10903  001084  B4D8               	btfsc	status,2,c
 10904  001086  D7F2               	goto	l7988
 10905                           
 10906                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10907                           
 10908                           ;doprnt.c: 586: }
 10909                           
 10910                           ;doprnt.c: 585: break;
 10911  001088  C09C  FFF6         	movff	printf@f,tblptrl
 10912  00108C  C09D  FFF7         	movff	printf@f+1,tblptrh
 10913  001090                     	if	0	;tblptru may be non-zero
 10914  001090                     	endif
 10915  001090                     	if	0	;tblptru may be non-zero
 10916  001090                     	endif
 10917  001090  0008               	tblrd		*
 10918  001092  50F5               	movf	tablat,w,c
 10919  001094  EC86  F029         	call	_isdigit
 10920  001098  A0D8               	btfss	status,0,c
 10921  00109A  D048               	goto	l8012
 10922                           
 10923                           ;doprnt.c: 598: width = 0;
 10924  00109C  0E00               	movlw	0
 10925  00109E  0100               	movlb	0	; () banked
 10926  0010A0  6FB0               	movwf	(printf@width+1)& (0+255),b
 10927  0010A2  0E00               	movlw	0
 10928  0010A4  6FAF               	movwf	printf@width& (0+255),b
 10929  0010A6                     l7998:
 10930                           
 10931                           ;doprnt.c: 600: width *= 10;
 10932  0010A6  C0AF  F090         	movff	printf@width,___wmul@multiplier
 10933  0010AA  C0B0  F091         	movff	printf@width+1,___wmul@multiplier+1
 10934  0010AE  0E00               	movlw	0
 10935  0010B0  0100               	movlb	0	; () banked
 10936  0010B2  6F93               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10937  0010B4  0E0A               	movlw	10
 10938  0010B6  6F92               	movwf	___wmul@multiplicand& (0+255),b
 10939  0010B8  EC27  F029         	call	___wmul	;wreg free
 10940  0010BC  C090  F0AF         	movff	?___wmul,printf@width
 10941  0010C0  C091  F0B0         	movff	?___wmul+1,printf@width+1
 10942                           
 10943                           ;doprnt.c: 601: width += *f++ - '0';
 10944  0010C4  0ED0               	movlw	208
 10945  0010C6  0100               	movlb	0	; () banked
 10946  0010C8  6FA4               	movwf	??_printf& (0+255),b
 10947  0010CA  0EFF               	movlw	255
 10948  0010CC  0100               	movlb	0	; () banked
 10949  0010CE  6FA5               	movwf	(??_printf+1)& (0+255),b
 10950  0010D0  C09C  FFF6         	movff	printf@f,tblptrl
 10951  0010D4  C09D  FFF7         	movff	printf@f+1,tblptrh
 10952  0010D8                     	if	0	;tblptru may be non-zero
 10953  0010D8                     	endif
 10954  0010D8                     	if	0	;tblptru may be non-zero
 10955  0010D8                     	endif
 10956  0010D8  0008               	tblrd		*
 10957  0010DA  50F5               	movf	tablat,w,c
 10958  0010DC  0100               	movlb	0	; () banked
 10959  0010DE  6FA6               	movwf	(??_printf+2)& (0+255),b
 10960  0010E0  6BA7               	clrf	(??_printf+3)& (0+255),b
 10961  0010E2  0100               	movlb	0	; () banked
 10962  0010E4  51A4               	movf	??_printf& (0+255),w,b
 10963  0010E6  0100               	movlb	0	; () banked
 10964  0010E8  27A6               	addwf	(??_printf+2)& (0+255),f,b
 10965  0010EA  0100               	movlb	0	; () banked
 10966  0010EC  51A5               	movf	(??_printf+1)& (0+255),w,b
 10967  0010EE  0100               	movlb	0	; () banked
 10968  0010F0  23A7               	addwfc	(??_printf+3)& (0+255),f,b
 10969  0010F2  0100               	movlb	0	; () banked
 10970  0010F4  51A6               	movf	(??_printf+2)& (0+255),w,b
 10971  0010F6  0100               	movlb	0	; () banked
 10972  0010F8  27AF               	addwf	printf@width& (0+255),f,b
 10973  0010FA  0100               	movlb	0	; () banked
 10974  0010FC  51A7               	movf	(??_printf+3)& (0+255),w,b
 10975  0010FE  0100               	movlb	0	; () banked
 10976  001100  23B0               	addwfc	(printf@width+1)& (0+255),f,b
 10977                           
 10978                           ; BSR set to: 0
 10979  001102  0100               	movlb	0	; () banked
 10980  001104  4B9C               	infsnz	printf@f& (0+255),f,b
 10981  001106  2B9D               	incf	(printf@f+1)& (0+255),f,b
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10985  001108  C09C  FFF6         	movff	printf@f,tblptrl
 10986  00110C  C09D  FFF7         	movff	printf@f+1,tblptrh
 10987  001110                     	if	0	;tblptru may be non-zero
 10988  001110                     	endif
 10989  001110                     	if	0	;tblptru may be non-zero
 10990  001110                     	endif
 10991  001110  0008               	tblrd		*
 10992  001112  50F5               	movf	tablat,w,c
 10993  001114  EC86  F029         	call	_isdigit
 10994  001118  A0D8               	btfss	status,0,c
 10995  00111A  D008               	goto	l8012
 10996  00111C  D7C4               	goto	l7998
 10997  00111E                     l8006:
 10998                           
 10999                           ;doprnt.c: 721: flag |= 0x80;
 11000  00111E  0100               	movlb	0	; () banked
 11001  001120  8FAE               	bsf	printf@flag& (0+255),7,b
 11002                           
 11003                           ;doprnt.c: 723: break;
 11004  001122  D020               	goto	l8014
 11005  001124                     l8008:
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;doprnt.c: 818: flag |= 0xC0;
 11009  001124  0EC0               	movlw	192
 11010  001126  0100               	movlb	0	; () banked
 11011  001128  13AE               	iorwf	printf@flag& (0+255),f,b
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;doprnt.c: 822: }
 11015                           
 11016                           ;doprnt.c: 819: break;
 11017  00112A  D01C               	goto	l8014
 11018  00112C                     l8012:
 11019  00112C  C09C  FFF6         	movff	printf@f,tblptrl
 11020  001130  C09D  FFF7         	movff	printf@f+1,tblptrh
 11021  001134  0100               	movlb	0	; () banked
 11022  001136  4B9C               	infsnz	printf@f& (0+255),f,b
 11023  001138  2B9D               	incf	(printf@f+1)& (0+255),f,b
 11024  00113A                     	if	0	;tblptru may be non-zero
 11025  00113A                     	endif
 11026  00113A                     	if	0	;tblptru may be non-zero
 11027  00113A                     	endif
 11028  00113A  0008               	tblrd		*
 11029  00113C  CFF5 F0B1          	movff	tablat,printf@c
 11030  001140  0100               	movlb	0	; () banked
 11031  001142  51B1               	movf	printf@c& (0+255),w,b
 11032                           
 11033                           ; Switch size 1, requested type "space"
 11034                           ; Number of cases is 5, Range of values is 0 to 120
 11035                           ; switch strategies available:
 11036                           ; Name         Instructions Cycles
 11037                           ; simple_byte           16     9 (average)
 11038                           ;	Chosen strategy is simple_byte
 11039  001144  0A00               	xorlw	0	; case 0
 11040  001146  B4D8               	btfsc	status,2,c
 11041  001148  0012               	return	
 11042  00114A  0A64               	xorlw	100	; case 100
 11043  00114C  B4D8               	btfsc	status,2,c
 11044  00114E  D00A               	goto	l8014
 11045  001150  0A0D               	xorlw	13	; case 105
 11046  001152  B4D8               	btfsc	status,2,c
 11047  001154  D007               	goto	l8014
 11048  001156  0A1C               	xorlw	28	; case 117
 11049  001158  B4D8               	btfsc	status,2,c
 11050  00115A  D7E4               	goto	l8008
 11051  00115C  0A0D               	xorlw	13	; case 120
 11052  00115E  B4D8               	btfsc	status,2,c
 11053  001160  D7DE               	goto	l8006
 11054  001162  D146               	goto	l8112
 11055  001164                     l8014:
 11056                           
 11057                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 11058  001164  C0AE  F0A4         	movff	printf@flag,??_printf
 11059  001168  0EC0               	movlw	192
 11060  00116A  0100               	movlb	0	; () banked
 11061  00116C  17A4               	andwf	??_printf& (0+255),f,b
 11062  00116E  A4D8               	btfss	status,2,c
 11063  001170  D019               	goto	l8026
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;doprnt.c: 1253: {
 11067                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11068  001172  C0A9  FFD9         	movff	printf@ap,fsr2l
 11069  001176  C0AA  FFDA         	movff	printf@ap+1,fsr2h
 11070  00117A  CFDE F0AC          	movff	postinc2,printf@val
 11071  00117E  CFDD F0AD          	movff	postdec2,printf@val+1
 11072                           
 11073                           ; BSR set to: 0
 11074  001182  0E02               	movlw	2
 11075  001184  0100               	movlb	0	; () banked
 11076  001186  27A9               	addwf	printf@ap& (0+255),f,b
 11077  001188  0E00               	movlw	0
 11078  00118A  23AA               	addwfc	(printf@ap+1)& (0+255),f,b
 11079                           
 11080                           ; BSR set to: 0
 11081                           ;doprnt.c: 1261: if((int)val < 0) {
 11082  00118C  0100               	movlb	0	; () banked
 11083  00118E  AFAD               	btfss	(printf@val+1)& (0+255),7,b
 11084  001190  D053               	goto	l8060
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;doprnt.c: 1262: flag |= 0x03;
 11088  001192  0E03               	movlw	3
 11089  001194  0100               	movlb	0	; () banked
 11090  001196  13AE               	iorwf	printf@flag& (0+255),f,b
 11091                           
 11092                           ; BSR set to: 0
 11093                           ;doprnt.c: 1263: val = -val;
 11094  001198  0100               	movlb	0	; () banked
 11095  00119A  6DAC               	negf	printf@val& (0+255),b
 11096  00119C  1FAD               	comf	(printf@val+1)& (0+255),f,b
 11097  00119E  B0D8               	btfsc	status,0,c
 11098  0011A0  2BAD               	incf	(printf@val+1)& (0+255),f,b
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;doprnt.c: 1264: }
 11102                           ;doprnt.c: 1266: }
 11103  0011A2  D04A               	goto	l8060
 11104  0011A4                     l8026:
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;doprnt.c: 1268: else
 11108                           ;doprnt.c: 1273: {
 11109                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11110  0011A4  C0A9  FFD9         	movff	printf@ap,fsr2l
 11111  0011A8  C0AA  FFDA         	movff	printf@ap+1,fsr2h
 11112  0011AC  CFDE F0AC          	movff	postinc2,printf@val
 11113  0011B0  CFDD F0AD          	movff	postdec2,printf@val+1
 11114                           
 11115                           ; BSR set to: 0
 11116  0011B4  0E02               	movlw	2
 11117  0011B6  0100               	movlb	0	; () banked
 11118  0011B8  27A9               	addwf	printf@ap& (0+255),f,b
 11119  0011BA  0E00               	movlw	0
 11120  0011BC  23AA               	addwfc	(printf@ap+1)& (0+255),f,b
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;doprnt.c: 1287: }
 11124                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 11125  0011BE  D03C               	goto	l8060
 11126  0011C0                     l8030:
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;doprnt.c: 1302: case 0xC0:
 11130                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11131  0011C0  0E01               	movlw	1
 11132  0011C2  0100               	movlb	0	; () banked
 11133  0011C4  6FB1               	movwf	printf@c& (0+255),b
 11134  0011C6                     l8032:
 11135                           
 11136                           ; BSR set to: 0
 11137  0011C6  0E05               	movlw	5
 11138  0011C8  0100               	movlb	0	; () banked
 11139  0011CA  19B1               	xorwf	printf@c& (0+255),w,b
 11140  0011CC  B4D8               	btfsc	status,2,c
 11141  0011CE  D040               	goto	l8062
 11142                           
 11143                           ; BSR set to: 0
 11144                           ;doprnt.c: 1306: if(val < dpowers[c])
 11145                           
 11146                           ; BSR set to: 0
 11147                           
 11148                           ; BSR set to: 0
 11149  0011D0  0100               	movlb	0	; () banked
 11150  0011D2  51B1               	movf	printf@c& (0+255),w,b
 11151  0011D4  0D02               	mullw	2
 11152  0011D6  0EA4               	movlw	low _dpowers
 11153  0011D8  24F3               	addwf	prodl,w,c
 11154  0011DA  6EF6               	movwf	tblptrl,c
 11155  0011DC  0EFD               	movlw	high _dpowers
 11156  0011DE  20F4               	addwfc	prodh,w,c
 11157  0011E0  6EF7               	movwf	tblptrh,c
 11158  0011E2                     	if	0	;There are less than 3 active tblptr bytes
 11159  0011E2                     	endif
 11160  0011E2  0009               	tblrd		*+
 11161  0011E4  50F5               	movf	tablat,w,c
 11162  0011E6  0100               	movlb	0	; () banked
 11163  0011E8  5DAC               	subwf	printf@val& (0+255),w,b
 11164  0011EA  0009               	tblrd		*+
 11165  0011EC  50F5               	movf	tablat,w,c
 11166  0011EE  0100               	movlb	0	; () banked
 11167  0011F0  59AD               	subwfb	(printf@val+1)& (0+255),w,b
 11168  0011F2  A0D8               	btfss	status,0,c
 11169  0011F4  D02D               	goto	l8062
 11170                           
 11171                           ; BSR set to: 0
 11172                           
 11173                           ; BSR set to: 0
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;doprnt.c: 1307: break;
 11177  0011F6  0100               	movlb	0	; () banked
 11178  0011F8  2BB1               	incf	printf@c& (0+255),f,b
 11179  0011FA  D7E5               	goto	l8032
 11180  0011FC                     l8044:
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11184  0011FC  0E01               	movlw	1
 11185  0011FE  0100               	movlb	0	; () banked
 11186  001200  6FB1               	movwf	printf@c& (0+255),b
 11187  001202                     l8046:
 11188                           
 11189                           ; BSR set to: 0
 11190  001202  0E04               	movlw	4
 11191  001204  0100               	movlb	0	; () banked
 11192  001206  19B1               	xorwf	printf@c& (0+255),w,b
 11193  001208  B4D8               	btfsc	status,2,c
 11194  00120A  D022               	goto	l8062
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11198                           
 11199                           ; BSR set to: 0
 11200                           
 11201                           ; BSR set to: 0
 11202  00120C  0100               	movlb	0	; () banked
 11203  00120E  51B1               	movf	printf@c& (0+255),w,b
 11204  001210  0D02               	mullw	2
 11205  001212  0EAE               	movlw	low _hexpowers
 11206  001214  24F3               	addwf	prodl,w,c
 11207  001216  6EF6               	movwf	tblptrl,c
 11208  001218  0EFD               	movlw	high _hexpowers
 11209  00121A  20F4               	addwfc	prodh,w,c
 11210  00121C  6EF7               	movwf	tblptrh,c
 11211  00121E                     	if	0	;There are less than 3 active tblptr bytes
 11212  00121E                     	endif
 11213  00121E  0009               	tblrd		*+
 11214  001220  50F5               	movf	tablat,w,c
 11215  001222  0100               	movlb	0	; () banked
 11216  001224  5DAC               	subwf	printf@val& (0+255),w,b
 11217  001226  0009               	tblrd		*+
 11218  001228  50F5               	movf	tablat,w,c
 11219  00122A  0100               	movlb	0	; () banked
 11220  00122C  59AD               	subwfb	(printf@val+1)& (0+255),w,b
 11221  00122E  A0D8               	btfss	status,0,c
 11222  001230  D00F               	goto	l8062
 11223                           
 11224                           ; BSR set to: 0
 11225                           
 11226                           ; BSR set to: 0
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;doprnt.c: 1318: break;
 11230  001232  0100               	movlb	0	; () banked
 11231  001234  2BB1               	incf	printf@c& (0+255),f,b
 11232  001236  D7E5               	goto	l8046
 11233  001238                     l8060:
 11234                           
 11235                           ; BSR set to: 0
 11236  001238  0100               	movlb	0	; () banked
 11237  00123A  51AE               	movf	printf@flag& (0+255),w,b
 11238  00123C  0BC0               	andlw	192
 11239                           
 11240                           ; Switch size 1, requested type "space"
 11241                           ; Number of cases is 3, Range of values is 0 to 192
 11242                           ; switch strategies available:
 11243                           ; Name         Instructions Cycles
 11244                           ; simple_byte           10     6 (average)
 11245                           ;	Chosen strategy is simple_byte
 11246  00123E  0A00               	xorlw	0	; case 0
 11247  001240  B4D8               	btfsc	status,2,c
 11248  001242  D7BE               	goto	l8030
 11249  001244  0A80               	xorlw	128	; case 128
 11250  001246  B4D8               	btfsc	status,2,c
 11251  001248  D7D9               	goto	l8044
 11252  00124A  0A40               	xorlw	64	; case 192
 11253  00124C  B4D8               	btfsc	status,2,c
 11254  00124E  D7B8               	goto	l8030
 11255  001250                     l8062:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11259  001250  0100               	movlb	0	; () banked
 11260  001252  51AF               	movf	printf@width& (0+255),w,b
 11261  001254  0100               	movlb	0	; () banked
 11262  001256  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11263  001258  B4D8               	btfsc	status,2,c
 11264  00125A  D00B               	goto	l8068
 11265                           
 11266                           ; BSR set to: 0
 11267  00125C  C0AE  F0A4         	movff	printf@flag,??_printf
 11268  001260  0E03               	movlw	3
 11269  001262  0100               	movlb	0	; () banked
 11270  001264  17A4               	andwf	??_printf& (0+255),f,b
 11271  001266  B4D8               	btfsc	status,2,c
 11272  001268  D004               	goto	l8068
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;doprnt.c: 1346: width--;
 11276  00126A  0100               	movlb	0	; () banked
 11277  00126C  07AF               	decf	printf@width& (0+255),f,b
 11278  00126E  A0D8               	btfss	status,0,c
 11279  001270  07B0               	decf	(printf@width+1)& (0+255),f,b
 11280  001272                     l8068:
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;doprnt.c: 1381: if(width > c)
 11284  001272  0E80               	movlw	128
 11285  001274  0100               	movlb	0	; () banked
 11286  001276  BFB1               	btfsc	printf@c& (0+255),7,b
 11287  001278  0E7F               	movlw	127
 11288  00127A  0100               	movlb	0	; () banked
 11289  00127C  6FA4               	movwf	??_printf& (0+255),b
 11290  00127E  0100               	movlb	0	; () banked
 11291  001280  51AF               	movf	printf@width& (0+255),w,b
 11292  001282  0100               	movlb	0	; () banked
 11293  001284  5DB1               	subwf	printf@c& (0+255),w,b
 11294  001286  0100               	movlb	0	; () banked
 11295  001288  51B0               	movf	(printf@width+1)& (0+255),w,b
 11296  00128A  0A80               	xorlw	128
 11297  00128C  0100               	movlb	0	; () banked
 11298  00128E  59A4               	subwfb	??_printf& (0+255),w,b
 11299  001290  B0D8               	btfsc	status,0,c
 11300  001292  D00B               	goto	l8072
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;doprnt.c: 1382: width -= c;
 11304  001294  0100               	movlb	0	; () banked
 11305  001296  51B1               	movf	printf@c& (0+255),w,b
 11306  001298  0100               	movlb	0	; () banked
 11307  00129A  5FAF               	subwf	printf@width& (0+255),f,b
 11308  00129C  0E00               	movlw	0
 11309  00129E  0100               	movlb	0	; () banked
 11310  0012A0  BFB1               	btfsc	printf@c& (0+255),7,b
 11311  0012A2  0EFF               	movlw	255
 11312  0012A4  0100               	movlb	0	; () banked
 11313  0012A6  5BB0               	subwfb	(printf@width+1)& (0+255),f,b
 11314  0012A8  D005               	goto	l8074
 11315  0012AA                     l8072:
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;doprnt.c: 1383: else
 11319                           ;doprnt.c: 1384: width = 0;
 11320  0012AA  0E00               	movlw	0
 11321  0012AC  0100               	movlb	0	; () banked
 11322  0012AE  6FB0               	movwf	(printf@width+1)& (0+255),b
 11323  0012B0  0E00               	movlw	0
 11324  0012B2  6FAF               	movwf	printf@width& (0+255),b
 11325  0012B4                     l8074:
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;doprnt.c: 1387: if(flag & 0x04) {
 11329  0012B4  0100               	movlb	0	; () banked
 11330  0012B6  A5AE               	btfss	printf@flag& (0+255),2,b
 11331  0012B8  D018               	goto	l8086
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;doprnt.c: 1392: if(flag & 0x03)
 11335  0012BA  C0AE  F0A4         	movff	printf@flag,??_printf
 11336  0012BE  0E03               	movlw	3
 11337  0012C0  0100               	movlb	0	; () banked
 11338  0012C2  17A4               	andwf	??_printf& (0+255),f,b
 11339  0012C4  B4D8               	btfsc	status,2,c
 11340  0012C6  D003               	goto	l8080
 11341                           
 11342                           ; BSR set to: 0
 11343                           ;doprnt.c: 1393: (putch('-') );
 11344  0012C8  0E2D               	movlw	45
 11345  0012CA  EC50  F02A         	call	_putch
 11346  0012CE                     l8080:
 11347                           
 11348                           ;doprnt.c: 1415: if(width)
 11349  0012CE  0100               	movlb	0	; () banked
 11350  0012D0  51AF               	movf	printf@width& (0+255),w,b
 11351  0012D2  0100               	movlb	0	; () banked
 11352  0012D4  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11353  0012D6  B4D8               	btfsc	status,2,c
 11354  0012D8  D025               	goto	l8096
 11355                           
 11356                           ; BSR set to: 0
 11357                           ;doprnt.c: 1417: (putch('0') );
 11358                           
 11359                           ; BSR set to: 0
 11360                           
 11361                           ;doprnt.c: 1416: do
 11362  0012DA  0E30               	movlw	48
 11363  0012DC  EC50  F02A         	call	_putch
 11364                           
 11365                           ;doprnt.c: 1418: while(--width);
 11366  0012E0  0100               	movlb	0	; () banked
 11367  0012E2  07AF               	decf	printf@width& (0+255),f,b
 11368  0012E4  A0D8               	btfss	status,0,c
 11369  0012E6  07B0               	decf	(printf@width+1)& (0+255),f,b
 11370  0012E8  D7F2               	goto	l8080
 11371  0012EA                     l8086:
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;doprnt.c: 1422: {
 11375                           ;doprnt.c: 1424: if(width
 11376                           ;doprnt.c: 1428: )
 11377  0012EA  0100               	movlb	0	; () banked
 11378  0012EC  51AF               	movf	printf@width& (0+255),w,b
 11379  0012EE  0100               	movlb	0	; () banked
 11380  0012F0  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11381  0012F2  B4D8               	btfsc	status,2,c
 11382  0012F4  D00D               	goto	l8092
 11383  0012F6                     l8088:
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;doprnt.c: 1430: (putch(' ') );
 11387  0012F6  0E20               	movlw	32
 11388  0012F8  EC50  F02A         	call	_putch
 11389                           
 11390                           ;doprnt.c: 1431: while(--width);
 11391  0012FC  0100               	movlb	0	; () banked
 11392  0012FE  07AF               	decf	printf@width& (0+255),f,b
 11393  001300  A0D8               	btfss	status,0,c
 11394  001302  07B0               	decf	(printf@width+1)& (0+255),f,b
 11395  001304  0100               	movlb	0	; () banked
 11396  001306  51AF               	movf	printf@width& (0+255),w,b
 11397  001308  0100               	movlb	0	; () banked
 11398  00130A  11B0               	iorwf	(printf@width+1)& (0+255),w,b
 11399  00130C  A4D8               	btfss	status,2,c
 11400  00130E  D7F3               	goto	l8088
 11401  001310                     l8092:
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;doprnt.c: 1438: if(flag & 0x03)
 11405  001310  C0AE  F0A4         	movff	printf@flag,??_printf
 11406  001314  0E03               	movlw	3
 11407  001316  0100               	movlb	0	; () banked
 11408  001318  17A4               	andwf	??_printf& (0+255),f,b
 11409  00131A  B4D8               	btfsc	status,2,c
 11410  00131C  D003               	goto	l8096
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;doprnt.c: 1439: (putch('-') );
 11414  00131E  0E2D               	movlw	45
 11415  001320  EC50  F02A         	call	_putch
 11416  001324                     l8096:
 11417                           
 11418                           ;doprnt.c: 1469: }
 11419                           ;doprnt.c: 1472: prec = c;
 11420  001324  C0B1  F0AB         	movff	printf@c,printf@prec
 11421                           
 11422                           ;doprnt.c: 1474: while(prec--) {
 11423  001328  D05D               	goto	l8110
 11424  00132A                     l8098:
 11425                           
 11426                           ;doprnt.c: 1486: case 0xC0:
 11427                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11428  00132A  0100               	movlb	0	; () banked
 11429  00132C  51AB               	movf	printf@prec& (0+255),w,b
 11430  00132E  0D02               	mullw	2
 11431  001330  0EA4               	movlw	low _dpowers
 11432  001332  24F3               	addwf	prodl,w,c
 11433  001334  6EF6               	movwf	tblptrl,c
 11434  001336  0EFD               	movlw	high _dpowers
 11435  001338  20F4               	addwfc	prodh,w,c
 11436  00133A  6EF7               	movwf	tblptrh,c
 11437  00133C                     	if	0	;There are less than 3 active tblptr bytes
 11438  00133C                     	endif
 11439  00133C  0009               	tblrd		*+
 11440  00133E  CFF5 F092          	movff	tablat,___lwdiv@divisor
 11441  001342  000A               	tblrd		*-
 11442  001344  CFF5 F093          	movff	tablat,___lwdiv@divisor+1
 11443  001348  C0AC  F090         	movff	printf@val,___lwdiv@dividend
 11444  00134C  C0AD  F091         	movff	printf@val+1,___lwdiv@dividend+1
 11445  001350  EC03  F026         	call	___lwdiv	;wreg free
 11446  001354  C090  F097         	movff	?___lwdiv,___lwmod@dividend
 11447  001358  C091  F098         	movff	?___lwdiv+1,___lwmod@dividend+1
 11448  00135C  0E00               	movlw	0
 11449  00135E  0100               	movlb	0	; () banked
 11450  001360  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
 11451  001362  0E0A               	movlw	10
 11452  001364  6F99               	movwf	___lwmod@divisor& (0+255),b
 11453  001366  ECEA  F026         	call	___lwmod	;wreg free
 11454  00136A  0100               	movlb	0	; () banked
 11455  00136C  5197               	movf	?___lwmod& (0+255),w,b
 11456  00136E  0F30               	addlw	48
 11457  001370  0100               	movlb	0	; () banked
 11458  001372  6FB1               	movwf	printf@c& (0+255),b
 11459                           
 11460                           ;doprnt.c: 1491: break;
 11461  001374  D033               	goto	l8108
 11462  001376                     l8100:
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;doprnt.c: 1499: {
 11466                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11467  001376  C0AC  F090         	movff	printf@val,___lwdiv@dividend
 11468  00137A  C0AD  F091         	movff	printf@val+1,___lwdiv@dividend+1
 11469  00137E  0100               	movlb	0	; () banked
 11470  001380  51AB               	movf	printf@prec& (0+255),w,b
 11471  001382  0D02               	mullw	2
 11472  001384  0EAE               	movlw	low _hexpowers
 11473  001386  24F3               	addwf	prodl,w,c
 11474  001388  6EF6               	movwf	tblptrl,c
 11475  00138A  0EFD               	movlw	high _hexpowers
 11476  00138C  20F4               	addwfc	prodh,w,c
 11477  00138E  6EF7               	movwf	tblptrh,c
 11478  001390                     	if	0	;There are less than 3 active tblptr bytes
 11479  001390                     	endif
 11480  001390  0009               	tblrd		*+
 11481  001392  CFF5 F092          	movff	tablat,___lwdiv@divisor
 11482  001396  000A               	tblrd		*-
 11483  001398  CFF5 F093          	movff	tablat,___lwdiv@divisor+1
 11484  00139C  EC03  F026         	call	___lwdiv	;wreg free
 11485  0013A0  0100               	movlb	0	; () banked
 11486  0013A2  5190               	movf	?___lwdiv& (0+255),w,b
 11487  0013A4  0B0F               	andlw	15
 11488  0013A6  0100               	movlb	0	; () banked
 11489  0013A8  6FA8               	movwf	printf@idx& (0+255),b
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 11493  0013AA  0100               	movlb	0	; () banked
 11494  0013AC  51A8               	movf	printf@idx& (0+255),w,b
 11495  0013AE  0D01               	mullw	1
 11496  0013B0  0E83               	movlw	low STR_48
 11497  0013B2  24F3               	addwf	prodl,w,c
 11498  0013B4  6EF6               	movwf	tblptrl,c
 11499  0013B6  0EFF               	movlw	high STR_48
 11500  0013B8  20F4               	addwfc	prodh,w,c
 11501  0013BA  6EF7               	movwf	tblptrh,c
 11502  0013BC                     	if	0	;There are less than 3 active tblptr bytes
 11503  0013BC                     	endif
 11504  0013BC  0008               	tblrd		*
 11505  0013BE  CFF5 F0B1          	movff	tablat,printf@c
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;doprnt.c: 1523: }
 11509                           
 11510                           ;doprnt.c: 1508: }
 11511                           ;doprnt.c: 1510: break;
 11512  0013C2  D00C               	goto	l8108
 11513  0013C4                     l8106:
 11514  0013C4  0100               	movlb	0	; () banked
 11515  0013C6  51AE               	movf	printf@flag& (0+255),w,b
 11516  0013C8  0BC0               	andlw	192
 11517                           
 11518                           ; Switch size 1, requested type "space"
 11519                           ; Number of cases is 3, Range of values is 0 to 192
 11520                           ; switch strategies available:
 11521                           ; Name         Instructions Cycles
 11522                           ; simple_byte           10     6 (average)
 11523                           ;	Chosen strategy is simple_byte
 11524  0013CA  0A00               	xorlw	0	; case 0
 11525  0013CC  B4D8               	btfsc	status,2,c
 11526  0013CE  D7AD               	goto	l8098
 11527  0013D0  0A80               	xorlw	128	; case 128
 11528  0013D2  B4D8               	btfsc	status,2,c
 11529  0013D4  D7D0               	goto	l8100
 11530  0013D6  0A40               	xorlw	64	; case 192
 11531  0013D8  B4D8               	btfsc	status,2,c
 11532  0013DA  D7A7               	goto	l8098
 11533  0013DC                     l8108:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;doprnt.c: 1524: (putch(c) );
 11537  0013DC  0100               	movlb	0	; () banked
 11538  0013DE  51B1               	movf	printf@c& (0+255),w,b
 11539  0013E0  EC50  F02A         	call	_putch
 11540  0013E4                     l8110:
 11541  0013E4  0100               	movlb	0	; () banked
 11542  0013E6  07AB               	decf	printf@prec& (0+255),f,b
 11543  0013E8  0100               	movlb	0	; () banked
 11544  0013EA  29AB               	incf	printf@prec& (0+255),w,b
 11545  0013EC  A4D8               	btfss	status,2,c
 11546  0013EE  D7EA               	goto	l8106
 11547  0013F0                     l8112:
 11548  0013F0  C09C  FFF6         	movff	printf@f,tblptrl
 11549  0013F4  C09D  FFF7         	movff	printf@f+1,tblptrh
 11550  0013F8  0100               	movlb	0	; () banked
 11551  0013FA  4B9C               	infsnz	printf@f& (0+255),f,b
 11552  0013FC  2B9D               	incf	(printf@f+1)& (0+255),f,b
 11553  0013FE                     	if	0	;tblptru may be non-zero
 11554  0013FE                     	endif
 11555  0013FE                     	if	0	;tblptru may be non-zero
 11556  0013FE                     	endif
 11557  0013FE  0008               	tblrd		*
 11558  001400  CFF5 F0B1          	movff	tablat,printf@c
 11559  001404  0100               	movlb	0	; () banked
 11560  001406  51B1               	movf	printf@c& (0+255),w,b
 11561  001408  B4D8               	btfsc	status,2,c
 11562  00140A  0012               	return	
 11563  00140C  D61C               	goto	l7982
 11564  00140E                     __end_of_printf:
 11565                           	opt stack 0
 11566                           tblptru	equ	0xFF8
 11567                           tblptrh	equ	0xFF7
 11568                           tblptrl	equ	0xFF6
 11569                           tablat	equ	0xFF5
 11570                           prodh	equ	0xFF4
 11571                           prodl	equ	0xFF3
 11572                           intcon	equ	0xFF2
 11573                           intcon2	equ	0xFF1
 11574                           intcon3	equ	0xFF0
 11575                           postinc0	equ	0xFEE
 11576                           wreg	equ	0xFE8
 11577                           postdec1	equ	0xFE5
 11578                           fsr1l	equ	0xFE1
 11579                           indf2	equ	0xFDF
 11580                           postinc2	equ	0xFDE
 11581                           postdec2	equ	0xFDD
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _putch *****************
 11587 ;; Defined at:
 11588 ;;		line 31 in file "lcd.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  data            1    wreg     unsigned char 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  data            1   18[BANK0 ] unsigned char 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;Total ram usage:        1 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    8
 11609 ;; This function calls:
 11610 ;;		_lcdNibble
 11611 ;; This function is called by:
 11612 ;;		_printf
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text41
 11617  0054A0                     __ptext41:
 11618                           	opt stack 0
 11619  0054A0                     _putch:
 11620                           	opt stack 20
 11621                           
 11622                           ;incstack = 0
 11623                           ;putch@data stored from wreg
 11624  0054A0  0100               	movlb	0	; () banked
 11625  0054A2  6F92               	movwf	putch@data& (0+255),b
 11626                           
 11627                           ;lcd.c: 32: LATDbits.LATD2 = 1;
 11628  0054A4  848C               	bsf	3980,2,c	;volatile
 11629                           
 11630                           ;lcd.c: 33: lcdNibble(data);
 11631  0054A6  0100               	movlb	0	; () banked
 11632  0054A8  5192               	movf	putch@data& (0+255),w,b
 11633  0054AA  EC1B  F027         	call	_lcdNibble
 11634  0054AE  0012               	return		;funcret
 11635  0054B0                     __end_of_putch:
 11636                           	opt stack 0
 11637                           tblptru	equ	0xFF8
 11638                           tblptrh	equ	0xFF7
 11639                           tblptrl	equ	0xFF6
 11640                           tablat	equ	0xFF5
 11641                           prodh	equ	0xFF4
 11642                           prodl	equ	0xFF3
 11643                           intcon	equ	0xFF2
 11644                           intcon2	equ	0xFF1
 11645                           intcon3	equ	0xFF0
 11646                           postinc0	equ	0xFEE
 11647                           wreg	equ	0xFE8
 11648                           postdec1	equ	0xFE5
 11649                           fsr1l	equ	0xFE1
 11650                           indf2	equ	0xFDF
 11651                           postinc2	equ	0xFDE
 11652                           postdec2	equ	0xFDD
 11653                           fsr2h	equ	0xFDA
 11654                           fsr2l	equ	0xFD9
 11655                           status	equ	0xFD8
 11656                           
 11657 ;; *************** function _isdigit *****************
 11658 ;; Defined at:
 11659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  c               1    wreg     unsigned char 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;  c               1   18[BANK0 ] unsigned char 
 11664 ;; Return value:  Size  Location     Type
 11665 ;;		None               void
 11666 ;; Registers used:
 11667 ;;		wreg, status,2, status,0
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;Total ram usage:        3 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:    7
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_printf
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text42
 11688  00530C                     __ptext42:
 11689                           	opt stack 0
 11690  00530C                     _isdigit:
 11691                           	opt stack 21
 11692                           
 11693                           ;incstack = 0
 11694                           ;isdigit@c stored from wreg
 11695  00530C  0100               	movlb	0	; () banked
 11696  00530E  6F92               	movwf	isdigit@c& (0+255),b
 11697  005310  0E00               	movlw	0
 11698  005312  0100               	movlb	0	; () banked
 11699  005314  6F91               	movwf	_isdigit$965& (0+255),b
 11700                           
 11701                           ; BSR set to: 0
 11702  005316  0E3A               	movlw	58
 11703  005318  0100               	movlb	0	; () banked
 11704  00531A  6192               	cpfslt	isdigit@c& (0+255),b
 11705  00531C  D007               	goto	l5360
 11706                           
 11707                           ; BSR set to: 0
 11708  00531E  0E2F               	movlw	47
 11709  005320  0100               	movlb	0	; () banked
 11710  005322  6592               	cpfsgt	isdigit@c& (0+255),b
 11711  005324  D003               	goto	l5360
 11712                           
 11713                           ; BSR set to: 0
 11714  005326  0E01               	movlw	1
 11715  005328  0100               	movlb	0	; () banked
 11716  00532A  6F91               	movwf	_isdigit$965& (0+255),b
 11717  00532C                     l5360:
 11718                           
 11719                           ; BSR set to: 0
 11720  00532C  C091  F090         	movff	_isdigit$965,??_isdigit
 11721  005330  0100               	movlb	0	; () banked
 11722  005332  3190               	rrcf	??_isdigit& (0+255),w,b
 11723  005334  0012               	return	
 11724  005336                     __end_of_isdigit:
 11725                           	opt stack 0
 11726                           tblptru	equ	0xFF8
 11727                           tblptrh	equ	0xFF7
 11728                           tblptrl	equ	0xFF6
 11729                           tablat	equ	0xFF5
 11730                           prodh	equ	0xFF4
 11731                           prodl	equ	0xFF3
 11732                           intcon	equ	0xFF2
 11733                           intcon2	equ	0xFF1
 11734                           intcon3	equ	0xFF0
 11735                           postinc0	equ	0xFEE
 11736                           wreg	equ	0xFE8
 11737                           postdec1	equ	0xFE5
 11738                           fsr1l	equ	0xFE1
 11739                           indf2	equ	0xFDF
 11740                           postinc2	equ	0xFDE
 11741                           postdec2	equ	0xFDD
 11742                           fsr2h	equ	0xFDA
 11743                           fsr2l	equ	0xFD9
 11744                           status	equ	0xFD8
 11745                           
 11746 ;; *************** function ___wmul *****************
 11747 ;; Defined at:
 11748 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  multiplier      2   16[BANK0 ] unsigned int 
 11751 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  product         2   20[BANK0 ] unsigned int 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  2   16[BANK0 ] unsigned int 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0, prodl, prodh
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11764 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;Total ram usage:        6 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    7
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_operation
 11774 ;;		_printf
 11775 ;;		_eval_poly
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text43
 11780  00524E                     __ptext43:
 11781                           	opt stack 0
 11782  00524E                     ___wmul:
 11783                           	opt stack 21
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;incstack = 0
 11787  00524E  0100               	movlb	0	; () banked
 11788  005250  5190               	movf	___wmul@multiplier& (0+255),w,b
 11789  005252  0100               	movlb	0	; () banked
 11790  005254  0392               	mulwf	___wmul@multiplicand& (0+255),b
 11791  005256  CFF3 F094          	movff	prodl,___wmul@product
 11792  00525A  CFF4 F095          	movff	prodh,___wmul@product+1
 11793  00525E  0100               	movlb	0	; () banked
 11794  005260  5190               	movf	___wmul@multiplier& (0+255),w,b
 11795  005262  0100               	movlb	0	; () banked
 11796  005264  0393               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11797  005266  50F3               	movf	prodl,w,c
 11798  005268  0100               	movlb	0	; () banked
 11799  00526A  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 11800  00526C  0100               	movlb	0	; () banked
 11801  00526E  5191               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11802  005270  0100               	movlb	0	; () banked
 11803  005272  0392               	mulwf	___wmul@multiplicand& (0+255),b
 11804  005274  50F3               	movf	prodl,w,c
 11805  005276  0100               	movlb	0	; () banked
 11806  005278  2795               	addwf	(___wmul@product+1)& (0+255),f,b
 11807                           
 11808                           ; BSR set to: 0
 11809  00527A  C094  F090         	movff	___wmul@product,?___wmul
 11810  00527E  C095  F091         	movff	___wmul@product+1,?___wmul+1
 11811  005282  0012               	return	
 11812  005284                     __end_of___wmul:
 11813                           	opt stack 0
 11814                           tblptru	equ	0xFF8
 11815                           tblptrh	equ	0xFF7
 11816                           tblptrl	equ	0xFF6
 11817                           tablat	equ	0xFF5
 11818                           prodh	equ	0xFF4
 11819                           prodl	equ	0xFF3
 11820                           intcon	equ	0xFF2
 11821                           intcon2	equ	0xFF1
 11822                           intcon3	equ	0xFF0
 11823                           postinc0	equ	0xFEE
 11824                           wreg	equ	0xFE8
 11825                           postdec1	equ	0xFE5
 11826                           fsr1l	equ	0xFE1
 11827                           indf2	equ	0xFDF
 11828                           postinc2	equ	0xFDE
 11829                           postdec2	equ	0xFDD
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function ___lwmod *****************
 11835 ;; Defined at:
 11836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  dividend        2   23[BANK0 ] unsigned int 
 11839 ;;  divisor         2   25[BANK0 ] unsigned int 
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;  counter         1   27[BANK0 ] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  2   23[BANK0 ] unsigned int 
 11844 ;; Registers used:
 11845 ;;		wreg, status,2, status,0
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11851 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;Total ram usage:        5 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:    7
 11858 ;; This function calls:
 11859 ;;		Nothing
 11860 ;; This function is called by:
 11861 ;;		_printf
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text44
 11866  004DD4                     __ptext44:
 11867                           	opt stack 0
 11868  004DD4                     ___lwmod:
 11869                           	opt stack 21
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;incstack = 0
 11873  004DD4  0100               	movlb	0	; () banked
 11874  004DD6  5199               	movf	___lwmod@divisor& (0+255),w,b
 11875  004DD8  0100               	movlb	0	; () banked
 11876  004DDA  119A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11877  004DDC  B4D8               	btfsc	status,2,c
 11878  004DDE  D026               	goto	l1092
 11879                           
 11880                           ; BSR set to: 0
 11881  004DE0  0E01               	movlw	1
 11882  004DE2  0100               	movlb	0	; () banked
 11883  004DE4  6F9B               	movwf	___lwmod@counter& (0+255),b
 11884  004DE6  D006               	goto	l5436
 11885  004DE8                     l5434:
 11886                           
 11887                           ; BSR set to: 0
 11888  004DE8  0100               	movlb	0	; () banked
 11889  004DEA  90D8               	bcf	status,0,c
 11890  004DEC  3799               	rlcf	___lwmod@divisor& (0+255),f,b
 11891  004DEE  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11892  004DF0  0100               	movlb	0	; () banked
 11893  004DF2  2B9B               	incf	___lwmod@counter& (0+255),f,b
 11894  004DF4                     l5436:
 11895                           
 11896                           ; BSR set to: 0
 11897  004DF4  0100               	movlb	0	; () banked
 11898  004DF6  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11899  004DF8  D7F7               	goto	l5434
 11900  004DFA                     l5438:
 11901                           
 11902                           ; BSR set to: 0
 11903  004DFA  0100               	movlb	0	; () banked
 11904  004DFC  5199               	movf	___lwmod@divisor& (0+255),w,b
 11905  004DFE  0100               	movlb	0	; () banked
 11906  004E00  5D97               	subwf	___lwmod@dividend& (0+255),w,b
 11907  004E02  0100               	movlb	0	; () banked
 11908  004E04  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11909  004E06  0100               	movlb	0	; () banked
 11910  004E08  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11911  004E0A  A0D8               	btfss	status,0,c
 11912  004E0C  D008               	goto	l5442
 11913                           
 11914                           ; BSR set to: 0
 11915  004E0E  0100               	movlb	0	; () banked
 11916  004E10  5199               	movf	___lwmod@divisor& (0+255),w,b
 11917  004E12  0100               	movlb	0	; () banked
 11918  004E14  5F97               	subwf	___lwmod@dividend& (0+255),f,b
 11919  004E16  0100               	movlb	0	; () banked
 11920  004E18  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11921  004E1A  0100               	movlb	0	; () banked
 11922  004E1C  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11923  004E1E                     l5442:
 11924                           
 11925                           ; BSR set to: 0
 11926  004E1E  0100               	movlb	0	; () banked
 11927  004E20  90D8               	bcf	status,0,c
 11928  004E22  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11929  004E24  3399               	rrcf	___lwmod@divisor& (0+255),f,b
 11930                           
 11931                           ; BSR set to: 0
 11932  004E26  0100               	movlb	0	; () banked
 11933  004E28  2F9B               	decfsz	___lwmod@counter& (0+255),f,b
 11934  004E2A  D7E7               	goto	l5438
 11935  004E2C                     l1092:
 11936                           
 11937                           ; BSR set to: 0
 11938  004E2C  C097  F097         	movff	___lwmod@dividend,?___lwmod
 11939  004E30  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
 11940                           
 11941                           ; BSR set to: 0
 11942  004E34  0012               	return		;funcret
 11943  004E36                     __end_of___lwmod:
 11944                           	opt stack 0
 11945                           tblptru	equ	0xFF8
 11946                           tblptrh	equ	0xFF7
 11947                           tblptrl	equ	0xFF6
 11948                           tablat	equ	0xFF5
 11949                           prodh	equ	0xFF4
 11950                           prodl	equ	0xFF3
 11951                           intcon	equ	0xFF2
 11952                           intcon2	equ	0xFF1
 11953                           intcon3	equ	0xFF0
 11954                           postinc0	equ	0xFEE
 11955                           wreg	equ	0xFE8
 11956                           postdec1	equ	0xFE5
 11957                           fsr1l	equ	0xFE1
 11958                           indf2	equ	0xFDF
 11959                           postinc2	equ	0xFDE
 11960                           postdec2	equ	0xFDD
 11961                           fsr2h	equ	0xFDA
 11962                           fsr2l	equ	0xFD9
 11963                           status	equ	0xFD8
 11964                           
 11965 ;; *************** function ___lwdiv *****************
 11966 ;; Defined at:
 11967 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
 11968 ;; Parameters:    Size  Location     Type
 11969 ;;  dividend        2   16[BANK0 ] unsigned int 
 11970 ;;  divisor         2   18[BANK0 ] unsigned int 
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;  quotient        2   20[BANK0 ] unsigned int 
 11973 ;;  counter         1   22[BANK0 ] unsigned char 
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  2   16[BANK0 ] unsigned int 
 11976 ;; Registers used:
 11977 ;;		wreg, status,2, status,0
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        7 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    7
 11990 ;; This function calls:
 11991 ;;		Nothing
 11992 ;; This function is called by:
 11993 ;;		_printf
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text45
 11998  004C06                     __ptext45:
 11999                           	opt stack 0
 12000  004C06                     ___lwdiv:
 12001                           	opt stack 21
 12002                           
 12003                           ; BSR set to: 0
 12004                           ;incstack = 0
 12005  004C06  0E00               	movlw	0
 12006  004C08  0100               	movlb	0	; () banked
 12007  004C0A  6F95               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12008  004C0C  0E00               	movlw	0
 12009  004C0E  6F94               	movwf	___lwdiv@quotient& (0+255),b
 12010                           
 12011                           ; BSR set to: 0
 12012  004C10  0100               	movlb	0	; () banked
 12013  004C12  5192               	movf	___lwdiv@divisor& (0+255),w,b
 12014  004C14  0100               	movlb	0	; () banked
 12015  004C16  1193               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12016  004C18  B4D8               	btfsc	status,2,c
 12017  004C1A  D02C               	goto	l1082
 12018                           
 12019                           ; BSR set to: 0
 12020  004C1C  0E01               	movlw	1
 12021  004C1E  0100               	movlb	0	; () banked
 12022  004C20  6F96               	movwf	___lwdiv@counter& (0+255),b
 12023  004C22  D006               	goto	l5416
 12024  004C24                     l5414:
 12025                           
 12026                           ; BSR set to: 0
 12027  004C24  0100               	movlb	0	; () banked
 12028  004C26  90D8               	bcf	status,0,c
 12029  004C28  3792               	rlcf	___lwdiv@divisor& (0+255),f,b
 12030  004C2A  3793               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12031  004C2C  0100               	movlb	0	; () banked
 12032  004C2E  2B96               	incf	___lwdiv@counter& (0+255),f,b
 12033  004C30                     l5416:
 12034                           
 12035                           ; BSR set to: 0
 12036  004C30  0100               	movlb	0	; () banked
 12037  004C32  AF93               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12038  004C34  D7F7               	goto	l5414
 12039  004C36                     l5418:
 12040                           
 12041                           ; BSR set to: 0
 12042  004C36  0100               	movlb	0	; () banked
 12043  004C38  90D8               	bcf	status,0,c
 12044  004C3A  3794               	rlcf	___lwdiv@quotient& (0+255),f,b
 12045  004C3C  3795               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12046                           
 12047                           ; BSR set to: 0
 12048  004C3E  0100               	movlb	0	; () banked
 12049  004C40  5192               	movf	___lwdiv@divisor& (0+255),w,b
 12050  004C42  0100               	movlb	0	; () banked
 12051  004C44  5D90               	subwf	___lwdiv@dividend& (0+255),w,b
 12052  004C46  0100               	movlb	0	; () banked
 12053  004C48  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12054  004C4A  0100               	movlb	0	; () banked
 12055  004C4C  5991               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12056  004C4E  A0D8               	btfss	status,0,c
 12057  004C50  D00A               	goto	l5426
 12058                           
 12059                           ; BSR set to: 0
 12060  004C52  0100               	movlb	0	; () banked
 12061  004C54  5192               	movf	___lwdiv@divisor& (0+255),w,b
 12062  004C56  0100               	movlb	0	; () banked
 12063  004C58  5F90               	subwf	___lwdiv@dividend& (0+255),f,b
 12064  004C5A  0100               	movlb	0	; () banked
 12065  004C5C  5193               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12066  004C5E  0100               	movlb	0	; () banked
 12067  004C60  5B91               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  004C62  0100               	movlb	0	; () banked
 12071  004C64  8194               	bsf	___lwdiv@quotient& (0+255),0,b
 12072  004C66                     l5426:
 12073                           
 12074                           ; BSR set to: 0
 12075  004C66  0100               	movlb	0	; () banked
 12076  004C68  90D8               	bcf	status,0,c
 12077  004C6A  3393               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12078  004C6C  3392               	rrcf	___lwdiv@divisor& (0+255),f,b
 12079                           
 12080                           ; BSR set to: 0
 12081  004C6E  0100               	movlb	0	; () banked
 12082  004C70  2F96               	decfsz	___lwdiv@counter& (0+255),f,b
 12083  004C72  D7E1               	goto	l5418
 12084  004C74                     l1082:
 12085                           
 12086                           ; BSR set to: 0
 12087  004C74  C094  F090         	movff	___lwdiv@quotient,?___lwdiv
 12088  004C78  C095  F091         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12089                           
 12090                           ; BSR set to: 0
 12091  004C7C  0012               	return		;funcret
 12092  004C7E                     __end_of___lwdiv:
 12093                           	opt stack 0
 12094                           tblptru	equ	0xFF8
 12095                           tblptrh	equ	0xFF7
 12096                           tblptrl	equ	0xFF6
 12097                           tablat	equ	0xFF5
 12098                           prodh	equ	0xFF4
 12099                           prodl	equ	0xFF3
 12100                           intcon	equ	0xFF2
 12101                           intcon2	equ	0xFF1
 12102                           intcon3	equ	0xFF0
 12103                           postinc0	equ	0xFEE
 12104                           wreg	equ	0xFE8
 12105                           postdec1	equ	0xFE5
 12106                           fsr1l	equ	0xFE1
 12107                           indf2	equ	0xFDF
 12108                           postinc2	equ	0xFDE
 12109                           postdec2	equ	0xFDD
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function _lcdInst *****************
 12115 ;; Defined at:
 12116 ;;		line 26 in file "lcd.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;  data            1    wreg     unsigned char 
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;  data            1   18[BANK0 ] unsigned char 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      void 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;Total ram usage:        1 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    8
 12137 ;; This function calls:
 12138 ;;		_lcdNibble
 12139 ;; This function is called by:
 12140 ;;		_initLCD
 12141 ;;		_standby
 12142 ;;		_date_time
 12143 ;;		_bottle_count
 12144 ;;		_bottle_count1
 12145 ;;		_bottle_count2
 12146 ;;		_bottle_count3
 12147 ;;		_bottle_count4
 12148 ;;		_bottle_time
 12149 ;;		_operation
 12150 ;;		_operationend
 12151 ;;		_emergencystop
 12152 ;; This function uses a non-reentrant model
 12153 ;;
 12154                           
 12155                           	psect	text46
 12156  0054B0                     __ptext46:
 12157                           	opt stack 0
 12158  0054B0                     _lcdInst:
 12159                           	opt stack 21
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;incstack = 0
 12163                           ;lcdInst@data stored from wreg
 12164  0054B0  0100               	movlb	0	; () banked
 12165  0054B2  6F92               	movwf	lcdInst@data& (0+255),b
 12166                           
 12167                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 12168  0054B4  948C               	bcf	3980,2,c	;volatile
 12169                           
 12170                           ;lcd.c: 28: lcdNibble(data);
 12171  0054B6  0100               	movlb	0	; () banked
 12172  0054B8  5192               	movf	lcdInst@data& (0+255),w,b
 12173  0054BA  EC1B  F027         	call	_lcdNibble
 12174  0054BE  0012               	return		;funcret
 12175  0054C0                     __end_of_lcdInst:
 12176                           	opt stack 0
 12177                           tblptru	equ	0xFF8
 12178                           tblptrh	equ	0xFF7
 12179                           tblptrl	equ	0xFF6
 12180                           tablat	equ	0xFF5
 12181                           prodh	equ	0xFF4
 12182                           prodl	equ	0xFF3
 12183                           intcon	equ	0xFF2
 12184                           intcon2	equ	0xFF1
 12185                           intcon3	equ	0xFF0
 12186                           postinc0	equ	0xFEE
 12187                           wreg	equ	0xFE8
 12188                           postdec1	equ	0xFE5
 12189                           fsr1l	equ	0xFE1
 12190                           indf2	equ	0xFDF
 12191                           postinc2	equ	0xFDE
 12192                           postdec2	equ	0xFDD
 12193                           fsr2h	equ	0xFDA
 12194                           fsr2l	equ	0xFD9
 12195                           status	equ	0xFD8
 12196                           
 12197 ;; *************** function _lcdNibble *****************
 12198 ;; Defined at:
 12199 ;;		line 36 in file "lcd.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  data            1    wreg     unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  data            1   17[BANK0 ] unsigned char 
 12204 ;;  temp            1   16[BANK0 ] unsigned char 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12217 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;Total ram usage:        2 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    7
 12221 ;; This function calls:
 12222 ;;		Nothing
 12223 ;; This function is called by:
 12224 ;;		_lcdInst
 12225 ;;		_putch
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           	psect	text47
 12230  004E36                     __ptext47:
 12231                           	opt stack 0
 12232  004E36                     _lcdNibble:
 12233                           	opt stack 20
 12234                           
 12235                           ;incstack = 0
 12236                           ;lcdNibble@data stored from wreg
 12237  004E36  0100               	movlb	0	; () banked
 12238  004E38  6F91               	movwf	lcdNibble@data& (0+255),b
 12239                           
 12240                           ;lcd.c: 38: char temp = data & 0xF0;
 12241  004E3A  0100               	movlb	0	; () banked
 12242  004E3C  5191               	movf	lcdNibble@data& (0+255),w,b
 12243  004E3E  0BF0               	andlw	240
 12244  004E40  0100               	movlb	0	; () banked
 12245  004E42  6F90               	movwf	lcdNibble@temp& (0+255),b
 12246                           
 12247                           ;lcd.c: 39: LATD = LATD & 0x0F;
 12248  004E44  508C               	movf	3980,w,c	;volatile
 12249  004E46  0B0F               	andlw	15
 12250  004E48  6E8C               	movwf	3980,c	;volatile
 12251                           
 12252                           ;lcd.c: 40: LATD = temp | LATD;
 12253  004E4A  0100               	movlb	0	; () banked
 12254  004E4C  5190               	movf	lcdNibble@temp& (0+255),w,b
 12255  004E4E  108C               	iorwf	3980,w,c	;volatile
 12256  004E50  6E8C               	movwf	3980,c	;volatile
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 12260  004E52  968C               	bcf	3980,3,c	;volatile
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12264  004E54  0E19               	movlw	25
 12265  004E56                     u8837:
 12266  004E56  2EE8               	decfsz	wreg,f,c
 12267  004E58  D7FE               	bra	u8837
 12268                           
 12269                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 12270  004E5A  868C               	bsf	3980,3,c	;volatile
 12271                           
 12272                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12273  004E5C  0E19               	movlw	25
 12274  004E5E                     u8847:
 12275  004E5E  2EE8               	decfsz	wreg,f,c
 12276  004E60  D7FE               	bra	u8847
 12277                           
 12278                           ;lcd.c: 47: data = data << 4;
 12279  004E62  0100               	movlb	0	; () banked
 12280  004E64  3991               	swapf	lcdNibble@data& (0+255),w,b
 12281  004E66  0BF0               	andlw	240
 12282  004E68  0100               	movlb	0	; () banked
 12283  004E6A  6F91               	movwf	lcdNibble@data& (0+255),b
 12284                           
 12285                           ;lcd.c: 49: temp = data & 0xF0;
 12286  004E6C  0100               	movlb	0	; () banked
 12287  004E6E  5191               	movf	lcdNibble@data& (0+255),w,b
 12288  004E70  0BF0               	andlw	240
 12289  004E72  0100               	movlb	0	; () banked
 12290  004E74  6F90               	movwf	lcdNibble@temp& (0+255),b
 12291                           
 12292                           ;lcd.c: 50: LATD = LATD & 0x0F;
 12293  004E76  508C               	movf	3980,w,c	;volatile
 12294  004E78  0B0F               	andlw	15
 12295  004E7A  6E8C               	movwf	3980,c	;volatile
 12296                           
 12297                           ;lcd.c: 51: LATD = temp | LATD;
 12298  004E7C  0100               	movlb	0	; () banked
 12299  004E7E  5190               	movf	lcdNibble@temp& (0+255),w,b
 12300  004E80  108C               	iorwf	3980,w,c	;volatile
 12301  004E82  6E8C               	movwf	3980,c	;volatile
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 12305  004E84  968C               	bcf	3980,3,c	;volatile
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12309  004E86  0E19               	movlw	25
 12310  004E88                     u8857:
 12311  004E88  2EE8               	decfsz	wreg,f,c
 12312  004E8A  D7FE               	bra	u8857
 12313                           
 12314                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 12315  004E8C  868C               	bsf	3980,3,c	;volatile
 12316                           
 12317                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
 12318  004E8E  0E19               	movlw	25
 12319  004E90                     u8867:
 12320  004E90  2EE8               	decfsz	wreg,f,c
 12321  004E92  D7FE               	bra	u8867
 12322  004E94  0012               	return		;funcret
 12323  004E96                     __end_of_lcdNibble:
 12324                           	opt stack 0
 12325                           tblptru	equ	0xFF8
 12326                           tblptrh	equ	0xFF7
 12327                           tblptrl	equ	0xFF6
 12328                           tablat	equ	0xFF5
 12329                           prodh	equ	0xFF4
 12330                           prodl	equ	0xFF3
 12331                           intcon	equ	0xFF2
 12332                           intcon2	equ	0xFF1
 12333                           intcon3	equ	0xFF0
 12334                           postinc0	equ	0xFEE
 12335                           wreg	equ	0xFE8
 12336                           postdec1	equ	0xFE5
 12337                           fsr1l	equ	0xFE1
 12338                           indf2	equ	0xFDF
 12339                           postinc2	equ	0xFDE
 12340                           postdec2	equ	0xFDD
 12341                           fsr2h	equ	0xFDA
 12342                           fsr2l	equ	0xFD9
 12343                           status	equ	0xFD8
 12344                           
 12345 ;; *************** function ___awmod *****************
 12346 ;; Defined at:
 12347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  dividend        2   16[BANK0 ] int 
 12350 ;;  divisor         2   18[BANK0 ] int 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  sign            1   21[BANK0 ] unsigned char 
 12353 ;;  counter         1   20[BANK0 ] unsigned char 
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  2   16[BANK0 ] int 
 12356 ;; Registers used:
 12357 ;;		wreg, status,2, status,0
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12364 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12366 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12367 ;;Total ram usage:        6 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:    7
 12370 ;; This function calls:
 12371 ;;		Nothing
 12372 ;; This function is called by:
 12373 ;;		_bottle_count
 12374 ;;		_bottle_count1
 12375 ;;		_bottle_count2
 12376 ;;		_bottle_count3
 12377 ;;		_bottle_count4
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text48
 12382  0048A6                     __ptext48:
 12383                           	opt stack 0
 12384  0048A6                     ___awmod:
 12385                           	opt stack 22
 12386                           
 12387                           ;incstack = 0
 12388  0048A6  0E00               	movlw	0
 12389  0048A8  0100               	movlb	0	; () banked
 12390  0048AA  6F95               	movwf	___awmod@sign& (0+255),b
 12391                           
 12392                           ; BSR set to: 0
 12393  0048AC  0100               	movlb	0	; () banked
 12394  0048AE  AF91               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12395  0048B0  D008               	goto	l5740
 12396                           
 12397                           ; BSR set to: 0
 12398  0048B2  0100               	movlb	0	; () banked
 12399  0048B4  6D90               	negf	___awmod@dividend& (0+255),b
 12400  0048B6  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
 12401  0048B8  B0D8               	btfsc	status,0,c
 12402  0048BA  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
 12403                           
 12404                           ; BSR set to: 0
 12405  0048BC  0E01               	movlw	1
 12406  0048BE  0100               	movlb	0	; () banked
 12407  0048C0  6F95               	movwf	___awmod@sign& (0+255),b
 12408  0048C2                     l5740:
 12409                           
 12410                           ; BSR set to: 0
 12411  0048C2  0100               	movlb	0	; () banked
 12412  0048C4  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12413  0048C6  D005               	goto	l5744
 12414                           
 12415                           ; BSR set to: 0
 12416  0048C8  0100               	movlb	0	; () banked
 12417  0048CA  6D92               	negf	___awmod@divisor& (0+255),b
 12418  0048CC  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
 12419  0048CE  B0D8               	btfsc	status,0,c
 12420  0048D0  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
 12421  0048D2                     l5744:
 12422                           
 12423                           ; BSR set to: 0
 12424  0048D2  0100               	movlb	0	; () banked
 12425  0048D4  5192               	movf	___awmod@divisor& (0+255),w,b
 12426  0048D6  0100               	movlb	0	; () banked
 12427  0048D8  1193               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12428  0048DA  B4D8               	btfsc	status,2,c
 12429  0048DC  D026               	goto	l5760
 12430                           
 12431                           ; BSR set to: 0
 12432  0048DE  0E01               	movlw	1
 12433  0048E0  0100               	movlb	0	; () banked
 12434  0048E2  6F94               	movwf	___awmod@counter& (0+255),b
 12435  0048E4  D006               	goto	l5750
 12436  0048E6                     l5748:
 12437                           
 12438                           ; BSR set to: 0
 12439  0048E6  0100               	movlb	0	; () banked
 12440  0048E8  90D8               	bcf	status,0,c
 12441  0048EA  3792               	rlcf	___awmod@divisor& (0+255),f,b
 12442  0048EC  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12443  0048EE  0100               	movlb	0	; () banked
 12444  0048F0  2B94               	incf	___awmod@counter& (0+255),f,b
 12445  0048F2                     l5750:
 12446                           
 12447                           ; BSR set to: 0
 12448  0048F2  0100               	movlb	0	; () banked
 12449  0048F4  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12450  0048F6  D7F7               	goto	l5748
 12451  0048F8                     l5752:
 12452                           
 12453                           ; BSR set to: 0
 12454  0048F8  0100               	movlb	0	; () banked
 12455  0048FA  5192               	movf	___awmod@divisor& (0+255),w,b
 12456  0048FC  0100               	movlb	0	; () banked
 12457  0048FE  5D90               	subwf	___awmod@dividend& (0+255),w,b
 12458  004900  0100               	movlb	0	; () banked
 12459  004902  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
 12460  004904  0100               	movlb	0	; () banked
 12461  004906  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12462  004908  A0D8               	btfss	status,0,c
 12463  00490A  D008               	goto	l5756
 12464                           
 12465                           ; BSR set to: 0
 12466  00490C  0100               	movlb	0	; () banked
 12467  00490E  5192               	movf	___awmod@divisor& (0+255),w,b
 12468  004910  0100               	movlb	0	; () banked
 12469  004912  5F90               	subwf	___awmod@dividend& (0+255),f,b
 12470  004914  0100               	movlb	0	; () banked
 12471  004916  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
 12472  004918  0100               	movlb	0	; () banked
 12473  00491A  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12474  00491C                     l5756:
 12475                           
 12476                           ; BSR set to: 0
 12477  00491C  0100               	movlb	0	; () banked
 12478  00491E  90D8               	bcf	status,0,c
 12479  004920  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12480  004922  3392               	rrcf	___awmod@divisor& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483  004924  0100               	movlb	0	; () banked
 12484  004926  2F94               	decfsz	___awmod@counter& (0+255),f,b
 12485  004928  D7E7               	goto	l5752
 12486  00492A                     l5760:
 12487                           
 12488                           ; BSR set to: 0
 12489  00492A  0100               	movlb	0	; () banked
 12490  00492C  5195               	movf	___awmod@sign& (0+255),w,b
 12491  00492E  0100               	movlb	0	; () banked
 12492  004930  B4D8               	btfsc	status,2,c
 12493  004932  D005               	goto	l5764
 12494                           
 12495                           ; BSR set to: 0
 12496  004934  0100               	movlb	0	; () banked
 12497  004936  6D90               	negf	___awmod@dividend& (0+255),b
 12498  004938  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
 12499  00493A  B0D8               	btfsc	status,0,c
 12500  00493C  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
 12501  00493E                     l5764:
 12502                           
 12503                           ; BSR set to: 0
 12504  00493E  C090  F090         	movff	___awmod@dividend,?___awmod
 12505  004942  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
 12506  004946  0012               	return	
 12507  004948                     __end_of___awmod:
 12508                           	opt stack 0
 12509                           tblptru	equ	0xFF8
 12510                           tblptrh	equ	0xFF7
 12511                           tblptrl	equ	0xFF6
 12512                           tablat	equ	0xFF5
 12513                           prodh	equ	0xFF4
 12514                           prodl	equ	0xFF3
 12515                           intcon	equ	0xFF2
 12516                           intcon2	equ	0xFF1
 12517                           intcon3	equ	0xFF0
 12518                           postinc0	equ	0xFEE
 12519                           wreg	equ	0xFE8
 12520                           postdec1	equ	0xFE5
 12521                           fsr1l	equ	0xFE1
 12522                           indf2	equ	0xFDF
 12523                           postinc2	equ	0xFDE
 12524                           postdec2	equ	0xFDD
 12525                           fsr2h	equ	0xFDA
 12526                           fsr2l	equ	0xFD9
 12527                           status	equ	0xFD8
 12528                           
 12529 ;; *************** function _I2C_Master_Init *****************
 12530 ;; Defined at:
 12531 ;;		line 14 in file "I2C.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;  c               4   29[BANK0 ] const unsigned long 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;		None
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1    wreg      void 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0, cstack
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;Total ram usage:        8 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:    8
 12552 ;; This function calls:
 12553 ;;		___lldiv
 12554 ;; This function is called by:
 12555 ;;		_main
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text49
 12560  004E96                     __ptext49:
 12561                           	opt stack 0
 12562  004E96                     _I2C_Master_Init:
 12563                           	opt stack 22
 12564                           
 12565                           ;I2C.c: 17: SSPSTAT = 0b00000000;
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;incstack = 0
 12569  004E96  0E00               	movlw	0
 12570  004E98  6EC7               	movwf	4039,c	;volatile
 12571                           
 12572                           ;I2C.c: 18: SSPCON1 = 0b00101000;
 12573  004E9A  0E28               	movlw	40
 12574  004E9C  6EC6               	movwf	4038,c	;volatile
 12575                           
 12576                           ;I2C.c: 19: SSPCON2 = 0b00000000;
 12577  004E9E  0E00               	movlw	0
 12578  004EA0  6EC5               	movwf	4037,c	;volatile
 12579                           
 12580                           ;I2C.c: 20: SSPADD = (10000000/(4*c))-1;
 12581  004EA2  0E80               	movlw	128
 12582  004EA4  0100               	movlb	0	; () banked
 12583  004EA6  6F90               	movwf	___lldiv@dividend& (0+255),b
 12584  004EA8  0E96               	movlw	150
 12585  004EAA  6F91               	movwf	(___lldiv@dividend+1)& (0+255),b
 12586  004EAC  0E98               	movlw	152
 12587  004EAE  6F92               	movwf	(___lldiv@dividend+2)& (0+255),b
 12588  004EB0  0E00               	movlw	0
 12589  004EB2  6F93               	movwf	(___lldiv@dividend+3)& (0+255),b
 12590  004EB4  C09D  F0A1         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12591  004EB8  C09E  F0A2         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12592  004EBC  C09F  F0A3         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12593  004EC0  C0A0  F0A4         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12594  004EC4  0E02               	movlw	2
 12595  004EC6                     u6015:
 12596  004EC6  90D8               	bcf	status,0,c
 12597  004EC8  0100               	movlb	0	; () banked
 12598  004ECA  37A1               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12599  004ECC  37A2               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12600  004ECE  37A3               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12601  004ED0  37A4               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12602  004ED2  2EE8               	decfsz	wreg,f,c
 12603  004ED4  D7F8               	goto	u6015
 12604  004ED6  C0A1  F094         	movff	??_I2C_Master_Init,___lldiv@divisor
 12605  004EDA  C0A2  F095         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12606  004EDE  C0A3  F096         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12607  004EE2  C0A4  F097         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12608  004EE6  EC47  F023         	call	___lldiv	;wreg free
 12609  004EEA  0100               	movlb	0	; () banked
 12610  004EEC  0590               	decf	?___lldiv& (0+255),w,b
 12611  004EEE  6EC8               	movwf	4040,c	;volatile
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;I2C.c: 21: TRISC3 = 1;
 12615  004EF0  8694               	bsf	3988,3,c	;volatile
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;I2C.c: 22: TRISC4 = 1;
 12619  004EF2  8894               	bsf	3988,4,c	;volatile
 12620                           
 12621                           ; BSR set to: 0
 12622  004EF4  0012               	return		;funcret
 12623  004EF6                     __end_of_I2C_Master_Init:
 12624                           	opt stack 0
 12625                           tblptru	equ	0xFF8
 12626                           tblptrh	equ	0xFF7
 12627                           tblptrl	equ	0xFF6
 12628                           tablat	equ	0xFF5
 12629                           prodh	equ	0xFF4
 12630                           prodl	equ	0xFF3
 12631                           intcon	equ	0xFF2
 12632                           intcon2	equ	0xFF1
 12633                           intcon3	equ	0xFF0
 12634                           postinc0	equ	0xFEE
 12635                           wreg	equ	0xFE8
 12636                           postdec1	equ	0xFE5
 12637                           fsr1l	equ	0xFE1
 12638                           indf2	equ	0xFDF
 12639                           postinc2	equ	0xFDE
 12640                           postdec2	equ	0xFDD
 12641                           fsr2h	equ	0xFDA
 12642                           fsr2l	equ	0xFD9
 12643                           status	equ	0xFD8
 12644                           
 12645 ;; *************** function ___lldiv *****************
 12646 ;; Defined at:
 12647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  dividend        4   16[BANK0 ] unsigned long 
 12650 ;;  divisor         4   20[BANK0 ] unsigned long 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;  quotient        4   24[BANK0 ] unsigned long 
 12653 ;;  counter         1   28[BANK0 ] unsigned char 
 12654 ;; Return value:  Size  Location     Type
 12655 ;;                  4   16[BANK0 ] unsigned long 
 12656 ;; Registers used:
 12657 ;;		wreg, status,2, status,0
 12658 ;; Tracked objects:
 12659 ;;		On entry : 0/0
 12660 ;;		On exit  : 0/0
 12661 ;;		Unchanged: 0/0
 12662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12663 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;Total ram usage:       13 bytes
 12668 ;; Hardware stack levels used:    1
 12669 ;; Hardware stack levels required when called:    7
 12670 ;; This function calls:
 12671 ;;		Nothing
 12672 ;; This function is called by:
 12673 ;;		_I2C_Master_Init
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text50
 12678  00468E                     __ptext50:
 12679                           	opt stack 0
 12680  00468E                     ___lldiv:
 12681                           	opt stack 22
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;incstack = 0
 12685  00468E  0E00               	movlw	0
 12686  004690  0100               	movlb	0	; () banked
 12687  004692  6F98               	movwf	___lldiv@quotient& (0+255),b
 12688  004694  0E00               	movlw	0
 12689  004696  6F99               	movwf	(___lldiv@quotient+1)& (0+255),b
 12690  004698  0E00               	movlw	0
 12691  00469A  6F9A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12692  00469C  0E00               	movlw	0
 12693  00469E  6F9B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12694                           
 12695                           ; BSR set to: 0
 12696  0046A0  0100               	movlb	0	; () banked
 12697  0046A2  5194               	movf	___lldiv@divisor& (0+255),w,b
 12698  0046A4  0100               	movlb	0	; () banked
 12699  0046A6  1195               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12700  0046A8  0100               	movlb	0	; () banked
 12701  0046AA  1196               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12702  0046AC  0100               	movlb	0	; () banked
 12703  0046AE  1197               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12704  0046B0  B4D8               	btfsc	status,2,c
 12705  0046B2  D042               	goto	l1029
 12706                           
 12707                           ; BSR set to: 0
 12708  0046B4  0E01               	movlw	1
 12709  0046B6  0100               	movlb	0	; () banked
 12710  0046B8  6F9C               	movwf	___lldiv@counter& (0+255),b
 12711  0046BA  D008               	goto	l5776
 12712  0046BC                     l5774:
 12713                           
 12714                           ; BSR set to: 0
 12715  0046BC  0100               	movlb	0	; () banked
 12716  0046BE  90D8               	bcf	status,0,c
 12717  0046C0  3794               	rlcf	___lldiv@divisor& (0+255),f,b
 12718  0046C2  3795               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12719  0046C4  3796               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12720  0046C6  3797               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12721  0046C8  0100               	movlb	0	; () banked
 12722  0046CA  2B9C               	incf	___lldiv@counter& (0+255),f,b
 12723  0046CC                     l5776:
 12724                           
 12725                           ; BSR set to: 0
 12726  0046CC  0100               	movlb	0	; () banked
 12727  0046CE  AF97               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12728  0046D0  D7F5               	goto	l5774
 12729  0046D2                     l5778:
 12730                           
 12731                           ; BSR set to: 0
 12732  0046D2  0100               	movlb	0	; () banked
 12733  0046D4  90D8               	bcf	status,0,c
 12734  0046D6  3798               	rlcf	___lldiv@quotient& (0+255),f,b
 12735  0046D8  3799               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12736  0046DA  379A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12737  0046DC  379B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12738                           
 12739                           ; BSR set to: 0
 12740  0046DE  0100               	movlb	0	; () banked
 12741  0046E0  5194               	movf	___lldiv@divisor& (0+255),w,b
 12742  0046E2  0100               	movlb	0	; () banked
 12743  0046E4  5D90               	subwf	___lldiv@dividend& (0+255),w,b
 12744  0046E6  0100               	movlb	0	; () banked
 12745  0046E8  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12746  0046EA  0100               	movlb	0	; () banked
 12747  0046EC  5991               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12748  0046EE  0100               	movlb	0	; () banked
 12749  0046F0  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12750  0046F2  0100               	movlb	0	; () banked
 12751  0046F4  5992               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12752  0046F6  0100               	movlb	0	; () banked
 12753  0046F8  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12754  0046FA  0100               	movlb	0	; () banked
 12755  0046FC  5993               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12756  0046FE  A0D8               	btfss	status,0,c
 12757  004700  D012               	goto	l5786
 12758                           
 12759                           ; BSR set to: 0
 12760  004702  0100               	movlb	0	; () banked
 12761  004704  5194               	movf	___lldiv@divisor& (0+255),w,b
 12762  004706  0100               	movlb	0	; () banked
 12763  004708  5F90               	subwf	___lldiv@dividend& (0+255),f,b
 12764  00470A  0100               	movlb	0	; () banked
 12765  00470C  5195               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12766  00470E  0100               	movlb	0	; () banked
 12767  004710  5B91               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12768  004712  0100               	movlb	0	; () banked
 12769  004714  5196               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12770  004716  0100               	movlb	0	; () banked
 12771  004718  5B92               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12772  00471A  0100               	movlb	0	; () banked
 12773  00471C  5197               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12774  00471E  0100               	movlb	0	; () banked
 12775  004720  5B93               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12776                           
 12777                           ; BSR set to: 0
 12778  004722  0100               	movlb	0	; () banked
 12779  004724  8198               	bsf	___lldiv@quotient& (0+255),0,b
 12780  004726                     l5786:
 12781                           
 12782                           ; BSR set to: 0
 12783  004726  0100               	movlb	0	; () banked
 12784  004728  90D8               	bcf	status,0,c
 12785  00472A  3397               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12786  00472C  3396               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12787  00472E  3395               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12788  004730  3394               	rrcf	___lldiv@divisor& (0+255),f,b
 12789                           
 12790                           ; BSR set to: 0
 12791  004732  0100               	movlb	0	; () banked
 12792  004734  2F9C               	decfsz	___lldiv@counter& (0+255),f,b
 12793  004736  D7CD               	goto	l5778
 12794  004738                     l1029:
 12795                           
 12796                           ; BSR set to: 0
 12797  004738  C098  F090         	movff	___lldiv@quotient,?___lldiv
 12798  00473C  C099  F091         	movff	___lldiv@quotient+1,?___lldiv+1
 12799  004740  C09A  F092         	movff	___lldiv@quotient+2,?___lldiv+2
 12800  004744  C09B  F093         	movff	___lldiv@quotient+3,?___lldiv+3
 12801                           
 12802                           ; BSR set to: 0
 12803  004748  0012               	return		;funcret
 12804  00474A                     __end_of___lldiv:
 12805                           	opt stack 0
 12806                           tblptru	equ	0xFF8
 12807                           tblptrh	equ	0xFF7
 12808                           tblptrl	equ	0xFF6
 12809                           tablat	equ	0xFF5
 12810                           prodh	equ	0xFF4
 12811                           prodl	equ	0xFF3
 12812                           intcon	equ	0xFF2
 12813                           intcon2	equ	0xFF1
 12814                           intcon3	equ	0xFF0
 12815                           postinc0	equ	0xFEE
 12816                           wreg	equ	0xFE8
 12817                           postdec1	equ	0xFE5
 12818                           fsr1l	equ	0xFE1
 12819                           indf2	equ	0xFDF
 12820                           postinc2	equ	0xFDE
 12821                           postdec2	equ	0xFDD
 12822                           fsr2h	equ	0xFDA
 12823                           fsr2l	equ	0xFD9
 12824                           status	equ	0xFD8
 12825                           
 12826 ;; *************** function _I2C_ColorSens_Init *****************
 12827 ;; Defined at:
 12828 ;;		line 54 in file "I2C.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;		None
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;		None
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  1    wreg      void 
 12835 ;; Registers used:
 12836 ;;		wreg, status,2, status,0, cstack
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12846 ;;Total ram usage:        1 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    9
 12849 ;; This function calls:
 12850 ;;		_I2C_Master_Start
 12851 ;;		_I2C_Master_Stop
 12852 ;;		_I2C_Master_Write
 12853 ;; This function is called by:
 12854 ;;		_main
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           	psect	text51
 12859  003A3E                     __ptext51:
 12860                           	opt stack 0
 12861  003A3E                     _I2C_ColorSens_Init:
 12862                           	opt stack 21
 12863                           
 12864                           ;I2C.c: 55: I2C_Master_Start();
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;incstack = 0
 12868  003A3E  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
 12869                           
 12870                           ;I2C.c: 56: I2C_Master_Write(0b01010010);
 12871  003A42  0E00               	movlw	0
 12872  003A44  0100               	movlb	0	; () banked
 12873  003A46  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12874  003A48  0E52               	movlw	82
 12875  003A4A  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12876  003A4C  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12877                           
 12878                           ;I2C.c: 57: I2C_Master_Write(0b10000000);
 12879  003A50  0E00               	movlw	0
 12880  003A52  0100               	movlb	0	; () banked
 12881  003A54  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12882  003A56  0E80               	movlw	128
 12883  003A58  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12884  003A5A  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12885                           
 12886                           ;I2C.c: 58: I2C_Master_Write(0b00000001);
 12887  003A5E  0E00               	movlw	0
 12888  003A60  0100               	movlb	0	; () banked
 12889  003A62  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12890  003A64  0E01               	movlw	1
 12891  003A66  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12892  003A68  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12893                           
 12894                           ;I2C.c: 59: I2C_Master_Stop();
 12895  003A6C  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
 12896                           
 12897                           ;I2C.c: 61: _delay((unsigned long)((3)*(10000000/4000.0)));
 12898  003A70  0E0A               	movlw	10
 12899  003A72  0100               	movlb	0	; () banked
 12900  003A74  6F93               	movwf	??_I2C_ColorSens_Init& (0+255),b
 12901  003A76  0EBC               	movlw	188
 12902  003A78                     u8877:
 12903  003A78  2EE8               	decfsz	wreg,f,c
 12904  003A7A  D7FE               	bra	u8877
 12905  003A7C  2F93               	decfsz	??_I2C_ColorSens_Init& (0+255),f,b
 12906  003A7E  D7FC               	bra	u8877
 12907  003A80  F000               	nop	
 12908                           
 12909                           ;I2C.c: 63: I2C_Master_Start();
 12910  003A82  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
 12911                           
 12912                           ;I2C.c: 64: I2C_Master_Write(0b01010010);
 12913  003A86  0E00               	movlw	0
 12914  003A88  0100               	movlb	0	; () banked
 12915  003A8A  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12916  003A8C  0E52               	movlw	82
 12917  003A8E  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12918  003A90  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12919                           
 12920                           ;I2C.c: 65: I2C_Master_Write(0b10000000);
 12921  003A94  0E00               	movlw	0
 12922  003A96  0100               	movlb	0	; () banked
 12923  003A98  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12924  003A9A  0E80               	movlw	128
 12925  003A9C  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12926  003A9E  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12927                           
 12928                           ;I2C.c: 66: I2C_Master_Write(0b00000011);
 12929  003AA2  0E00               	movlw	0
 12930  003AA4  0100               	movlb	0	; () banked
 12931  003AA6  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12932  003AA8  0E03               	movlw	3
 12933  003AAA  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12934  003AAC  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12935                           
 12936                           ;I2C.c: 67: I2C_Master_Stop();
 12937  003AB0  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
 12938                           
 12939                           ;I2C.c: 69: I2C_Master_Start();
 12940  003AB4  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
 12941                           
 12942                           ;I2C.c: 70: I2C_Master_Write(0b01010010);
 12943  003AB8  0E00               	movlw	0
 12944  003ABA  0100               	movlb	0	; () banked
 12945  003ABC  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12946  003ABE  0E52               	movlw	82
 12947  003AC0  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12948  003AC2  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12949                           
 12950                           ;I2C.c: 71: I2C_Master_Write(0b10001111);
 12951  003AC6  0E00               	movlw	0
 12952  003AC8  0100               	movlb	0	; () banked
 12953  003ACA  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12954  003ACC  0E8F               	movlw	143
 12955  003ACE  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12956  003AD0  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12957                           
 12958                           ;I2C.c: 72: I2C_Master_Write(0b00000010);
 12959  003AD4  0E00               	movlw	0
 12960  003AD6  0100               	movlb	0	; () banked
 12961  003AD8  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12962  003ADA  0E02               	movlw	2
 12963  003ADC  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12964  003ADE  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12965                           
 12966                           ;I2C.c: 73: I2C_Master_Stop();
 12967  003AE2  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
 12968                           
 12969                           ;I2C.c: 90: I2C_Master_Start();
 12970  003AE6  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
 12971                           
 12972                           ;I2C.c: 91: I2C_Master_Write(0b01010010);
 12973  003AEA  0E00               	movlw	0
 12974  003AEC  0100               	movlb	0	; () banked
 12975  003AEE  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12976  003AF0  0E52               	movlw	82
 12977  003AF2  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12978  003AF4  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12979                           
 12980                           ;I2C.c: 92: I2C_Master_Write(0b10000001);
 12981  003AF8  0E00               	movlw	0
 12982  003AFA  0100               	movlb	0	; () banked
 12983  003AFC  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12984  003AFE  0E81               	movlw	129
 12985  003B00  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 12986  003B02  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12987                           
 12988                           ;I2C.c: 93: I2C_Master_Write(0b11111111);
 12989  003B06  0E00               	movlw	0
 12990  003B08  0100               	movlb	0	; () banked
 12991  003B0A  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 12992  003B0C  6991               	setf	I2C_Master_Write@d& (0+255),b
 12993  003B0E  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 12994                           
 12995                           ;I2C.c: 94: I2C_Master_Stop();
 12996  003B12  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
 12997                           
 12998                           ;I2C.c: 96: I2C_Master_Start();
 12999  003B16  EC7F  F02A         	call	_I2C_Master_Start	;wreg free
 13000                           
 13001                           ;I2C.c: 97: I2C_Master_Write(0b01010010);
 13002  003B1A  0E00               	movlw	0
 13003  003B1C  0100               	movlb	0	; () banked
 13004  003B1E  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 13005  003B20  0E52               	movlw	82
 13006  003B22  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 13007  003B24  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 13008                           
 13009                           ;I2C.c: 98: I2C_Master_Write(0b10110100);
 13010  003B28  0E00               	movlw	0
 13011  003B2A  0100               	movlb	0	; () banked
 13012  003B2C  6F92               	movwf	(I2C_Master_Write@d+1)& (0+255),b
 13013  003B2E  0EB4               	movlw	180
 13014  003B30  6F91               	movwf	I2C_Master_Write@d& (0+255),b
 13015  003B32  EC71  F02A         	call	_I2C_Master_Write	;wreg free
 13016                           
 13017                           ;I2C.c: 99: I2C_Master_Stop();
 13018  003B36  EC7B  F02A         	call	_I2C_Master_Stop	;wreg free
 13019  003B3A  0012               	return		;funcret
 13020  003B3C                     __end_of_I2C_ColorSens_Init:
 13021                           	opt stack 0
 13022                           tblptru	equ	0xFF8
 13023                           tblptrh	equ	0xFF7
 13024                           tblptrl	equ	0xFF6
 13025                           tablat	equ	0xFF5
 13026                           prodh	equ	0xFF4
 13027                           prodl	equ	0xFF3
 13028                           intcon	equ	0xFF2
 13029                           intcon2	equ	0xFF1
 13030                           intcon3	equ	0xFF0
 13031                           postinc0	equ	0xFEE
 13032                           wreg	equ	0xFE8
 13033                           postdec1	equ	0xFE5
 13034                           fsr1l	equ	0xFE1
 13035                           indf2	equ	0xFDF
 13036                           postinc2	equ	0xFDE
 13037                           postdec2	equ	0xFDD
 13038                           fsr2h	equ	0xFDA
 13039                           fsr2l	equ	0xFD9
 13040                           status	equ	0xFD8
 13041                           
 13042 ;; *************** function _I2C_Master_Write *****************
 13043 ;; Defined at:
 13044 ;;		line 48 in file "I2C.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;  d               2   17[BANK0 ] unsigned int 
 13047 ;; Auto vars:     Size  Location     Type
 13048 ;;		None
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, status,2, status,0, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13062 ;;Total ram usage:        2 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:    8
 13065 ;; This function calls:
 13066 ;;		_I2C_Master_Wait
 13067 ;; This function is called by:
 13068 ;;		_I2C_ColorSens_Init
 13069 ;;		_date_time
 13070 ;;		_read_time
 13071 ;;		_read_colorsensor
 13072 ;;		_I2C_ColorSens_ClearInt
 13073 ;;		_set_time
 13074 ;; This function uses a non-reentrant model
 13075 ;;
 13076                           
 13077                           	psect	text52
 13078  0054E2                     __ptext52:
 13079                           	opt stack 0
 13080  0054E2                     _I2C_Master_Write:
 13081                           	opt stack 20
 13082                           
 13083                           ;I2C.c: 50: I2C_Master_Wait();
 13084                           
 13085                           ;incstack = 0
 13086  0054E2  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
 13087                           
 13088                           ;I2C.c: 51: SSPBUF = d;
 13089  0054E6  C091  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 13090  0054EA  0012               	return		;funcret
 13091  0054EC                     __end_of_I2C_Master_Write:
 13092                           	opt stack 0
 13093                           tblptru	equ	0xFF8
 13094                           tblptrh	equ	0xFF7
 13095                           tblptrl	equ	0xFF6
 13096                           tablat	equ	0xFF5
 13097                           prodh	equ	0xFF4
 13098                           prodl	equ	0xFF3
 13099                           intcon	equ	0xFF2
 13100                           intcon2	equ	0xFF1
 13101                           intcon3	equ	0xFF0
 13102                           postinc0	equ	0xFEE
 13103                           wreg	equ	0xFE8
 13104                           postdec1	equ	0xFE5
 13105                           fsr1l	equ	0xFE1
 13106                           indf2	equ	0xFDF
 13107                           postinc2	equ	0xFDE
 13108                           postdec2	equ	0xFDD
 13109                           fsr2h	equ	0xFDA
 13110                           fsr2l	equ	0xFD9
 13111                           status	equ	0xFD8
 13112                           
 13113 ;; *************** function _I2C_Master_Stop *****************
 13114 ;; Defined at:
 13115 ;;		line 42 in file "I2C.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2, status,0, cstack
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    8
 13136 ;; This function calls:
 13137 ;;		_I2C_Master_Wait
 13138 ;; This function is called by:
 13139 ;;		_I2C_ColorSens_Init
 13140 ;;		_date_time
 13141 ;;		_read_time
 13142 ;;		_read_colorsensor
 13143 ;;		_I2C_ColorSens_ClearInt
 13144 ;;		_set_time
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text53
 13149  0054F6                     __ptext53:
 13150                           	opt stack 0
 13151  0054F6                     _I2C_Master_Stop:
 13152                           	opt stack 20
 13153                           
 13154                           ;I2C.c: 44: I2C_Master_Wait();
 13155                           
 13156                           ;incstack = 0
 13157  0054F6  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
 13158                           
 13159                           ;I2C.c: 45: PEN = 1;
 13160  0054FA  84C5               	bsf	4037,2,c	;volatile
 13161  0054FC  0012               	return		;funcret
 13162  0054FE                     __end_of_I2C_Master_Stop:
 13163                           	opt stack 0
 13164                           tblptru	equ	0xFF8
 13165                           tblptrh	equ	0xFF7
 13166                           tblptrl	equ	0xFF6
 13167                           tablat	equ	0xFF5
 13168                           prodh	equ	0xFF4
 13169                           prodl	equ	0xFF3
 13170                           intcon	equ	0xFF2
 13171                           intcon2	equ	0xFF1
 13172                           intcon3	equ	0xFF0
 13173                           postinc0	equ	0xFEE
 13174                           wreg	equ	0xFE8
 13175                           postdec1	equ	0xFE5
 13176                           fsr1l	equ	0xFE1
 13177                           indf2	equ	0xFDF
 13178                           postinc2	equ	0xFDE
 13179                           postdec2	equ	0xFDD
 13180                           fsr2h	equ	0xFDA
 13181                           fsr2l	equ	0xFD9
 13182                           status	equ	0xFD8
 13183                           
 13184 ;; *************** function _I2C_Master_Start *****************
 13185 ;; Defined at:
 13186 ;;		line 30 in file "I2C.c"
 13187 ;; Parameters:    Size  Location     Type
 13188 ;;		None
 13189 ;; Auto vars:     Size  Location     Type
 13190 ;;		None
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  1    wreg      void 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2, status,0, cstack
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;Total ram usage:        0 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:    8
 13207 ;; This function calls:
 13208 ;;		_I2C_Master_Wait
 13209 ;; This function is called by:
 13210 ;;		_I2C_ColorSens_Init
 13211 ;;		_date_time
 13212 ;;		_read_time
 13213 ;;		_read_colorsensor
 13214 ;;		_I2C_ColorSens_ClearInt
 13215 ;;		_set_time
 13216 ;; This function uses a non-reentrant model
 13217 ;;
 13218                           
 13219                           	psect	text54
 13220  0054FE                     __ptext54:
 13221                           	opt stack 0
 13222  0054FE                     _I2C_Master_Start:
 13223                           	opt stack 20
 13224                           
 13225                           ;I2C.c: 32: I2C_Master_Wait();
 13226                           
 13227                           ;incstack = 0
 13228  0054FE  EC3D  F02A         	call	_I2C_Master_Wait	;wreg free
 13229                           
 13230                           ;I2C.c: 33: SEN = 1;
 13231  005502  80C5               	bsf	4037,0,c	;volatile
 13232  005504  0012               	return		;funcret
 13233  005506                     __end_of_I2C_Master_Start:
 13234                           	opt stack 0
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           intcon	equ	0xFF2
 13242                           intcon2	equ	0xFF1
 13243                           intcon3	equ	0xFF0
 13244                           postinc0	equ	0xFEE
 13245                           wreg	equ	0xFE8
 13246                           postdec1	equ	0xFE5
 13247                           fsr1l	equ	0xFE1
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function _I2C_Master_Wait *****************
 13256 ;; Defined at:
 13257 ;;		line 25 in file "I2C.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;		None
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;		None
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, status,2, status,0
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;Total ram usage:        1 bytes
 13276 ;; Hardware stack levels used:    1
 13277 ;; Hardware stack levels required when called:    7
 13278 ;; This function calls:
 13279 ;;		Nothing
 13280 ;; This function is called by:
 13281 ;;		_I2C_Master_Start
 13282 ;;		_I2C_Master_Stop
 13283 ;;		_I2C_Master_Write
 13284 ;;		_I2C_Master_Read
 13285 ;;		_I2C_Master_RepeatedStart
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text55
 13290  00547A                     __ptext55:
 13291                           	opt stack 0
 13292  00547A                     _I2C_Master_Wait:
 13293                           	opt stack 20
 13294  00547A                     l34:
 13295  00547A  B4C7               	btfsc	4039,2,c	;volatile
 13296  00547C  D7FE               	goto	l34
 13297  00547E  CFC5 F090          	movff	4037,??_I2C_Master_Wait	;volatile
 13298  005482  0E1F               	movlw	31
 13299  005484  0100               	movlb	0	; () banked
 13300  005486  1790               	andwf	??_I2C_Master_Wait& (0+255),f,b
 13301  005488  B4D8               	btfsc	status,2,c
 13302  00548A  0012               	return	
 13303  00548C  D7F6               	goto	l34
 13304  00548E                     __end_of_I2C_Master_Wait:
 13305                           	opt stack 0
 13306                           tblptru	equ	0xFF8
 13307                           tblptrh	equ	0xFF7
 13308                           tblptrl	equ	0xFF6
 13309                           tablat	equ	0xFF5
 13310                           prodh	equ	0xFF4
 13311                           prodl	equ	0xFF3
 13312                           intcon	equ	0xFF2
 13313                           intcon2	equ	0xFF1
 13314                           intcon3	equ	0xFF0
 13315                           postinc0	equ	0xFEE
 13316                           wreg	equ	0xFE8
 13317                           postdec1	equ	0xFE5
 13318                           fsr1l	equ	0xFE1
 13319                           indf2	equ	0xFDF
 13320                           postinc2	equ	0xFDE
 13321                           postdec2	equ	0xFDD
 13322                           fsr2h	equ	0xFDA
 13323                           fsr2l	equ	0xFD9
 13324                           status	equ	0xFD8
 13325                           
 13326 ;; *************** function _isr *****************
 13327 ;; Defined at:
 13328 ;;		line 142 in file "main.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;		None
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;  i               1  114[COMRAM] unsigned char 
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      void 
 13335 ;; Registers used:
 13336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13337 ;; Tracked objects:
 13338 ;;		On entry : 0/0
 13339 ;;		On exit  : 0/0
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13346 ;;Total ram usage:       19 bytes
 13347 ;; Hardware stack levels used:    1
 13348 ;; Hardware stack levels required when called:    6
 13349 ;; This function calls:
 13350 ;;		i2___wmul
 13351 ;;		i2_dec_to_hex
 13352 ;;		i2_eeprom_readbyte
 13353 ;;		i2_lcdInst
 13354 ;;		i2_printf
 13355 ;;		i2_read_colorsensor
 13356 ;;		i2_read_time
 13357 ;;		i2_savedata
 13358 ;; This function is called by:
 13359 ;;		Interrupt level 2
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           	psect	intcode
 13364  000008                     __pintcode:
 13365                           	opt stack 0
 13366  000008                     _isr:
 13367                           	opt stack 17
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;incstack = 0
 13371  000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13372  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
 13373                           tblptru	equ	0xFF8
 13374                           tblptrh	equ	0xFF7
 13375                           tblptrl	equ	0xFF6
 13376                           tablat	equ	0xFF5
 13377                           prodh	equ	0xFF4
 13378                           prodl	equ	0xFF3
 13379                           intcon	equ	0xFF2
 13380                           intcon2	equ	0xFF1
 13381                           intcon3	equ	0xFF0
 13382                           postinc0	equ	0xFEE
 13383                           wreg	equ	0xFE8
 13384                           postdec1	equ	0xFE5
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           postdec2	equ	0xFDD
 13389                           fsr2h	equ	0xFDA
 13390                           fsr2l	equ	0xFD9
 13391                           status	equ	0xFD8
 13392                           
 13393                           	psect	intcode_body
 13394  000012                     __pintcode_body:
 13395                           	opt stack 17
 13396  000012                     int_func:
 13397                           	opt stack 17
 13398  000012  0006               	pop		; remove dummy address from shadow register refresh
 13399  000014  CFFA F082          	movff	pclath,??_isr+2
 13400  000018  CFFB F083          	movff	pclatu,??_isr+3
 13401  00001C  CFE9 F084          	movff	fsr0l,??_isr+4
 13402  000020  CFEA F085          	movff	fsr0h,??_isr+5
 13403  000024  CFE1 F086          	movff	fsr1l,??_isr+6
 13404  000028  CFE2 F087          	movff	fsr1h,??_isr+7
 13405  00002C  CFD9 F088          	movff	fsr2l,??_isr+8
 13406  000030  CFDA F089          	movff	fsr2h,??_isr+9
 13407  000034  CFF3 F08A          	movff	prodl,??_isr+10
 13408  000038  CFF4 F08B          	movff	prodh,??_isr+11
 13409  00003C  CFF6 F08C          	movff	tblptrl,??_isr+12
 13410  000040  CFF7 F08D          	movff	tblptrh,??_isr+13
 13411  000044  CFF8 F08E          	movff	tblptru,??_isr+14
 13412  000048  CFF5 F08F          	movff	tablat,??_isr+15
 13413                           
 13414                           ;main.c: 143: if (INT1IF) {
 13415  00004C  B0F0               	btfsc	intcon3,0,c	;volatile
 13416  00004E  D3F5               	goto	i2l7034
 13417  000050  EF56  F004         	goto	i2l352
 13418  000054                     i2l354:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;main.c: 146: LATAbits.LATA2 = 1;
 13422  000054  8489               	bsf	3977,2,c	;volatile
 13423                           
 13424                           ;main.c: 147: TMR0IE = 1;
 13425  000056  8AF2               	bsf	intcon,5,c	;volatile
 13426                           
 13427                           ;main.c: 148: TMR0ON = 1;
 13428  000058  8ED5               	bsf	4053,7,c	;volatile
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;main.c: 149: TMR0 = 0;
 13432  00005A  0E00               	movlw	0
 13433  00005C  6ED7               	movwf	4055,c	;volatile
 13434  00005E  0E00               	movlw	0
 13435  000060  6ED6               	movwf	4054,c	;volatile
 13436                           
 13437                           ; BSR set to: 0
 13438                           ;main.c: 150: TMR1ON = 1;
 13439  000062  80CD               	bsf	4045,0,c	;volatile
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;main.c: 151: TMR3ON = 1;
 13443  000064  80B1               	bsf	4017,0,c	;volatile
 13444                           
 13445                           ;main.c: 152: operation_timeout = 0;
 13446  000066  0E00               	movlw	0
 13447  000068  0101               	movlb	1	; () banked
 13448  00006A  6F42               	movwf	(_operation_timeout+1)& (0+255),b
 13449  00006C  0E00               	movlw	0
 13450  00006E  6F41               	movwf	_operation_timeout& (0+255),b
 13451                           
 13452                           ; BSR set to: 1
 13453                           ;main.c: 154: read_time();
 13454  000070  ECB6  F026         	call	i2_read_time	;wreg free
 13455                           
 13456                           ;main.c: 155: start_time[1] = time[1];
 13457  000074  C111  F07B         	movff	_time+1,_start_time+1
 13458                           
 13459                           ;main.c: 156: start_time[0] = time[0];
 13460  000078  C110  F07A         	movff	_time,_start_time
 13461                           
 13462                           ;main.c: 157: for(i=0;i<5;i++){
 13463  00007C  0E00               	movlw	0
 13464  00007E  0100               	movlb	0	; () banked
 13465  000080  6FEC               	movwf	(_i+1)& (0+255),b
 13466  000082  0E00               	movlw	0
 13467  000084  6FEB               	movwf	_i& (0+255),b
 13468  000086                     i2l6786:
 13469                           
 13470                           ; BSR set to: 0
 13471  000086  0100               	movlb	0	; () banked
 13472  000088  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13473  00008A  D008               	goto	i2l6790
 13474  00008C  0100               	movlb	0	; () banked
 13475  00008E  51EC               	movf	(_i+1)& (0+255),w,b
 13476  000090  E127               	bnz	i2l6796
 13477  000092  0E05               	movlw	5
 13478  000094  0100               	movlb	0	; () banked
 13479  000096  5DEB               	subwf	_i& (0+255),w,b
 13480  000098  B0D8               	btfsc	status,0,c
 13481  00009A  D022               	goto	i2l6796
 13482  00009C                     i2l6790:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;main.c: 158: bottle_count_array[i] = 0;
 13486  00009C  90D8               	bcf	status,0,c
 13487  00009E  0100               	movlb	0	; () banked
 13488  0000A0  35EB               	rlcf	_i& (0+255),w,b
 13489  0000A2  6ED9               	movwf	fsr2l,c
 13490  0000A4  0100               	movlb	0	; () banked
 13491  0000A6  35EC               	rlcf	(_i+1)& (0+255),w,b
 13492  0000A8  6EDA               	movwf	fsr2h,c
 13493  0000AA  0EDF               	movlw	low _bottle_count_array
 13494  0000AC  26D9               	addwf	fsr2l,f,c
 13495  0000AE  0E00               	movlw	high _bottle_count_array
 13496  0000B0  22DA               	addwfc	fsr2h,f,c
 13497  0000B2  0E00               	movlw	0
 13498  0000B4  6EDE               	movwf	postinc2,c
 13499  0000B6  0E00               	movlw	0
 13500  0000B8  6EDD               	movwf	postdec2,c
 13501                           
 13502                           ;main.c: 159: bottle_count_disp[i] = -1;
 13503  0000BA  90D8               	bcf	status,0,c
 13504  0000BC  0100               	movlb	0	; () banked
 13505  0000BE  35EB               	rlcf	_i& (0+255),w,b
 13506  0000C0  6ED9               	movwf	fsr2l,c
 13507  0000C2  0100               	movlb	0	; () banked
 13508  0000C4  35EC               	rlcf	(_i+1)& (0+255),w,b
 13509  0000C6  6EDA               	movwf	fsr2h,c
 13510  0000C8  0E72               	movlw	low _bottle_count_disp
 13511  0000CA  26D9               	addwf	fsr2l,f,c
 13512  0000CC  0E01               	movlw	high _bottle_count_disp
 13513  0000CE  22DA               	addwfc	fsr2h,f,c
 13514  0000D0  0EFF               	movlw	255
 13515  0000D2  6EDE               	movwf	postinc2,c
 13516  0000D4  0EFF               	movlw	255
 13517  0000D6  6EDD               	movwf	postdec2,c
 13518                           
 13519                           ; BSR set to: 0
 13520  0000D8  0100               	movlb	0	; () banked
 13521  0000DA  4BEB               	infsnz	_i& (0+255),f,b
 13522  0000DC  2BEC               	incf	(_i+1)& (0+255),f,b
 13523  0000DE  D7D3               	goto	i2l6786
 13524  0000E0                     i2l6796:
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;main.c: 160: }
 13528                           ;main.c: 161: lcdInst(0b00000001);
 13529  0000E0  0E01               	movlw	1
 13530  0000E2  EC66  F02A         	call	i2_lcdInst
 13531                           
 13532                           ;main.c: 162: _delay((unsigned long)((100)*(10000000/4000.0)));
 13533  0000E6  0E02               	movlw	2
 13534  0000E8  0100               	movlb	0	; () banked
 13535  0000EA  6F81               	movwf	(??_isr+1)& (0+255),b
 13536  0000EC  0E45               	movlw	69
 13537  0000EE  0100               	movlb	0	; () banked
 13538  0000F0  6F80               	movwf	??_isr& (0+255),b
 13539  0000F2  0EA9               	movlw	169
 13540  0000F4                     i2u888_47:
 13541  0000F4  2EE8               	decfsz	wreg,f,c
 13542  0000F6  D7FE               	bra	i2u888_47
 13543  0000F8  2F80               	decfsz	??_isr& (0+255),f,b
 13544  0000FA  D7FC               	bra	i2u888_47
 13545  0000FC  2F81               	decfsz	(??_isr+1)& (0+255),f,b
 13546  0000FE  D7FA               	bra	i2u888_47
 13547  000100  D000               	nop2	
 13548                           
 13549                           ;main.c: 163: lcdInst(0b10000000);
 13550  000102  0E80               	movlw	128
 13551  000104  EC66  F02A         	call	i2_lcdInst
 13552                           
 13553                           ;main.c: 164: printf("running               ");
 13554  000108  0ED4               	movlw	low STR_1
 13555  00010A  6E0D               	movwf	i2printf@f,c
 13556  00010C  0EFE               	movlw	high STR_1
 13557  00010E  6E0E               	movwf	i2printf@f+1,c
 13558  000110  EC07  F00A         	call	i2_printf	;wreg free
 13559                           
 13560                           ;main.c: 166: curr_state = OPERATION;
 13561  000114  0E02               	movlw	2
 13562  000116  D38E               	goto	L21
 13563  000118                     i2l358:
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;main.c: 171: temp = bottle_count_disp[0];
 13567  000118  C172  F07C         	movff	_bottle_count_disp,_temp
 13568  00011C  C173  F07D         	movff	_bottle_count_disp+1,_temp+1
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;main.c: 172: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13572  000120  0E00               	movlw	0
 13573  000122  0100               	movlb	0	; () banked
 13574  000124  6FEC               	movwf	(_i+1)& (0+255),b
 13575  000126  0E00               	movlw	0
 13576  000128  6FEB               	movwf	_i& (0+255),b
 13577  00012A                     i2l6808:
 13578                           
 13579                           ; BSR set to: 0
 13580  00012A  0100               	movlb	0	; () banked
 13581  00012C  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13582  00012E  D008               	goto	i2l6812
 13583  000130  0100               	movlb	0	; () banked
 13584  000132  51EC               	movf	(_i+1)& (0+255),w,b
 13585  000134  E118               	bnz	i2l6818
 13586  000136  0E05               	movlw	5
 13587  000138  0100               	movlb	0	; () banked
 13588  00013A  5DEB               	subwf	_i& (0+255),w,b
 13589  00013C  B0D8               	btfsc	status,0,c
 13590  00013E  D013               	goto	i2l6818
 13591  000140                     i2l6812:
 13592                           
 13593                           ; BSR set to: 0
 13594  000140  90D8               	bcf	status,0,c
 13595  000142  0100               	movlb	0	; () banked
 13596  000144  35EB               	rlcf	_i& (0+255),w,b
 13597  000146  6ED9               	movwf	fsr2l,c
 13598  000148  0100               	movlb	0	; () banked
 13599  00014A  35EC               	rlcf	(_i+1)& (0+255),w,b
 13600  00014C  6EDA               	movwf	fsr2h,c
 13601  00014E  0E72               	movlw	low _bottle_count_disp
 13602  000150  26D9               	addwf	fsr2l,f,c
 13603  000152  0E01               	movlw	high _bottle_count_disp
 13604  000154  22DA               	addwfc	fsr2h,f,c
 13605  000156  0EFF               	movlw	255
 13606  000158  6EDE               	movwf	postinc2,c
 13607  00015A  0EFF               	movlw	255
 13608  00015C  6EDD               	movwf	postdec2,c
 13609                           
 13610                           ; BSR set to: 0
 13611  00015E  0100               	movlb	0	; () banked
 13612  000160  4BEB               	infsnz	_i& (0+255),f,b
 13613  000162  2BEC               	incf	(_i+1)& (0+255),f,b
 13614  000164  D7E2               	goto	i2l6808
 13615  000166                     i2l6818:
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;main.c: 173: bottle_count_disp[0] = temp + 1;
 13619  000166  0E01               	movlw	1
 13620  000168  247C               	addwf	_temp,w,c
 13621  00016A  0101               	movlb	1	; () banked
 13622  00016C  6F72               	movwf	_bottle_count_disp& (0+255),b
 13623  00016E  0E00               	movlw	0
 13624  000170  207D               	addwfc	_temp+1,w,c
 13625  000172  0101               	movlb	1	; () banked
 13626  000174  6F73               	movwf	(_bottle_count_disp+1)& (0+255),b
 13627                           
 13628                           ; BSR set to: 1
 13629                           ;main.c: 174: bottle_count_array[0] = eeprom_readbyte(20);
 13630  000176  0E00               	movlw	0
 13631  000178  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13632  00017A  0E14               	movlw	20
 13633  00017C  6E01               	movwf	i2eeprom_readbyte@address,c
 13634  00017E  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13635  000182  0100               	movlb	0	; () banked
 13636  000184  6F80               	movwf	??_isr& (0+255),b
 13637  000186  0100               	movlb	0	; () banked
 13638  000188  5180               	movf	??_isr& (0+255),w,b
 13639  00018A  0100               	movlb	0	; () banked
 13640  00018C  6FDF               	movwf	_bottle_count_array& (0+255),b
 13641  00018E  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;main.c: 175: bottle_count_array[1] = eeprom_readbyte(21);
 13645  000190  0E00               	movlw	0
 13646  000192  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13647  000194  0E15               	movlw	21
 13648  000196  6E01               	movwf	i2eeprom_readbyte@address,c
 13649  000198  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13650  00019C  0100               	movlb	0	; () banked
 13651  00019E  6F80               	movwf	??_isr& (0+255),b
 13652  0001A0  0100               	movlb	0	; () banked
 13653  0001A2  5180               	movf	??_isr& (0+255),w,b
 13654  0001A4  0100               	movlb	0	; () banked
 13655  0001A6  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 13656  0001A8  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;main.c: 176: bottle_count_array[2] = eeprom_readbyte(22);
 13660  0001AA  0E00               	movlw	0
 13661  0001AC  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13662  0001AE  0E16               	movlw	22
 13663  0001B0  6E01               	movwf	i2eeprom_readbyte@address,c
 13664  0001B2  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13665  0001B6  0100               	movlb	0	; () banked
 13666  0001B8  6F80               	movwf	??_isr& (0+255),b
 13667  0001BA  0100               	movlb	0	; () banked
 13668  0001BC  5180               	movf	??_isr& (0+255),w,b
 13669  0001BE  0100               	movlb	0	; () banked
 13670  0001C0  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 13671  0001C2  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;main.c: 177: bottle_count_array[3] = eeprom_readbyte(23);
 13675  0001C4  0E00               	movlw	0
 13676  0001C6  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13677  0001C8  0E17               	movlw	23
 13678  0001CA  6E01               	movwf	i2eeprom_readbyte@address,c
 13679  0001CC  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13680  0001D0  0100               	movlb	0	; () banked
 13681  0001D2  6F80               	movwf	??_isr& (0+255),b
 13682  0001D4  0100               	movlb	0	; () banked
 13683  0001D6  5180               	movf	??_isr& (0+255),w,b
 13684  0001D8  0100               	movlb	0	; () banked
 13685  0001DA  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 13686  0001DC  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;main.c: 178: bottle_count_array[4] = eeprom_readbyte(24);
 13690  0001DE  0E00               	movlw	0
 13691  0001E0  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13692  0001E2  0E18               	movlw	24
 13693  0001E4  6E01               	movwf	i2eeprom_readbyte@address,c
 13694  0001E6  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13695  0001EA  0100               	movlb	0	; () banked
 13696  0001EC  6F80               	movwf	??_isr& (0+255),b
 13697  0001EE  0100               	movlb	0	; () banked
 13698  0001F0  5180               	movf	??_isr& (0+255),w,b
 13699  0001F2  0100               	movlb	0	; () banked
 13700  0001F4  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 13701  0001F6  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;main.c: 179: curr_state = BOTTLECOUNT;
 13705  0001F8  0E05               	movlw	5
 13706  0001FA  0100               	movlb	0	; () banked
 13707  0001FC  6FED               	movwf	_curr_state& (0+255),b
 13708  0001FE                     i2l6832:
 13709  0001FE  3881               	swapf	3969,w,c	;volatile
 13710  000200  0B0F               	andlw	15
 13711  000202  06E8               	decf	wreg,f,c
 13712  000204  A4D8               	btfss	status,2,c
 13713  000206  D350               	goto	i2l357
 13714  000208  D7FA               	goto	i2l6832
 13715  00020A                     i2l6834:
 13716                           
 13717                           ;main.c: 183: operation_time = etime - stime;
 13718  00020A  C147  F080         	movff	_stime,??_isr
 13719  00020E  C148  F081         	movff	_stime+1,??_isr+1
 13720  000212  0100               	movlb	0	; () banked
 13721  000214  1F80               	comf	??_isr& (0+255),f,b
 13722  000216  1F81               	comf	(??_isr+1)& (0+255),f,b
 13723  000218  4B80               	infsnz	??_isr& (0+255),f,b
 13724  00021A  2B81               	incf	(??_isr+1)& (0+255),f,b
 13725  00021C  0101               	movlb	1	; () banked
 13726  00021E  5131               	movf	_etime& (0+255),w,b
 13727  000220  0100               	movlb	0	; () banked
 13728  000222  2580               	addwf	??_isr& (0+255),w,b
 13729  000224  0101               	movlb	1	; () banked
 13730  000226  6F3F               	movwf	_operation_time& (0+255),b
 13731  000228  0101               	movlb	1	; () banked
 13732  00022A  5132               	movf	(_etime+1)& (0+255),w,b
 13733  00022C  0100               	movlb	0	; () banked
 13734  00022E  2181               	addwfc	(??_isr+1)& (0+255),w,b
 13735  000230  0101               	movlb	1	; () banked
 13736  000232  6F40               	movwf	(_operation_time+1)& (0+255),b
 13737                           
 13738                           ; BSR set to: 1
 13739                           ;main.c: 184: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13740  000234  0E00               	movlw	0
 13741  000236  0100               	movlb	0	; () banked
 13742  000238  6FEC               	movwf	(_i+1)& (0+255),b
 13743  00023A  0E00               	movlw	0
 13744  00023C  6FEB               	movwf	_i& (0+255),b
 13745  00023E                     i2l6838:
 13746                           
 13747                           ; BSR set to: 0
 13748  00023E  0100               	movlb	0	; () banked
 13749  000240  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13750  000242  D008               	goto	i2l6842
 13751  000244  0100               	movlb	0	; () banked
 13752  000246  51EC               	movf	(_i+1)& (0+255),w,b
 13753  000248  E118               	bnz	i2l6848
 13754  00024A  0E05               	movlw	5
 13755  00024C  0100               	movlb	0	; () banked
 13756  00024E  5DEB               	subwf	_i& (0+255),w,b
 13757  000250  B0D8               	btfsc	status,0,c
 13758  000252  D013               	goto	i2l6848
 13759  000254                     i2l6842:
 13760                           
 13761                           ; BSR set to: 0
 13762  000254  90D8               	bcf	status,0,c
 13763  000256  0100               	movlb	0	; () banked
 13764  000258  35EB               	rlcf	_i& (0+255),w,b
 13765  00025A  6ED9               	movwf	fsr2l,c
 13766  00025C  0100               	movlb	0	; () banked
 13767  00025E  35EC               	rlcf	(_i+1)& (0+255),w,b
 13768  000260  6EDA               	movwf	fsr2h,c
 13769  000262  0E72               	movlw	low _bottle_count_disp
 13770  000264  26D9               	addwf	fsr2l,f,c
 13771  000266  0E01               	movlw	high _bottle_count_disp
 13772  000268  22DA               	addwfc	fsr2h,f,c
 13773  00026A  0EFF               	movlw	255
 13774  00026C  6EDE               	movwf	postinc2,c
 13775  00026E  0EFF               	movlw	255
 13776  000270  6EDD               	movwf	postdec2,c
 13777                           
 13778                           ; BSR set to: 0
 13779  000272  0100               	movlb	0	; () banked
 13780  000274  4BEB               	infsnz	_i& (0+255),f,b
 13781  000276  2BEC               	incf	(_i+1)& (0+255),f,b
 13782  000278  D7E2               	goto	i2l6838
 13783  00027A                     i2l6848:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;main.c: 185: curr_state = BOTTLETIME;
 13787  00027A  0E0A               	movlw	10
 13788  00027C  D2DB               	goto	L21
 13789  00027E                     i2l6850:
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;main.c: 188: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13793  00027E  0E00               	movlw	0
 13794  000280  0100               	movlb	0	; () banked
 13795  000282  6FEC               	movwf	(_i+1)& (0+255),b
 13796  000284  0E00               	movlw	0
 13797  000286  6FEB               	movwf	_i& (0+255),b
 13798  000288                     i2l6852:
 13799                           
 13800                           ; BSR set to: 0
 13801  000288  0100               	movlb	0	; () banked
 13802  00028A  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13803  00028C  D008               	goto	i2l6856
 13804  00028E  0100               	movlb	0	; () banked
 13805  000290  51EC               	movf	(_i+1)& (0+255),w,b
 13806  000292  E118               	bnz	i2l6862
 13807  000294  0E05               	movlw	5
 13808  000296  0100               	movlb	0	; () banked
 13809  000298  5DEB               	subwf	_i& (0+255),w,b
 13810  00029A  B0D8               	btfsc	status,0,c
 13811  00029C  D013               	goto	i2l6862
 13812  00029E                     i2l6856:
 13813                           
 13814                           ; BSR set to: 0
 13815  00029E  90D8               	bcf	status,0,c
 13816  0002A0  0100               	movlb	0	; () banked
 13817  0002A2  35EB               	rlcf	_i& (0+255),w,b
 13818  0002A4  6ED9               	movwf	fsr2l,c
 13819  0002A6  0100               	movlb	0	; () banked
 13820  0002A8  35EC               	rlcf	(_i+1)& (0+255),w,b
 13821  0002AA  6EDA               	movwf	fsr2h,c
 13822  0002AC  0E72               	movlw	low _bottle_count_disp
 13823  0002AE  26D9               	addwf	fsr2l,f,c
 13824  0002B0  0E01               	movlw	high _bottle_count_disp
 13825  0002B2  22DA               	addwfc	fsr2h,f,c
 13826  0002B4  0EFF               	movlw	255
 13827  0002B6  6EDE               	movwf	postinc2,c
 13828  0002B8  0EFF               	movlw	255
 13829  0002BA  6EDD               	movwf	postdec2,c
 13830                           
 13831                           ; BSR set to: 0
 13832  0002BC  0100               	movlb	0	; () banked
 13833  0002BE  4BEB               	infsnz	_i& (0+255),f,b
 13834  0002C0  2BEC               	incf	(_i+1)& (0+255),f,b
 13835  0002C2  D7E2               	goto	i2l6852
 13836  0002C4                     i2l6862:
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;main.c: 189: curr_state = DATETIME;
 13840  0002C4  0E04               	movlw	4
 13841  0002C6  D2B6               	goto	L21
 13842  0002C8                     i2l370:
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;main.c: 192: temp = bottle_count_disp[1];
 13846  0002C8  C174  F07C         	movff	_bottle_count_disp+2,_temp
 13847  0002CC  C175  F07D         	movff	_bottle_count_disp+3,_temp+1
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;main.c: 193: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 13851  0002D0  0E00               	movlw	0
 13852  0002D2  0100               	movlb	0	; () banked
 13853  0002D4  6FEC               	movwf	(_i+1)& (0+255),b
 13854  0002D6  0E00               	movlw	0
 13855  0002D8  6FEB               	movwf	_i& (0+255),b
 13856  0002DA                     i2l6866:
 13857                           
 13858                           ; BSR set to: 0
 13859  0002DA  0100               	movlb	0	; () banked
 13860  0002DC  BFEC               	btfsc	(_i+1)& (0+255),7,b
 13861  0002DE  D008               	goto	i2l6870
 13862  0002E0  0100               	movlb	0	; () banked
 13863  0002E2  51EC               	movf	(_i+1)& (0+255),w,b
 13864  0002E4  E118               	bnz	i2l6876
 13865  0002E6  0E05               	movlw	5
 13866  0002E8  0100               	movlb	0	; () banked
 13867  0002EA  5DEB               	subwf	_i& (0+255),w,b
 13868  0002EC  B0D8               	btfsc	status,0,c
 13869  0002EE  D013               	goto	i2l6876
 13870  0002F0                     i2l6870:
 13871                           
 13872                           ; BSR set to: 0
 13873  0002F0  90D8               	bcf	status,0,c
 13874  0002F2  0100               	movlb	0	; () banked
 13875  0002F4  35EB               	rlcf	_i& (0+255),w,b
 13876  0002F6  6ED9               	movwf	fsr2l,c
 13877  0002F8  0100               	movlb	0	; () banked
 13878  0002FA  35EC               	rlcf	(_i+1)& (0+255),w,b
 13879  0002FC  6EDA               	movwf	fsr2h,c
 13880  0002FE  0E72               	movlw	low _bottle_count_disp
 13881  000300  26D9               	addwf	fsr2l,f,c
 13882  000302  0E01               	movlw	high _bottle_count_disp
 13883  000304  22DA               	addwfc	fsr2h,f,c
 13884  000306  0EFF               	movlw	255
 13885  000308  6EDE               	movwf	postinc2,c
 13886  00030A  0EFF               	movlw	255
 13887  00030C  6EDD               	movwf	postdec2,c
 13888                           
 13889                           ; BSR set to: 0
 13890  00030E  0100               	movlb	0	; () banked
 13891  000310  4BEB               	infsnz	_i& (0+255),f,b
 13892  000312  2BEC               	incf	(_i+1)& (0+255),f,b
 13893  000314  D7E2               	goto	i2l6866
 13894  000316                     i2l6876:
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;main.c: 194: bottle_count_disp[1] = temp + 1;
 13898  000316  0E01               	movlw	1
 13899  000318  247C               	addwf	_temp,w,c
 13900  00031A  0101               	movlb	1	; () banked
 13901  00031C  6F74               	movwf	(_bottle_count_disp+2)& (0+255),b
 13902  00031E  0E00               	movlw	0
 13903  000320  207D               	addwfc	_temp+1,w,c
 13904  000322  0101               	movlb	1	; () banked
 13905  000324  6F75               	movwf	(_bottle_count_disp+3)& (0+255),b
 13906                           
 13907                           ; BSR set to: 1
 13908                           ;main.c: 195: bottle_count_array[0] = eeprom_readbyte(25);
 13909  000326  0E00               	movlw	0
 13910  000328  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13911  00032A  0E19               	movlw	25
 13912  00032C  6E01               	movwf	i2eeprom_readbyte@address,c
 13913  00032E  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13914  000332  0100               	movlb	0	; () banked
 13915  000334  6F80               	movwf	??_isr& (0+255),b
 13916  000336  0100               	movlb	0	; () banked
 13917  000338  5180               	movf	??_isr& (0+255),w,b
 13918  00033A  0100               	movlb	0	; () banked
 13919  00033C  6FDF               	movwf	_bottle_count_array& (0+255),b
 13920  00033E  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 13921                           
 13922                           ; BSR set to: 0
 13923                           ;main.c: 196: bottle_count_array[1] = eeprom_readbyte(26);
 13924  000340  0E00               	movlw	0
 13925  000342  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13926  000344  0E1A               	movlw	26
 13927  000346  6E01               	movwf	i2eeprom_readbyte@address,c
 13928  000348  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13929  00034C  0100               	movlb	0	; () banked
 13930  00034E  6F80               	movwf	??_isr& (0+255),b
 13931  000350  0100               	movlb	0	; () banked
 13932  000352  5180               	movf	??_isr& (0+255),w,b
 13933  000354  0100               	movlb	0	; () banked
 13934  000356  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 13935  000358  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;main.c: 197: bottle_count_array[2] = eeprom_readbyte(27);
 13939  00035A  0E00               	movlw	0
 13940  00035C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13941  00035E  0E1B               	movlw	27
 13942  000360  6E01               	movwf	i2eeprom_readbyte@address,c
 13943  000362  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13944  000366  0100               	movlb	0	; () banked
 13945  000368  6F80               	movwf	??_isr& (0+255),b
 13946  00036A  0100               	movlb	0	; () banked
 13947  00036C  5180               	movf	??_isr& (0+255),w,b
 13948  00036E  0100               	movlb	0	; () banked
 13949  000370  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 13950  000372  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;main.c: 198: bottle_count_array[3] = eeprom_readbyte(28);
 13954  000374  0E00               	movlw	0
 13955  000376  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13956  000378  0E1C               	movlw	28
 13957  00037A  6E01               	movwf	i2eeprom_readbyte@address,c
 13958  00037C  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13959  000380  0100               	movlb	0	; () banked
 13960  000382  6F80               	movwf	??_isr& (0+255),b
 13961  000384  0100               	movlb	0	; () banked
 13962  000386  5180               	movf	??_isr& (0+255),w,b
 13963  000388  0100               	movlb	0	; () banked
 13964  00038A  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 13965  00038C  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;main.c: 199: bottle_count_array[4] = eeprom_readbyte(29);
 13969  00038E  0E00               	movlw	0
 13970  000390  6E02               	movwf	i2eeprom_readbyte@address+1,c
 13971  000392  0E1D               	movlw	29
 13972  000394  6E01               	movwf	i2eeprom_readbyte@address,c
 13973  000396  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 13974  00039A  0100               	movlb	0	; () banked
 13975  00039C  6F80               	movwf	??_isr& (0+255),b
 13976  00039E  0100               	movlb	0	; () banked
 13977  0003A0  5180               	movf	??_isr& (0+255),w,b
 13978  0003A2  0100               	movlb	0	; () banked
 13979  0003A4  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 13980  0003A6  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 13981                           
 13982                           ; BSR set to: 0
 13983                           ;main.c: 200: curr_state = BOTTLECOUNT1;
 13984  0003A8  0E06               	movlw	6
 13985  0003AA  0100               	movlb	0	; () banked
 13986  0003AC  6FED               	movwf	_curr_state& (0+255),b
 13987  0003AE                     i2l6890:
 13988  0003AE  3881               	swapf	3969,w,c	;volatile
 13989  0003B0  0B0F               	andlw	15
 13990  0003B2  0A04               	xorlw	4
 13991  0003B4  A4D8               	btfss	status,2,c
 13992  0003B6  D278               	goto	i2l357
 13993  0003B8  D7FA               	goto	i2l6890
 13994  0003BA                     i2l376:
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;main.c: 204: temp = bottle_count_disp[2];
 13998  0003BA  C176  F07C         	movff	_bottle_count_disp+4,_temp
 13999  0003BE  C177  F07D         	movff	_bottle_count_disp+5,_temp+1
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;main.c: 205: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14003  0003C2  0E00               	movlw	0
 14004  0003C4  0100               	movlb	0	; () banked
 14005  0003C6  6FEC               	movwf	(_i+1)& (0+255),b
 14006  0003C8  0E00               	movlw	0
 14007  0003CA  6FEB               	movwf	_i& (0+255),b
 14008  0003CC                     i2l6894:
 14009                           
 14010                           ; BSR set to: 0
 14011  0003CC  0100               	movlb	0	; () banked
 14012  0003CE  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14013  0003D0  D008               	goto	i2l6898
 14014  0003D2  0100               	movlb	0	; () banked
 14015  0003D4  51EC               	movf	(_i+1)& (0+255),w,b
 14016  0003D6  E118               	bnz	i2l6904
 14017  0003D8  0E05               	movlw	5
 14018  0003DA  0100               	movlb	0	; () banked
 14019  0003DC  5DEB               	subwf	_i& (0+255),w,b
 14020  0003DE  B0D8               	btfsc	status,0,c
 14021  0003E0  D013               	goto	i2l6904
 14022  0003E2                     i2l6898:
 14023                           
 14024                           ; BSR set to: 0
 14025  0003E2  90D8               	bcf	status,0,c
 14026  0003E4  0100               	movlb	0	; () banked
 14027  0003E6  35EB               	rlcf	_i& (0+255),w,b
 14028  0003E8  6ED9               	movwf	fsr2l,c
 14029  0003EA  0100               	movlb	0	; () banked
 14030  0003EC  35EC               	rlcf	(_i+1)& (0+255),w,b
 14031  0003EE  6EDA               	movwf	fsr2h,c
 14032  0003F0  0E72               	movlw	low _bottle_count_disp
 14033  0003F2  26D9               	addwf	fsr2l,f,c
 14034  0003F4  0E01               	movlw	high _bottle_count_disp
 14035  0003F6  22DA               	addwfc	fsr2h,f,c
 14036  0003F8  0EFF               	movlw	255
 14037  0003FA  6EDE               	movwf	postinc2,c
 14038  0003FC  0EFF               	movlw	255
 14039  0003FE  6EDD               	movwf	postdec2,c
 14040                           
 14041                           ; BSR set to: 0
 14042  000400  0100               	movlb	0	; () banked
 14043  000402  4BEB               	infsnz	_i& (0+255),f,b
 14044  000404  2BEC               	incf	(_i+1)& (0+255),f,b
 14045  000406  D7E2               	goto	i2l6894
 14046  000408                     i2l6904:
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;main.c: 206: bottle_count_disp[2] = temp + 1;
 14050  000408  0E01               	movlw	1
 14051  00040A  247C               	addwf	_temp,w,c
 14052  00040C  0101               	movlb	1	; () banked
 14053  00040E  6F76               	movwf	(_bottle_count_disp+4)& (0+255),b
 14054  000410  0E00               	movlw	0
 14055  000412  207D               	addwfc	_temp+1,w,c
 14056  000414  0101               	movlb	1	; () banked
 14057  000416  6F77               	movwf	(_bottle_count_disp+5)& (0+255),b
 14058                           
 14059                           ; BSR set to: 1
 14060                           ;main.c: 207: bottle_count_array[0] = eeprom_readbyte(30);
 14061  000418  0E00               	movlw	0
 14062  00041A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14063  00041C  0E1E               	movlw	30
 14064  00041E  6E01               	movwf	i2eeprom_readbyte@address,c
 14065  000420  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14066  000424  0100               	movlb	0	; () banked
 14067  000426  6F80               	movwf	??_isr& (0+255),b
 14068  000428  0100               	movlb	0	; () banked
 14069  00042A  5180               	movf	??_isr& (0+255),w,b
 14070  00042C  0100               	movlb	0	; () banked
 14071  00042E  6FDF               	movwf	_bottle_count_array& (0+255),b
 14072  000430  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 14073                           
 14074                           ; BSR set to: 0
 14075                           ;main.c: 208: bottle_count_array[1] = eeprom_readbyte(31);
 14076  000432  0E00               	movlw	0
 14077  000434  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14078  000436  0E1F               	movlw	31
 14079  000438  6E01               	movwf	i2eeprom_readbyte@address,c
 14080  00043A  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14081  00043E  0100               	movlb	0	; () banked
 14082  000440  6F80               	movwf	??_isr& (0+255),b
 14083  000442  0100               	movlb	0	; () banked
 14084  000444  5180               	movf	??_isr& (0+255),w,b
 14085  000446  0100               	movlb	0	; () banked
 14086  000448  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 14087  00044A  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;main.c: 209: bottle_count_array[2] = eeprom_readbyte(32);
 14091  00044C  0E00               	movlw	0
 14092  00044E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14093  000450  0E20               	movlw	32
 14094  000452  6E01               	movwf	i2eeprom_readbyte@address,c
 14095  000454  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14096  000458  0100               	movlb	0	; () banked
 14097  00045A  6F80               	movwf	??_isr& (0+255),b
 14098  00045C  0100               	movlb	0	; () banked
 14099  00045E  5180               	movf	??_isr& (0+255),w,b
 14100  000460  0100               	movlb	0	; () banked
 14101  000462  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14102  000464  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;main.c: 210: bottle_count_array[3] = eeprom_readbyte(33);
 14106  000466  0E00               	movlw	0
 14107  000468  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14108  00046A  0E21               	movlw	33
 14109  00046C  6E01               	movwf	i2eeprom_readbyte@address,c
 14110  00046E  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14111  000472  0100               	movlb	0	; () banked
 14112  000474  6F80               	movwf	??_isr& (0+255),b
 14113  000476  0100               	movlb	0	; () banked
 14114  000478  5180               	movf	??_isr& (0+255),w,b
 14115  00047A  0100               	movlb	0	; () banked
 14116  00047C  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14117  00047E  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;main.c: 211: bottle_count_array[4] = eeprom_readbyte(34);
 14121  000480  0E00               	movlw	0
 14122  000482  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14123  000484  0E22               	movlw	34
 14124  000486  6E01               	movwf	i2eeprom_readbyte@address,c
 14125  000488  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14126  00048C  0100               	movlb	0	; () banked
 14127  00048E  6F80               	movwf	??_isr& (0+255),b
 14128  000490  0100               	movlb	0	; () banked
 14129  000492  5180               	movf	??_isr& (0+255),w,b
 14130  000494  0100               	movlb	0	; () banked
 14131  000496  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14132  000498  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;main.c: 212: curr_state = BOTTLECOUNT2;
 14136  00049A  0E07               	movlw	7
 14137  00049C  0100               	movlb	0	; () banked
 14138  00049E  6FED               	movwf	_curr_state& (0+255),b
 14139  0004A0                     i2l6918:
 14140  0004A0  3881               	swapf	3969,w,c	;volatile
 14141  0004A2  0B0F               	andlw	15
 14142  0004A4  0A05               	xorlw	5
 14143  0004A6  A4D8               	btfss	status,2,c
 14144  0004A8  D1FF               	goto	i2l357
 14145  0004AA  D7FA               	goto	i2l6918
 14146  0004AC                     i2l382:
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;main.c: 216: temp = bottle_count_disp[3];
 14150  0004AC  C178  F07C         	movff	_bottle_count_disp+6,_temp
 14151  0004B0  C179  F07D         	movff	_bottle_count_disp+7,_temp+1
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;main.c: 217: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14155  0004B4  0E00               	movlw	0
 14156  0004B6  0100               	movlb	0	; () banked
 14157  0004B8  6FEC               	movwf	(_i+1)& (0+255),b
 14158  0004BA  0E00               	movlw	0
 14159  0004BC  6FEB               	movwf	_i& (0+255),b
 14160  0004BE                     i2l6922:
 14161                           
 14162                           ; BSR set to: 0
 14163  0004BE  0100               	movlb	0	; () banked
 14164  0004C0  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14165  0004C2  D008               	goto	i2l6926
 14166  0004C4  0100               	movlb	0	; () banked
 14167  0004C6  51EC               	movf	(_i+1)& (0+255),w,b
 14168  0004C8  E118               	bnz	i2l6932
 14169  0004CA  0E05               	movlw	5
 14170  0004CC  0100               	movlb	0	; () banked
 14171  0004CE  5DEB               	subwf	_i& (0+255),w,b
 14172  0004D0  B0D8               	btfsc	status,0,c
 14173  0004D2  D013               	goto	i2l6932
 14174  0004D4                     i2l6926:
 14175                           
 14176                           ; BSR set to: 0
 14177  0004D4  90D8               	bcf	status,0,c
 14178  0004D6  0100               	movlb	0	; () banked
 14179  0004D8  35EB               	rlcf	_i& (0+255),w,b
 14180  0004DA  6ED9               	movwf	fsr2l,c
 14181  0004DC  0100               	movlb	0	; () banked
 14182  0004DE  35EC               	rlcf	(_i+1)& (0+255),w,b
 14183  0004E0  6EDA               	movwf	fsr2h,c
 14184  0004E2  0E72               	movlw	low _bottle_count_disp
 14185  0004E4  26D9               	addwf	fsr2l,f,c
 14186  0004E6  0E01               	movlw	high _bottle_count_disp
 14187  0004E8  22DA               	addwfc	fsr2h,f,c
 14188  0004EA  0EFF               	movlw	255
 14189  0004EC  6EDE               	movwf	postinc2,c
 14190  0004EE  0EFF               	movlw	255
 14191  0004F0  6EDD               	movwf	postdec2,c
 14192                           
 14193                           ; BSR set to: 0
 14194  0004F2  0100               	movlb	0	; () banked
 14195  0004F4  4BEB               	infsnz	_i& (0+255),f,b
 14196  0004F6  2BEC               	incf	(_i+1)& (0+255),f,b
 14197  0004F8  D7E2               	goto	i2l6922
 14198  0004FA                     i2l6932:
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;main.c: 218: bottle_count_disp[3] = temp + 1;
 14202  0004FA  0E01               	movlw	1
 14203  0004FC  247C               	addwf	_temp,w,c
 14204  0004FE  0101               	movlb	1	; () banked
 14205  000500  6F78               	movwf	(_bottle_count_disp+6)& (0+255),b
 14206  000502  0E00               	movlw	0
 14207  000504  207D               	addwfc	_temp+1,w,c
 14208  000506  0101               	movlb	1	; () banked
 14209  000508  6F79               	movwf	(_bottle_count_disp+7)& (0+255),b
 14210                           
 14211                           ; BSR set to: 1
 14212                           ;main.c: 219: bottle_count_array[0] = eeprom_readbyte(35);
 14213  00050A  0E00               	movlw	0
 14214  00050C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14215  00050E  0E23               	movlw	35
 14216  000510  6E01               	movwf	i2eeprom_readbyte@address,c
 14217  000512  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14218  000516  0100               	movlb	0	; () banked
 14219  000518  6F80               	movwf	??_isr& (0+255),b
 14220  00051A  0100               	movlb	0	; () banked
 14221  00051C  5180               	movf	??_isr& (0+255),w,b
 14222  00051E  0100               	movlb	0	; () banked
 14223  000520  6FDF               	movwf	_bottle_count_array& (0+255),b
 14224  000522  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;main.c: 220: bottle_count_array[1] = eeprom_readbyte(36);
 14228  000524  0E00               	movlw	0
 14229  000526  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14230  000528  0E24               	movlw	36
 14231  00052A  6E01               	movwf	i2eeprom_readbyte@address,c
 14232  00052C  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14233  000530  0100               	movlb	0	; () banked
 14234  000532  6F80               	movwf	??_isr& (0+255),b
 14235  000534  0100               	movlb	0	; () banked
 14236  000536  5180               	movf	??_isr& (0+255),w,b
 14237  000538  0100               	movlb	0	; () banked
 14238  00053A  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 14239  00053C  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;main.c: 221: bottle_count_array[2] = eeprom_readbyte(37);
 14243  00053E  0E00               	movlw	0
 14244  000540  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14245  000542  0E25               	movlw	37
 14246  000544  6E01               	movwf	i2eeprom_readbyte@address,c
 14247  000546  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14248  00054A  0100               	movlb	0	; () banked
 14249  00054C  6F80               	movwf	??_isr& (0+255),b
 14250  00054E  0100               	movlb	0	; () banked
 14251  000550  5180               	movf	??_isr& (0+255),w,b
 14252  000552  0100               	movlb	0	; () banked
 14253  000554  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14254  000556  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;main.c: 222: bottle_count_array[3] = eeprom_readbyte(38);
 14258  000558  0E00               	movlw	0
 14259  00055A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14260  00055C  0E26               	movlw	38
 14261  00055E  6E01               	movwf	i2eeprom_readbyte@address,c
 14262  000560  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14263  000564  0100               	movlb	0	; () banked
 14264  000566  6F80               	movwf	??_isr& (0+255),b
 14265  000568  0100               	movlb	0	; () banked
 14266  00056A  5180               	movf	??_isr& (0+255),w,b
 14267  00056C  0100               	movlb	0	; () banked
 14268  00056E  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14269  000570  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;main.c: 223: bottle_count_array[4] = eeprom_readbyte(39);
 14273  000572  0E00               	movlw	0
 14274  000574  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14275  000576  0E27               	movlw	39
 14276  000578  6E01               	movwf	i2eeprom_readbyte@address,c
 14277  00057A  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14278  00057E  0100               	movlb	0	; () banked
 14279  000580  6F80               	movwf	??_isr& (0+255),b
 14280  000582  0100               	movlb	0	; () banked
 14281  000584  5180               	movf	??_isr& (0+255),w,b
 14282  000586  0100               	movlb	0	; () banked
 14283  000588  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14284  00058A  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;main.c: 224: curr_state = BOTTLECOUNT3;
 14288  00058C  0E08               	movlw	8
 14289  00058E  0100               	movlb	0	; () banked
 14290  000590  6FED               	movwf	_curr_state& (0+255),b
 14291  000592                     i2l6946:
 14292  000592  3881               	swapf	3969,w,c	;volatile
 14293  000594  0B0F               	andlw	15
 14294  000596  0A06               	xorlw	6
 14295  000598  A4D8               	btfss	status,2,c
 14296  00059A  D186               	goto	i2l357
 14297  00059C  D7FA               	goto	i2l6946
 14298  00059E                     i2l388:
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;main.c: 228: temp = bottle_count_disp[4];
 14302  00059E  C17A  F07C         	movff	_bottle_count_disp+8,_temp
 14303  0005A2  C17B  F07D         	movff	_bottle_count_disp+9,_temp+1
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;main.c: 229: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14307  0005A6  0E00               	movlw	0
 14308  0005A8  0100               	movlb	0	; () banked
 14309  0005AA  6FEC               	movwf	(_i+1)& (0+255),b
 14310  0005AC  0E00               	movlw	0
 14311  0005AE  6FEB               	movwf	_i& (0+255),b
 14312  0005B0                     i2l6950:
 14313                           
 14314                           ; BSR set to: 0
 14315  0005B0  0100               	movlb	0	; () banked
 14316  0005B2  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14317  0005B4  D008               	goto	i2l6954
 14318  0005B6  0100               	movlb	0	; () banked
 14319  0005B8  51EC               	movf	(_i+1)& (0+255),w,b
 14320  0005BA  E118               	bnz	i2l6960
 14321  0005BC  0E05               	movlw	5
 14322  0005BE  0100               	movlb	0	; () banked
 14323  0005C0  5DEB               	subwf	_i& (0+255),w,b
 14324  0005C2  B0D8               	btfsc	status,0,c
 14325  0005C4  D013               	goto	i2l6960
 14326  0005C6                     i2l6954:
 14327                           
 14328                           ; BSR set to: 0
 14329  0005C6  90D8               	bcf	status,0,c
 14330  0005C8  0100               	movlb	0	; () banked
 14331  0005CA  35EB               	rlcf	_i& (0+255),w,b
 14332  0005CC  6ED9               	movwf	fsr2l,c
 14333  0005CE  0100               	movlb	0	; () banked
 14334  0005D0  35EC               	rlcf	(_i+1)& (0+255),w,b
 14335  0005D2  6EDA               	movwf	fsr2h,c
 14336  0005D4  0E72               	movlw	low _bottle_count_disp
 14337  0005D6  26D9               	addwf	fsr2l,f,c
 14338  0005D8  0E01               	movlw	high _bottle_count_disp
 14339  0005DA  22DA               	addwfc	fsr2h,f,c
 14340  0005DC  0EFF               	movlw	255
 14341  0005DE  6EDE               	movwf	postinc2,c
 14342  0005E0  0EFF               	movlw	255
 14343  0005E2  6EDD               	movwf	postdec2,c
 14344                           
 14345                           ; BSR set to: 0
 14346  0005E4  0100               	movlb	0	; () banked
 14347  0005E6  4BEB               	infsnz	_i& (0+255),f,b
 14348  0005E8  2BEC               	incf	(_i+1)& (0+255),f,b
 14349  0005EA  D7E2               	goto	i2l6950
 14350  0005EC                     i2l6960:
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;main.c: 230: bottle_count_disp[4] = temp + 1;
 14354  0005EC  0E01               	movlw	1
 14355  0005EE  247C               	addwf	_temp,w,c
 14356  0005F0  0101               	movlb	1	; () banked
 14357  0005F2  6F7A               	movwf	(_bottle_count_disp+8)& (0+255),b
 14358  0005F4  0E00               	movlw	0
 14359  0005F6  207D               	addwfc	_temp+1,w,c
 14360  0005F8  0101               	movlb	1	; () banked
 14361  0005FA  6F7B               	movwf	(_bottle_count_disp+9)& (0+255),b
 14362                           
 14363                           ; BSR set to: 1
 14364                           ;main.c: 231: bottle_count_array[0] = eeprom_readbyte(40);
 14365  0005FC  0E00               	movlw	0
 14366  0005FE  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14367  000600  0E28               	movlw	40
 14368  000602  6E01               	movwf	i2eeprom_readbyte@address,c
 14369  000604  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14370  000608  0100               	movlb	0	; () banked
 14371  00060A  6F80               	movwf	??_isr& (0+255),b
 14372  00060C  0100               	movlb	0	; () banked
 14373  00060E  5180               	movf	??_isr& (0+255),w,b
 14374  000610  0100               	movlb	0	; () banked
 14375  000612  6FDF               	movwf	_bottle_count_array& (0+255),b
 14376  000614  6BE0               	clrf	(_bottle_count_array+1)& (0+255),b
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;main.c: 232: bottle_count_array[1] = eeprom_readbyte(41);
 14380  000616  0E00               	movlw	0
 14381  000618  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14382  00061A  0E29               	movlw	41
 14383  00061C  6E01               	movwf	i2eeprom_readbyte@address,c
 14384  00061E  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14385  000622  0100               	movlb	0	; () banked
 14386  000624  6F80               	movwf	??_isr& (0+255),b
 14387  000626  0100               	movlb	0	; () banked
 14388  000628  5180               	movf	??_isr& (0+255),w,b
 14389  00062A  0100               	movlb	0	; () banked
 14390  00062C  6FE1               	movwf	(_bottle_count_array+2)& (0+255),b
 14391  00062E  6BE2               	clrf	(_bottle_count_array+3)& (0+255),b
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;main.c: 233: bottle_count_array[2] = eeprom_readbyte(42);
 14395  000630  0E00               	movlw	0
 14396  000632  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14397  000634  0E2A               	movlw	42
 14398  000636  6E01               	movwf	i2eeprom_readbyte@address,c
 14399  000638  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14400  00063C  0100               	movlb	0	; () banked
 14401  00063E  6F80               	movwf	??_isr& (0+255),b
 14402  000640  0100               	movlb	0	; () banked
 14403  000642  5180               	movf	??_isr& (0+255),w,b
 14404  000644  0100               	movlb	0	; () banked
 14405  000646  6FE3               	movwf	(_bottle_count_array+4)& (0+255),b
 14406  000648  6BE4               	clrf	(_bottle_count_array+5)& (0+255),b
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;main.c: 234: bottle_count_array[3] = eeprom_readbyte(43);
 14410  00064A  0E00               	movlw	0
 14411  00064C  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14412  00064E  0E2B               	movlw	43
 14413  000650  6E01               	movwf	i2eeprom_readbyte@address,c
 14414  000652  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14415  000656  0100               	movlb	0	; () banked
 14416  000658  6F80               	movwf	??_isr& (0+255),b
 14417  00065A  0100               	movlb	0	; () banked
 14418  00065C  5180               	movf	??_isr& (0+255),w,b
 14419  00065E  0100               	movlb	0	; () banked
 14420  000660  6FE5               	movwf	(_bottle_count_array+6)& (0+255),b
 14421  000662  6BE6               	clrf	(_bottle_count_array+7)& (0+255),b
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;main.c: 235: bottle_count_array[4] = eeprom_readbyte(44);
 14425  000664  0E00               	movlw	0
 14426  000666  6E02               	movwf	i2eeprom_readbyte@address+1,c
 14427  000668  0E2C               	movlw	44
 14428  00066A  6E01               	movwf	i2eeprom_readbyte@address,c
 14429  00066C  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 14430  000670  0100               	movlb	0	; () banked
 14431  000672  6F80               	movwf	??_isr& (0+255),b
 14432  000674  0100               	movlb	0	; () banked
 14433  000676  5180               	movf	??_isr& (0+255),w,b
 14434  000678  0100               	movlb	0	; () banked
 14435  00067A  6FE7               	movwf	(_bottle_count_array+8)& (0+255),b
 14436  00067C  6BE8               	clrf	(_bottle_count_array+9)& (0+255),b
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;main.c: 236: curr_state = BOTTLECOUNT4;
 14440  00067E  0E09               	movlw	9
 14441  000680  0100               	movlb	0	; () banked
 14442  000682  6FED               	movwf	_curr_state& (0+255),b
 14443  000684                     i2l6974:
 14444  000684  3881               	swapf	3969,w,c	;volatile
 14445  000686  0B0F               	andlw	15
 14446  000688  0A07               	xorlw	7
 14447  00068A  A4D8               	btfss	status,2,c
 14448  00068C  D10D               	goto	i2l357
 14449  00068E  D7FA               	goto	i2l6974
 14450  000690                     i2l394:
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;main.c: 240: LATAbits.LATA2 = 0;
 14454  000690  9489               	bcf	3977,2,c	;volatile
 14455                           
 14456                           ;main.c: 241: TMR0IE = 0;
 14457  000692  9AF2               	bcf	intcon,5,c	;volatile
 14458                           
 14459                           ;main.c: 242: TMR0ON = 0;
 14460  000694  9ED5               	bcf	4053,7,c	;volatile
 14461                           
 14462                           ;main.c: 243: TMR1ON = 0;
 14463  000696  90CD               	bcf	4045,0,c	;volatile
 14464                           
 14465                           ;main.c: 244: TMR3ON = 0;
 14466  000698  90B1               	bcf	4017,0,c	;volatile
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;main.c: 246: read_time();
 14470  00069A  ECB6  F026         	call	i2_read_time	;wreg free
 14471                           
 14472                           ;main.c: 247: end_time[1] = time[1];
 14473  00069E  C111  F077         	movff	_time+1,_end_time+1
 14474                           
 14475                           ;main.c: 248: end_time[0] = time[0];
 14476  0006A2  C110  F076         	movff	_time,_end_time
 14477                           
 14478                           ;main.c: 249: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14479  0006A6  C07B  F063         	movff	_start_time+1,i2dec_to_hex@num
 14480  0006AA  6A64               	clrf	i2dec_to_hex@num+1,c
 14481  0006AC  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 14482  0006B0  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14483  0006B4  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14484                           
 14485                           ;main.c: 249: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14486  0006B8  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14487  0006BC  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14488  0006C0  0E00               	movlw	0
 14489  0006C2  6E04               	movwf	i2___wmul@multiplicand+1,c
 14490  0006C4  0E3C               	movlw	60
 14491  0006C6  6E03               	movwf	i2___wmul@multiplicand,c
 14492  0006C8  ECD5  F029         	call	i2___wmul	;wreg free
 14493  0006CC  C001  F080         	movff	?i2___wmul,??_isr
 14494  0006D0  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14495  0006D4  C07A  F063         	movff	_start_time,i2dec_to_hex@num
 14496  0006D8  6A64               	clrf	i2dec_to_hex@num+1,c
 14497  0006DA  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 14498  0006DE  5063               	movf	?i2_dec_to_hex,w,c
 14499  0006E0  0100               	movlb	0	; () banked
 14500  0006E2  2580               	addwf	??_isr& (0+255),w,b
 14501  0006E4  0101               	movlb	1	; () banked
 14502  0006E6  6F47               	movwf	_stime& (0+255),b
 14503  0006E8  5064               	movf	?i2_dec_to_hex+1,w,c
 14504  0006EA  0100               	movlb	0	; () banked
 14505  0006EC  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14506  0006EE  0101               	movlb	1	; () banked
 14507  0006F0  6F48               	movwf	(_stime+1)& (0+255),b
 14508                           
 14509                           ; BSR set to: 1
 14510                           ;main.c: 250: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14511  0006F2  C077  F063         	movff	_end_time+1,i2dec_to_hex@num
 14512  0006F6  6A64               	clrf	i2dec_to_hex@num+1,c
 14513  0006F8  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 14514  0006FC  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14515  000700  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14516                           
 14517                           ;main.c: 250: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 14518  000704  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 14519  000708  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 14520  00070C  0E00               	movlw	0
 14521  00070E  6E04               	movwf	i2___wmul@multiplicand+1,c
 14522  000710  0E3C               	movlw	60
 14523  000712  6E03               	movwf	i2___wmul@multiplicand,c
 14524  000714  ECD5  F029         	call	i2___wmul	;wreg free
 14525  000718  C001  F080         	movff	?i2___wmul,??_isr
 14526  00071C  C002  F081         	movff	?i2___wmul+1,??_isr+1
 14527  000720  C076  F063         	movff	_end_time,i2dec_to_hex@num
 14528  000724  6A64               	clrf	i2dec_to_hex@num+1,c
 14529  000726  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 14530  00072A  5063               	movf	?i2_dec_to_hex,w,c
 14531  00072C  0100               	movlb	0	; () banked
 14532  00072E  2580               	addwf	??_isr& (0+255),w,b
 14533  000730  0101               	movlb	1	; () banked
 14534  000732  6F31               	movwf	_etime& (0+255),b
 14535  000734  5064               	movf	?i2_dec_to_hex+1,w,c
 14536  000736  0100               	movlb	0	; () banked
 14537  000738  2181               	addwfc	(??_isr+1)& (0+255),w,b
 14538  00073A  0101               	movlb	1	; () banked
 14539  00073C  6F32               	movwf	(_etime+1)& (0+255),b
 14540                           
 14541                           ; BSR set to: 1
 14542                           ;main.c: 251: lcdInst(0b00000001);
 14543  00073E  0E01               	movlw	1
 14544  000740  EC66  F02A         	call	i2_lcdInst
 14545                           
 14546                           ;main.c: 252: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14547  000744  0E00               	movlw	0
 14548  000746  0100               	movlb	0	; () banked
 14549  000748  6FEC               	movwf	(_i+1)& (0+255),b
 14550  00074A  0E00               	movlw	0
 14551  00074C  6FEB               	movwf	_i& (0+255),b
 14552  00074E                     i2l6994:
 14553                           
 14554                           ; BSR set to: 0
 14555  00074E  0100               	movlb	0	; () banked
 14556  000750  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14557  000752  D008               	goto	i2l6998
 14558  000754  0100               	movlb	0	; () banked
 14559  000756  51EC               	movf	(_i+1)& (0+255),w,b
 14560  000758  E118               	bnz	i2l7004
 14561  00075A  0E05               	movlw	5
 14562  00075C  0100               	movlb	0	; () banked
 14563  00075E  5DEB               	subwf	_i& (0+255),w,b
 14564  000760  B0D8               	btfsc	status,0,c
 14565  000762  D013               	goto	i2l7004
 14566  000764                     i2l6998:
 14567                           
 14568                           ; BSR set to: 0
 14569  000764  90D8               	bcf	status,0,c
 14570  000766  0100               	movlb	0	; () banked
 14571  000768  35EB               	rlcf	_i& (0+255),w,b
 14572  00076A  6ED9               	movwf	fsr2l,c
 14573  00076C  0100               	movlb	0	; () banked
 14574  00076E  35EC               	rlcf	(_i+1)& (0+255),w,b
 14575  000770  6EDA               	movwf	fsr2h,c
 14576  000772  0E72               	movlw	low _bottle_count_disp
 14577  000774  26D9               	addwf	fsr2l,f,c
 14578  000776  0E01               	movlw	high _bottle_count_disp
 14579  000778  22DA               	addwfc	fsr2h,f,c
 14580  00077A  0EFF               	movlw	255
 14581  00077C  6EDE               	movwf	postinc2,c
 14582  00077E  0EFF               	movlw	255
 14583  000780  6EDD               	movwf	postdec2,c
 14584                           
 14585                           ; BSR set to: 0
 14586  000782  0100               	movlb	0	; () banked
 14587  000784  4BEB               	infsnz	_i& (0+255),f,b
 14588  000786  2BEC               	incf	(_i+1)& (0+255),f,b
 14589  000788  D7E2               	goto	i2l6994
 14590  00078A                     i2l7004:
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;main.c: 253: savedata();
 14594  00078A  ECA3  F00F         	call	i2_savedata	;wreg free
 14595                           
 14596                           ;main.c: 254: curr_state = OPERATIONEND;
 14597  00078E  0E03               	movlw	3
 14598  000790  D051               	goto	L21
 14599  000792                     i2l7008:
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;main.c: 257: read_colorsensor();
 14603  000792  ECE4  F020         	call	i2_read_colorsensor	;wreg free
 14604                           
 14605                           ;main.c: 258: lcdInst(0b10000000);
 14606  000796  0E80               	movlw	128
 14607  000798  EC66  F02A         	call	i2_lcdInst
 14608                           
 14609                           ;main.c: 259: printf("C%u R%u                ", color[0], color[1]);
 14610  00079C  0E74               	movlw	low STR_2
 14611  00079E  6E0D               	movwf	i2printf@f,c
 14612  0007A0  0EFE               	movlw	high STR_2
 14613  0007A2  6E0E               	movwf	i2printf@f+1,c
 14614  0007A4  C100  F00F         	movff	_color,?i2_printf+2
 14615  0007A8  C101  F010         	movff	_color+1,?i2_printf+3
 14616  0007AC  C102  F011         	movff	_color+2,?i2_printf+4
 14617  0007B0  C103  F012         	movff	_color+3,?i2_printf+5
 14618  0007B4  EC07  F00A         	call	i2_printf	;wreg free
 14619                           
 14620                           ;main.c: 260: lcdInst(0b11000000);
 14621  0007B8  0EC0               	movlw	192
 14622  0007BA  EC66  F02A         	call	i2_lcdInst
 14623                           
 14624                           ;main.c: 261: printf("G%u B%u                ", color[2], color[3]);
 14625  0007BE  0E5C               	movlw	low STR_3
 14626  0007C0  6E0D               	movwf	i2printf@f,c
 14627  0007C2  0EFE               	movlw	high STR_3
 14628  0007C4  6E0E               	movwf	i2printf@f+1,c
 14629  0007C6  C104  F00F         	movff	_color+4,?i2_printf+2
 14630  0007CA  C105  F010         	movff	_color+5,?i2_printf+3
 14631  0007CE  C106  F011         	movff	_color+6,?i2_printf+4
 14632  0007D2  C107  F012         	movff	_color+7,?i2_printf+5
 14633  0007D6  EC07  F00A         	call	i2_printf	;wreg free
 14634                           
 14635                           ;main.c: 262: break;
 14636  0007DA  D066               	goto	i2l357
 14637  0007DC                     i2l398:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;main.c: 264: LATAbits.LATA2 = 0;
 14641  0007DC  9489               	bcf	3977,2,c	;volatile
 14642                           
 14643                           ;main.c: 265: (INTCONbits.GIE = 0);
 14644  0007DE  9EF2               	bcf	intcon,7,c	;volatile
 14645                           
 14646                           ;main.c: 266: TMR0ON = 0;
 14647  0007E0  9ED5               	bcf	4053,7,c	;volatile
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;main.c: 267: lcdInst(0b00000001);
 14651  0007E2  0E01               	movlw	1
 14652  0007E4  EC66  F02A         	call	i2_lcdInst
 14653                           
 14654                           ;main.c: 268: curr_state = EMERGENCYSTOP;
 14655  0007E8  0E01               	movlw	1
 14656  0007EA  D024               	goto	L21
 14657  0007EC                     i2l7018:
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;main.c: 271: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 14661  0007EC  0E00               	movlw	0
 14662  0007EE  0100               	movlb	0	; () banked
 14663  0007F0  6FEC               	movwf	(_i+1)& (0+255),b
 14664  0007F2  0E00               	movlw	0
 14665  0007F4  6FEB               	movwf	_i& (0+255),b
 14666  0007F6                     i2l7020:
 14667                           
 14668                           ; BSR set to: 0
 14669  0007F6  0100               	movlb	0	; () banked
 14670  0007F8  BFEC               	btfsc	(_i+1)& (0+255),7,b
 14671  0007FA  D008               	goto	i2l7024
 14672  0007FC  0100               	movlb	0	; () banked
 14673  0007FE  51EC               	movf	(_i+1)& (0+255),w,b
 14674  000800  E118               	bnz	i2l7030
 14675  000802  0E05               	movlw	5
 14676  000804  0100               	movlb	0	; () banked
 14677  000806  5DEB               	subwf	_i& (0+255),w,b
 14678  000808  B0D8               	btfsc	status,0,c
 14679  00080A  D013               	goto	i2l7030
 14680  00080C                     i2l7024:
 14681                           
 14682                           ; BSR set to: 0
 14683  00080C  90D8               	bcf	status,0,c
 14684  00080E  0100               	movlb	0	; () banked
 14685  000810  35EB               	rlcf	_i& (0+255),w,b
 14686  000812  6ED9               	movwf	fsr2l,c
 14687  000814  0100               	movlb	0	; () banked
 14688  000816  35EC               	rlcf	(_i+1)& (0+255),w,b
 14689  000818  6EDA               	movwf	fsr2h,c
 14690  00081A  0E72               	movlw	low _bottle_count_disp
 14691  00081C  26D9               	addwf	fsr2l,f,c
 14692  00081E  0E01               	movlw	high _bottle_count_disp
 14693  000820  22DA               	addwfc	fsr2h,f,c
 14694  000822  0EFF               	movlw	255
 14695  000824  6EDE               	movwf	postinc2,c
 14696  000826  0EFF               	movlw	255
 14697  000828  6EDD               	movwf	postdec2,c
 14698                           
 14699                           ; BSR set to: 0
 14700  00082A  0100               	movlb	0	; () banked
 14701  00082C  4BEB               	infsnz	_i& (0+255),f,b
 14702  00082E  2BEC               	incf	(_i+1)& (0+255),f,b
 14703  000830  D7E2               	goto	i2l7020
 14704  000832                     i2l7030:
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;main.c: 272: curr_state = STANDBY;
 14708  000832  0E00               	movlw	0
 14709  000834                     L21:
 14710  000834  0100               	movlb	0	; () banked
 14711  000836  6FED               	movwf	_curr_state& (0+255),b
 14712                           
 14713                           ; BSR set to: 0
 14714                           ;main.c: 280: }
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;main.c: 279: break;
 14718                           
 14719                           ;main.c: 277: case 11:
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;main.c: 276: break;
 14723                           
 14724                           ;main.c: 274: case 10:
 14725                           
 14726                           ;main.c: 273: break;
 14727  000838  D037               	goto	i2l357
 14728  00083A                     i2l7034:
 14729  00083A  3881               	swapf	3969,w,c	;volatile
 14730  00083C  0B0F               	andlw	15
 14731  00083E  0100               	movlb	0	; () banked
 14732  000840  6F80               	movwf	??_isr& (0+255),b
 14733  000842  6B81               	clrf	(??_isr+1)& (0+255),b
 14734                           
 14735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14736                           ; Switch size 1, requested type "space"
 14737                           ; Number of cases is 1, Range of values is 0 to 0
 14738                           ; switch strategies available:
 14739                           ; Name         Instructions Cycles
 14740                           ; simple_byte            4     3 (average)
 14741                           ;	Chosen strategy is simple_byte
 14742  000844  0100               	movlb	0	; () banked
 14743  000846  5181               	movf	(??_isr+1)& (0+255),w,b
 14744  000848  0A00               	xorlw	0	; case 0
 14745  00084A  A4D8               	btfss	status,2,c
 14746  00084C  D02D               	goto	i2l357
 14747                           
 14748                           ; BSR set to: 0
 14749                           ; Switch size 1, requested type "space"
 14750                           ; Number of cases is 14, Range of values is 0 to 14
 14751                           ; switch strategies available:
 14752                           ; Name         Instructions Cycles
 14753                           ; simple_byte           43    22 (average)
 14754                           ;	Chosen strategy is simple_byte
 14755  00084E  0100               	movlb	0	; () banked
 14756  000850  5180               	movf	??_isr& (0+255),w,b
 14757  000852  0A00               	xorlw	0	; case 0
 14758  000854  B4D8               	btfsc	status,2,c
 14759  000856  EF2A  F000         	goto	i2l354
 14760  00085A  0A01               	xorlw	1	; case 1
 14761  00085C  B4D8               	btfsc	status,2,c
 14762  00085E  D45C               	goto	i2l358
 14763  000860  0A03               	xorlw	3	; case 2
 14764  000862  B4D8               	btfsc	status,2,c
 14765  000864  D4D2               	goto	i2l6834
 14766  000866  0A01               	xorlw	1	; case 3
 14767  000868  B4D8               	btfsc	status,2,c
 14768  00086A  D509               	goto	i2l6850
 14769  00086C  0A07               	xorlw	7	; case 4
 14770  00086E  B4D8               	btfsc	status,2,c
 14771  000870  D52B               	goto	i2l370
 14772  000872  0A01               	xorlw	1	; case 5
 14773  000874  B4D8               	btfsc	status,2,c
 14774  000876  D5A1               	goto	i2l376
 14775  000878  0A03               	xorlw	3	; case 6
 14776  00087A  B4D8               	btfsc	status,2,c
 14777  00087C  D617               	goto	i2l382
 14778  00087E  0A01               	xorlw	1	; case 7
 14779  000880  B4D8               	btfsc	status,2,c
 14780  000882  D68D               	goto	i2l388
 14781  000884  0A0F               	xorlw	15	; case 8
 14782  000886  B4D8               	btfsc	status,2,c
 14783  000888  D703               	goto	i2l394
 14784  00088A  0A01               	xorlw	1	; case 9
 14785  00088C  B4D8               	btfsc	status,2,c
 14786  00088E  D781               	goto	i2l7008
 14787  000890  0A03               	xorlw	3	; case 10
 14788  000892  B4D8               	btfsc	status,2,c
 14789  000894  D009               	goto	i2l357
 14790  000896  0A01               	xorlw	1	; case 11
 14791  000898  B4D8               	btfsc	status,2,c
 14792  00089A  D006               	goto	i2l357
 14793  00089C  0A07               	xorlw	7	; case 12
 14794  00089E  B4D8               	btfsc	status,2,c
 14795  0008A0  D79D               	goto	i2l398
 14796  0008A2  0A02               	xorlw	2	; case 14
 14797  0008A4  B4D8               	btfsc	status,2,c
 14798  0008A6  D7A2               	goto	i2l7018
 14799  0008A8                     i2l357:
 14800                           
 14801                           ;main.c: 281: INT1IF = 0;
 14802  0008A8  90F0               	bcf	intcon3,0,c	;volatile
 14803                           
 14804                           ;main.c: 282: }
 14805  0008AA  D0EF               	goto	i2l428
 14806  0008AC                     i2l352:
 14807                           
 14808                           ;main.c: 283: else if (TMR1IF){
 14809  0008AC  A09E               	btfss	3998,0,c	;volatile
 14810  0008AE  D01D               	goto	i2l405
 14811                           
 14812                           ;main.c: 284: if(servo0_flag){
 14813  0008B0  507E               	movf	_servo0_flag,w,c
 14814  0008B2  B4D8               	btfsc	status,2,c
 14815  0008B4  D007               	goto	i2l406
 14816                           
 14817                           ;main.c: 285: LATCbits.LATC0 = 0;
 14818  0008B6  908B               	bcf	3979,0,c	;volatile
 14819                           
 14820                           ;main.c: 286: TMR1 = 16517;
 14821  0008B8  0E40               	movlw	64
 14822  0008BA  6ECF               	movwf	4047,c	;volatile
 14823  0008BC  0E85               	movlw	133
 14824  0008BE  6ECE               	movwf	4046,c	;volatile
 14825                           
 14826                           ;main.c: 287: servo0_flag = 0;
 14827  0008C0  0E00               	movlw	0
 14828  0008C2  D010               	goto	L22
 14829  0008C4                     i2l406:
 14830                           
 14831                           ;main.c: 289: else{
 14832                           ;main.c: 290: LATCbits.LATC0 = 1;
 14833  0008C4  808B               	bsf	3979,0,c	;volatile
 14834                           
 14835                           ;main.c: 291: if(servo0_timer) TMR1 = 63000;
 14836  0008C6  0101               	movlb	1	; () banked
 14837  0008C8  5143               	movf	_servo0_timer& (0+255),w,b
 14838  0008CA  0101               	movlb	1	; () banked
 14839  0008CC  1144               	iorwf	(_servo0_timer+1)& (0+255),w,b
 14840  0008CE  B4D8               	btfsc	status,2,c
 14841  0008D0  D004               	goto	i2l7046
 14842                           
 14843                           ; BSR set to: 1
 14844  0008D2  0EF6               	movlw	246
 14845  0008D4  6ECF               	movwf	4047,c	;volatile
 14846  0008D6  0E18               	movlw	24
 14847  0008D8  D003               	goto	L23
 14848  0008DA                     i2l7046:
 14849                           
 14850                           ; BSR set to: 1
 14851                           ;main.c: 292: else TMR1 = 62000;
 14852  0008DA  0EF2               	movlw	242
 14853  0008DC  6ECF               	movwf	4047,c	;volatile
 14854  0008DE  0E30               	movlw	48
 14855  0008E0                     L23:
 14856  0008E0  6ECE               	movwf	4046,c	;volatile
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;main.c: 293: servo0_flag = 1;
 14860  0008E2  0E01               	movlw	1
 14861  0008E4                     L22:
 14862  0008E4  6E7E               	movwf	_servo0_flag,c
 14863                           
 14864                           ;main.c: 294: }
 14865                           ;main.c: 295: TMR1IF = 0;
 14866                           
 14867                           ; BSR set to: 1
 14868  0008E6  909E               	bcf	3998,0,c	;volatile
 14869                           
 14870                           ;main.c: 296: }
 14871  0008E8  D0D0               	goto	i2l428
 14872  0008EA                     i2l405:
 14873                           
 14874                           ;main.c: 297: else if (TMR3IF){
 14875  0008EA  A2A1               	btfss	4001,1,c	;volatile
 14876  0008EC  D01F               	goto	i2l411
 14877                           
 14878                           ;main.c: 298: if(servo1_flag){
 14879  0008EE  0100               	movlb	0	; () banked
 14880  0008F0  51EE               	movf	_servo1_flag& (0+255),w,b
 14881  0008F2  B4D8               	btfsc	status,2,c
 14882  0008F4  D007               	goto	i2l412
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;main.c: 299: LATCbits.LATC1 = 0;
 14886  0008F6  928B               	bcf	3979,1,c	;volatile
 14887                           
 14888                           ; BSR set to: 0
 14889                           ;main.c: 300: TMR3 = 16517;
 14890  0008F8  0E40               	movlw	64
 14891  0008FA  6EB3               	movwf	4019,c	;volatile
 14892  0008FC  0E85               	movlw	133
 14893  0008FE  6EB2               	movwf	4018,c	;volatile
 14894                           
 14895                           ;main.c: 301: servo1_flag = 0;
 14896  000900  0E00               	movlw	0
 14897  000902  D010               	goto	L24
 14898  000904                     i2l412:
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;main.c: 303: else{
 14902                           ;main.c: 304: LATCbits.LATC1 = 1;
 14903  000904  828B               	bsf	3979,1,c	;volatile
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;main.c: 305: if(servo1_timer) TMR3 = 62000;
 14907  000906  0101               	movlb	1	; () banked
 14908  000908  5145               	movf	_servo1_timer& (0+255),w,b
 14909  00090A  0101               	movlb	1	; () banked
 14910  00090C  1146               	iorwf	(_servo1_timer+1)& (0+255),w,b
 14911  00090E  B4D8               	btfsc	status,2,c
 14912  000910  D004               	goto	i2l7060
 14913                           
 14914                           ; BSR set to: 1
 14915  000912  0EF2               	movlw	242
 14916  000914  6EB3               	movwf	4019,c	;volatile
 14917  000916  0E30               	movlw	48
 14918  000918  D003               	goto	L25
 14919  00091A                     i2l7060:
 14920                           
 14921                           ; BSR set to: 1
 14922                           ;main.c: 306: else TMR3 = 63000;
 14923  00091A  0EF6               	movlw	246
 14924  00091C  6EB3               	movwf	4019,c	;volatile
 14925  00091E  0E18               	movlw	24
 14926  000920                     L25:
 14927  000920  6EB2               	movwf	4018,c	;volatile
 14928                           
 14929                           ; BSR set to: 1
 14930                           ;main.c: 307: servo1_flag = 1;
 14931  000922  0E01               	movlw	1
 14932  000924                     L24:
 14933  000924  0100               	movlb	0	; () banked
 14934  000926  6FEE               	movwf	_servo1_flag& (0+255),b
 14935                           
 14936                           ; BSR set to: 0
 14937                           ;main.c: 308: }
 14938                           ;main.c: 309: TMR3IF = 0;
 14939                           
 14940                           ; BSR set to: 0
 14941  000928  92A1               	bcf	4001,1,c	;volatile
 14942                           
 14943                           ;main.c: 310: }
 14944  00092A  D0AF               	goto	i2l428
 14945  00092C                     i2l411:
 14946                           
 14947                           ;main.c: 311: else if (TMR0IF){
 14948  00092C  A4F2               	btfss	intcon,2,c	;volatile
 14949  00092E  D093               	goto	i2l7104
 14950                           
 14951                           ;main.c: 312: if(operation_timeout > 2){
 14952  000930  0101               	movlb	1	; () banked
 14953  000932  BF42               	btfsc	(_operation_timeout+1)& (0+255),7,b
 14954  000934  D08B               	goto	i2l7100
 14955  000936  0101               	movlb	1	; () banked
 14956  000938  5142               	movf	(_operation_timeout+1)& (0+255),w,b
 14957  00093A  E105               	bnz	i2u695_40
 14958  00093C  0E03               	movlw	3
 14959  00093E  0101               	movlb	1	; () banked
 14960  000940  5D41               	subwf	_operation_timeout& (0+255),w,b
 14961  000942  A0D8               	btfss	status,0,c
 14962  000944  D083               	goto	i2l7100
 14963  000946                     i2u695_40:
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;main.c: 313: LATAbits.LATA2 = 0;
 14967  000946  9489               	bcf	3977,2,c	;volatile
 14968                           
 14969                           ;main.c: 314: TMR0IE = 0;
 14970  000948  9AF2               	bcf	intcon,5,c	;volatile
 14971                           
 14972                           ;main.c: 315: TMR0ON = 0;
 14973  00094A  9ED5               	bcf	4053,7,c	;volatile
 14974                           
 14975                           ;main.c: 316: TMR1ON = 0;
 14976  00094C  90CD               	bcf	4045,0,c	;volatile
 14977                           
 14978                           ;main.c: 317: TMR3ON = 0;
 14979  00094E  90B1               	bcf	4017,0,c	;volatile
 14980                           
 14981                           ; BSR set to: 1
 14982                           ;main.c: 319: read_time();
 14983  000950  ECB6  F026         	call	i2_read_time	;wreg free
 14984                           
 14985                           ;main.c: 320: end_time[1] = time[1];
 14986  000954  C111  F077         	movff	_time+1,_end_time+1
 14987                           
 14988                           ;main.c: 321: end_time[0] = time[0];
 14989  000958  C110  F076         	movff	_time,_end_time
 14990                           
 14991                           ;main.c: 322: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14992  00095C  C07B  F063         	movff	_start_time+1,i2dec_to_hex@num
 14993  000960  6A64               	clrf	i2dec_to_hex@num+1,c
 14994  000962  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 14995  000966  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 14996  00096A  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 14997                           
 14998                           ;main.c: 322: stime = 60*dec_to_hex(start_time[1])+dec_to_hex(start_time[0]);
 14999  00096E  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 15000  000972  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 15001  000976  0E00               	movlw	0
 15002  000978  6E04               	movwf	i2___wmul@multiplicand+1,c
 15003  00097A  0E3C               	movlw	60
 15004  00097C  6E03               	movwf	i2___wmul@multiplicand,c
 15005  00097E  ECD5  F029         	call	i2___wmul	;wreg free
 15006  000982  C001  F080         	movff	?i2___wmul,??_isr
 15007  000986  C002  F081         	movff	?i2___wmul+1,??_isr+1
 15008  00098A  C07A  F063         	movff	_start_time,i2dec_to_hex@num
 15009  00098E  6A64               	clrf	i2dec_to_hex@num+1,c
 15010  000990  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 15011  000994  5063               	movf	?i2_dec_to_hex,w,c
 15012  000996  0100               	movlb	0	; () banked
 15013  000998  2580               	addwf	??_isr& (0+255),w,b
 15014  00099A  0101               	movlb	1	; () banked
 15015  00099C  6F47               	movwf	_stime& (0+255),b
 15016  00099E  5064               	movf	?i2_dec_to_hex+1,w,c
 15017  0009A0  0100               	movlb	0	; () banked
 15018  0009A2  2181               	addwfc	(??_isr+1)& (0+255),w,b
 15019  0009A4  0101               	movlb	1	; () banked
 15020  0009A6  6F48               	movwf	(_stime+1)& (0+255),b
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;main.c: 323: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 15024  0009A8  C077  F063         	movff	_end_time+1,i2dec_to_hex@num
 15025  0009AC  6A64               	clrf	i2dec_to_hex@num+1,c
 15026  0009AE  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 15027  0009B2  C063  F074         	movff	?i2_dec_to_hex,_isr$1674
 15028  0009B6  C064  F075         	movff	?i2_dec_to_hex+1,_isr$1674+1
 15029                           
 15030                           ;main.c: 323: etime = 60*dec_to_hex(end_time[1])+dec_to_hex(end_time[0]);
 15031  0009BA  C074  F001         	movff	_isr$1674,i2___wmul@multiplier
 15032  0009BE  C075  F002         	movff	_isr$1674+1,i2___wmul@multiplier+1
 15033  0009C2  0E00               	movlw	0
 15034  0009C4  6E04               	movwf	i2___wmul@multiplicand+1,c
 15035  0009C6  0E3C               	movlw	60
 15036  0009C8  6E03               	movwf	i2___wmul@multiplicand,c
 15037  0009CA  ECD5  F029         	call	i2___wmul	;wreg free
 15038  0009CE  C001  F080         	movff	?i2___wmul,??_isr
 15039  0009D2  C002  F081         	movff	?i2___wmul+1,??_isr+1
 15040  0009D6  C076  F063         	movff	_end_time,i2dec_to_hex@num
 15041  0009DA  6A64               	clrf	i2dec_to_hex@num+1,c
 15042  0009DC  EC9E  F01D         	call	i2_dec_to_hex	;wreg free
 15043  0009E0  5063               	movf	?i2_dec_to_hex,w,c
 15044  0009E2  0100               	movlb	0	; () banked
 15045  0009E4  2580               	addwf	??_isr& (0+255),w,b
 15046  0009E6  0101               	movlb	1	; () banked
 15047  0009E8  6F31               	movwf	_etime& (0+255),b
 15048  0009EA  5064               	movf	?i2_dec_to_hex+1,w,c
 15049  0009EC  0100               	movlb	0	; () banked
 15050  0009EE  2181               	addwfc	(??_isr+1)& (0+255),w,b
 15051  0009F0  0101               	movlb	1	; () banked
 15052  0009F2  6F32               	movwf	(_etime+1)& (0+255),b
 15053                           
 15054                           ; BSR set to: 1
 15055                           ;main.c: 324: lcdInst(0b00000001);
 15056  0009F4  0E01               	movlw	1
 15057  0009F6  EC66  F02A         	call	i2_lcdInst
 15058                           
 15059                           ;main.c: 325: for(i=0;i<5;i++) bottle_count_disp[i] = -1;
 15060  0009FA  0E00               	movlw	0
 15061  0009FC  0100               	movlb	0	; () banked
 15062  0009FE  6FEC               	movwf	(_i+1)& (0+255),b
 15063  000A00  0E00               	movlw	0
 15064  000A02  6FEB               	movwf	_i& (0+255),b
 15065  000A04                     i2l7086:
 15066                           
 15067                           ; BSR set to: 0
 15068  000A04  0100               	movlb	0	; () banked
 15069  000A06  BFEC               	btfsc	(_i+1)& (0+255),7,b
 15070  000A08  D008               	goto	i2l7090
 15071  000A0A  0100               	movlb	0	; () banked
 15072  000A0C  51EC               	movf	(_i+1)& (0+255),w,b
 15073  000A0E  E118               	bnz	i2l7096
 15074  000A10  0E05               	movlw	5
 15075  000A12  0100               	movlb	0	; () banked
 15076  000A14  5DEB               	subwf	_i& (0+255),w,b
 15077  000A16  B0D8               	btfsc	status,0,c
 15078  000A18  D013               	goto	i2l7096
 15079  000A1A                     i2l7090:
 15080                           
 15081                           ; BSR set to: 0
 15082  000A1A  90D8               	bcf	status,0,c
 15083  000A1C  0100               	movlb	0	; () banked
 15084  000A1E  35EB               	rlcf	_i& (0+255),w,b
 15085  000A20  6ED9               	movwf	fsr2l,c
 15086  000A22  0100               	movlb	0	; () banked
 15087  000A24  35EC               	rlcf	(_i+1)& (0+255),w,b
 15088  000A26  6EDA               	movwf	fsr2h,c
 15089  000A28  0E72               	movlw	low _bottle_count_disp
 15090  000A2A  26D9               	addwf	fsr2l,f,c
 15091  000A2C  0E01               	movlw	high _bottle_count_disp
 15092  000A2E  22DA               	addwfc	fsr2h,f,c
 15093  000A30  0EFF               	movlw	255
 15094  000A32  6EDE               	movwf	postinc2,c
 15095  000A34  0EFF               	movlw	255
 15096  000A36  6EDD               	movwf	postdec2,c
 15097                           
 15098                           ; BSR set to: 0
 15099  000A38  0100               	movlb	0	; () banked
 15100  000A3A  4BEB               	infsnz	_i& (0+255),f,b
 15101  000A3C  2BEC               	incf	(_i+1)& (0+255),f,b
 15102  000A3E  D7E2               	goto	i2l7086
 15103  000A40                     i2l7096:
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;main.c: 326: savedata();
 15107  000A40  ECA3  F00F         	call	i2_savedata	;wreg free
 15108                           
 15109                           ;main.c: 327: curr_state = OPERATIONEND;
 15110  000A44  0E03               	movlw	3
 15111  000A46  0100               	movlb	0	; () banked
 15112  000A48  6FED               	movwf	_curr_state& (0+255),b
 15113                           
 15114                           ;main.c: 328: }
 15115  000A4A  D003               	goto	i2l7102
 15116  000A4C                     i2l7100:
 15117                           
 15118                           ;main.c: 329: else operation_timeout += 1;
 15119  000A4C  0101               	movlb	1	; () banked
 15120  000A4E  4B41               	infsnz	_operation_timeout& (0+255),f,b
 15121  000A50  2B42               	incf	(_operation_timeout+1)& (0+255),f,b
 15122  000A52                     i2l7102:
 15123                           
 15124                           ;main.c: 330: TMR0IF = 0;
 15125  000A52  94F2               	bcf	intcon,2,c	;volatile
 15126                           
 15127                           ;main.c: 331: }
 15128  000A54  D01A               	goto	i2l428
 15129  000A56                     i2l7104:
 15130                           
 15131                           ;main.c: 334: lcdInst(0b10000000);
 15132  000A56  0E80               	movlw	128
 15133  000A58  EC66  F02A         	call	i2_lcdInst
 15134                           
 15135                           ;main.c: 335: printf("ERR: BAD ISR");
 15136  000A5C  0EE8               	movlw	low STR_4
 15137  000A5E  6E0D               	movwf	i2printf@f,c
 15138  000A60  0EFF               	movlw	high STR_4
 15139  000A62  6E0E               	movwf	i2printf@f+1,c
 15140  000A64  EC07  F00A         	call	i2_printf	;wreg free
 15141                           
 15142                           ;main.c: 336: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
 15143  000A68  0E00               	movlw	0
 15144  000A6A  6E73               	movwf	isr@i,c
 15145  000A6C                     i2l7110:
 15146  000A6C  0E63               	movlw	99
 15147  000A6E  6473               	cpfsgt	isr@i,c
 15148  000A70  D001               	goto	i2l7114
 15149  000A72  D7F1               	goto	i2l7104
 15150  000A74                     i2l7114:
 15151  000A74  0E21               	movlw	33
 15152  000A76  0100               	movlb	0	; () banked
 15153  000A78  6F80               	movwf	??_isr& (0+255),b
 15154  000A7A  0E76               	movlw	118
 15155  000A7C                     i2u889_47:
 15156  000A7C  2EE8               	decfsz	wreg,f,c
 15157  000A7E  D7FE               	bra	i2u889_47
 15158  000A80  2F80               	decfsz	??_isr& (0+255),f,b
 15159  000A82  D7FC               	bra	i2u889_47
 15160  000A84  F000               	nop	
 15161  000A86  2A73               	incf	isr@i,f,c
 15162  000A88  D7F1               	goto	i2l7110
 15163  000A8A                     i2l428:
 15164  000A8A  C08F  FFF5         	movff	??_isr+15,tablat
 15165  000A8E  C08E  FFF8         	movff	??_isr+14,tblptru
 15166  000A92  C08D  FFF7         	movff	??_isr+13,tblptrh
 15167  000A96  C08C  FFF6         	movff	??_isr+12,tblptrl
 15168  000A9A  C08B  FFF4         	movff	??_isr+11,prodh
 15169  000A9E  C08A  FFF3         	movff	??_isr+10,prodl
 15170  000AA2  C089  FFDA         	movff	??_isr+9,fsr2h
 15171  000AA6  C088  FFD9         	movff	??_isr+8,fsr2l
 15172  000AAA  C087  FFE2         	movff	??_isr+7,fsr1h
 15173  000AAE  C086  FFE1         	movff	??_isr+6,fsr1l
 15174  000AB2  C085  FFEA         	movff	??_isr+5,fsr0h
 15175  000AB6  C084  FFE9         	movff	??_isr+4,fsr0l
 15176  000ABA  C083  FFFB         	movff	??_isr+3,pclatu
 15177  000ABE  C082  FFFA         	movff	??_isr+2,pclath
 15178  000AC2  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15179  000AC4  0011               	retfie		f
 15180  000AC6                     __end_of_isr:
 15181                           	opt stack 0
 15182                           pclatu	equ	0xFFB
 15183                           pclath	equ	0xFFA
 15184                           tblptru	equ	0xFF8
 15185                           tblptrh	equ	0xFF7
 15186                           tblptrl	equ	0xFF6
 15187                           tablat	equ	0xFF5
 15188                           prodh	equ	0xFF4
 15189                           prodl	equ	0xFF3
 15190                           intcon	equ	0xFF2
 15191                           intcon2	equ	0xFF1
 15192                           intcon3	equ	0xFF0
 15193                           postinc0	equ	0xFEE
 15194                           fsr0h	equ	0xFEA
 15195                           fsr0l	equ	0xFE9
 15196                           wreg	equ	0xFE8
 15197                           postdec1	equ	0xFE5
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           postdec2	equ	0xFDD
 15203                           fsr2h	equ	0xFDA
 15204                           fsr2l	equ	0xFD9
 15205                           status	equ	0xFD8
 15206                           
 15207 ;; *************** function i2_savedata *****************
 15208 ;; Defined at:
 15209 ;;		line 787 in file "main.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;		None
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, status,2, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15227 ;;Total ram usage:        0 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:    1
 15230 ;; This function calls:
 15231 ;;		i2_eeprom_readbyte
 15232 ;;		i2_eeprom_writebyte
 15233 ;; This function is called by:
 15234 ;;		_isr
 15235 ;; This function uses a non-reentrant model
 15236 ;;
 15237                           
 15238                           	psect	text57
 15239  001F46                     __ptext57:
 15240                           	opt stack 0
 15241  001F46                     i2_savedata:
 15242                           	opt stack 21
 15243                           
 15244                           ;main.c: 794: eeprom_writebyte(44, eeprom_readbyte(39));
 15245                           
 15246                           ;incstack = 0
 15247  001F46  0E00               	movlw	0
 15248  001F48  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15249  001F4A  0E2C               	movlw	44
 15250  001F4C  6E03               	movwf	i2eeprom_writebyte@address,c
 15251  001F4E  0E00               	movlw	0
 15252  001F50  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15253  001F52  0E27               	movlw	39
 15254  001F54  6E01               	movwf	i2eeprom_readbyte@address,c
 15255  001F56  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15256  001F5A  6E05               	movwf	i2eeprom_writebyte@data,c
 15257  001F5C  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15258                           
 15259                           ;main.c: 795: eeprom_writebyte(43, eeprom_readbyte(38));
 15260  001F60  0E00               	movlw	0
 15261  001F62  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15262  001F64  0E2B               	movlw	43
 15263  001F66  6E03               	movwf	i2eeprom_writebyte@address,c
 15264  001F68  0E00               	movlw	0
 15265  001F6A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15266  001F6C  0E26               	movlw	38
 15267  001F6E  6E01               	movwf	i2eeprom_readbyte@address,c
 15268  001F70  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15269  001F74  6E05               	movwf	i2eeprom_writebyte@data,c
 15270  001F76  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15271                           
 15272                           ;main.c: 796: eeprom_writebyte(42, eeprom_readbyte(37));
 15273  001F7A  0E00               	movlw	0
 15274  001F7C  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15275  001F7E  0E2A               	movlw	42
 15276  001F80  6E03               	movwf	i2eeprom_writebyte@address,c
 15277  001F82  0E00               	movlw	0
 15278  001F84  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15279  001F86  0E25               	movlw	37
 15280  001F88  6E01               	movwf	i2eeprom_readbyte@address,c
 15281  001F8A  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15282  001F8E  6E05               	movwf	i2eeprom_writebyte@data,c
 15283  001F90  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15284                           
 15285                           ;main.c: 797: eeprom_writebyte(41, eeprom_readbyte(36));
 15286  001F94  0E00               	movlw	0
 15287  001F96  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15288  001F98  0E29               	movlw	41
 15289  001F9A  6E03               	movwf	i2eeprom_writebyte@address,c
 15290  001F9C  0E00               	movlw	0
 15291  001F9E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15292  001FA0  0E24               	movlw	36
 15293  001FA2  6E01               	movwf	i2eeprom_readbyte@address,c
 15294  001FA4  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15295  001FA8  6E05               	movwf	i2eeprom_writebyte@data,c
 15296  001FAA  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15297                           
 15298                           ;main.c: 798: eeprom_writebyte(40, eeprom_readbyte(35));
 15299  001FAE  0E00               	movlw	0
 15300  001FB0  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15301  001FB2  0E28               	movlw	40
 15302  001FB4  6E03               	movwf	i2eeprom_writebyte@address,c
 15303  001FB6  0E00               	movlw	0
 15304  001FB8  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15305  001FBA  0E23               	movlw	35
 15306  001FBC  6E01               	movwf	i2eeprom_readbyte@address,c
 15307  001FBE  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15308  001FC2  6E05               	movwf	i2eeprom_writebyte@data,c
 15309  001FC4  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15310                           
 15311                           ;main.c: 800: eeprom_writebyte(39, eeprom_readbyte(34));
 15312  001FC8  0E00               	movlw	0
 15313  001FCA  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15314  001FCC  0E27               	movlw	39
 15315  001FCE  6E03               	movwf	i2eeprom_writebyte@address,c
 15316  001FD0  0E00               	movlw	0
 15317  001FD2  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15318  001FD4  0E22               	movlw	34
 15319  001FD6  6E01               	movwf	i2eeprom_readbyte@address,c
 15320  001FD8  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15321  001FDC  6E05               	movwf	i2eeprom_writebyte@data,c
 15322  001FDE  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15323                           
 15324                           ;main.c: 801: eeprom_writebyte(38, eeprom_readbyte(33));
 15325  001FE2  0E00               	movlw	0
 15326  001FE4  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15327  001FE6  0E26               	movlw	38
 15328  001FE8  6E03               	movwf	i2eeprom_writebyte@address,c
 15329  001FEA  0E00               	movlw	0
 15330  001FEC  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15331  001FEE  0E21               	movlw	33
 15332  001FF0  6E01               	movwf	i2eeprom_readbyte@address,c
 15333  001FF2  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15334  001FF6  6E05               	movwf	i2eeprom_writebyte@data,c
 15335  001FF8  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15336                           
 15337                           ;main.c: 802: eeprom_writebyte(37, eeprom_readbyte(32));
 15338  001FFC  0E00               	movlw	0
 15339  001FFE  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15340  002000  0E25               	movlw	37
 15341  002002  6E03               	movwf	i2eeprom_writebyte@address,c
 15342  002004  0E00               	movlw	0
 15343  002006  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15344  002008  0E20               	movlw	32
 15345  00200A  6E01               	movwf	i2eeprom_readbyte@address,c
 15346  00200C  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15347  002010  6E05               	movwf	i2eeprom_writebyte@data,c
 15348  002012  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15349                           
 15350                           ;main.c: 803: eeprom_writebyte(36, eeprom_readbyte(31));
 15351  002016  0E00               	movlw	0
 15352  002018  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15353  00201A  0E24               	movlw	36
 15354  00201C  6E03               	movwf	i2eeprom_writebyte@address,c
 15355  00201E  0E00               	movlw	0
 15356  002020  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15357  002022  0E1F               	movlw	31
 15358  002024  6E01               	movwf	i2eeprom_readbyte@address,c
 15359  002026  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15360  00202A  6E05               	movwf	i2eeprom_writebyte@data,c
 15361  00202C  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15362                           
 15363                           ;main.c: 804: eeprom_writebyte(35, eeprom_readbyte(30));
 15364  002030  0E00               	movlw	0
 15365  002032  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15366  002034  0E23               	movlw	35
 15367  002036  6E03               	movwf	i2eeprom_writebyte@address,c
 15368  002038  0E00               	movlw	0
 15369  00203A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15370  00203C  0E1E               	movlw	30
 15371  00203E  6E01               	movwf	i2eeprom_readbyte@address,c
 15372  002040  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15373  002044  6E05               	movwf	i2eeprom_writebyte@data,c
 15374  002046  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15375                           
 15376                           ;main.c: 806: eeprom_writebyte(34, eeprom_readbyte(29));
 15377  00204A  0E00               	movlw	0
 15378  00204C  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15379  00204E  0E22               	movlw	34
 15380  002050  6E03               	movwf	i2eeprom_writebyte@address,c
 15381  002052  0E00               	movlw	0
 15382  002054  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15383  002056  0E1D               	movlw	29
 15384  002058  6E01               	movwf	i2eeprom_readbyte@address,c
 15385  00205A  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15386  00205E  6E05               	movwf	i2eeprom_writebyte@data,c
 15387  002060  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15388                           
 15389                           ;main.c: 807: eeprom_writebyte(33, eeprom_readbyte(28));
 15390  002064  0E00               	movlw	0
 15391  002066  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15392  002068  0E21               	movlw	33
 15393  00206A  6E03               	movwf	i2eeprom_writebyte@address,c
 15394  00206C  0E00               	movlw	0
 15395  00206E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15396  002070  0E1C               	movlw	28
 15397  002072  6E01               	movwf	i2eeprom_readbyte@address,c
 15398  002074  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15399  002078  6E05               	movwf	i2eeprom_writebyte@data,c
 15400  00207A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15401                           
 15402                           ;main.c: 808: eeprom_writebyte(32, eeprom_readbyte(27));
 15403  00207E  0E00               	movlw	0
 15404  002080  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15405  002082  0E20               	movlw	32
 15406  002084  6E03               	movwf	i2eeprom_writebyte@address,c
 15407  002086  0E00               	movlw	0
 15408  002088  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15409  00208A  0E1B               	movlw	27
 15410  00208C  6E01               	movwf	i2eeprom_readbyte@address,c
 15411  00208E  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15412  002092  6E05               	movwf	i2eeprom_writebyte@data,c
 15413  002094  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15414                           
 15415                           ;main.c: 809: eeprom_writebyte(31, eeprom_readbyte(26));
 15416  002098  0E00               	movlw	0
 15417  00209A  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15418  00209C  0E1F               	movlw	31
 15419  00209E  6E03               	movwf	i2eeprom_writebyte@address,c
 15420  0020A0  0E00               	movlw	0
 15421  0020A2  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15422  0020A4  0E1A               	movlw	26
 15423  0020A6  6E01               	movwf	i2eeprom_readbyte@address,c
 15424  0020A8  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15425  0020AC  6E05               	movwf	i2eeprom_writebyte@data,c
 15426  0020AE  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15427                           
 15428                           ;main.c: 810: eeprom_writebyte(30, eeprom_readbyte(25));
 15429  0020B2  0E00               	movlw	0
 15430  0020B4  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15431  0020B6  0E1E               	movlw	30
 15432  0020B8  6E03               	movwf	i2eeprom_writebyte@address,c
 15433  0020BA  0E00               	movlw	0
 15434  0020BC  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15435  0020BE  0E19               	movlw	25
 15436  0020C0  6E01               	movwf	i2eeprom_readbyte@address,c
 15437  0020C2  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15438  0020C6  6E05               	movwf	i2eeprom_writebyte@data,c
 15439  0020C8  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15440                           
 15441                           ;main.c: 812: eeprom_writebyte(29, eeprom_readbyte(34));
 15442  0020CC  0E00               	movlw	0
 15443  0020CE  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15444  0020D0  0E1D               	movlw	29
 15445  0020D2  6E03               	movwf	i2eeprom_writebyte@address,c
 15446  0020D4  0E00               	movlw	0
 15447  0020D6  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15448  0020D8  0E22               	movlw	34
 15449  0020DA  6E01               	movwf	i2eeprom_readbyte@address,c
 15450  0020DC  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15451  0020E0  6E05               	movwf	i2eeprom_writebyte@data,c
 15452  0020E2  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15453                           
 15454                           ;main.c: 813: eeprom_writebyte(28, eeprom_readbyte(23));
 15455  0020E6  0E00               	movlw	0
 15456  0020E8  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15457  0020EA  0E1C               	movlw	28
 15458  0020EC  6E03               	movwf	i2eeprom_writebyte@address,c
 15459  0020EE  0E00               	movlw	0
 15460  0020F0  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15461  0020F2  0E17               	movlw	23
 15462  0020F4  6E01               	movwf	i2eeprom_readbyte@address,c
 15463  0020F6  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15464  0020FA  6E05               	movwf	i2eeprom_writebyte@data,c
 15465  0020FC  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15466                           
 15467                           ;main.c: 814: eeprom_writebyte(27, eeprom_readbyte(22));
 15468  002100  0E00               	movlw	0
 15469  002102  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15470  002104  0E1B               	movlw	27
 15471  002106  6E03               	movwf	i2eeprom_writebyte@address,c
 15472  002108  0E00               	movlw	0
 15473  00210A  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15474  00210C  0E16               	movlw	22
 15475  00210E  6E01               	movwf	i2eeprom_readbyte@address,c
 15476  002110  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15477  002114  6E05               	movwf	i2eeprom_writebyte@data,c
 15478  002116  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15479                           
 15480                           ;main.c: 815: eeprom_writebyte(26, eeprom_readbyte(21));
 15481  00211A  0E00               	movlw	0
 15482  00211C  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15483  00211E  0E1A               	movlw	26
 15484  002120  6E03               	movwf	i2eeprom_writebyte@address,c
 15485  002122  0E00               	movlw	0
 15486  002124  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15487  002126  0E15               	movlw	21
 15488  002128  6E01               	movwf	i2eeprom_readbyte@address,c
 15489  00212A  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15490  00212E  6E05               	movwf	i2eeprom_writebyte@data,c
 15491  002130  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15492                           
 15493                           ;main.c: 816: eeprom_writebyte(25, eeprom_readbyte(20));
 15494  002134  0E00               	movlw	0
 15495  002136  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15496  002138  0E19               	movlw	25
 15497  00213A  6E03               	movwf	i2eeprom_writebyte@address,c
 15498  00213C  0E00               	movlw	0
 15499  00213E  6E02               	movwf	i2eeprom_readbyte@address+1,c
 15500  002140  0E14               	movlw	20
 15501  002142  6E01               	movwf	i2eeprom_readbyte@address,c
 15502  002144  EC32  F02A         	call	i2_eeprom_readbyte	;wreg free
 15503  002148  6E05               	movwf	i2eeprom_writebyte@data,c
 15504  00214A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15505                           
 15506                           ;main.c: 818: eeprom_writebyte(24, bottle_count_array[4]);
 15507  00214E  0E00               	movlw	0
 15508  002150  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15509  002152  0E18               	movlw	24
 15510  002154  6E03               	movwf	i2eeprom_writebyte@address,c
 15511  002156  C0E7  F005         	movff	_bottle_count_array+8,i2eeprom_writebyte@data
 15512  00215A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15513                           
 15514                           ;main.c: 819: eeprom_writebyte(23, bottle_count_array[3]);
 15515  00215E  0E00               	movlw	0
 15516  002160  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15517  002162  0E17               	movlw	23
 15518  002164  6E03               	movwf	i2eeprom_writebyte@address,c
 15519  002166  C0E5  F005         	movff	_bottle_count_array+6,i2eeprom_writebyte@data
 15520  00216A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15521                           
 15522                           ;main.c: 820: eeprom_writebyte(22, bottle_count_array[2]);
 15523  00216E  0E00               	movlw	0
 15524  002170  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15525  002172  0E16               	movlw	22
 15526  002174  6E03               	movwf	i2eeprom_writebyte@address,c
 15527  002176  C0E3  F005         	movff	_bottle_count_array+4,i2eeprom_writebyte@data
 15528  00217A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15529                           
 15530                           ;main.c: 821: eeprom_writebyte(21, bottle_count_array[1]);
 15531  00217E  0E00               	movlw	0
 15532  002180  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15533  002182  0E15               	movlw	21
 15534  002184  6E03               	movwf	i2eeprom_writebyte@address,c
 15535  002186  C0E1  F005         	movff	_bottle_count_array+2,i2eeprom_writebyte@data
 15536  00218A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15537                           
 15538                           ;main.c: 822: eeprom_writebyte(20, bottle_count_array[0]);
 15539  00218E  0E00               	movlw	0
 15540  002190  6E04               	movwf	i2eeprom_writebyte@address+1,c
 15541  002192  0E14               	movlw	20
 15542  002194  6E03               	movwf	i2eeprom_writebyte@address,c
 15543  002196  C0DF  F005         	movff	_bottle_count_array,i2eeprom_writebyte@data
 15544  00219A  ECAF  F029         	call	i2_eeprom_writebyte	;wreg free
 15545  00219E  0012               	return		;funcret
 15546  0021A0                     __end_ofi2_savedata:
 15547                           	opt stack 0
 15548                           pclatu	equ	0xFFB
 15549                           pclath	equ	0xFFA
 15550                           tblptru	equ	0xFF8
 15551                           tblptrh	equ	0xFF7
 15552                           tblptrl	equ	0xFF6
 15553                           tablat	equ	0xFF5
 15554                           prodh	equ	0xFF4
 15555                           prodl	equ	0xFF3
 15556                           intcon	equ	0xFF2
 15557                           intcon2	equ	0xFF1
 15558                           intcon3	equ	0xFF0
 15559                           postinc0	equ	0xFEE
 15560                           fsr0h	equ	0xFEA
 15561                           fsr0l	equ	0xFE9
 15562                           wreg	equ	0xFE8
 15563                           postdec1	equ	0xFE5
 15564                           fsr1h	equ	0xFE2
 15565                           fsr1l	equ	0xFE1
 15566                           indf2	equ	0xFDF
 15567                           postinc2	equ	0xFDE
 15568                           postdec2	equ	0xFDD
 15569                           fsr2h	equ	0xFDA
 15570                           fsr2l	equ	0xFD9
 15571                           status	equ	0xFD8
 15572                           
 15573 ;; *************** function i2_eeprom_writebyte *****************
 15574 ;; Defined at:
 15575 ;;		line 761 in file "main.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;  address         2    2[COMRAM] unsigned int 
 15578 ;;  data            1    4[COMRAM] unsigned char 
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg, status,2
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15590 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;Total ram usage:        3 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; This function calls:
 15597 ;;		Nothing
 15598 ;; This function is called by:
 15599 ;;		i2_savedata
 15600 ;; This function uses a non-reentrant model
 15601 ;;
 15602                           
 15603                           	psect	text58
 15604  00535E                     __ptext58:
 15605                           	opt stack 0
 15606  00535E                     i2_eeprom_writebyte:
 15607                           	opt stack 21
 15608                           
 15609                           ;main.c: 763: EEADRH = (uint8_t)(address >> 8);
 15610                           
 15611                           ;incstack = 0
 15612  00535E  5004               	movf	i2eeprom_writebyte@address+1,w,c
 15613  005360  6EAA               	movwf	4010,c	;volatile
 15614                           
 15615                           ;main.c: 764: EEADR = (uint8_t)address;
 15616  005362  C003  FFA9         	movff	i2eeprom_writebyte@address,4009	;volatile
 15617                           
 15618                           ;main.c: 766: EEDATA = data;
 15619  005366  C005  FFA8         	movff	i2eeprom_writebyte@data,4008	;volatile
 15620                           
 15621                           ;main.c: 767: EECON1bits.EEPGD = 0;
 15622  00536A  9EA6               	bcf	4006,7,c	;volatile
 15623                           
 15624                           ;main.c: 768: EECON1bits.CFGS = 0;
 15625  00536C  9CA6               	bcf	4006,6,c	;volatile
 15626                           
 15627                           ;main.c: 769: EECON1bits.WREN = 1;
 15628  00536E  84A6               	bsf	4006,2,c	;volatile
 15629                           
 15630                           ;main.c: 773: EECON2 = 0x55;
 15631  005370  0E55               	movlw	85
 15632  005372  6EA7               	movwf	4007,c	;volatile
 15633                           
 15634                           ;main.c: 774: EECON2 = 0xAA;
 15635  005374  0EAA               	movlw	170
 15636  005376  6EA7               	movwf	4007,c	;volatile
 15637                           
 15638                           ;main.c: 775: EECON1bits.WR = 1;
 15639  005378  82A6               	bsf	4006,1,c	;volatile
 15640  00537A                     i2l596:
 15641  00537A  A8A1               	btfss	4001,4,c	;volatile
 15642  00537C  D7FE               	goto	i2l596
 15643                           
 15644                           ;main.c: 781: }
 15645                           ;main.c: 783: PIR2bits.EEIF = 0;
 15646  00537E  98A1               	bcf	4001,4,c	;volatile
 15647                           
 15648                           ;main.c: 784: EECON1bits.WREN = 0;
 15649  005380  94A6               	bcf	4006,2,c	;volatile
 15650  005382  0012               	return		;funcret
 15651  005384                     __end_ofi2_eeprom_writebyte:
 15652                           	opt stack 0
 15653                           pclatu	equ	0xFFB
 15654                           pclath	equ	0xFFA
 15655                           tblptru	equ	0xFF8
 15656                           tblptrh	equ	0xFF7
 15657                           tblptrl	equ	0xFF6
 15658                           tablat	equ	0xFF5
 15659                           prodh	equ	0xFF4
 15660                           prodl	equ	0xFF3
 15661                           intcon	equ	0xFF2
 15662                           intcon2	equ	0xFF1
 15663                           intcon3	equ	0xFF0
 15664                           postinc0	equ	0xFEE
 15665                           fsr0h	equ	0xFEA
 15666                           fsr0l	equ	0xFE9
 15667                           wreg	equ	0xFE8
 15668                           postdec1	equ	0xFE5
 15669                           fsr1h	equ	0xFE2
 15670                           fsr1l	equ	0xFE1
 15671                           indf2	equ	0xFDF
 15672                           postinc2	equ	0xFDE
 15673                           postdec2	equ	0xFDD
 15674                           fsr2h	equ	0xFDA
 15675                           fsr2l	equ	0xFD9
 15676                           status	equ	0xFD8
 15677                           
 15678 ;; *************** function i2_eeprom_readbyte *****************
 15679 ;; Defined at:
 15680 ;;		line 744 in file "main.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  address         2    0[COMRAM] unsigned int 
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;		None
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1    wreg      unsigned char 
 15687 ;; Registers used:
 15688 ;;		wreg, status,2
 15689 ;; Tracked objects:
 15690 ;;		On entry : 0/0
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15698 ;;Total ram usage:        2 bytes
 15699 ;; Hardware stack levels used:    1
 15700 ;; This function calls:
 15701 ;;		Nothing
 15702 ;; This function is called by:
 15703 ;;		_isr
 15704 ;;		i2_savedata
 15705 ;; This function uses a non-reentrant model
 15706 ;;
 15707                           
 15708                           	psect	text59
 15709  005464                     __ptext59:
 15710                           	opt stack 0
 15711  005464                     i2_eeprom_readbyte:
 15712                           	opt stack 21
 15713                           
 15714                           ;main.c: 747: EEADRH = (uint8_t)(address >> 8);
 15715                           
 15716                           ;incstack = 0
 15717  005464  5002               	movf	i2eeprom_readbyte@address+1,w,c
 15718  005466  6EAA               	movwf	4010,c	;volatile
 15719                           
 15720                           ;main.c: 748: EEADR = (uint8_t)address;
 15721  005468  C001  FFA9         	movff	i2eeprom_readbyte@address,4009	;volatile
 15722                           
 15723                           ;main.c: 750: EECON1bits.EEPGD = 0;
 15724  00546C  9EA6               	bcf	4006,7,c	;volatile
 15725                           
 15726                           ;main.c: 751: EECON1bits.CFGS = 0;
 15727  00546E  9CA6               	bcf	4006,6,c	;volatile
 15728                           
 15729                           ;main.c: 752: EECON1bits.RD = 1;
 15730  005470  80A6               	bsf	4006,0,c	;volatile
 15731  005472                     i2l590:
 15732  005472  B0A6               	btfsc	4006,0,c	;volatile
 15733  005474  D7FE               	goto	i2l590
 15734                           
 15735                           ;main.c: 758: return EEDATA;
 15736  005476  50A8               	movf	4008,w,c	;volatile
 15737  005478  0012               	return	
 15738  00547A                     __end_ofi2_eeprom_readbyte:
 15739                           	opt stack 0
 15740                           pclatu	equ	0xFFB
 15741                           pclath	equ	0xFFA
 15742                           tblptru	equ	0xFF8
 15743                           tblptrh	equ	0xFF7
 15744                           tblptrl	equ	0xFF6
 15745                           tablat	equ	0xFF5
 15746                           prodh	equ	0xFF4
 15747                           prodl	equ	0xFF3
 15748                           intcon	equ	0xFF2
 15749                           intcon2	equ	0xFF1
 15750                           intcon3	equ	0xFF0
 15751                           postinc0	equ	0xFEE
 15752                           fsr0h	equ	0xFEA
 15753                           fsr0l	equ	0xFE9
 15754                           wreg	equ	0xFE8
 15755                           postdec1	equ	0xFE5
 15756                           fsr1h	equ	0xFE2
 15757                           fsr1l	equ	0xFE1
 15758                           indf2	equ	0xFDF
 15759                           postinc2	equ	0xFDE
 15760                           postdec2	equ	0xFDD
 15761                           fsr2h	equ	0xFDA
 15762                           fsr2l	equ	0xFD9
 15763                           status	equ	0xFD8
 15764                           
 15765 ;; *************** function i2_read_time *****************
 15766 ;; Defined at:
 15767 ;;		line 398 in file "main.c"
 15768 ;; Parameters:    Size  Location     Type
 15769 ;;		None
 15770 ;; Auto vars:     Size  Location     Type
 15771 ;;  read_time       1    3[COMRAM] unsigned char 
 15772 ;; Return value:  Size  Location     Type
 15773 ;;                  1    wreg      void 
 15774 ;; Registers used:
 15775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15776 ;; Tracked objects:
 15777 ;;		On entry : 0/0
 15778 ;;		On exit  : 0/0
 15779 ;;		Unchanged: 0/0
 15780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15785 ;;Total ram usage:        1 bytes
 15786 ;; Hardware stack levels used:    1
 15787 ;; Hardware stack levels required when called:    2
 15788 ;; This function calls:
 15789 ;;		i2_I2C_Master_Read
 15790 ;;		i2_I2C_Master_Start
 15791 ;;		i2_I2C_Master_Stop
 15792 ;;		i2_I2C_Master_Write
 15793 ;; This function is called by:
 15794 ;;		_isr
 15795 ;; This function uses a non-reentrant model
 15796 ;;
 15797                           
 15798                           	psect	text60
 15799  004D6C                     __ptext60:
 15800                           	opt stack 0
 15801  004D6C                     i2_read_time:
 15802                           	opt stack 20
 15803                           
 15804                           ;main.c: 400: I2C_Master_Start();
 15805                           
 15806                           ;incstack = 0
 15807  004D6C  EC87  F02A         	call	i2_I2C_Master_Start	;wreg free
 15808                           
 15809                           ;main.c: 401: I2C_Master_Write(0b11010000);
 15810  004D70  0E00               	movlw	0
 15811  004D72  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15812  004D74  0ED0               	movlw	208
 15813  004D76  6E02               	movwf	i2I2C_Master_Write@d,c
 15814  004D78  EC76  F02A         	call	i2_I2C_Master_Write	;wreg free
 15815                           
 15816                           ;main.c: 402: I2C_Master_Write(0x00);
 15817  004D7C  0E00               	movlw	0
 15818  004D7E  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15819  004D80  0E00               	movlw	0
 15820  004D82  6E02               	movwf	i2I2C_Master_Write@d,c
 15821  004D84  EC76  F02A         	call	i2_I2C_Master_Write	;wreg free
 15822                           
 15823                           ;main.c: 403: I2C_Master_Stop();
 15824  004D88  EC83  F02A         	call	i2_I2C_Master_Stop	;wreg free
 15825                           
 15826                           ;main.c: 406: I2C_Master_Start();
 15827  004D8C  EC87  F02A         	call	i2_I2C_Master_Start	;wreg free
 15828                           
 15829                           ;main.c: 407: I2C_Master_Write(0b11010001);
 15830  004D90  0E00               	movlw	0
 15831  004D92  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15832  004D94  0ED1               	movlw	209
 15833  004D96  6E02               	movwf	i2I2C_Master_Write@d,c
 15834  004D98  EC76  F02A         	call	i2_I2C_Master_Write	;wreg free
 15835                           
 15836                           ;main.c: 408: for(unsigned char i=0;i<0x06;i++){
 15837  004D9C  0E00               	movlw	0
 15838  004D9E  6E04               	movwf	i2read_time@i,c
 15839  004DA0                     i2l6452:
 15840  004DA0  0E05               	movlw	5
 15841  004DA2  6404               	cpfsgt	i2read_time@i,c
 15842  004DA4  D001               	goto	i2l6456
 15843  004DA6  D00E               	goto	i2l6462
 15844  004DA8                     i2l6456:
 15845                           
 15846                           ;main.c: 409: time[i] = I2C_Master_Read(1);
 15847  004DA8  5004               	movf	i2read_time@i,w,c
 15848  004DAA  0D01               	mullw	1
 15849  004DAC  0E10               	movlw	low _time
 15850  004DAE  24F3               	addwf	prodl,w,c
 15851  004DB0  6ED9               	movwf	fsr2l,c
 15852  004DB2  0E01               	movlw	high _time
 15853  004DB4  20F4               	addwfc	prodh,w,c
 15854  004DB6  6EDA               	movwf	fsr2h,c
 15855  004DB8  0E01               	movlw	1
 15856  004DBA  ECC2  F029         	call	i2_I2C_Master_Read
 15857  004DBE  6EDF               	movwf	indf2,c
 15858  004DC0  2A04               	incf	i2read_time@i,f,c
 15859  004DC2  D7EE               	goto	i2l6452
 15860  004DC4                     i2l6462:
 15861                           
 15862                           ;main.c: 410: }
 15863                           ;main.c: 411: time[6] = I2C_Master_Read(0);
 15864  004DC4  0E00               	movlw	0
 15865  004DC6  ECC2  F029         	call	i2_I2C_Master_Read
 15866  004DCA  0101               	movlb	1	; () banked
 15867  004DCC  6F16               	movwf	(_time+6)& (0+255),b
 15868                           
 15869                           ;main.c: 412: I2C_Master_Stop();
 15870  004DCE  EC83  F02A         	call	i2_I2C_Master_Stop	;wreg free
 15871  004DD2  0012               	return	
 15872  004DD4                     __end_ofi2_read_time:
 15873                           	opt stack 0
 15874                           pclatu	equ	0xFFB
 15875                           pclath	equ	0xFFA
 15876                           tblptru	equ	0xFF8
 15877                           tblptrh	equ	0xFF7
 15878                           tblptrl	equ	0xFF6
 15879                           tablat	equ	0xFF5
 15880                           prodh	equ	0xFF4
 15881                           prodl	equ	0xFF3
 15882                           intcon	equ	0xFF2
 15883                           intcon2	equ	0xFF1
 15884                           intcon3	equ	0xFF0
 15885                           postinc0	equ	0xFEE
 15886                           fsr0h	equ	0xFEA
 15887                           fsr0l	equ	0xFE9
 15888                           wreg	equ	0xFE8
 15889                           postdec1	equ	0xFE5
 15890                           fsr1h	equ	0xFE2
 15891                           fsr1l	equ	0xFE1
 15892                           indf2	equ	0xFDF
 15893                           postinc2	equ	0xFDE
 15894                           postdec2	equ	0xFDD
 15895                           fsr2h	equ	0xFDA
 15896                           fsr2l	equ	0xFD9
 15897                           status	equ	0xFD8
 15898                           
 15899 ;; *************** function i2_read_colorsensor *****************
 15900 ;; Defined at:
 15901 ;;		line 706 in file "main.c"
 15902 ;; Parameters:    Size  Location     Type
 15903 ;;		None
 15904 ;; Auto vars:     Size  Location     Type
 15905 ;;		None
 15906 ;; Return value:  Size  Location     Type
 15907 ;;                  1    wreg      void 
 15908 ;; Registers used:
 15909 ;;		wreg, status,2, status,0, cstack
 15910 ;; Tracked objects:
 15911 ;;		On entry : 0/0
 15912 ;;		On exit  : 0/0
 15913 ;;		Unchanged: 0/0
 15914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15919 ;;Total ram usage:        2 bytes
 15920 ;; Hardware stack levels used:    1
 15921 ;; Hardware stack levels required when called:    2
 15922 ;; This function calls:
 15923 ;;		i2_I2C_Master_Read
 15924 ;;		i2_I2C_Master_Start
 15925 ;;		i2_I2C_Master_Stop
 15926 ;;		i2_I2C_Master_Write
 15927 ;; This function is called by:
 15928 ;;		_isr
 15929 ;; This function uses a non-reentrant model
 15930 ;;
 15931                           
 15932                           	psect	text61
 15933  0041C8                     __ptext61:
 15934                           	opt stack 0
 15935  0041C8                     i2_read_colorsensor:
 15936                           	opt stack 20
 15937                           
 15938                           ;main.c: 725: I2C_Master_Start();
 15939                           
 15940                           ;incstack = 0
 15941  0041C8  EC87  F02A         	call	i2_I2C_Master_Start	;wreg free
 15942                           
 15943                           ;main.c: 726: I2C_Master_Write(0b01010011);
 15944  0041CC  0E00               	movlw	0
 15945  0041CE  6E03               	movwf	i2I2C_Master_Write@d+1,c
 15946  0041D0  0E53               	movlw	83
 15947  0041D2  6E02               	movwf	i2I2C_Master_Write@d,c
 15948  0041D4  EC76  F02A         	call	i2_I2C_Master_Write	;wreg free
 15949                           
 15950                           ;main.c: 727: color_low[0] = I2C_Master_Read(1);
 15951  0041D8  0E01               	movlw	1
 15952  0041DA  ECC2  F029         	call	i2_I2C_Master_Read
 15953  0041DE  0101               	movlb	1	; () banked
 15954  0041E0  6F1B               	movwf	_color_low& (0+255),b
 15955                           
 15956                           ;main.c: 728: color_high[0] = I2C_Master_Read(1);
 15957  0041E2  0E01               	movlw	1
 15958  0041E4  ECC2  F029         	call	i2_I2C_Master_Read
 15959  0041E8  0101               	movlb	1	; () banked
 15960  0041EA  6F17               	movwf	_color_high& (0+255),b
 15961                           
 15962                           ;main.c: 729: color_low[1] = I2C_Master_Read(1);
 15963  0041EC  0E01               	movlw	1
 15964  0041EE  ECC2  F029         	call	i2_I2C_Master_Read
 15965  0041F2  0101               	movlb	1	; () banked
 15966  0041F4  6F1C               	movwf	(_color_low+1)& (0+255),b
 15967                           
 15968                           ;main.c: 730: color_high[1] = I2C_Master_Read(1);
 15969  0041F6  0E01               	movlw	1
 15970  0041F8  ECC2  F029         	call	i2_I2C_Master_Read
 15971  0041FC  0101               	movlb	1	; () banked
 15972  0041FE  6F18               	movwf	(_color_high+1)& (0+255),b
 15973                           
 15974                           ;main.c: 731: color_low[2] = I2C_Master_Read(1);
 15975  004200  0E01               	movlw	1
 15976  004202  ECC2  F029         	call	i2_I2C_Master_Read
 15977  004206  0101               	movlb	1	; () banked
 15978  004208  6F1D               	movwf	(_color_low+2)& (0+255),b
 15979                           
 15980                           ;main.c: 732: color_high[2] = I2C_Master_Read(1);
 15981  00420A  0E01               	movlw	1
 15982  00420C  ECC2  F029         	call	i2_I2C_Master_Read
 15983  004210  0101               	movlb	1	; () banked
 15984  004212  6F19               	movwf	(_color_high+2)& (0+255),b
 15985                           
 15986                           ;main.c: 733: color_low[3] = I2C_Master_Read(1);
 15987  004214  0E01               	movlw	1
 15988  004216  ECC2  F029         	call	i2_I2C_Master_Read
 15989  00421A  0101               	movlb	1	; () banked
 15990  00421C  6F1E               	movwf	(_color_low+3)& (0+255),b
 15991                           
 15992                           ;main.c: 734: color_high[3] = I2C_Master_Read(0);
 15993  00421E  0E00               	movlw	0
 15994  004220  ECC2  F029         	call	i2_I2C_Master_Read
 15995  004224  0101               	movlb	1	; () banked
 15996  004226  6F1A               	movwf	(_color_high+3)& (0+255),b
 15997                           
 15998                           ;main.c: 735: I2C_Master_Stop();
 15999  004228  EC83  F02A         	call	i2_I2C_Master_Stop	;wreg free
 16000                           
 16001                           ;main.c: 736: color[0] = (color_high[0] << 8)|(color_low[0]);
 16002  00422C  0101               	movlb	1	; () banked
 16003  00422E  511B               	movf	_color_low& (0+255),w,b
 16004  004230  C117  F004         	movff	_color_high,??i2_read_colorsensor
 16005  004234  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 16006  004236  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 16007  00423A  6A04               	clrf	??i2_read_colorsensor,c
 16008  00423C  1004               	iorwf	??i2_read_colorsensor,w,c
 16009  00423E  0101               	movlb	1	; () banked
 16010  004240  6F00               	movwf	_color& (0+255),b
 16011  004242  5005               	movf	??i2_read_colorsensor+1,w,c
 16012  004244  0101               	movlb	1	; () banked
 16013  004246  6F01               	movwf	(_color+1)& (0+255),b
 16014                           
 16015                           ; BSR set to: 1
 16016                           ;main.c: 737: color[1] = (color_high[1] << 8)|(color_low[1]);
 16017  004248  0101               	movlb	1	; () banked
 16018  00424A  511C               	movf	(_color_low+1)& (0+255),w,b
 16019  00424C  C118  F004         	movff	_color_high+1,??i2_read_colorsensor
 16020  004250  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 16021  004252  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 16022  004256  6A04               	clrf	??i2_read_colorsensor,c
 16023  004258  1004               	iorwf	??i2_read_colorsensor,w,c
 16024  00425A  0101               	movlb	1	; () banked
 16025  00425C  6F02               	movwf	(_color+2)& (0+255),b
 16026  00425E  5005               	movf	??i2_read_colorsensor+1,w,c
 16027  004260  0101               	movlb	1	; () banked
 16028  004262  6F03               	movwf	(_color+3)& (0+255),b
 16029                           
 16030                           ; BSR set to: 1
 16031                           ;main.c: 738: color[2] = (color_high[2] << 8)|(color_low[2]);
 16032  004264  0101               	movlb	1	; () banked
 16033  004266  511D               	movf	(_color_low+2)& (0+255),w,b
 16034  004268  C119  F004         	movff	_color_high+2,??i2_read_colorsensor
 16035  00426C  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 16036  00426E  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 16037  004272  6A04               	clrf	??i2_read_colorsensor,c
 16038  004274  1004               	iorwf	??i2_read_colorsensor,w,c
 16039  004276  0101               	movlb	1	; () banked
 16040  004278  6F04               	movwf	(_color+4)& (0+255),b
 16041  00427A  5005               	movf	??i2_read_colorsensor+1,w,c
 16042  00427C  0101               	movlb	1	; () banked
 16043  00427E  6F05               	movwf	(_color+5)& (0+255),b
 16044                           
 16045                           ; BSR set to: 1
 16046                           ;main.c: 739: color[3] = (color_high[3] << 8)|(color_low[3]);
 16047  004280  0101               	movlb	1	; () banked
 16048  004282  511E               	movf	(_color_low+3)& (0+255),w,b
 16049  004284  C11A  F004         	movff	_color_high+3,??i2_read_colorsensor
 16050  004288  6A05               	clrf	(??i2_read_colorsensor+1)& (0+255),c
 16051  00428A  C004  F005         	movff	??i2_read_colorsensor,??i2_read_colorsensor+1
 16052  00428E  6A04               	clrf	??i2_read_colorsensor,c
 16053  004290  1004               	iorwf	??i2_read_colorsensor,w,c
 16054  004292  0101               	movlb	1	; () banked
 16055  004294  6F06               	movwf	(_color+6)& (0+255),b
 16056  004296  5005               	movf	??i2_read_colorsensor+1,w,c
 16057  004298  0101               	movlb	1	; () banked
 16058  00429A  6F07               	movwf	(_color+7)& (0+255),b
 16059  00429C  0012               	return	
 16060  00429E                     __end_ofi2_read_colorsensor:
 16061                           	opt stack 0
 16062                           pclatu	equ	0xFFB
 16063                           pclath	equ	0xFFA
 16064                           tblptru	equ	0xFF8
 16065                           tblptrh	equ	0xFF7
 16066                           tblptrl	equ	0xFF6
 16067                           tablat	equ	0xFF5
 16068                           prodh	equ	0xFF4
 16069                           prodl	equ	0xFF3
 16070                           intcon	equ	0xFF2
 16071                           intcon2	equ	0xFF1
 16072                           intcon3	equ	0xFF0
 16073                           postinc0	equ	0xFEE
 16074                           fsr0h	equ	0xFEA
 16075                           fsr0l	equ	0xFE9
 16076                           wreg	equ	0xFE8
 16077                           postdec1	equ	0xFE5
 16078                           fsr1h	equ	0xFE2
 16079                           fsr1l	equ	0xFE1
 16080                           indf2	equ	0xFDF
 16081                           postinc2	equ	0xFDE
 16082                           postdec2	equ	0xFDD
 16083                           fsr2h	equ	0xFDA
 16084                           fsr2l	equ	0xFD9
 16085                           status	equ	0xFD8
 16086                           
 16087 ;; *************** function i2_I2C_Master_Write *****************
 16088 ;; Defined at:
 16089 ;;		line 48 in file "I2C.c"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;  d               2    1[COMRAM] unsigned int 
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;		None
 16094 ;; Return value:  Size  Location     Type
 16095 ;;                  1    wreg      void 
 16096 ;; Registers used:
 16097 ;;		wreg, status,2, status,0, cstack
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16107 ;;Total ram usage:        2 bytes
 16108 ;; Hardware stack levels used:    1
 16109 ;; Hardware stack levels required when called:    1
 16110 ;; This function calls:
 16111 ;;		i2_I2C_Master_Wait
 16112 ;; This function is called by:
 16113 ;;		i2_read_time
 16114 ;;		i2_read_colorsensor
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           	psect	text62
 16119  0054EC                     __ptext62:
 16120                           	opt stack 0
 16121  0054EC                     i2_I2C_Master_Write:
 16122                           	opt stack 20
 16123                           
 16124                           ;I2C.c: 50: I2C_Master_Wait();
 16125                           
 16126                           ; BSR set to: 1
 16127                           ;incstack = 0
 16128  0054EC  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16129                           
 16130                           ;I2C.c: 51: SSPBUF = d;
 16131  0054F0  C002  FFC9         	movff	i2I2C_Master_Write@d,4041	;volatile
 16132  0054F4  0012               	return		;funcret
 16133  0054F6                     __end_ofi2_I2C_Master_Write:
 16134                           	opt stack 0
 16135                           pclatu	equ	0xFFB
 16136                           pclath	equ	0xFFA
 16137                           tblptru	equ	0xFF8
 16138                           tblptrh	equ	0xFF7
 16139                           tblptrl	equ	0xFF6
 16140                           tablat	equ	0xFF5
 16141                           prodh	equ	0xFF4
 16142                           prodl	equ	0xFF3
 16143                           intcon	equ	0xFF2
 16144                           intcon2	equ	0xFF1
 16145                           intcon3	equ	0xFF0
 16146                           postinc0	equ	0xFEE
 16147                           fsr0h	equ	0xFEA
 16148                           fsr0l	equ	0xFE9
 16149                           wreg	equ	0xFE8
 16150                           postdec1	equ	0xFE5
 16151                           fsr1h	equ	0xFE2
 16152                           fsr1l	equ	0xFE1
 16153                           indf2	equ	0xFDF
 16154                           postinc2	equ	0xFDE
 16155                           postdec2	equ	0xFDD
 16156                           fsr2h	equ	0xFDA
 16157                           fsr2l	equ	0xFD9
 16158                           status	equ	0xFD8
 16159                           
 16160 ;; *************** function i2_I2C_Master_Stop *****************
 16161 ;; Defined at:
 16162 ;;		line 42 in file "I2C.c"
 16163 ;; Parameters:    Size  Location     Type
 16164 ;;		None
 16165 ;; Auto vars:     Size  Location     Type
 16166 ;;		None
 16167 ;; Return value:  Size  Location     Type
 16168 ;;                  1    wreg      void 
 16169 ;; Registers used:
 16170 ;;		wreg, status,2, status,0, cstack
 16171 ;; Tracked objects:
 16172 ;;		On entry : 0/0
 16173 ;;		On exit  : 0/0
 16174 ;;		Unchanged: 0/0
 16175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16180 ;;Total ram usage:        0 bytes
 16181 ;; Hardware stack levels used:    1
 16182 ;; Hardware stack levels required when called:    1
 16183 ;; This function calls:
 16184 ;;		i2_I2C_Master_Wait
 16185 ;; This function is called by:
 16186 ;;		i2_read_time
 16187 ;;		i2_read_colorsensor
 16188 ;; This function uses a non-reentrant model
 16189 ;;
 16190                           
 16191                           	psect	text63
 16192  005506                     __ptext63:
 16193                           	opt stack 0
 16194  005506                     i2_I2C_Master_Stop:
 16195                           	opt stack 20
 16196                           
 16197                           ;I2C.c: 44: I2C_Master_Wait();
 16198                           
 16199                           ;incstack = 0
 16200  005506  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16201                           
 16202                           ;I2C.c: 45: PEN = 1;
 16203  00550A  84C5               	bsf	4037,2,c	;volatile
 16204  00550C  0012               	return		;funcret
 16205  00550E                     __end_ofi2_I2C_Master_Stop:
 16206                           	opt stack 0
 16207                           pclatu	equ	0xFFB
 16208                           pclath	equ	0xFFA
 16209                           tblptru	equ	0xFF8
 16210                           tblptrh	equ	0xFF7
 16211                           tblptrl	equ	0xFF6
 16212                           tablat	equ	0xFF5
 16213                           prodh	equ	0xFF4
 16214                           prodl	equ	0xFF3
 16215                           intcon	equ	0xFF2
 16216                           intcon2	equ	0xFF1
 16217                           intcon3	equ	0xFF0
 16218                           postinc0	equ	0xFEE
 16219                           fsr0h	equ	0xFEA
 16220                           fsr0l	equ	0xFE9
 16221                           wreg	equ	0xFE8
 16222                           postdec1	equ	0xFE5
 16223                           fsr1h	equ	0xFE2
 16224                           fsr1l	equ	0xFE1
 16225                           indf2	equ	0xFDF
 16226                           postinc2	equ	0xFDE
 16227                           postdec2	equ	0xFDD
 16228                           fsr2h	equ	0xFDA
 16229                           fsr2l	equ	0xFD9
 16230                           status	equ	0xFD8
 16231                           
 16232 ;; *************** function i2_I2C_Master_Start *****************
 16233 ;; Defined at:
 16234 ;;		line 30 in file "I2C.c"
 16235 ;; Parameters:    Size  Location     Type
 16236 ;;		None
 16237 ;; Auto vars:     Size  Location     Type
 16238 ;;		None
 16239 ;; Return value:  Size  Location     Type
 16240 ;;                  1    wreg      void 
 16241 ;; Registers used:
 16242 ;;		wreg, status,2, status,0, cstack
 16243 ;; Tracked objects:
 16244 ;;		On entry : 0/0
 16245 ;;		On exit  : 0/0
 16246 ;;		Unchanged: 0/0
 16247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16252 ;;Total ram usage:        0 bytes
 16253 ;; Hardware stack levels used:    1
 16254 ;; Hardware stack levels required when called:    1
 16255 ;; This function calls:
 16256 ;;		i2_I2C_Master_Wait
 16257 ;; This function is called by:
 16258 ;;		i2_read_time
 16259 ;;		i2_read_colorsensor
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           	psect	text64
 16264  00550E                     __ptext64:
 16265                           	opt stack 0
 16266  00550E                     i2_I2C_Master_Start:
 16267                           	opt stack 20
 16268                           
 16269                           ;I2C.c: 32: I2C_Master_Wait();
 16270                           
 16271                           ;incstack = 0
 16272  00550E  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16273                           
 16274                           ;I2C.c: 33: SEN = 1;
 16275  005512  80C5               	bsf	4037,0,c	;volatile
 16276  005514  0012               	return		;funcret
 16277  005516                     __end_ofi2_I2C_Master_Start:
 16278                           	opt stack 0
 16279                           pclatu	equ	0xFFB
 16280                           pclath	equ	0xFFA
 16281                           tblptru	equ	0xFF8
 16282                           tblptrh	equ	0xFF7
 16283                           tblptrl	equ	0xFF6
 16284                           tablat	equ	0xFF5
 16285                           prodh	equ	0xFF4
 16286                           prodl	equ	0xFF3
 16287                           intcon	equ	0xFF2
 16288                           intcon2	equ	0xFF1
 16289                           intcon3	equ	0xFF0
 16290                           postinc0	equ	0xFEE
 16291                           fsr0h	equ	0xFEA
 16292                           fsr0l	equ	0xFE9
 16293                           wreg	equ	0xFE8
 16294                           postdec1	equ	0xFE5
 16295                           fsr1h	equ	0xFE2
 16296                           fsr1l	equ	0xFE1
 16297                           indf2	equ	0xFDF
 16298                           postinc2	equ	0xFDE
 16299                           postdec2	equ	0xFDD
 16300                           fsr2h	equ	0xFDA
 16301                           fsr2l	equ	0xFD9
 16302                           status	equ	0xFD8
 16303                           
 16304 ;; *************** function i2_I2C_Master_Read *****************
 16305 ;; Defined at:
 16306 ;;		line 110 in file "I2C.c"
 16307 ;; Parameters:    Size  Location     Type
 16308 ;;  a               1    wreg     unsigned char 
 16309 ;; Auto vars:     Size  Location     Type
 16310 ;;  a               1    1[COMRAM] unsigned char 
 16311 ;;  I2C_Master_R    1    2[COMRAM] unsigned char 
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      unsigned char 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2, status,0, cstack
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16324 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16325 ;;Total ram usage:        2 bytes
 16326 ;; Hardware stack levels used:    1
 16327 ;; Hardware stack levels required when called:    1
 16328 ;; This function calls:
 16329 ;;		i2_I2C_Master_Wait
 16330 ;; This function is called by:
 16331 ;;		i2_read_time
 16332 ;;		i2_read_colorsensor
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text65
 16337  005384                     __ptext65:
 16338                           	opt stack 0
 16339  005384                     i2_I2C_Master_Read:
 16340                           	opt stack 20
 16341                           
 16342                           ;incstack = 0
 16343                           ;i2I2C_Master_Read@a stored from wreg
 16344  005384  6E02               	movwf	i2I2C_Master_Read@a,c
 16345                           
 16346                           ;I2C.c: 112: unsigned char temp;
 16347                           ;I2C.c: 113: I2C_Master_Wait();
 16348  005386  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16349                           
 16350                           ;I2C.c: 114: RCEN = 1;
 16351  00538A  86C5               	bsf	4037,3,c	;volatile
 16352                           
 16353                           ;I2C.c: 115: I2C_Master_Wait();
 16354  00538C  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16355                           
 16356                           ;I2C.c: 116: temp = SSPBUF;
 16357  005390  CFC9 F003          	movff	4041,i2I2C_Master_Read@temp	;volatile
 16358                           
 16359                           ;I2C.c: 117: I2C_Master_Wait();
 16360  005394  EC47  F02A         	call	i2_I2C_Master_Wait	;wreg free
 16361                           
 16362                           ;I2C.c: 118: ACKDT = (a)?0:1;
 16363  005398  5002               	movf	i2I2C_Master_Read@a,w,c
 16364  00539A  A4D8               	btfss	status,2,c
 16365  00539C  D002               	goto	i2u577_40
 16366  00539E  8AC5               	bsf	4037,5,c	;volatile
 16367  0053A0  D001               	goto	i2l5814
 16368  0053A2                     i2u577_40:
 16369  0053A2  9AC5               	bcf	4037,5,c	;volatile
 16370  0053A4                     i2l5814:
 16371                           
 16372                           ;I2C.c: 119: ACKEN = 1;
 16373  0053A4  88C5               	bsf	4037,4,c	;volatile
 16374                           
 16375                           ;I2C.c: 120: return temp;
 16376  0053A6  5003               	movf	i2I2C_Master_Read@temp,w,c
 16377  0053A8  0012               	return	
 16378  0053AA                     __end_ofi2_I2C_Master_Read:
 16379                           	opt stack 0
 16380                           pclatu	equ	0xFFB
 16381                           pclath	equ	0xFFA
 16382                           tblptru	equ	0xFF8
 16383                           tblptrh	equ	0xFF7
 16384                           tblptrl	equ	0xFF6
 16385                           tablat	equ	0xFF5
 16386                           prodh	equ	0xFF4
 16387                           prodl	equ	0xFF3
 16388                           intcon	equ	0xFF2
 16389                           intcon2	equ	0xFF1
 16390                           intcon3	equ	0xFF0
 16391                           postinc0	equ	0xFEE
 16392                           fsr0h	equ	0xFEA
 16393                           fsr0l	equ	0xFE9
 16394                           wreg	equ	0xFE8
 16395                           postdec1	equ	0xFE5
 16396                           fsr1h	equ	0xFE2
 16397                           fsr1l	equ	0xFE1
 16398                           indf2	equ	0xFDF
 16399                           postinc2	equ	0xFDE
 16400                           postdec2	equ	0xFDD
 16401                           fsr2h	equ	0xFDA
 16402                           fsr2l	equ	0xFD9
 16403                           status	equ	0xFD8
 16404                           
 16405 ;; *************** function i2_I2C_Master_Wait *****************
 16406 ;; Defined at:
 16407 ;;		line 25 in file "I2C.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;		None
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;		None
 16412 ;; Return value:  Size  Location     Type
 16413 ;;                  1    wreg      void 
 16414 ;; Registers used:
 16415 ;;		wreg, status,2, status,0
 16416 ;; Tracked objects:
 16417 ;;		On entry : 0/0
 16418 ;;		On exit  : 0/0
 16419 ;;		Unchanged: 0/0
 16420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16425 ;;Total ram usage:        1 bytes
 16426 ;; Hardware stack levels used:    1
 16427 ;; This function calls:
 16428 ;;		Nothing
 16429 ;; This function is called by:
 16430 ;;		i2_I2C_Master_Start
 16431 ;;		i2_I2C_Master_Stop
 16432 ;;		i2_I2C_Master_Write
 16433 ;;		i2_I2C_Master_Read
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           	psect	text66
 16438  00548E                     __ptext66:
 16439                           	opt stack 0
 16440  00548E                     i2_I2C_Master_Wait:
 16441                           	opt stack 20
 16442  00548E                     i2l34:
 16443  00548E  B4C7               	btfsc	4039,2,c	;volatile
 16444  005490  D7FE               	goto	i2l34
 16445  005492  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
 16446  005496  0E1F               	movlw	31
 16447  005498  1601               	andwf	??i2_I2C_Master_Wait,f,c
 16448  00549A  B4D8               	btfsc	status,2,c
 16449  00549C  0012               	return	
 16450  00549E  D7F7               	goto	i2l34
 16451  0054A0                     __end_ofi2_I2C_Master_Wait:
 16452                           	opt stack 0
 16453                           pclatu	equ	0xFFB
 16454                           pclath	equ	0xFFA
 16455                           tblptru	equ	0xFF8
 16456                           tblptrh	equ	0xFF7
 16457                           tblptrl	equ	0xFF6
 16458                           tablat	equ	0xFF5
 16459                           prodh	equ	0xFF4
 16460                           prodl	equ	0xFF3
 16461                           intcon	equ	0xFF2
 16462                           intcon2	equ	0xFF1
 16463                           intcon3	equ	0xFF0
 16464                           postinc0	equ	0xFEE
 16465                           fsr0h	equ	0xFEA
 16466                           fsr0l	equ	0xFE9
 16467                           wreg	equ	0xFE8
 16468                           postdec1	equ	0xFE5
 16469                           fsr1h	equ	0xFE2
 16470                           fsr1l	equ	0xFE1
 16471                           indf2	equ	0xFDF
 16472                           postinc2	equ	0xFDE
 16473                           postdec2	equ	0xFDD
 16474                           fsr2h	equ	0xFDA
 16475                           fsr2l	equ	0xFD9
 16476                           status	equ	0xFD8
 16477                           
 16478 ;; *************** function i2_printf *****************
 16479 ;; Defined at:
 16480 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  f               2   12[COMRAM] PTR const unsigned char 
 16483 ;;		 -> STR_47(25), STR_46(26), STR_45(24), STR_44(26), 
 16484 ;;		 -> STR_43(16), STR_42(17), STR_41(17), STR_40(17), 
 16485 ;;		 -> STR_39(17), STR_38(21), STR_37(25), STR_36(16), 
 16486 ;;		 -> STR_35(17), STR_34(17), STR_33(17), STR_32(17), 
 16487 ;;		 -> STR_31(22), STR_30(24), STR_29(16), STR_28(17), 
 16488 ;;		 -> STR_27(17), STR_26(17), STR_25(17), STR_24(22), 
 16489 ;;		 -> STR_23(24), STR_22(16), STR_21(17), STR_20(17), 
 16490 ;;		 -> STR_19(17), STR_18(17), STR_17(21), STR_16(23), 
 16491 ;;		 -> STR_15(16), STR_14(17), STR_13(17), STR_12(17), 
 16492 ;;		 -> STR_11(17), STR_10(22), STR_9(22), STR_8(23), 
 16493 ;;		 -> STR_7(23), STR_6(9), STR_5(18), STR_4(13), 
 16494 ;;		 -> STR_3(24), STR_2(24), STR_1(23), 
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;  printf          4    0        struct .
 16497 ;;  printf          3    0        PTR const unsigned char 
 16498 ;;  printf          2   29[COMRAM] int 
 16499 ;;  printf          2   26[COMRAM] unsigned int 
 16500 ;;  printf          2   23[COMRAM] PTR void [1]
 16501 ;;		 -> ?i2_printf(2), ?_printf(2), 
 16502 ;;  printf          2    0        unsigned int 
 16503 ;;  printf          1   31[COMRAM] char 
 16504 ;;  printf          1   28[COMRAM] unsigned char 
 16505 ;;  printf          1   25[COMRAM] char 
 16506 ;;  printf          1   22[COMRAM] unsigned char 
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  2   12[COMRAM] int 
 16509 ;; Registers used:
 16510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 0/0
 16513 ;;		On exit  : 0/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16516 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;Total ram usage:       20 bytes
 16521 ;; Hardware stack levels used:    1
 16522 ;; Hardware stack levels required when called:    2
 16523 ;; This function calls:
 16524 ;;		i2___lwdiv
 16525 ;;		i2___lwmod
 16526 ;;		i2___wmul
 16527 ;;		i2_isdigit
 16528 ;;		i2_putch
 16529 ;; This function is called by:
 16530 ;;		_isr
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text67
 16535  00140E                     __ptext67:
 16536                           	opt stack 0
 16537  00140E                     i2_printf:
 16538                           	opt stack 20
 16539                           
 16540                           ;doprnt.c: 466: va_list ap;
 16541                           ;doprnt.c: 499: signed char c;
 16542                           ;doprnt.c: 501: int width;
 16543                           ;doprnt.c: 506: signed char prec;
 16544                           ;doprnt.c: 508: unsigned char flag;
 16545                           ;doprnt.c: 523: union {
 16546                           ;doprnt.c: 524: unsigned long vd;
 16547                           ;doprnt.c: 525: double integ;
 16548                           ;doprnt.c: 526: } tmpval;
 16549                           ;doprnt.c: 528: unsigned int val;
 16550                           ;doprnt.c: 529: unsigned len;
 16551                           ;doprnt.c: 530: const char * cp;
 16552                           ;doprnt.c: 533: *ap = __va_start();
 16553                           
 16554                           ;incstack = 0
 16555  00140E  0E0F               	movlw	low (?i2_printf+2)
 16556  001410  6E18               	movwf	i2printf@ap,c
 16557  001412  0E00               	movlw	high (?i2_printf+2)
 16558  001414  6E19               	movwf	i2printf@ap+1,c
 16559                           
 16560                           ;doprnt.c: 536: while(c = *f++) {
 16561  001416  D184               	goto	i2l6612
 16562  001418                     i2l6482:
 16563                           
 16564                           ;doprnt.c: 538: if(c != '%')
 16565  001418  0E25               	movlw	37
 16566  00141A  1820               	xorwf	i2printf@c,w,c
 16567  00141C  B4D8               	btfsc	status,2,c
 16568  00141E  D004               	goto	i2l6486
 16569                           
 16570                           ;doprnt.c: 540: {
 16571                           ;doprnt.c: 541: (putch(c) );
 16572  001420  5020               	movf	i2printf@c,w,c
 16573  001422  EC60  F02A         	call	i2_putch
 16574                           
 16575                           ;doprnt.c: 542: continue;
 16576  001426  D17C               	goto	i2l6612
 16577  001428                     i2l6486:
 16578                           
 16579                           ;doprnt.c: 543: }
 16580                           ;doprnt.c: 546: width = 0;
 16581  001428  0E00               	movlw	0
 16582  00142A  6E1F               	movwf	i2printf@width+1,c
 16583  00142C  0E00               	movlw	0
 16584  00142E  6E1E               	movwf	i2printf@width,c
 16585                           
 16586                           ;doprnt.c: 548: flag = 0;
 16587  001430  0E00               	movlw	0
 16588  001432  6E1D               	movwf	i2printf@flag,c
 16589                           
 16590                           ;doprnt.c: 551: switch(*f) {
 16591                           
 16592                           ;doprnt.c: 550: for(;;) {
 16593  001434  D003               	goto	i2l6492
 16594  001436                     i2l6488:
 16595                           
 16596                           ;doprnt.c: 580: flag |= 0x04;
 16597  001436  841D               	bsf	i2printf@flag,2,c
 16598                           
 16599                           ;doprnt.c: 581: f++;
 16600  001438  4A0D               	infsnz	i2printf@f,f,c
 16601  00143A  2A0E               	incf	i2printf@f+1,f,c
 16602  00143C                     i2l6492:
 16603  00143C  C00D  FFF6         	movff	i2printf@f,tblptrl
 16604  001440  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16605  001444                     	if	0	;tblptru may be non-zero
 16606  001444                     	endif
 16607  001444                     	if	0	;tblptru may be non-zero
 16608  001444                     	endif
 16609  001444  0008               	tblrd		*
 16610  001446  50F5               	movf	tablat,w,c
 16611                           
 16612                           ; Switch size 1, requested type "space"
 16613                           ; Number of cases is 1, Range of values is 48 to 48
 16614                           ; switch strategies available:
 16615                           ; Name         Instructions Cycles
 16616                           ; simple_byte            4     3 (average)
 16617                           ;	Chosen strategy is simple_byte
 16618  001448  0A30               	xorlw	48	; case 48
 16619  00144A  B4D8               	btfsc	status,2,c
 16620  00144C  D7F4               	goto	i2l6488
 16621                           
 16622                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16623                           
 16624                           ;doprnt.c: 586: }
 16625                           
 16626                           ;doprnt.c: 585: break;
 16627  00144E  C00D  FFF6         	movff	i2printf@f,tblptrl
 16628  001452  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16629  001456                     	if	0	;tblptru may be non-zero
 16630  001456                     	endif
 16631  001456                     	if	0	;tblptru may be non-zero
 16632  001456                     	endif
 16633  001456  0008               	tblrd		*
 16634  001458  50F5               	movf	tablat,w,c
 16635  00145A  EC0B  F02A         	call	i2_isdigit
 16636  00145E  A0D8               	btfss	status,0,c
 16637  001460  D038               	goto	i2l6512
 16638                           
 16639                           ;doprnt.c: 598: width = 0;
 16640  001462  0E00               	movlw	0
 16641  001464  6E1F               	movwf	i2printf@width+1,c
 16642  001466  0E00               	movlw	0
 16643  001468  6E1E               	movwf	i2printf@width,c
 16644  00146A                     i2l6498:
 16645                           
 16646                           ;doprnt.c: 600: width *= 10;
 16647  00146A  C01E  F001         	movff	i2printf@width,i2___wmul@multiplier
 16648  00146E  C01F  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 16649  001472  0E00               	movlw	0
 16650  001474  6E04               	movwf	i2___wmul@multiplicand+1,c
 16651  001476  0E0A               	movlw	10
 16652  001478  6E03               	movwf	i2___wmul@multiplicand,c
 16653  00147A  ECD5  F029         	call	i2___wmul	;wreg free
 16654  00147E  C001  F01E         	movff	?i2___wmul,i2printf@width
 16655  001482  C002  F01F         	movff	?i2___wmul+1,i2printf@width+1
 16656                           
 16657                           ;doprnt.c: 601: width += *f++ - '0';
 16658  001486  0ED0               	movlw	208
 16659  001488  6E13               	movwf	??i2_printf& (0+255),c
 16660  00148A  0EFF               	movlw	255
 16661  00148C  6E14               	movwf	(??i2_printf+1)& (0+255),c
 16662  00148E  C00D  FFF6         	movff	i2printf@f,tblptrl
 16663  001492  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16664  001496                     	if	0	;tblptru may be non-zero
 16665  001496                     	endif
 16666  001496                     	if	0	;tblptru may be non-zero
 16667  001496                     	endif
 16668  001496  0008               	tblrd		*
 16669  001498  50F5               	movf	tablat,w,c
 16670  00149A  6E15               	movwf	(??i2_printf+2)& (0+255),c
 16671  00149C  6A16               	clrf	(??i2_printf+3)& (0+255),c
 16672  00149E  5013               	movf	??i2_printf,w,c
 16673  0014A0  2615               	addwf	??i2_printf+2,f,c
 16674  0014A2  5014               	movf	??i2_printf+1,w,c
 16675  0014A4  2216               	addwfc	??i2_printf+3,f,c
 16676  0014A6  5015               	movf	??i2_printf+2,w,c
 16677  0014A8  261E               	addwf	i2printf@width,f,c
 16678  0014AA  5016               	movf	??i2_printf+3,w,c
 16679  0014AC  221F               	addwfc	i2printf@width+1,f,c
 16680  0014AE  4A0D               	infsnz	i2printf@f,f,c
 16681  0014B0  2A0E               	incf	i2printf@f+1,f,c
 16682                           
 16683                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16684  0014B2  C00D  FFF6         	movff	i2printf@f,tblptrl
 16685  0014B6  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16686  0014BA                     	if	0	;tblptru may be non-zero
 16687  0014BA                     	endif
 16688  0014BA                     	if	0	;tblptru may be non-zero
 16689  0014BA                     	endif
 16690  0014BA  0008               	tblrd		*
 16691  0014BC  50F5               	movf	tablat,w,c
 16692  0014BE  EC0B  F02A         	call	i2_isdigit
 16693  0014C2  A0D8               	btfss	status,0,c
 16694  0014C4  D006               	goto	i2l6512
 16695  0014C6  D7D1               	goto	i2l6498
 16696  0014C8                     i2l6506:
 16697                           
 16698                           ;doprnt.c: 721: flag |= 0x80;
 16699  0014C8  8E1D               	bsf	i2printf@flag,7,c
 16700                           
 16701                           ;doprnt.c: 723: break;
 16702  0014CA  D01D               	goto	i2l6514
 16703  0014CC                     i2l6508:
 16704                           
 16705                           ;doprnt.c: 818: flag |= 0xC0;
 16706  0014CC  0EC0               	movlw	192
 16707  0014CE  121D               	iorwf	i2printf@flag,f,c
 16708                           
 16709                           ;doprnt.c: 822: }
 16710                           
 16711                           ;doprnt.c: 819: break;
 16712  0014D0  D01A               	goto	i2l6514
 16713  0014D2                     i2l6512:
 16714  0014D2  C00D  FFF6         	movff	i2printf@f,tblptrl
 16715  0014D6  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 16716  0014DA  4A0D               	infsnz	i2printf@f,f,c
 16717  0014DC  2A0E               	incf	i2printf@f+1,f,c
 16718  0014DE                     	if	0	;tblptru may be non-zero
 16719  0014DE                     	endif
 16720  0014DE                     	if	0	;tblptru may be non-zero
 16721  0014DE                     	endif
 16722  0014DE  0008               	tblrd		*
 16723  0014E0  CFF5 F020          	movff	tablat,i2printf@c
 16724  0014E4  5020               	movf	i2printf@c,w,c
 16725                           
 16726                           ; Switch size 1, requested type "space"
 16727                           ; Number of cases is 5, Range of values is 0 to 120
 16728                           ; switch strategies available:
 16729                           ; Name         Instructions Cycles
 16730                           ; simple_byte           16     9 (average)
 16731                           ;	Chosen strategy is simple_byte
 16732  0014E6  0A00               	xorlw	0	; case 0
 16733  0014E8  B4D8               	btfsc	status,2,c
 16734  0014EA  0012               	return	
 16735  0014EC  0A64               	xorlw	100	; case 100
 16736  0014EE  B4D8               	btfsc	status,2,c
 16737  0014F0  D00A               	goto	i2l6514
 16738  0014F2  0A0D               	xorlw	13	; case 105
 16739  0014F4  B4D8               	btfsc	status,2,c
 16740  0014F6  D007               	goto	i2l6514
 16741  0014F8  0A1C               	xorlw	28	; case 117
 16742  0014FA  B4D8               	btfsc	status,2,c
 16743  0014FC  D7E7               	goto	i2l6508
 16744  0014FE  0A0D               	xorlw	13	; case 120
 16745  001500  B4D8               	btfsc	status,2,c
 16746  001502  D7E2               	goto	i2l6506
 16747  001504  D10D               	goto	i2l6612
 16748  001506                     i2l6514:
 16749                           
 16750                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16751  001506  C01D  F013         	movff	i2printf@flag,??i2_printf
 16752  00150A  0EC0               	movlw	192
 16753  00150C  1613               	andwf	??i2_printf,f,c
 16754  00150E  A4D8               	btfss	status,2,c
 16755  001510  D015               	goto	i2l6526
 16756                           
 16757                           ;doprnt.c: 1253: {
 16758                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16759  001512  C018  FFD9         	movff	i2printf@ap,fsr2l
 16760  001516  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 16761  00151A  CFDE F01B          	movff	postinc2,i2printf@val
 16762  00151E  CFDD F01C          	movff	postdec2,i2printf@val+1
 16763  001522  0E02               	movlw	2
 16764  001524  2618               	addwf	i2printf@ap,f,c
 16765  001526  0E00               	movlw	0
 16766  001528  2219               	addwfc	i2printf@ap+1,f,c
 16767                           
 16768                           ;doprnt.c: 1261: if((int)val < 0) {
 16769  00152A  AE1C               	btfss	i2printf@val+1,7,c
 16770  00152C  D044               	goto	i2l6560
 16771                           
 16772                           ;doprnt.c: 1262: flag |= 0x03;
 16773  00152E  0E03               	movlw	3
 16774  001530  121D               	iorwf	i2printf@flag,f,c
 16775                           
 16776                           ;doprnt.c: 1263: val = -val;
 16777  001532  6C1B               	negf	i2printf@val,c
 16778  001534  1E1C               	comf	i2printf@val+1,f,c
 16779  001536  B0D8               	btfsc	status,0,c
 16780  001538  2A1C               	incf	i2printf@val+1,f,c
 16781                           
 16782                           ;doprnt.c: 1264: }
 16783                           ;doprnt.c: 1266: }
 16784  00153A  D03D               	goto	i2l6560
 16785  00153C                     i2l6526:
 16786                           
 16787                           ;doprnt.c: 1268: else
 16788                           ;doprnt.c: 1273: {
 16789                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16790  00153C  C018  FFD9         	movff	i2printf@ap,fsr2l
 16791  001540  C019  FFDA         	movff	i2printf@ap+1,fsr2h
 16792  001544  CFDE F01B          	movff	postinc2,i2printf@val
 16793  001548  CFDD F01C          	movff	postdec2,i2printf@val+1
 16794  00154C  0E02               	movlw	2
 16795  00154E  2618               	addwf	i2printf@ap,f,c
 16796  001550  0E00               	movlw	0
 16797  001552  2219               	addwfc	i2printf@ap+1,f,c
 16798                           
 16799                           ;doprnt.c: 1287: }
 16800                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 16801  001554  D030               	goto	i2l6560
 16802  001556                     i2l6530:
 16803                           
 16804                           ;doprnt.c: 1302: case 0xC0:
 16805                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16806  001556  0E01               	movlw	1
 16807  001558  6E20               	movwf	i2printf@c,c
 16808  00155A                     i2l6532:
 16809  00155A  0E05               	movlw	5
 16810  00155C  1820               	xorwf	i2printf@c,w,c
 16811  00155E  B4D8               	btfsc	status,2,c
 16812  001560  D035               	goto	i2l6562
 16813                           
 16814                           ;doprnt.c: 1306: if(val < dpowers[c])
 16815  001562  5020               	movf	i2printf@c,w,c
 16816  001564  0D02               	mullw	2
 16817  001566  0EA4               	movlw	low _dpowers
 16818  001568  24F3               	addwf	prodl,w,c
 16819  00156A  6EF6               	movwf	tblptrl,c
 16820  00156C  0EFD               	movlw	high _dpowers
 16821  00156E  20F4               	addwfc	prodh,w,c
 16822  001570  6EF7               	movwf	tblptrh,c
 16823  001572                     	if	0	;There are less than 3 active tblptr bytes
 16824  001572                     	endif
 16825  001572  0009               	tblrd		*+
 16826  001574  50F5               	movf	tablat,w,c
 16827  001576  5C1B               	subwf	i2printf@val,w,c
 16828  001578  0009               	tblrd		*+
 16829  00157A  50F5               	movf	tablat,w,c
 16830  00157C  581C               	subwfb	i2printf@val+1,w,c
 16831  00157E  A0D8               	btfss	status,0,c
 16832  001580  D025               	goto	i2l6562
 16833                           
 16834                           ;doprnt.c: 1307: break;
 16835  001582  2A20               	incf	i2printf@c,f,c
 16836  001584  D7EA               	goto	i2l6532
 16837  001586                     i2l6544:
 16838                           
 16839                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16840  001586  0E01               	movlw	1
 16841  001588  6E20               	movwf	i2printf@c,c
 16842  00158A                     i2l6546:
 16843  00158A  0E04               	movlw	4
 16844  00158C  1820               	xorwf	i2printf@c,w,c
 16845  00158E  B4D8               	btfsc	status,2,c
 16846  001590  D01D               	goto	i2l6562
 16847                           
 16848                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16849  001592  5020               	movf	i2printf@c,w,c
 16850  001594  0D02               	mullw	2
 16851  001596  0EAE               	movlw	low _hexpowers
 16852  001598  24F3               	addwf	prodl,w,c
 16853  00159A  6EF6               	movwf	tblptrl,c
 16854  00159C  0EFD               	movlw	high _hexpowers
 16855  00159E  20F4               	addwfc	prodh,w,c
 16856  0015A0  6EF7               	movwf	tblptrh,c
 16857  0015A2                     	if	0	;There are less than 3 active tblptr bytes
 16858  0015A2                     	endif
 16859  0015A2  0009               	tblrd		*+
 16860  0015A4  50F5               	movf	tablat,w,c
 16861  0015A6  5C1B               	subwf	i2printf@val,w,c
 16862  0015A8  0009               	tblrd		*+
 16863  0015AA  50F5               	movf	tablat,w,c
 16864  0015AC  581C               	subwfb	i2printf@val+1,w,c
 16865  0015AE  A0D8               	btfss	status,0,c
 16866  0015B0  D00D               	goto	i2l6562
 16867                           
 16868                           ;doprnt.c: 1318: break;
 16869  0015B2  2A20               	incf	i2printf@c,f,c
 16870  0015B4  D7EA               	goto	i2l6546
 16871  0015B6                     i2l6560:
 16872  0015B6  501D               	movf	i2printf@flag,w,c
 16873  0015B8  0BC0               	andlw	192
 16874                           
 16875                           ; Switch size 1, requested type "space"
 16876                           ; Number of cases is 3, Range of values is 0 to 192
 16877                           ; switch strategies available:
 16878                           ; Name         Instructions Cycles
 16879                           ; simple_byte           10     6 (average)
 16880                           ;	Chosen strategy is simple_byte
 16881  0015BA  0A00               	xorlw	0	; case 0
 16882  0015BC  B4D8               	btfsc	status,2,c
 16883  0015BE  D7CB               	goto	i2l6530
 16884  0015C0  0A80               	xorlw	128	; case 128
 16885  0015C2  B4D8               	btfsc	status,2,c
 16886  0015C4  D7E0               	goto	i2l6544
 16887  0015C6  0A40               	xorlw	64	; case 192
 16888  0015C8  B4D8               	btfsc	status,2,c
 16889  0015CA  D7C5               	goto	i2l6530
 16890  0015CC                     i2l6562:
 16891                           
 16892                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16893  0015CC  501E               	movf	i2printf@width,w,c
 16894  0015CE  101F               	iorwf	i2printf@width+1,w,c
 16895  0015D0  B4D8               	btfsc	status,2,c
 16896  0015D2  D009               	goto	i2l6568
 16897  0015D4  C01D  F013         	movff	i2printf@flag,??i2_printf
 16898  0015D8  0E03               	movlw	3
 16899  0015DA  1613               	andwf	??i2_printf,f,c
 16900  0015DC  B4D8               	btfsc	status,2,c
 16901  0015DE  D003               	goto	i2l6568
 16902                           
 16903                           ;doprnt.c: 1346: width--;
 16904  0015E0  061E               	decf	i2printf@width,f,c
 16905  0015E2  A0D8               	btfss	status,0,c
 16906  0015E4  061F               	decf	i2printf@width+1,f,c
 16907  0015E6                     i2l6568:
 16908                           
 16909                           ;doprnt.c: 1381: if(width > c)
 16910  0015E6  0E80               	movlw	128
 16911  0015E8  BE20               	btfsc	i2printf@c,7,c
 16912  0015EA  0E7F               	movlw	127
 16913  0015EC  6E13               	movwf	??i2_printf& (0+255),c
 16914  0015EE  501E               	movf	i2printf@width,w,c
 16915  0015F0  5C20               	subwf	i2printf@c,w,c
 16916  0015F2  501F               	movf	i2printf@width+1,w,c
 16917  0015F4  0A80               	xorlw	128
 16918  0015F6  5813               	subwfb	??i2_printf& (0+255),w,c
 16919  0015F8  B0D8               	btfsc	status,0,c
 16920  0015FA  D007               	goto	i2l6572
 16921                           
 16922                           ;doprnt.c: 1382: width -= c;
 16923  0015FC  5020               	movf	i2printf@c,w,c
 16924  0015FE  5E1E               	subwf	i2printf@width,f,c
 16925  001600  0E00               	movlw	0
 16926  001602  BE20               	btfsc	i2printf@c,7,c
 16927  001604  0EFF               	movlw	255
 16928  001606  5A1F               	subwfb	i2printf@width+1,f,c
 16929  001608  D004               	goto	i2l6574
 16930  00160A                     i2l6572:
 16931                           
 16932                           ;doprnt.c: 1383: else
 16933                           ;doprnt.c: 1384: width = 0;
 16934  00160A  0E00               	movlw	0
 16935  00160C  6E1F               	movwf	i2printf@width+1,c
 16936  00160E  0E00               	movlw	0
 16937  001610  6E1E               	movwf	i2printf@width,c
 16938  001612                     i2l6574:
 16939                           
 16940                           ;doprnt.c: 1387: if(flag & 0x04) {
 16941  001612  A41D               	btfss	i2printf@flag,2,c
 16942  001614  D014               	goto	i2l6586
 16943                           
 16944                           ;doprnt.c: 1392: if(flag & 0x03)
 16945  001616  C01D  F013         	movff	i2printf@flag,??i2_printf
 16946  00161A  0E03               	movlw	3
 16947  00161C  1613               	andwf	??i2_printf,f,c
 16948  00161E  B4D8               	btfsc	status,2,c
 16949  001620  D003               	goto	i2l6580
 16950                           
 16951                           ;doprnt.c: 1393: (putch('-') );
 16952  001622  0E2D               	movlw	45
 16953  001624  EC60  F02A         	call	i2_putch
 16954  001628                     i2l6580:
 16955                           
 16956                           ;doprnt.c: 1415: if(width)
 16957  001628  501E               	movf	i2printf@width,w,c
 16958  00162A  101F               	iorwf	i2printf@width+1,w,c
 16959  00162C  B4D8               	btfsc	status,2,c
 16960  00162E  D01E               	goto	i2l6596
 16961                           
 16962                           ;doprnt.c: 1417: (putch('0') );
 16963                           
 16964                           ;doprnt.c: 1416: do
 16965  001630  0E30               	movlw	48
 16966  001632  EC60  F02A         	call	i2_putch
 16967                           
 16968                           ;doprnt.c: 1418: while(--width);
 16969  001636  061E               	decf	i2printf@width,f,c
 16970  001638  A0D8               	btfss	status,0,c
 16971  00163A  061F               	decf	i2printf@width+1,f,c
 16972  00163C  D7F5               	goto	i2l6580
 16973  00163E                     i2l6586:
 16974                           
 16975                           ;doprnt.c: 1422: {
 16976                           ;doprnt.c: 1424: if(width
 16977                           ;doprnt.c: 1428: )
 16978  00163E  501E               	movf	i2printf@width,w,c
 16979  001640  101F               	iorwf	i2printf@width+1,w,c
 16980  001642  B4D8               	btfsc	status,2,c
 16981  001644  D00A               	goto	i2l6592
 16982  001646                     i2l6588:
 16983                           
 16984                           ;doprnt.c: 1430: (putch(' ') );
 16985  001646  0E20               	movlw	32
 16986  001648  EC60  F02A         	call	i2_putch
 16987                           
 16988                           ;doprnt.c: 1431: while(--width);
 16989  00164C  061E               	decf	i2printf@width,f,c
 16990  00164E  A0D8               	btfss	status,0,c
 16991  001650  061F               	decf	i2printf@width+1,f,c
 16992  001652  501E               	movf	i2printf@width,w,c
 16993  001654  101F               	iorwf	i2printf@width+1,w,c
 16994  001656  A4D8               	btfss	status,2,c
 16995  001658  D7F6               	goto	i2l6588
 16996  00165A                     i2l6592:
 16997                           
 16998                           ;doprnt.c: 1438: if(flag & 0x03)
 16999  00165A  C01D  F013         	movff	i2printf@flag,??i2_printf
 17000  00165E  0E03               	movlw	3
 17001  001660  1613               	andwf	??i2_printf,f,c
 17002  001662  B4D8               	btfsc	status,2,c
 17003  001664  D003               	goto	i2l6596
 17004                           
 17005                           ;doprnt.c: 1439: (putch('-') );
 17006  001666  0E2D               	movlw	45
 17007  001668  EC60  F02A         	call	i2_putch
 17008  00166C                     i2l6596:
 17009                           
 17010                           ;doprnt.c: 1469: }
 17011                           ;doprnt.c: 1472: prec = c;
 17012  00166C  C020  F01A         	movff	i2printf@c,i2printf@prec
 17013                           
 17014                           ;doprnt.c: 1474: while(prec--) {
 17015  001670  D053               	goto	i2l6610
 17016  001672                     i2l6598:
 17017                           
 17018                           ;doprnt.c: 1486: case 0xC0:
 17019                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17020  001672  501A               	movf	i2printf@prec,w,c
 17021  001674  0D02               	mullw	2
 17022  001676  0EA4               	movlw	low _dpowers
 17023  001678  24F3               	addwf	prodl,w,c
 17024  00167A  6EF6               	movwf	tblptrl,c
 17025  00167C  0EFD               	movlw	high _dpowers
 17026  00167E  20F4               	addwfc	prodh,w,c
 17027  001680  6EF7               	movwf	tblptrh,c
 17028  001682                     	if	0	;There are less than 3 active tblptr bytes
 17029  001682                     	endif
 17030  001682  0009               	tblrd		*+
 17031  001684  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 17032  001688  000A               	tblrd		*-
 17033  00168A  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 17034  00168E  C01B  F001         	movff	i2printf@val,i2___lwdiv@dividend
 17035  001692  C01C  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 17036  001696  ECD2  F027         	call	i2___lwdiv	;wreg free
 17037  00169A  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
 17038  00169E  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
 17039  0016A2  0E00               	movlw	0
 17040  0016A4  6E0B               	movwf	i2___lwmod@divisor+1,c
 17041  0016A6  0E0A               	movlw	10
 17042  0016A8  6E0A               	movwf	i2___lwmod@divisor,c
 17043  0016AA  EC92  F028         	call	i2___lwmod	;wreg free
 17044  0016AE  5008               	movf	?i2___lwmod,w,c
 17045  0016B0  0F30               	addlw	48
 17046  0016B2  6E20               	movwf	i2printf@c,c
 17047                           
 17048                           ;doprnt.c: 1491: break;
 17049  0016B4  D02E               	goto	i2l6608
 17050  0016B6                     i2l6600:
 17051                           
 17052                           ;doprnt.c: 1499: {
 17053                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17054  0016B6  C01B  F001         	movff	i2printf@val,i2___lwdiv@dividend
 17055  0016BA  C01C  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 17056  0016BE  501A               	movf	i2printf@prec,w,c
 17057  0016C0  0D02               	mullw	2
 17058  0016C2  0EAE               	movlw	low _hexpowers
 17059  0016C4  24F3               	addwf	prodl,w,c
 17060  0016C6  6EF6               	movwf	tblptrl,c
 17061  0016C8  0EFD               	movlw	high _hexpowers
 17062  0016CA  20F4               	addwfc	prodh,w,c
 17063  0016CC  6EF7               	movwf	tblptrh,c
 17064  0016CE                     	if	0	;There are less than 3 active tblptr bytes
 17065  0016CE                     	endif
 17066  0016CE  0009               	tblrd		*+
 17067  0016D0  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 17068  0016D4  000A               	tblrd		*-
 17069  0016D6  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 17070  0016DA  ECD2  F027         	call	i2___lwdiv	;wreg free
 17071  0016DE  5001               	movf	?i2___lwdiv,w,c
 17072  0016E0  0B0F               	andlw	15
 17073  0016E2  6E17               	movwf	i2printf@idx,c
 17074                           
 17075                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 17076  0016E4  5017               	movf	i2printf@idx,w,c
 17077  0016E6  0D01               	mullw	1
 17078  0016E8  0E83               	movlw	low STR_48
 17079  0016EA  24F3               	addwf	prodl,w,c
 17080  0016EC  6EF6               	movwf	tblptrl,c
 17081  0016EE  0EFF               	movlw	high STR_48
 17082  0016F0  20F4               	addwfc	prodh,w,c
 17083  0016F2  6EF7               	movwf	tblptrh,c
 17084  0016F4                     	if	0	;There are less than 3 active tblptr bytes
 17085  0016F4                     	endif
 17086  0016F4  0008               	tblrd		*
 17087  0016F6  CFF5 F020          	movff	tablat,i2printf@c
 17088                           
 17089                           ;doprnt.c: 1523: }
 17090                           
 17091                           ;doprnt.c: 1508: }
 17092                           ;doprnt.c: 1510: break;
 17093  0016FA  D00B               	goto	i2l6608
 17094  0016FC                     i2l6606:
 17095  0016FC  501D               	movf	i2printf@flag,w,c
 17096  0016FE  0BC0               	andlw	192
 17097                           
 17098                           ; Switch size 1, requested type "space"
 17099                           ; Number of cases is 3, Range of values is 0 to 192
 17100                           ; switch strategies available:
 17101                           ; Name         Instructions Cycles
 17102                           ; simple_byte           10     6 (average)
 17103                           ;	Chosen strategy is simple_byte
 17104  001700  0A00               	xorlw	0	; case 0
 17105  001702  B4D8               	btfsc	status,2,c
 17106  001704  D7B6               	goto	i2l6598
 17107  001706  0A80               	xorlw	128	; case 128
 17108  001708  B4D8               	btfsc	status,2,c
 17109  00170A  D7D5               	goto	i2l6600
 17110  00170C  0A40               	xorlw	64	; case 192
 17111  00170E  B4D8               	btfsc	status,2,c
 17112  001710  D7B0               	goto	i2l6598
 17113  001712                     i2l6608:
 17114                           
 17115                           ;doprnt.c: 1524: (putch(c) );
 17116  001712  5020               	movf	i2printf@c,w,c
 17117  001714  EC60  F02A         	call	i2_putch
 17118  001718                     i2l6610:
 17119  001718  061A               	decf	i2printf@prec,f,c
 17120  00171A  281A               	incf	i2printf@prec,w,c
 17121  00171C  A4D8               	btfss	status,2,c
 17122  00171E  D7EE               	goto	i2l6606
 17123  001720                     i2l6612:
 17124  001720  C00D  FFF6         	movff	i2printf@f,tblptrl
 17125  001724  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 17126  001728  4A0D               	infsnz	i2printf@f,f,c
 17127  00172A  2A0E               	incf	i2printf@f+1,f,c
 17128  00172C                     	if	0	;tblptru may be non-zero
 17129  00172C                     	endif
 17130  00172C                     	if	0	;tblptru may be non-zero
 17131  00172C                     	endif
 17132  00172C  0008               	tblrd		*
 17133  00172E  CFF5 F020          	movff	tablat,i2printf@c
 17134  001732  5020               	movf	i2printf@c,w,c
 17135  001734  B4D8               	btfsc	status,2,c
 17136  001736  0012               	return	
 17137  001738  D66F               	goto	i2l6482
 17138  00173A                     __end_ofi2_printf:
 17139                           	opt stack 0
 17140                           pclatu	equ	0xFFB
 17141                           pclath	equ	0xFFA
 17142                           tblptru	equ	0xFF8
 17143                           tblptrh	equ	0xFF7
 17144                           tblptrl	equ	0xFF6
 17145                           tablat	equ	0xFF5
 17146                           prodh	equ	0xFF4
 17147                           prodl	equ	0xFF3
 17148                           intcon	equ	0xFF2
 17149                           intcon2	equ	0xFF1
 17150                           intcon3	equ	0xFF0
 17151                           postinc0	equ	0xFEE
 17152                           fsr0h	equ	0xFEA
 17153                           fsr0l	equ	0xFE9
 17154                           wreg	equ	0xFE8
 17155                           postdec1	equ	0xFE5
 17156                           fsr1h	equ	0xFE2
 17157                           fsr1l	equ	0xFE1
 17158                           indf2	equ	0xFDF
 17159                           postinc2	equ	0xFDE
 17160                           postdec2	equ	0xFDD
 17161                           fsr2h	equ	0xFDA
 17162                           fsr2l	equ	0xFD9
 17163                           status	equ	0xFD8
 17164                           
 17165 ;; *************** function i2_putch *****************
 17166 ;; Defined at:
 17167 ;;		line 31 in file "lcd.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;  data            1    wreg     unsigned char 
 17170 ;; Auto vars:     Size  Location     Type
 17171 ;;  data            1    2[COMRAM] unsigned char 
 17172 ;; Return value:  Size  Location     Type
 17173 ;;                  1    wreg      void 
 17174 ;; Registers used:
 17175 ;;		wreg, status,2, status,0, cstack
 17176 ;; Tracked objects:
 17177 ;;		On entry : 0/0
 17178 ;;		On exit  : 0/0
 17179 ;;		Unchanged: 0/0
 17180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17185 ;;Total ram usage:        1 bytes
 17186 ;; Hardware stack levels used:    1
 17187 ;; Hardware stack levels required when called:    1
 17188 ;; This function calls:
 17189 ;;		i2_lcdNibble
 17190 ;; This function is called by:
 17191 ;;		i2_printf
 17192 ;; This function uses a non-reentrant model
 17193 ;;
 17194                           
 17195                           	psect	text68
 17196  0054C0                     __ptext68:
 17197                           	opt stack 0
 17198  0054C0                     i2_putch:
 17199                           	opt stack 20
 17200                           
 17201                           ;incstack = 0
 17202                           ;i2putch@data stored from wreg
 17203  0054C0  6E03               	movwf	i2putch@data,c
 17204                           
 17205                           ;lcd.c: 32: LATDbits.LATD2 = 1;
 17206  0054C2  848C               	bsf	3980,2,c	;volatile
 17207                           
 17208                           ;lcd.c: 33: lcdNibble(data);
 17209  0054C4  5003               	movf	i2putch@data,w,c
 17210  0054C6  EC23  F028         	call	i2_lcdNibble
 17211  0054CA  0012               	return		;funcret
 17212  0054CC                     __end_ofi2_putch:
 17213                           	opt stack 0
 17214                           pclatu	equ	0xFFB
 17215                           pclath	equ	0xFFA
 17216                           tblptru	equ	0xFF8
 17217                           tblptrh	equ	0xFF7
 17218                           tblptrl	equ	0xFF6
 17219                           tablat	equ	0xFF5
 17220                           prodh	equ	0xFF4
 17221                           prodl	equ	0xFF3
 17222                           intcon	equ	0xFF2
 17223                           intcon2	equ	0xFF1
 17224                           intcon3	equ	0xFF0
 17225                           postinc0	equ	0xFEE
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           postdec1	equ	0xFE5
 17230                           fsr1h	equ	0xFE2
 17231                           fsr1l	equ	0xFE1
 17232                           indf2	equ	0xFDF
 17233                           postinc2	equ	0xFDE
 17234                           postdec2	equ	0xFDD
 17235                           fsr2h	equ	0xFDA
 17236                           fsr2l	equ	0xFD9
 17237                           status	equ	0xFD8
 17238                           
 17239 ;; *************** function i2_isdigit *****************
 17240 ;; Defined at:
 17241 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;  c               1    wreg     unsigned char 
 17244 ;; Auto vars:     Size  Location     Type
 17245 ;;  c               1    2[COMRAM] unsigned char 
 17246 ;; Return value:  Size  Location     Type
 17247 ;;		None               void
 17248 ;; Registers used:
 17249 ;;		wreg, status,2, status,0
 17250 ;; Tracked objects:
 17251 ;;		On entry : 0/0
 17252 ;;		On exit  : 0/0
 17253 ;;		Unchanged: 0/0
 17254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17259 ;;Total ram usage:        3 bytes
 17260 ;; Hardware stack levels used:    1
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		i2_printf
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text69
 17269  005416                     __ptext69:
 17270                           	opt stack 0
 17271  005416                     i2_isdigit:
 17272                           	opt stack 21
 17273                           
 17274                           ;incstack = 0
 17275                           ;i2isdigit@c stored from wreg
 17276  005416  6E03               	movwf	i2isdigit@c,c
 17277  005418  0E00               	movlw	0
 17278  00541A  6E02               	movwf	i2_isdigit$965,c
 17279  00541C  0E3A               	movlw	58
 17280  00541E  6003               	cpfslt	i2isdigit@c,c
 17281  005420  D005               	goto	i2l5904
 17282  005422  0E2F               	movlw	47
 17283  005424  6403               	cpfsgt	i2isdigit@c,c
 17284  005426  D002               	goto	i2l5904
 17285  005428  0E01               	movlw	1
 17286  00542A  6E02               	movwf	i2_isdigit$965,c
 17287  00542C                     i2l5904:
 17288  00542C  C002  F001         	movff	i2_isdigit$965,??i2_isdigit
 17289  005430  3001               	rrcf	??i2_isdigit,w,c
 17290  005432  0012               	return	
 17291  005434                     __end_ofi2_isdigit:
 17292                           	opt stack 0
 17293                           pclatu	equ	0xFFB
 17294                           pclath	equ	0xFFA
 17295                           tblptru	equ	0xFF8
 17296                           tblptrh	equ	0xFF7
 17297                           tblptrl	equ	0xFF6
 17298                           tablat	equ	0xFF5
 17299                           prodh	equ	0xFF4
 17300                           prodl	equ	0xFF3
 17301                           intcon	equ	0xFF2
 17302                           intcon2	equ	0xFF1
 17303                           intcon3	equ	0xFF0
 17304                           postinc0	equ	0xFEE
 17305                           fsr0h	equ	0xFEA
 17306                           fsr0l	equ	0xFE9
 17307                           wreg	equ	0xFE8
 17308                           postdec1	equ	0xFE5
 17309                           fsr1h	equ	0xFE2
 17310                           fsr1l	equ	0xFE1
 17311                           indf2	equ	0xFDF
 17312                           postinc2	equ	0xFDE
 17313                           postdec2	equ	0xFDD
 17314                           fsr2h	equ	0xFDA
 17315                           fsr2l	equ	0xFD9
 17316                           status	equ	0xFD8
 17317                           
 17318 ;; *************** function i2___lwmod *****************
 17319 ;; Defined at:
 17320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
 17321 ;; Parameters:    Size  Location     Type
 17322 ;;  dividend        2    7[COMRAM] unsigned int 
 17323 ;;  divisor         2    9[COMRAM] unsigned int 
 17324 ;; Auto vars:     Size  Location     Type
 17325 ;;  __lwmod         1   11[COMRAM] unsigned char 
 17326 ;; Return value:  Size  Location     Type
 17327 ;;                  2    7[COMRAM] unsigned int 
 17328 ;; Registers used:
 17329 ;;		wreg, status,2, status,0
 17330 ;; Tracked objects:
 17331 ;;		On entry : 0/0
 17332 ;;		On exit  : 0/0
 17333 ;;		Unchanged: 0/0
 17334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17336 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17338 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17339 ;;Total ram usage:        5 bytes
 17340 ;; Hardware stack levels used:    1
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		i2_printf
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           	psect	text70
 17349  005124                     __ptext70:
 17350                           	opt stack 0
 17351  005124                     i2___lwmod:
 17352                           	opt stack 21
 17353                           
 17354                           ;incstack = 0
 17355  005124  500A               	movf	i2___lwmod@divisor,w,c
 17356  005126  100B               	iorwf	i2___lwmod@divisor+1,w,c
 17357  005128  B4D8               	btfsc	status,2,c
 17358  00512A  D018               	goto	i2l1092
 17359  00512C  0E01               	movlw	1
 17360  00512E  6E0C               	movwf	i2___lwmod@counter,c
 17361  005130  D004               	goto	i2l5936
 17362  005132                     i2l5934:
 17363  005132  90D8               	bcf	status,0,c
 17364  005134  360A               	rlcf	i2___lwmod@divisor,f,c
 17365  005136  360B               	rlcf	i2___lwmod@divisor+1,f,c
 17366  005138  2A0C               	incf	i2___lwmod@counter,f,c
 17367  00513A                     i2l5936:
 17368  00513A  AE0B               	btfss	i2___lwmod@divisor+1,7,c
 17369  00513C  D7FA               	goto	i2l5934
 17370  00513E                     i2l5938:
 17371  00513E  500A               	movf	i2___lwmod@divisor,w,c
 17372  005140  5C08               	subwf	i2___lwmod@dividend,w,c
 17373  005142  500B               	movf	i2___lwmod@divisor+1,w,c
 17374  005144  5809               	subwfb	i2___lwmod@dividend+1,w,c
 17375  005146  A0D8               	btfss	status,0,c
 17376  005148  D004               	goto	i2l5942
 17377  00514A  500A               	movf	i2___lwmod@divisor,w,c
 17378  00514C  5E08               	subwf	i2___lwmod@dividend,f,c
 17379  00514E  500B               	movf	i2___lwmod@divisor+1,w,c
 17380  005150  5A09               	subwfb	i2___lwmod@dividend+1,f,c
 17381  005152                     i2l5942:
 17382  005152  90D8               	bcf	status,0,c
 17383  005154  320B               	rrcf	i2___lwmod@divisor+1,f,c
 17384  005156  320A               	rrcf	i2___lwmod@divisor,f,c
 17385  005158  2E0C               	decfsz	i2___lwmod@counter,f,c
 17386  00515A  D7F1               	goto	i2l5938
 17387  00515C                     i2l1092:
 17388  00515C  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
 17389  005160  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 17390  005164  0012               	return		;funcret
 17391  005166                     __end_ofi2___lwmod:
 17392                           	opt stack 0
 17393                           pclatu	equ	0xFFB
 17394                           pclath	equ	0xFFA
 17395                           tblptru	equ	0xFF8
 17396                           tblptrh	equ	0xFF7
 17397                           tblptrl	equ	0xFF6
 17398                           tablat	equ	0xFF5
 17399                           prodh	equ	0xFF4
 17400                           prodl	equ	0xFF3
 17401                           intcon	equ	0xFF2
 17402                           intcon2	equ	0xFF1
 17403                           intcon3	equ	0xFF0
 17404                           postinc0	equ	0xFEE
 17405                           fsr0h	equ	0xFEA
 17406                           fsr0l	equ	0xFE9
 17407                           wreg	equ	0xFE8
 17408                           postdec1	equ	0xFE5
 17409                           fsr1h	equ	0xFE2
 17410                           fsr1l	equ	0xFE1
 17411                           indf2	equ	0xFDF
 17412                           postinc2	equ	0xFDE
 17413                           postdec2	equ	0xFDD
 17414                           fsr2h	equ	0xFDA
 17415                           fsr2l	equ	0xFD9
 17416                           status	equ	0xFD8
 17417                           
 17418 ;; *************** function i2___lwdiv *****************
 17419 ;; Defined at:
 17420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
 17421 ;; Parameters:    Size  Location     Type
 17422 ;;  dividend        2    0[COMRAM] unsigned int 
 17423 ;;  divisor         2    2[COMRAM] unsigned int 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 17426 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  2    0[COMRAM] unsigned int 
 17429 ;; Registers used:
 17430 ;;		wreg, status,2, status,0
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17436 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;Total ram usage:        7 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; This function calls:
 17443 ;;		Nothing
 17444 ;; This function is called by:
 17445 ;;		i2_printf
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text71
 17450  004FA4                     __ptext71:
 17451                           	opt stack 0
 17452  004FA4                     i2___lwdiv:
 17453                           	opt stack 21
 17454                           
 17455                           ;incstack = 0
 17456  004FA4  0E00               	movlw	0
 17457  004FA6  6E06               	movwf	i2___lwdiv@quotient+1,c
 17458  004FA8  0E00               	movlw	0
 17459  004FAA  6E05               	movwf	i2___lwdiv@quotient,c
 17460  004FAC  5003               	movf	i2___lwdiv@divisor,w,c
 17461  004FAE  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 17462  004FB0  B4D8               	btfsc	status,2,c
 17463  004FB2  D01C               	goto	i2l1082
 17464  004FB4  0E01               	movlw	1
 17465  004FB6  6E07               	movwf	i2___lwdiv@counter,c
 17466  004FB8  D004               	goto	i2l5916
 17467  004FBA                     i2l5914:
 17468  004FBA  90D8               	bcf	status,0,c
 17469  004FBC  3603               	rlcf	i2___lwdiv@divisor,f,c
 17470  004FBE  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 17471  004FC0  2A07               	incf	i2___lwdiv@counter,f,c
 17472  004FC2                     i2l5916:
 17473  004FC2  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 17474  004FC4  D7FA               	goto	i2l5914
 17475  004FC6                     i2l5918:
 17476  004FC6  90D8               	bcf	status,0,c
 17477  004FC8  3605               	rlcf	i2___lwdiv@quotient,f,c
 17478  004FCA  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 17479  004FCC  5003               	movf	i2___lwdiv@divisor,w,c
 17480  004FCE  5C01               	subwf	i2___lwdiv@dividend,w,c
 17481  004FD0  5004               	movf	i2___lwdiv@divisor+1,w,c
 17482  004FD2  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 17483  004FD4  A0D8               	btfss	status,0,c
 17484  004FD6  D005               	goto	i2l5926
 17485  004FD8  5003               	movf	i2___lwdiv@divisor,w,c
 17486  004FDA  5E01               	subwf	i2___lwdiv@dividend,f,c
 17487  004FDC  5004               	movf	i2___lwdiv@divisor+1,w,c
 17488  004FDE  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 17489  004FE0  8005               	bsf	i2___lwdiv@quotient,0,c
 17490  004FE2                     i2l5926:
 17491  004FE2  90D8               	bcf	status,0,c
 17492  004FE4  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 17493  004FE6  3203               	rrcf	i2___lwdiv@divisor,f,c
 17494  004FE8  2E07               	decfsz	i2___lwdiv@counter,f,c
 17495  004FEA  D7ED               	goto	i2l5918
 17496  004FEC                     i2l1082:
 17497  004FEC  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 17498  004FF0  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 17499  004FF4  0012               	return		;funcret
 17500  004FF6                     __end_ofi2___lwdiv:
 17501                           	opt stack 0
 17502                           pclatu	equ	0xFFB
 17503                           pclath	equ	0xFFA
 17504                           tblptru	equ	0xFF8
 17505                           tblptrh	equ	0xFF7
 17506                           tblptrl	equ	0xFF6
 17507                           tablat	equ	0xFF5
 17508                           prodh	equ	0xFF4
 17509                           prodl	equ	0xFF3
 17510                           intcon	equ	0xFF2
 17511                           intcon2	equ	0xFF1
 17512                           intcon3	equ	0xFF0
 17513                           postinc0	equ	0xFEE
 17514                           fsr0h	equ	0xFEA
 17515                           fsr0l	equ	0xFE9
 17516                           wreg	equ	0xFE8
 17517                           postdec1	equ	0xFE5
 17518                           fsr1h	equ	0xFE2
 17519                           fsr1l	equ	0xFE1
 17520                           indf2	equ	0xFDF
 17521                           postinc2	equ	0xFDE
 17522                           postdec2	equ	0xFDD
 17523                           fsr2h	equ	0xFDA
 17524                           fsr2l	equ	0xFD9
 17525                           status	equ	0xFD8
 17526                           
 17527 ;; *************** function i2_lcdInst *****************
 17528 ;; Defined at:
 17529 ;;		line 26 in file "lcd.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;  data            1    wreg     unsigned char 
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;  data            1    2[COMRAM] unsigned char 
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  1    wreg      void 
 17536 ;; Registers used:
 17537 ;;		wreg, status,2, status,0, cstack
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17547 ;;Total ram usage:        1 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:    1
 17550 ;; This function calls:
 17551 ;;		i2_lcdNibble
 17552 ;; This function is called by:
 17553 ;;		_isr
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           	psect	text72
 17558  0054CC                     __ptext72:
 17559                           	opt stack 0
 17560  0054CC                     i2_lcdInst:
 17561                           	opt stack 21
 17562                           
 17563                           ;incstack = 0
 17564                           ;i2lcdInst@data stored from wreg
 17565  0054CC  6E03               	movwf	i2lcdInst@data,c
 17566                           
 17567                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 17568  0054CE  948C               	bcf	3980,2,c	;volatile
 17569                           
 17570                           ;lcd.c: 28: lcdNibble(data);
 17571  0054D0  5003               	movf	i2lcdInst@data,w,c
 17572  0054D2  EC23  F028         	call	i2_lcdNibble
 17573  0054D6  0012               	return		;funcret
 17574  0054D8                     __end_ofi2_lcdInst:
 17575                           	opt stack 0
 17576                           pclatu	equ	0xFFB
 17577                           pclath	equ	0xFFA
 17578                           tblptru	equ	0xFF8
 17579                           tblptrh	equ	0xFF7
 17580                           tblptrl	equ	0xFF6
 17581                           tablat	equ	0xFF5
 17582                           prodh	equ	0xFF4
 17583                           prodl	equ	0xFF3
 17584                           intcon	equ	0xFF2
 17585                           intcon2	equ	0xFF1
 17586                           intcon3	equ	0xFF0
 17587                           postinc0	equ	0xFEE
 17588                           fsr0h	equ	0xFEA
 17589                           fsr0l	equ	0xFE9
 17590                           wreg	equ	0xFE8
 17591                           postdec1	equ	0xFE5
 17592                           fsr1h	equ	0xFE2
 17593                           fsr1l	equ	0xFE1
 17594                           indf2	equ	0xFDF
 17595                           postinc2	equ	0xFDE
 17596                           postdec2	equ	0xFDD
 17597                           fsr2h	equ	0xFDA
 17598                           fsr2l	equ	0xFD9
 17599                           status	equ	0xFD8
 17600                           
 17601 ;; *************** function i2_lcdNibble *****************
 17602 ;; Defined at:
 17603 ;;		line 36 in file "lcd.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;  data            1    wreg     unsigned char 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;  data            1    1[COMRAM] unsigned char 
 17608 ;;  lcdNibble       1    0[COMRAM] unsigned char 
 17609 ;; Return value:  Size  Location     Type
 17610 ;;                  1    wreg      void 
 17611 ;; Registers used:
 17612 ;;		wreg, status,2, status,0
 17613 ;; Tracked objects:
 17614 ;;		On entry : 0/0
 17615 ;;		On exit  : 0/0
 17616 ;;		Unchanged: 0/0
 17617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17622 ;;Total ram usage:        2 bytes
 17623 ;; Hardware stack levels used:    1
 17624 ;; This function calls:
 17625 ;;		Nothing
 17626 ;; This function is called by:
 17627 ;;		i2_lcdInst
 17628 ;;		i2_putch
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           	psect	text73
 17633  005046                     __ptext73:
 17634                           	opt stack 0
 17635  005046                     i2_lcdNibble:
 17636                           	opt stack 20
 17637                           
 17638                           ;incstack = 0
 17639                           ;i2lcdNibble@data stored from wreg
 17640  005046  6E02               	movwf	i2lcdNibble@data,c
 17641                           
 17642                           ;lcd.c: 38: char temp = data & 0xF0;
 17643  005048  5002               	movf	i2lcdNibble@data,w,c
 17644  00504A  0BF0               	andlw	240
 17645  00504C  6E01               	movwf	i2lcdNibble@temp,c
 17646                           
 17647                           ;lcd.c: 39: LATD = LATD & 0x0F;
 17648  00504E  508C               	movf	3980,w,c	;volatile
 17649  005050  0B0F               	andlw	15
 17650  005052  6E8C               	movwf	3980,c	;volatile
 17651                           
 17652                           ;lcd.c: 40: LATD = temp | LATD;
 17653  005054  5001               	movf	i2lcdNibble@temp,w,c
 17654  005056  108C               	iorwf	3980,w,c	;volatile
 17655  005058  6E8C               	movwf	3980,c	;volatile
 17656                           
 17657                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 17658  00505A  968C               	bcf	3980,3,c	;volatile
 17659                           
 17660                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17661  00505C  0E19               	movlw	25
 17662  00505E                     i2u890_47:
 17663  00505E  2EE8               	decfsz	wreg,f,c
 17664  005060  D7FE               	bra	i2u890_47
 17665                           
 17666                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 17667  005062  868C               	bsf	3980,3,c	;volatile
 17668                           
 17669                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17670  005064  0E19               	movlw	25
 17671  005066                     i2u891_47:
 17672  005066  2EE8               	decfsz	wreg,f,c
 17673  005068  D7FE               	bra	i2u891_47
 17674                           
 17675                           ;lcd.c: 47: data = data << 4;
 17676  00506A  3802               	swapf	i2lcdNibble@data,w,c
 17677  00506C  0BF0               	andlw	240
 17678  00506E  6E02               	movwf	i2lcdNibble@data,c
 17679                           
 17680                           ;lcd.c: 49: temp = data & 0xF0;
 17681  005070  5002               	movf	i2lcdNibble@data,w,c
 17682  005072  0BF0               	andlw	240
 17683  005074  6E01               	movwf	i2lcdNibble@temp,c
 17684                           
 17685                           ;lcd.c: 50: LATD = LATD & 0x0F;
 17686  005076  508C               	movf	3980,w,c	;volatile
 17687  005078  0B0F               	andlw	15
 17688  00507A  6E8C               	movwf	3980,c	;volatile
 17689                           
 17690                           ;lcd.c: 51: LATD = temp | LATD;
 17691  00507C  5001               	movf	i2lcdNibble@temp,w,c
 17692  00507E  108C               	iorwf	3980,w,c	;volatile
 17693  005080  6E8C               	movwf	3980,c	;volatile
 17694                           
 17695                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 17696  005082  968C               	bcf	3980,3,c	;volatile
 17697                           
 17698                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17699  005084  0E19               	movlw	25
 17700  005086                     i2u892_47:
 17701  005086  2EE8               	decfsz	wreg,f,c
 17702  005088  D7FE               	bra	i2u892_47
 17703                           
 17704                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 17705  00508A  868C               	bsf	3980,3,c	;volatile
 17706                           
 17707                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
 17708  00508C  0E19               	movlw	25
 17709  00508E                     i2u893_47:
 17710  00508E  2EE8               	decfsz	wreg,f,c
 17711  005090  D7FE               	bra	i2u893_47
 17712  005092  0012               	return		;funcret
 17713  005094                     __end_ofi2_lcdNibble:
 17714                           	opt stack 0
 17715                           pclatu	equ	0xFFB
 17716                           pclath	equ	0xFFA
 17717                           tblptru	equ	0xFF8
 17718                           tblptrh	equ	0xFF7
 17719                           tblptrl	equ	0xFF6
 17720                           tablat	equ	0xFF5
 17721                           prodh	equ	0xFF4
 17722                           prodl	equ	0xFF3
 17723                           intcon	equ	0xFF2
 17724                           intcon2	equ	0xFF1
 17725                           intcon3	equ	0xFF0
 17726                           postinc0	equ	0xFEE
 17727                           fsr0h	equ	0xFEA
 17728                           fsr0l	equ	0xFE9
 17729                           wreg	equ	0xFE8
 17730                           postdec1	equ	0xFE5
 17731                           fsr1h	equ	0xFE2
 17732                           fsr1l	equ	0xFE1
 17733                           indf2	equ	0xFDF
 17734                           postinc2	equ	0xFDE
 17735                           postdec2	equ	0xFDD
 17736                           fsr2h	equ	0xFDA
 17737                           fsr2l	equ	0xFD9
 17738                           status	equ	0xFD8
 17739                           
 17740 ;; *************** function i2_dec_to_hex *****************
 17741 ;; Defined at:
 17742 ;;		line 361 in file "main.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;  num             2   98[COMRAM] int 
 17745 ;; Auto vars:     Size  Location     Type
 17746 ;;  dec_to_hex      2  112[COMRAM] int 
 17747 ;;  dec_to_hex      2  110[COMRAM] int 
 17748 ;;  dec_to_hex      2  108[COMRAM] int 
 17749 ;;  dec_to_hex      2  106[COMRAM] int 
 17750 ;; Return value:  Size  Location     Type
 17751 ;;                  2   98[COMRAM] int 
 17752 ;; Registers used:
 17753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17754 ;; Tracked objects:
 17755 ;;		On entry : 0/0
 17756 ;;		On exit  : 0/0
 17757 ;;		Unchanged: 0/0
 17758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17760 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17763 ;;Total ram usage:       16 bytes
 17764 ;; Hardware stack levels used:    1
 17765 ;; Hardware stack levels required when called:    5
 17766 ;; This function calls:
 17767 ;;		i2___awdiv
 17768 ;;		i2___awtoft
 17769 ;;		i2___ftadd
 17770 ;;		i2___ftmul
 17771 ;;		i2___fttol
 17772 ;;		i2_pow
 17773 ;; This function is called by:
 17774 ;;		_isr
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           	psect	text74
 17779  003B3C                     __ptext74:
 17780                           	opt stack 0
 17781  003B3C                     i2_dec_to_hex:
 17782                           	opt stack 17
 17783                           
 17784                           ;main.c: 362: int i = 0, quotient = num, temp, hexnum = 0;
 17785                           
 17786                           ;incstack = 0
 17787  003B3C  0E00               	movlw	0
 17788  003B3E  6E6E               	movwf	i2dec_to_hex@i+1,c
 17789  003B40  0E00               	movlw	0
 17790  003B42  6E6D               	movwf	i2dec_to_hex@i,c
 17791  003B44  C063  F071         	movff	i2dec_to_hex@num,i2dec_to_hex@quotient
 17792  003B48  C064  F072         	movff	i2dec_to_hex@num+1,i2dec_to_hex@quotient+1
 17793  003B4C  0E00               	movlw	0
 17794  003B4E  6E70               	movwf	i2dec_to_hex@hexnum+1,c
 17795  003B50  0E00               	movlw	0
 17796  003B52  6E6F               	movwf	i2dec_to_hex@hexnum,c
 17797                           
 17798                           ;main.c: 364: while (quotient != 0) {
 17799  003B54  D068               	goto	i2l6446
 17800  003B56                     i2l6434:
 17801                           
 17802                           ;main.c: 365: temp = quotient % 16;
 17803  003B56  0E0F               	movlw	15
 17804  003B58  1471               	andwf	i2dec_to_hex@quotient,w,c
 17805  003B5A  6E6B               	movwf	i2dec_to_hex@temp,c
 17806  003B5C  6A6C               	clrf	i2dec_to_hex@temp+1,c
 17807                           
 17808                           ;main.c: 366: hexnum += temp*pow(10,i);
 17809  003B5E  C06D  F009         	movff	i2dec_to_hex@i,i2___awtoft@c
 17810  003B62  C06E  F00A         	movff	i2dec_to_hex@i+1,i2___awtoft@c+1
 17811  003B66  ECF0  F028         	call	i2___awtoft	;wreg free
 17812  003B6A  C009  F065         	movff	?i2___awtoft,i2_dec_to_hex$1675
 17813  003B6E  C00A  F066         	movff	?i2___awtoft+1,i2_dec_to_hex$1675+1
 17814  003B72  C00B  F067         	movff	?i2___awtoft+2,i2_dec_to_hex$1675+2
 17815                           
 17816                           ;main.c: 366: hexnum += temp*pow(10,i);
 17817  003B76  C065  F055         	movff	i2_dec_to_hex$1675,i2pow@y
 17818  003B7A  C066  F056         	movff	i2_dec_to_hex$1675+1,i2pow@y+1
 17819  003B7E  C067  F057         	movff	i2_dec_to_hex$1675+2,i2pow@y+2
 17820  003B82  0E00               	movlw	0
 17821  003B84  6E52               	movwf	i2pow@x,c
 17822  003B86  0E20               	movlw	32
 17823  003B88  6E53               	movwf	i2pow@x+1,c
 17824  003B8A  0E41               	movlw	65
 17825  003B8C  6E54               	movwf	i2pow@x+2,c
 17826  003B8E  EC91  F014         	call	i2_pow	;wreg free
 17827  003B92  C052  F068         	movff	?i2_pow,i2_dec_to_hex$1676
 17828  003B96  C053  F069         	movff	?i2_pow+1,i2_dec_to_hex$1676+1
 17829  003B9A  C054  F06A         	movff	?i2_pow+2,i2_dec_to_hex$1676+2
 17830                           
 17831                           ;main.c: 366: hexnum += temp*pow(10,i);
 17832  003B9E  C068  F010         	movff	i2_dec_to_hex$1676,i2___ftmul@f2
 17833  003BA2  C069  F011         	movff	i2_dec_to_hex$1676+1,i2___ftmul@f2+1
 17834  003BA6  C06A  F012         	movff	i2_dec_to_hex$1676+2,i2___ftmul@f2+2
 17835  003BAA  C06B  F009         	movff	i2dec_to_hex@temp,i2___awtoft@c
 17836  003BAE  C06C  F00A         	movff	i2dec_to_hex@temp+1,i2___awtoft@c+1
 17837  003BB2  ECF0  F028         	call	i2___awtoft	;wreg free
 17838  003BB6  C009  F00D         	movff	?i2___awtoft,i2___ftmul@f1
 17839  003BBA  C00A  F00E         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 17840  003BBE  C00B  F00F         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 17841  003BC2  EC12  F01F         	call	i2___ftmul	;wreg free
 17842  003BC6  C00D  F01F         	movff	?i2___ftmul,i2___ftadd@f2
 17843  003BCA  C00E  F020         	movff	?i2___ftmul+1,i2___ftadd@f2+1
 17844  003BCE  C00F  F021         	movff	?i2___ftmul+2,i2___ftadd@f2+2
 17845  003BD2  C06F  F009         	movff	i2dec_to_hex@hexnum,i2___awtoft@c
 17846  003BD6  C070  F00A         	movff	i2dec_to_hex@hexnum+1,i2___awtoft@c+1
 17847  003BDA  ECF0  F028         	call	i2___awtoft	;wreg free
 17848  003BDE  C009  F01C         	movff	?i2___awtoft,i2___ftadd@f1
 17849  003BE2  C00A  F01D         	movff	?i2___awtoft+1,i2___ftadd@f1+1
 17850  003BE6  C00B  F01E         	movff	?i2___awtoft+2,i2___ftadd@f1+2
 17851  003BEA  ECBB  F013         	call	i2___ftadd	;wreg free
 17852  003BEE  C01C  F028         	movff	?i2___ftadd,i2___fttol@f1
 17853  003BF2  C01D  F029         	movff	?i2___ftadd+1,i2___fttol@f1+1
 17854  003BF6  C01E  F02A         	movff	?i2___ftadd+2,i2___fttol@f1+2
 17855  003BFA  EC98  F01E         	call	i2___fttol	;wreg free
 17856  003BFE  C028  F06F         	movff	?i2___fttol,i2dec_to_hex@hexnum
 17857  003C02  C029  F070         	movff	?i2___fttol+1,i2dec_to_hex@hexnum+1
 17858                           
 17859                           ;main.c: 367: quotient = quotient / 16;
 17860  003C06  C071  F001         	movff	i2dec_to_hex@quotient,i2___awdiv@dividend
 17861  003C0A  C072  F002         	movff	i2dec_to_hex@quotient+1,i2___awdiv@dividend+1
 17862  003C0E  0E00               	movlw	0
 17863  003C10  6E04               	movwf	i2___awdiv@divisor+1,c
 17864  003C12  0E10               	movlw	16
 17865  003C14  6E03               	movwf	i2___awdiv@divisor,c
 17866  003C16  EC83  F025         	call	i2___awdiv	;wreg free
 17867  003C1A  C001  F071         	movff	?i2___awdiv,i2dec_to_hex@quotient
 17868  003C1E  C002  F072         	movff	?i2___awdiv+1,i2dec_to_hex@quotient+1
 17869                           
 17870                           ;main.c: 368: i += 1;
 17871  003C22  4A6D               	infsnz	i2dec_to_hex@i,f,c
 17872  003C24  2A6E               	incf	i2dec_to_hex@i+1,f,c
 17873  003C26                     i2l6446:
 17874  003C26  5071               	movf	i2dec_to_hex@quotient,w,c
 17875  003C28  1072               	iorwf	i2dec_to_hex@quotient+1,w,c
 17876  003C2A  A4D8               	btfss	status,2,c
 17877  003C2C  D794               	goto	i2l6434
 17878                           
 17879                           ;main.c: 369: }
 17880                           ;main.c: 370: return hexnum;
 17881  003C2E  C06F  F063         	movff	i2dec_to_hex@hexnum,?i2_dec_to_hex
 17882  003C32  C070  F064         	movff	i2dec_to_hex@hexnum+1,?i2_dec_to_hex+1
 17883  003C36  0012               	return		;funcret
 17884  003C38                     __end_ofi2_dec_to_hex:
 17885                           	opt stack 0
 17886                           pclatu	equ	0xFFB
 17887                           pclath	equ	0xFFA
 17888                           tblptru	equ	0xFF8
 17889                           tblptrh	equ	0xFF7
 17890                           tblptrl	equ	0xFF6
 17891                           tablat	equ	0xFF5
 17892                           prodh	equ	0xFF4
 17893                           prodl	equ	0xFF3
 17894                           intcon	equ	0xFF2
 17895                           intcon2	equ	0xFF1
 17896                           intcon3	equ	0xFF0
 17897                           postinc0	equ	0xFEE
 17898                           fsr0h	equ	0xFEA
 17899                           fsr0l	equ	0xFE9
 17900                           wreg	equ	0xFE8
 17901                           postdec1	equ	0xFE5
 17902                           fsr1h	equ	0xFE2
 17903                           fsr1l	equ	0xFE1
 17904                           indf2	equ	0xFDF
 17905                           postinc2	equ	0xFDE
 17906                           postdec2	equ	0xFDD
 17907                           fsr2h	equ	0xFDA
 17908                           fsr2l	equ	0xFD9
 17909                           status	equ	0xFD8
 17910                           
 17911 ;; *************** function i2_pow *****************
 17912 ;; Defined at:
 17913 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\pow.c"
 17914 ;; Parameters:    Size  Location     Type
 17915 ;;  x               3   81[COMRAM] int 
 17916 ;;  y               3   84[COMRAM] int 
 17917 ;; Auto vars:     Size  Location     Type
 17918 ;;  pow             4   94[COMRAM] unsigned long 
 17919 ;;  pow             1   93[COMRAM] unsigned char 
 17920 ;; Return value:  Size  Location     Type
 17921 ;;                  3   81[COMRAM] unsigned char 
 17922 ;; Registers used:
 17923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17924 ;; Tracked objects:
 17925 ;;		On entry : 0/0
 17926 ;;		On exit  : 0/0
 17927 ;;		Unchanged: 0/0
 17928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17929 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17930 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17932 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17933 ;;Total ram usage:       17 bytes
 17934 ;; Hardware stack levels used:    1
 17935 ;; Hardware stack levels required when called:    4
 17936 ;; This function calls:
 17937 ;;		i2___ftge
 17938 ;;		i2___ftmul
 17939 ;;		i2___ftneg
 17940 ;;		i2___fttol
 17941 ;;		i2___lltoft
 17942 ;;		i2_exp
 17943 ;;		i2_log
 17944 ;; This function is called by:
 17945 ;;		i2_dec_to_hex
 17946 ;; This function uses a non-reentrant model
 17947 ;;
 17948                           
 17949                           	psect	text75
 17950  002922                     __ptext75:
 17951                           	opt stack 0
 17952  002922                     i2_pow:
 17953                           	opt stack 17
 17954                           
 17955                           ;incstack = 0
 17956  002922  0E00               	movlw	0
 17957  002924  6E5E               	movwf	i2pow@sign,c
 17958  002926  5052               	movf	i2pow@x,w,c
 17959  002928  1053               	iorwf	i2pow@x+1,w,c
 17960  00292A  1054               	iorwf	i2pow@x+2,w,c
 17961  00292C  A4D8               	btfss	status,2,c
 17962  00292E  D01C               	goto	i2l5956
 17963  002930  0E00               	movlw	0
 17964  002932  6E01               	movwf	i2___ftge@ff1,c
 17965  002934  0E00               	movlw	0
 17966  002936  6E02               	movwf	i2___ftge@ff1+1,c
 17967  002938  0E00               	movlw	0
 17968  00293A  6E03               	movwf	i2___ftge@ff1+2,c
 17969  00293C  C055  F004         	movff	i2pow@y,i2___ftge@ff2
 17970  002940  C056  F005         	movff	i2pow@y+1,i2___ftge@ff2+1
 17971  002944  C057  F006         	movff	i2pow@y+2,i2___ftge@ff2+2
 17972  002948  EC3B  F025         	call	i2___ftge	;wreg free
 17973  00294C  A0D8               	btfss	status,0,c
 17974  00294E  D005               	goto	i2l1114
 17975  002950  0E00               	movlw	0
 17976  002952  0101               	movlb	1	; () banked
 17977  002954  6F30               	movwf	(_errno+1)& (0+255),b
 17978  002956  0E21               	movlw	33
 17979  002958  6F2F               	movwf	_errno& (0+255),b
 17980  00295A                     i2l1114:
 17981  00295A  0E00               	movlw	0
 17982  00295C  6E52               	movwf	?i2_pow,c
 17983  00295E  0E00               	movlw	0
 17984  002960  6E53               	movwf	?i2_pow+1,c
 17985  002962  0E00               	movlw	0
 17986  002964  6E54               	movwf	?i2_pow+2,c
 17987  002966  0012               	return	
 17988  002968                     i2l5956:
 17989  002968  5055               	movf	i2pow@y,w,c
 17990  00296A  1056               	iorwf	i2pow@y+1,w,c
 17991  00296C  1057               	iorwf	i2pow@y+2,w,c
 17992  00296E  A4D8               	btfss	status,2,c
 17993  002970  D007               	goto	i2l5962
 17994  002972  0E00               	movlw	0
 17995  002974  6E52               	movwf	?i2_pow,c
 17996  002976  0E80               	movlw	128
 17997  002978  6E53               	movwf	?i2_pow+1,c
 17998  00297A  0E3F               	movlw	63
 17999  00297C  6E54               	movwf	?i2_pow+2,c
 18000  00297E  0012               	return	
 18001  002980                     i2l5962:
 18002  002980  AE54               	btfss	i2pow@x+2,7,c
 18003  002982  D041               	goto	i2l5974
 18004  002984  C055  F028         	movff	i2pow@y,i2___fttol@f1
 18005  002988  C056  F029         	movff	i2pow@y+1,i2___fttol@f1+1
 18006  00298C  C057  F02A         	movff	i2pow@y+2,i2___fttol@f1+2
 18007  002990  EC98  F01E         	call	i2___fttol	;wreg free
 18008  002994  C028  F05F         	movff	?i2___fttol,i2pow@yi
 18009  002998  C029  F060         	movff	?i2___fttol+1,i2pow@yi+1
 18010  00299C  C02A  F061         	movff	?i2___fttol+2,i2pow@yi+2
 18011  0029A0  C02B  F062         	movff	?i2___fttol+3,i2pow@yi+3
 18012  0029A4  C05F  F009         	movff	i2pow@yi,i2___lltoft@c
 18013  0029A8  C060  F00A         	movff	i2pow@yi+1,i2___lltoft@c+1
 18014  0029AC  C061  F00B         	movff	i2pow@yi+2,i2___lltoft@c+2
 18015  0029B0  C062  F00C         	movff	i2pow@yi+3,i2___lltoft@c+3
 18016  0029B4  EC7B  F027         	call	i2___lltoft	;wreg free
 18017  0029B8  5055               	movf	i2pow@y,w,c
 18018  0029BA  1809               	xorwf	?i2___lltoft,w,c
 18019  0029BC  E107               	bnz	i2u599_40
 18020  0029BE  5056               	movf	i2pow@y+1,w,c
 18021  0029C0  180A               	xorwf	?i2___lltoft+1,w,c
 18022  0029C2  E104               	bnz	i2u599_40
 18023  0029C4  5057               	movf	i2pow@y+2,w,c
 18024  0029C6  180B               	xorwf	?i2___lltoft+2,w,c
 18025  0029C8  B4D8               	btfsc	status,2,c
 18026  0029CA  D00C               	goto	i2l5970
 18027  0029CC                     i2u599_40:
 18028  0029CC  0E00               	movlw	0
 18029  0029CE  0101               	movlb	1	; () banked
 18030  0029D0  6F30               	movwf	(_errno+1)& (0+255),b
 18031  0029D2  0E21               	movlw	33
 18032  0029D4  6F2F               	movwf	_errno& (0+255),b
 18033  0029D6  0E00               	movlw	0
 18034  0029D8  6E52               	movwf	?i2_pow,c
 18035  0029DA  0E00               	movlw	0
 18036  0029DC  6E53               	movwf	?i2_pow+1,c
 18037  0029DE  0E00               	movlw	0
 18038  0029E0  6E54               	movwf	?i2_pow+2,c
 18039                           
 18040                           ; BSR set to: 1
 18041  0029E2  0012               	return	
 18042  0029E4                     i2l5970:
 18043  0029E4  505F               	movf	i2pow@yi,w,c
 18044  0029E6  0B01               	andlw	1
 18045  0029E8  6E5E               	movwf	i2pow@sign,c
 18046  0029EA  C052  F001         	movff	i2pow@x,i2___ftneg@f1
 18047  0029EE  C053  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
 18048  0029F2  C054  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
 18049  0029F6  ECE8  F029         	call	i2___ftneg	;wreg free
 18050  0029FA  C001  F052         	movff	?i2___ftneg,i2pow@x
 18051  0029FE  C002  F053         	movff	?i2___ftneg+1,i2pow@x+1
 18052  002A02  C003  F054         	movff	?i2___ftneg+2,i2pow@x+2
 18053  002A06                     i2l5974:
 18054  002A06  C052  F034         	movff	i2pow@x,i2log@x
 18055  002A0A  C053  F035         	movff	i2pow@x+1,i2log@x+1
 18056  002A0E  C054  F036         	movff	i2pow@x+2,i2log@x+2
 18057  002A12  ECEB  F017         	call	i2_log	;wreg free
 18058  002A16  C034  F058         	movff	?i2_log,i2_pow$1677
 18059  002A1A  C035  F059         	movff	?i2_log+1,i2_pow$1677+1
 18060  002A1E  C036  F05A         	movff	?i2_log+2,i2_pow$1677+2
 18061  002A22  C058  F00D         	movff	i2_pow$1677,i2___ftmul@f1
 18062  002A26  C059  F00E         	movff	i2_pow$1677+1,i2___ftmul@f1+1
 18063  002A2A  C05A  F00F         	movff	i2_pow$1677+2,i2___ftmul@f1+2
 18064  002A2E  C055  F010         	movff	i2pow@y,i2___ftmul@f2
 18065  002A32  C056  F011         	movff	i2pow@y+1,i2___ftmul@f2+1
 18066  002A36  C057  F012         	movff	i2pow@y+2,i2___ftmul@f2+2
 18067  002A3A  EC12  F01F         	call	i2___ftmul	;wreg free
 18068  002A3E  C00D  F05B         	movff	?i2___ftmul,i2_pow$1678
 18069  002A42  C00E  F05C         	movff	?i2___ftmul+1,i2_pow$1678+1
 18070  002A46  C00F  F05D         	movff	?i2___ftmul+2,i2_pow$1678+2
 18071  002A4A  C05B  F049         	movff	i2_pow$1678,i2exp@x
 18072  002A4E  C05C  F04A         	movff	i2_pow$1678+1,i2exp@x+1
 18073  002A52  C05D  F04B         	movff	i2_pow$1678+2,i2exp@x+2
 18074  002A56  ECED  F011         	call	i2_exp	;wreg free
 18075  002A5A  C049  F052         	movff	?i2_exp,i2pow@x
 18076  002A5E  C04A  F053         	movff	?i2_exp+1,i2pow@x+1
 18077  002A62  C04B  F054         	movff	?i2_exp+2,i2pow@x+2
 18078  002A66  505E               	movf	i2pow@sign,w,c
 18079  002A68  B4D8               	btfsc	status,2,c
 18080  002A6A  D00F               	goto	i2l1119
 18081  002A6C  C052  F001         	movff	i2pow@x,i2___ftneg@f1
 18082  002A70  C053  F002         	movff	i2pow@x+1,i2___ftneg@f1+1
 18083  002A74  C054  F003         	movff	i2pow@x+2,i2___ftneg@f1+2
 18084  002A78  ECE8  F029         	call	i2___ftneg	;wreg free
 18085  002A7C  C001  F052         	movff	?i2___ftneg,?i2_pow
 18086  002A80  C002  F053         	movff	?i2___ftneg+1,?i2_pow+1
 18087  002A84  C003  F054         	movff	?i2___ftneg+2,?i2_pow+2
 18088  002A88  0012               	return	
 18089  002A8A                     i2l1119:
 18090  002A8A  C052  F052         	movff	i2pow@x,?i2_pow
 18091  002A8E  C053  F053         	movff	i2pow@x+1,?i2_pow+1
 18092  002A92  C054  F054         	movff	i2pow@x+2,?i2_pow+2
 18093  002A96  0012               	return		;funcret
 18094  002A98                     __end_ofi2_pow:
 18095                           	opt stack 0
 18096                           pclatu	equ	0xFFB
 18097                           pclath	equ	0xFFA
 18098                           tblptru	equ	0xFF8
 18099                           tblptrh	equ	0xFF7
 18100                           tblptrl	equ	0xFF6
 18101                           tablat	equ	0xFF5
 18102                           prodh	equ	0xFF4
 18103                           prodl	equ	0xFF3
 18104                           intcon	equ	0xFF2
 18105                           intcon2	equ	0xFF1
 18106                           intcon3	equ	0xFF0
 18107                           postinc0	equ	0xFEE
 18108                           fsr0h	equ	0xFEA
 18109                           fsr0l	equ	0xFE9
 18110                           wreg	equ	0xFE8
 18111                           postdec1	equ	0xFE5
 18112                           fsr1h	equ	0xFE2
 18113                           fsr1l	equ	0xFE1
 18114                           indf2	equ	0xFDF
 18115                           postinc2	equ	0xFDE
 18116                           postdec2	equ	0xFDD
 18117                           fsr2h	equ	0xFDA
 18118                           fsr2l	equ	0xFD9
 18119                           status	equ	0xFD8
 18120                           
 18121 ;; *************** function i2_log *****************
 18122 ;; Defined at:
 18123 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\log.c"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;  x               3   51[COMRAM] unsigned char 
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;  log             2   54[COMRAM] int 
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  3   51[COMRAM] int 
 18130 ;; Registers used:
 18131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18137 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;Total ram usage:        5 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    3
 18144 ;; This function calls:
 18145 ;;		i2___awtoft
 18146 ;;		i2___ftadd
 18147 ;;		i2___ftmul
 18148 ;;		i2_eval_poly
 18149 ;;		i2_frexp
 18150 ;; This function is called by:
 18151 ;;		i2_pow
 18152 ;; This function uses a non-reentrant model
 18153 ;;
 18154                           
 18155                           	psect	text76
 18156  002FD6                     __ptext76:
 18157                           	opt stack 0
 18158  002FD6                     i2_log:
 18159                           	opt stack 17
 18160                           
 18161                           ;incstack = 0
 18162  002FD6  AE36               	btfss	i2log@x+2,7,c
 18163  002FD8  D00C               	goto	i2l5528
 18164  002FDA  0E00               	movlw	0
 18165  002FDC  0101               	movlb	1	; () banked
 18166  002FDE  6F30               	movwf	(_errno+1)& (0+255),b
 18167  002FE0  0E21               	movlw	33
 18168  002FE2  6F2F               	movwf	_errno& (0+255),b
 18169  002FE4  0E00               	movlw	0
 18170  002FE6  6E34               	movwf	?i2_log,c
 18171  002FE8  0E00               	movlw	0
 18172  002FEA  6E35               	movwf	?i2_log+1,c
 18173  002FEC  0E00               	movlw	0
 18174  002FEE  6E36               	movwf	?i2_log+2,c
 18175                           
 18176                           ; BSR set to: 1
 18177  002FF0  0012               	return	
 18178  002FF2                     i2l5528:
 18179  002FF2  5034               	movf	i2log@x,w,c
 18180  002FF4  1035               	iorwf	i2log@x+1,w,c
 18181  002FF6  1036               	iorwf	i2log@x+2,w,c
 18182  002FF8  A4D8               	btfss	status,2,c
 18183  002FFA  D00C               	goto	i2l5534
 18184  002FFC  0E00               	movlw	0
 18185  002FFE  0101               	movlb	1	; () banked
 18186  003000  6F30               	movwf	(_errno+1)& (0+255),b
 18187  003002  0E22               	movlw	34
 18188  003004  6F2F               	movwf	_errno& (0+255),b
 18189  003006  0E00               	movlw	0
 18190  003008  6E34               	movwf	?i2_log,c
 18191  00300A  0E00               	movlw	0
 18192  00300C  6E35               	movwf	?i2_log+1,c
 18193  00300E  0E00               	movlw	0
 18194  003010  6E36               	movwf	?i2_log+2,c
 18195                           
 18196                           ; BSR set to: 1
 18197  003012  0012               	return	
 18198  003014                     i2l5534:
 18199  003014  0E00               	movlw	0
 18200  003016  6E10               	movwf	i2___ftmul@f2,c
 18201  003018  0E00               	movlw	0
 18202  00301A  6E11               	movwf	i2___ftmul@f2+1,c
 18203  00301C  0E40               	movlw	64
 18204  00301E  6E12               	movwf	i2___ftmul@f2+2,c
 18205  003020  0E37               	movlw	low i2log@exponent
 18206  003022  6E04               	movwf	i2frexp@eptr,c
 18207  003024  0E00               	movlw	high i2log@exponent
 18208  003026  6E05               	movwf	i2frexp@eptr+1,c
 18209  003028  C034  F001         	movff	i2log@x,i2frexp@value
 18210  00302C  C035  F002         	movff	i2log@x+1,i2frexp@value+1
 18211  003030  C036  F003         	movff	i2log@x+2,i2frexp@value+2
 18212  003034  ECF3  F024         	call	i2_frexp	;wreg free
 18213  003038  C001  F00D         	movff	?i2_frexp,i2___ftmul@f1
 18214  00303C  C002  F00E         	movff	?i2_frexp+1,i2___ftmul@f1+1
 18215  003040  C003  F00F         	movff	?i2_frexp+2,i2___ftmul@f1+2
 18216  003044  EC12  F01F         	call	i2___ftmul	;wreg free
 18217  003048  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 18218  00304C  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 18219  003050  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 18220  003054  0E00               	movlw	0
 18221  003056  6E1F               	movwf	i2___ftadd@f2,c
 18222  003058  0E80               	movlw	128
 18223  00305A  6E20               	movwf	i2___ftadd@f2+1,c
 18224  00305C  0EBF               	movlw	191
 18225  00305E  6E21               	movwf	i2___ftadd@f2+2,c
 18226  003060  ECBB  F013         	call	i2___ftadd	;wreg free
 18227  003064  C01C  F034         	movff	?i2___ftadd,i2log@x
 18228  003068  C01D  F035         	movff	?i2___ftadd+1,i2log@x+1
 18229  00306C  C01E  F036         	movff	?i2___ftadd+2,i2log@x+2
 18230  003070  0637               	decf	i2log@exponent,f,c
 18231  003072  A0D8               	btfss	status,0,c
 18232  003074  0638               	decf	i2log@exponent+1,f,c
 18233  003076  C034  F028         	movff	i2log@x,i2eval_poly@x
 18234  00307A  C035  F029         	movff	i2log@x+1,i2eval_poly@x+1
 18235  00307E  C036  F02A         	movff	i2log@x+2,i2eval_poly@x+2
 18236  003082  0EDB               	movlw	low log@coeff
 18237  003084  6E2B               	movwf	i2eval_poly@d,c
 18238  003086  0EFD               	movlw	high log@coeff
 18239  003088  6E2C               	movwf	i2eval_poly@d+1,c
 18240  00308A  0E00               	movlw	0
 18241  00308C  6E2E               	movwf	i2eval_poly@n+1,c
 18242  00308E  0E08               	movlw	8
 18243  003090  6E2D               	movwf	i2eval_poly@n,c
 18244  003092  ECB8  F021         	call	i2_eval_poly	;wreg free
 18245  003096  C028  F034         	movff	?i2_eval_poly,i2log@x
 18246  00309A  C029  F035         	movff	?i2_eval_poly+1,i2log@x+1
 18247  00309E  C02A  F036         	movff	?i2_eval_poly+2,i2log@x+2
 18248  0030A2  0E72               	movlw	114
 18249  0030A4  6E10               	movwf	i2___ftmul@f2,c
 18250  0030A6  0E31               	movlw	49
 18251  0030A8  6E11               	movwf	i2___ftmul@f2+1,c
 18252  0030AA  0E3F               	movlw	63
 18253  0030AC  6E12               	movwf	i2___ftmul@f2+2,c
 18254  0030AE  C037  F009         	movff	i2log@exponent,i2___awtoft@c
 18255  0030B2  C038  F00A         	movff	i2log@exponent+1,i2___awtoft@c+1
 18256  0030B6  ECF0  F028         	call	i2___awtoft	;wreg free
 18257  0030BA  C009  F00D         	movff	?i2___awtoft,i2___ftmul@f1
 18258  0030BE  C00A  F00E         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 18259  0030C2  C00B  F00F         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 18260  0030C6  EC12  F01F         	call	i2___ftmul	;wreg free
 18261  0030CA  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 18262  0030CE  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 18263  0030D2  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 18264  0030D6  C034  F01F         	movff	i2log@x,i2___ftadd@f2
 18265  0030DA  C035  F020         	movff	i2log@x+1,i2___ftadd@f2+1
 18266  0030DE  C036  F021         	movff	i2log@x+2,i2___ftadd@f2+2
 18267  0030E2  ECBB  F013         	call	i2___ftadd	;wreg free
 18268  0030E6  C01C  F034         	movff	?i2___ftadd,?i2_log
 18269  0030EA  C01D  F035         	movff	?i2___ftadd+1,?i2_log+1
 18270  0030EE  C01E  F036         	movff	?i2___ftadd+2,?i2_log+2
 18271  0030F2  0012               	return	
 18272  0030F4                     __end_ofi2_log:
 18273                           	opt stack 0
 18274                           pclatu	equ	0xFFB
 18275                           pclath	equ	0xFFA
 18276                           tblptru	equ	0xFF8
 18277                           tblptrh	equ	0xFF7
 18278                           tblptrl	equ	0xFF6
 18279                           tablat	equ	0xFF5
 18280                           prodh	equ	0xFF4
 18281                           prodl	equ	0xFF3
 18282                           intcon	equ	0xFF2
 18283                           intcon2	equ	0xFF1
 18284                           intcon3	equ	0xFF0
 18285                           postinc0	equ	0xFEE
 18286                           fsr0h	equ	0xFEA
 18287                           fsr0l	equ	0xFE9
 18288                           wreg	equ	0xFE8
 18289                           postdec1	equ	0xFE5
 18290                           fsr1h	equ	0xFE2
 18291                           fsr1l	equ	0xFE1
 18292                           indf2	equ	0xFDF
 18293                           postinc2	equ	0xFDE
 18294                           postdec2	equ	0xFDD
 18295                           fsr2h	equ	0xFDA
 18296                           fsr2l	equ	0xFD9
 18297                           status	equ	0xFD8
 18298                           
 18299 ;; *************** function i2_exp *****************
 18300 ;; Defined at:
 18301 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\exp.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;  x               3   72[COMRAM] int 
 18304 ;; Auto vars:     Size  Location     Type
 18305 ;;  exp             2   78[COMRAM] int 
 18306 ;;  exp             1   80[COMRAM] unsigned char 
 18307 ;; Return value:  Size  Location     Type
 18308 ;;                  3   72[COMRAM] unsigned char 
 18309 ;; Registers used:
 18310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18311 ;; Tracked objects:
 18312 ;;		On entry : 0/0
 18313 ;;		On exit  : 0/0
 18314 ;;		Unchanged: 0/0
 18315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18316 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18317 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18319 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18320 ;;Total ram usage:        9 bytes
 18321 ;; Hardware stack levels used:    1
 18322 ;; Hardware stack levels required when called:    3
 18323 ;; This function calls:
 18324 ;;		i2___awtoft
 18325 ;;		i2___ftdiv
 18326 ;;		i2___ftge
 18327 ;;		i2___ftmul
 18328 ;;		i2___ftneg
 18329 ;;		i2___ftsub
 18330 ;;		i2___fttol
 18331 ;;		i2_eval_poly
 18332 ;;		i2_floor
 18333 ;;		i2_ldexp
 18334 ;; This function is called by:
 18335 ;;		i2_pow
 18336 ;; This function uses a non-reentrant model
 18337 ;;
 18338                           
 18339                           	psect	text77
 18340  0023DA                     __ptext77:
 18341                           	opt stack 0
 18342  0023DA                     i2_exp:
 18343                           	opt stack 17
 18344                           
 18345                           ;incstack = 0
 18346  0023DA  5049               	movf	i2exp@x,w,c
 18347  0023DC  104A               	iorwf	i2exp@x+1,w,c
 18348  0023DE  104B               	iorwf	i2exp@x+2,w,c
 18349  0023E0  A4D8               	btfss	status,2,c
 18350  0023E2  D007               	goto	i2l5484
 18351  0023E4  0E00               	movlw	0
 18352  0023E6  6E49               	movwf	?i2_exp,c
 18353  0023E8  0E80               	movlw	128
 18354  0023EA  6E4A               	movwf	?i2_exp+1,c
 18355  0023EC  0E3F               	movlw	63
 18356  0023EE  6E4B               	movwf	?i2_exp+2,c
 18357  0023F0  0012               	return	
 18358  0023F2                     i2l5484:
 18359  0023F2  0E72               	movlw	114
 18360  0023F4  6E01               	movwf	i2___ftge@ff1,c
 18361  0023F6  0E31               	movlw	49
 18362  0023F8  6E02               	movwf	i2___ftge@ff1+1,c
 18363  0023FA  0E44               	movlw	68
 18364  0023FC  6E03               	movwf	i2___ftge@ff1+2,c
 18365  0023FE  C049  F004         	movff	i2exp@x,i2___ftge@ff2
 18366  002402  C04A  F005         	movff	i2exp@x+1,i2___ftge@ff2+1
 18367  002406  C04B  F006         	movff	i2exp@x+2,i2___ftge@ff2+2
 18368  00240A  EC3B  F025         	call	i2___ftge	;wreg free
 18369  00240E  B0D8               	btfsc	status,0,c
 18370  002410  D00C               	goto	i2l5490
 18371  002412  0E00               	movlw	0
 18372  002414  0101               	movlb	1	; () banked
 18373  002416  6F30               	movwf	(_errno+1)& (0+255),b
 18374  002418  0E22               	movlw	34
 18375  00241A  6F2F               	movwf	_errno& (0+255),b
 18376  00241C  0EFF               	movlw	255
 18377  00241E  6E49               	movwf	?i2_exp,c
 18378  002420  0E7F               	movlw	127
 18379  002422  6E4A               	movwf	?i2_exp+1,c
 18380  002424  0E7F               	movlw	127
 18381  002426  6E4B               	movwf	?i2_exp+2,c
 18382                           
 18383                           ; BSR set to: 1
 18384  002428  0012               	return	
 18385  00242A                     i2l5490:
 18386  00242A  C049  F001         	movff	i2exp@x,i2___ftge@ff1
 18387  00242E  C04A  F002         	movff	i2exp@x+1,i2___ftge@ff1+1
 18388  002432  C04B  F003         	movff	i2exp@x+2,i2___ftge@ff1+2
 18389  002436  0E49               	movlw	73
 18390  002438  6E04               	movwf	i2___ftge@ff2,c
 18391  00243A  0E3A               	movlw	58
 18392  00243C  6E05               	movwf	i2___ftge@ff2+1,c
 18393  00243E  0EC4               	movlw	196
 18394  002440  6E06               	movwf	i2___ftge@ff2+2,c
 18395  002442  EC3B  F025         	call	i2___ftge	;wreg free
 18396  002446  B0D8               	btfsc	status,0,c
 18397  002448  D00C               	goto	i2l5496
 18398  00244A  0E00               	movlw	0
 18399  00244C  0101               	movlb	1	; () banked
 18400  00244E  6F30               	movwf	(_errno+1)& (0+255),b
 18401  002450  0E22               	movlw	34
 18402  002452  6F2F               	movwf	_errno& (0+255),b
 18403  002454  0E00               	movlw	0
 18404  002456  6E49               	movwf	?i2_exp,c
 18405  002458  0E00               	movlw	0
 18406  00245A  6E4A               	movwf	?i2_exp+1,c
 18407  00245C  0E00               	movlw	0
 18408  00245E  6E4B               	movwf	?i2_exp+2,c
 18409                           
 18410                           ; BSR set to: 1
 18411  002460  0012               	return	
 18412  002462                     i2l5496:
 18413  002462  AE4B               	btfss	i2exp@x+2,7,c
 18414  002464  D002               	goto	i2u535_40
 18415  002466  0E01               	movlw	1
 18416  002468  D001               	goto	i2u536_40
 18417  00246A                     i2u535_40:
 18418  00246A  0E00               	movlw	0
 18419  00246C                     i2u536_40:
 18420  00246C  6E51               	movwf	i2exp@sign,c
 18421  00246E  5051               	movf	i2exp@sign,w,c
 18422  002470  B4D8               	btfsc	status,2,c
 18423  002472  D00E               	goto	i2l1277
 18424  002474  C049  F001         	movff	i2exp@x,i2___ftneg@f1
 18425  002478  C04A  F002         	movff	i2exp@x+1,i2___ftneg@f1+1
 18426  00247C  C04B  F003         	movff	i2exp@x+2,i2___ftneg@f1+2
 18427  002480  ECE8  F029         	call	i2___ftneg	;wreg free
 18428  002484  C001  F049         	movff	?i2___ftneg,i2exp@x
 18429  002488  C002  F04A         	movff	?i2___ftneg+1,i2exp@x+1
 18430  00248C  C003  F04B         	movff	?i2___ftneg+2,i2exp@x+2
 18431  002490                     i2l1277:
 18432  002490  C049  F00D         	movff	i2exp@x,i2___ftmul@f1
 18433  002494  C04A  F00E         	movff	i2exp@x+1,i2___ftmul@f1+1
 18434  002498  C04B  F00F         	movff	i2exp@x+2,i2___ftmul@f1+2
 18435  00249C  0EAA               	movlw	170
 18436  00249E  6E10               	movwf	i2___ftmul@f2,c
 18437  0024A0  0EB8               	movlw	184
 18438  0024A2  6E11               	movwf	i2___ftmul@f2+1,c
 18439  0024A4  0E3F               	movlw	63
 18440  0024A6  6E12               	movwf	i2___ftmul@f2+2,c
 18441  0024A8  EC12  F01F         	call	i2___ftmul	;wreg free
 18442  0024AC  C00D  F049         	movff	?i2___ftmul,i2exp@x
 18443  0024B0  C00E  F04A         	movff	?i2___ftmul+1,i2exp@x+1
 18444  0024B4  C00F  F04B         	movff	?i2___ftmul+2,i2exp@x+2
 18445  0024B8  C049  F041         	movff	i2exp@x,i2floor@x
 18446  0024BC  C04A  F042         	movff	i2exp@x+1,i2floor@x+1
 18447  0024C0  C04B  F043         	movff	i2exp@x+2,i2floor@x+2
 18448  0024C4  EC75  F020         	call	i2_floor	;wreg free
 18449  0024C8  C041  F04C         	movff	?i2_floor,i2_exp$1679
 18450  0024CC  C042  F04D         	movff	?i2_floor+1,i2_exp$1679+1
 18451  0024D0  C043  F04E         	movff	?i2_floor+2,i2_exp$1679+2
 18452  0024D4  C04C  F028         	movff	i2_exp$1679,i2___fttol@f1
 18453  0024D8  C04D  F029         	movff	i2_exp$1679+1,i2___fttol@f1+1
 18454  0024DC  C04E  F02A         	movff	i2_exp$1679+2,i2___fttol@f1+2
 18455  0024E0  EC98  F01E         	call	i2___fttol	;wreg free
 18456  0024E4  C028  F04F         	movff	?i2___fttol,i2exp@exponent
 18457  0024E8  C029  F050         	movff	?i2___fttol+1,i2exp@exponent+1
 18458  0024EC  C049  F028         	movff	i2exp@x,i2___ftsub@f1
 18459  0024F0  C04A  F029         	movff	i2exp@x+1,i2___ftsub@f1+1
 18460  0024F4  C04B  F02A         	movff	i2exp@x+2,i2___ftsub@f1+2
 18461  0024F8  C04F  F009         	movff	i2exp@exponent,i2___awtoft@c
 18462  0024FC  C050  F00A         	movff	i2exp@exponent+1,i2___awtoft@c+1
 18463  002500  ECF0  F028         	call	i2___awtoft	;wreg free
 18464  002504  C009  F02B         	movff	?i2___awtoft,i2___ftsub@f2
 18465  002508  C00A  F02C         	movff	?i2___awtoft+1,i2___ftsub@f2+1
 18466  00250C  C00B  F02D         	movff	?i2___awtoft+2,i2___ftsub@f2+2
 18467  002510  ECB3  F028         	call	i2___ftsub	;wreg free
 18468  002514  C028  F049         	movff	?i2___ftsub,i2exp@x
 18469  002518  C029  F04A         	movff	?i2___ftsub+1,i2exp@x+1
 18470  00251C  C02A  F04B         	movff	?i2___ftsub+2,i2exp@x+2
 18471  002520  C049  F028         	movff	i2exp@x,i2eval_poly@x
 18472  002524  C04A  F029         	movff	i2exp@x+1,i2eval_poly@x+1
 18473  002528  C04B  F02A         	movff	i2exp@x+2,i2eval_poly@x+2
 18474  00252C  0EBD               	movlw	low exp@coeff
 18475  00252E  6E2B               	movwf	i2eval_poly@d,c
 18476  002530  0EFD               	movlw	high exp@coeff
 18477  002532  6E2C               	movwf	i2eval_poly@d+1,c
 18478  002534  0E00               	movlw	0
 18479  002536  6E2E               	movwf	i2eval_poly@n+1,c
 18480  002538  0E09               	movlw	9
 18481  00253A  6E2D               	movwf	i2eval_poly@n,c
 18482  00253C  ECB8  F021         	call	i2_eval_poly	;wreg free
 18483  002540  C028  F034         	movff	?i2_eval_poly,i2ldexp@value
 18484  002544  C029  F035         	movff	?i2_eval_poly+1,i2ldexp@value+1
 18485  002548  C02A  F036         	movff	?i2_eval_poly+2,i2ldexp@value+2
 18486  00254C  C04F  F037         	movff	i2exp@exponent,i2ldexp@newexp
 18487  002550  C050  F038         	movff	i2exp@exponent+1,i2ldexp@newexp+1
 18488  002554  EC85  F022         	call	i2_ldexp	;wreg free
 18489  002558  C034  F049         	movff	?i2_ldexp,i2exp@x
 18490  00255C  C035  F04A         	movff	?i2_ldexp+1,i2exp@x+1
 18491  002560  C036  F04B         	movff	?i2_ldexp+2,i2exp@x+2
 18492  002564  5051               	movf	i2exp@sign,w,c
 18493  002566  B4D8               	btfsc	status,2,c
 18494  002568  D025               	goto	i2l1278
 18495  00256A  2849               	incf	i2exp@x,w,c
 18496  00256C  E10E               	bnz	i2l5518
 18497  00256E  0E7F               	movlw	127
 18498  002570  184A               	xorwf	i2exp@x+1,w,c
 18499  002572  E10B               	bnz	i2l5518
 18500  002574  0E7F               	movlw	127
 18501  002576  184B               	xorwf	i2exp@x+2,w,c
 18502  002578  A4D8               	btfss	status,2,c
 18503  00257A  D007               	goto	i2l5518
 18504  00257C  0E00               	movlw	0
 18505  00257E  6E49               	movwf	?i2_exp,c
 18506  002580  0E00               	movlw	0
 18507  002582  6E4A               	movwf	?i2_exp+1,c
 18508  002584  0E00               	movlw	0
 18509  002586  6E4B               	movwf	?i2_exp+2,c
 18510  002588  0012               	return	
 18511  00258A                     i2l5518:
 18512  00258A  0E00               	movlw	0
 18513  00258C  6E09               	movwf	i2___ftdiv@f1,c
 18514  00258E  0E80               	movlw	128
 18515  002590  6E0A               	movwf	i2___ftdiv@f1+1,c
 18516  002592  0E3F               	movlw	63
 18517  002594  6E0B               	movwf	i2___ftdiv@f1+2,c
 18518  002596  C049  F00C         	movff	i2exp@x,i2___ftdiv@f2
 18519  00259A  C04A  F00D         	movff	i2exp@x+1,i2___ftdiv@f2+1
 18520  00259E  C04B  F00E         	movff	i2exp@x+2,i2___ftdiv@f2+2
 18521  0025A2  EC02  F020         	call	i2___ftdiv	;wreg free
 18522  0025A6  C009  F049         	movff	?i2___ftdiv,?i2_exp
 18523  0025AA  C00A  F04A         	movff	?i2___ftdiv+1,?i2_exp+1
 18524  0025AE  C00B  F04B         	movff	?i2___ftdiv+2,?i2_exp+2
 18525  0025B2  0012               	return	
 18526  0025B4                     i2l1278:
 18527  0025B4  C049  F049         	movff	i2exp@x,?i2_exp
 18528  0025B8  C04A  F04A         	movff	i2exp@x+1,?i2_exp+1
 18529  0025BC  C04B  F04B         	movff	i2exp@x+2,?i2_exp+2
 18530  0025C0  0012               	return		;funcret
 18531  0025C2                     __end_ofi2_exp:
 18532                           	opt stack 0
 18533                           pclatu	equ	0xFFB
 18534                           pclath	equ	0xFFA
 18535                           tblptru	equ	0xFF8
 18536                           tblptrh	equ	0xFF7
 18537                           tblptrl	equ	0xFF6
 18538                           tablat	equ	0xFF5
 18539                           prodh	equ	0xFF4
 18540                           prodl	equ	0xFF3
 18541                           intcon	equ	0xFF2
 18542                           intcon2	equ	0xFF1
 18543                           intcon3	equ	0xFF0
 18544                           postinc0	equ	0xFEE
 18545                           fsr0h	equ	0xFEA
 18546                           fsr0l	equ	0xFE9
 18547                           wreg	equ	0xFE8
 18548                           postdec1	equ	0xFE5
 18549                           fsr1h	equ	0xFE2
 18550                           fsr1l	equ	0xFE1
 18551                           indf2	equ	0xFDF
 18552                           postinc2	equ	0xFDE
 18553                           postdec2	equ	0xFDD
 18554                           fsr2h	equ	0xFDA
 18555                           fsr2l	equ	0xFD9
 18556                           status	equ	0xFD8
 18557                           
 18558 ;; *************** function i2_ldexp *****************
 18559 ;; Defined at:
 18560 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;  value           3   51[COMRAM] unsigned char 
 18563 ;;  newexp          2   54[COMRAM] int 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;		None
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  3   51[COMRAM] int 
 18568 ;; Registers used:
 18569 ;;		wreg, status,2, status,0
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18575 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18579 ;;Total ram usage:        7 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; This function calls:
 18582 ;;		Nothing
 18583 ;; This function is called by:
 18584 ;;		i2_exp
 18585 ;; This function uses a non-reentrant model
 18586 ;;
 18587                           
 18588                           	psect	text78
 18589  00450A                     __ptext78:
 18590                           	opt stack 0
 18591  00450A                     i2_ldexp:
 18592                           	opt stack 19
 18593                           
 18594                           ;incstack = 0
 18595  00450A  5034               	movf	i2ldexp@value,w,c
 18596  00450C  1035               	iorwf	i2ldexp@value+1,w,c
 18597  00450E  1036               	iorwf	i2ldexp@value+2,w,c
 18598  004510  A4D8               	btfss	status,2,c
 18599  004512  D007               	goto	i2l5218
 18600  004514  0E00               	movlw	0
 18601  004516  6E34               	movwf	?i2_ldexp,c
 18602  004518  0E00               	movlw	0
 18603  00451A  6E35               	movwf	?i2_ldexp+1,c
 18604  00451C  0E00               	movlw	0
 18605  00451E  6E36               	movwf	?i2_ldexp+2,c
 18606  004520  0012               	return	
 18607  004522                     i2l5218:
 18608  004522  5036               	movf	i2ldexp@value+2,w,c
 18609  004524  0B7F               	andlw	127
 18610  004526  6E39               	movwf	??i2_ldexp& (0+255),c
 18611  004528  6A3A               	clrf	(??i2_ldexp+1)& (0+255),c
 18612  00452A  90D8               	bcf	status,0,c
 18613  00452C  3639               	rlcf	??i2_ldexp,f,c
 18614  00452E  363A               	rlcf	??i2_ldexp+1,f,c
 18615  004530  5039               	movf	??i2_ldexp,w,c
 18616  004532  2637               	addwf	i2ldexp@newexp,f,c
 18617  004534  503A               	movf	??i2_ldexp+1,w,c
 18618  004536  2238               	addwfc	i2ldexp@newexp+1,f,c
 18619  004538  AE35               	btfss	i2ldexp@value+1,7,c
 18620  00453A  D003               	goto	i2u500_40
 18621  00453C  6A39               	clrf	??i2_ldexp& (0+255),c
 18622  00453E  2A39               	incf	??i2_ldexp& (0+255),f,c
 18623  004540  D001               	goto	i2u500_48
 18624  004542                     i2u500_40:
 18625  004542  6A39               	clrf	??i2_ldexp& (0+255),c
 18626  004544                     i2u500_48:
 18627  004544  5039               	movf	??i2_ldexp,w,c
 18628  004546  2637               	addwf	i2ldexp@newexp,f,c
 18629  004548  0E00               	movlw	0
 18630  00454A  2238               	addwfc	i2ldexp@newexp+1,f,c
 18631  00454C  AE38               	btfss	i2ldexp@newexp+1,7,c
 18632  00454E  D00C               	goto	i2l5226
 18633  004550  0E00               	movlw	0
 18634  004552  0101               	movlb	1	; () banked
 18635  004554  6F30               	movwf	(_errno+1)& (0+255),b
 18636  004556  0E22               	movlw	34
 18637  004558  6F2F               	movwf	_errno& (0+255),b
 18638  00455A  0E00               	movlw	0
 18639  00455C  6E34               	movwf	?i2_ldexp,c
 18640  00455E  0E00               	movlw	0
 18641  004560  6E35               	movwf	?i2_ldexp+1,c
 18642  004562  0E00               	movlw	0
 18643  004564                     L26:
 18644  004564  6E36               	movwf	?i2_ldexp+2,c
 18645                           
 18646                           ; BSR set to: 1
 18647  004566  0012               	return	
 18648  004568                     i2l5226:
 18649  004568  BE38               	btfsc	i2ldexp@newexp+1,7,c
 18650  00456A  D016               	goto	i2l5242
 18651  00456C  0438               	decf	i2ldexp@newexp+1,w,c
 18652  00456E  A0D8               	btfss	status,0,c
 18653  004570  D013               	goto	i2l5242
 18654  004572  0E00               	movlw	0
 18655  004574  0101               	movlb	1	; () banked
 18656  004576  6F30               	movwf	(_errno+1)& (0+255),b
 18657  004578  0E22               	movlw	34
 18658  00457A  6F2F               	movwf	_errno& (0+255),b
 18659                           
 18660                           ; BSR set to: 1
 18661  00457C  AE36               	btfss	i2ldexp@value+2,7,c
 18662  00457E  D006               	goto	i2l5238
 18663                           
 18664                           ; BSR set to: 1
 18665  004580  0EFF               	movlw	255
 18666  004582  6E34               	movwf	?i2_ldexp,c
 18667  004584  0E7F               	movlw	127
 18668  004586  6E35               	movwf	?i2_ldexp+1,c
 18669  004588  0EFF               	movlw	255
 18670  00458A  D7EC               	goto	L26
 18671  00458C                     i2l5238:
 18672                           
 18673                           ; BSR set to: 1
 18674  00458C  0EFF               	movlw	255
 18675  00458E  6E34               	movwf	?i2_ldexp,c
 18676  004590  0E7F               	movlw	127
 18677  004592  6E35               	movwf	?i2_ldexp+1,c
 18678  004594  0E7F               	movlw	127
 18679  004596  D7E6               	goto	L26
 18680  004598                     i2l5242:
 18681  004598  3438               	rlcf	i2ldexp@newexp+1,w,c
 18682  00459A  3038               	rrcf	i2ldexp@newexp+1,w,c
 18683  00459C  6E3A               	movwf	(??i2_ldexp+1)& (0+255),c
 18684  00459E  3037               	rrcf	i2ldexp@newexp,w,c
 18685  0045A0  6E39               	movwf	??i2_ldexp& (0+255),c
 18686  0045A2  5036               	movf	i2ldexp@value+2,w,c
 18687  0045A4  1839               	xorwf	??i2_ldexp,w,c
 18688  0045A6  0B80               	andlw	-128
 18689  0045A8  1839               	xorwf	??i2_ldexp,w,c
 18690  0045AA  6E36               	movwf	i2ldexp@value+2,c
 18691  0045AC  C037  F039         	movff	i2ldexp@newexp,??i2_ldexp
 18692  0045B0  0E01               	movlw	1
 18693  0045B2  1639               	andwf	??i2_ldexp,f,c
 18694  0045B4  3239               	rrcf	??i2_ldexp,f,c
 18695  0045B6  3239               	rrcf	??i2_ldexp,f,c
 18696  0045B8  5035               	movf	i2ldexp@value+1,w,c
 18697  0045BA  1839               	xorwf	??i2_ldexp,w,c
 18698  0045BC  0B7F               	andlw	-129
 18699  0045BE  1839               	xorwf	??i2_ldexp,w,c
 18700  0045C0  6E35               	movwf	i2ldexp@value+1,c
 18701  0045C2  C034  F034         	movff	i2ldexp@value,?i2_ldexp
 18702  0045C6  C035  F035         	movff	i2ldexp@value+1,?i2_ldexp+1
 18703  0045CA  C036  F036         	movff	i2ldexp@value+2,?i2_ldexp+2
 18704  0045CE  0012               	return	
 18705  0045D0                     __end_ofi2_ldexp:
 18706                           	opt stack 0
 18707                           pclatu	equ	0xFFB
 18708                           pclath	equ	0xFFA
 18709                           tblptru	equ	0xFF8
 18710                           tblptrh	equ	0xFF7
 18711                           tblptrl	equ	0xFF6
 18712                           tablat	equ	0xFF5
 18713                           prodh	equ	0xFF4
 18714                           prodl	equ	0xFF3
 18715                           intcon	equ	0xFF2
 18716                           intcon2	equ	0xFF1
 18717                           intcon3	equ	0xFF0
 18718                           postinc0	equ	0xFEE
 18719                           fsr0h	equ	0xFEA
 18720                           fsr0l	equ	0xFE9
 18721                           wreg	equ	0xFE8
 18722                           postdec1	equ	0xFE5
 18723                           fsr1h	equ	0xFE2
 18724                           fsr1l	equ	0xFE1
 18725                           indf2	equ	0xFDF
 18726                           postinc2	equ	0xFDE
 18727                           postdec2	equ	0xFDD
 18728                           fsr2h	equ	0xFDA
 18729                           fsr2l	equ	0xFD9
 18730                           status	equ	0xFD8
 18731                           
 18732 ;; *************** function i2_floor *****************
 18733 ;; Defined at:
 18734 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\floor.c"
 18735 ;; Parameters:    Size  Location     Type
 18736 ;;  x               3   64[COMRAM] int 
 18737 ;; Auto vars:     Size  Location     Type
 18738 ;;  floor           3   69[COMRAM] int 
 18739 ;;  floor           2   67[COMRAM] int 
 18740 ;; Return value:  Size  Location     Type
 18741 ;;                  3   64[COMRAM] int 
 18742 ;; Registers used:
 18743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18749 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18750 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18753 ;;Total ram usage:        8 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:    2
 18756 ;; This function calls:
 18757 ;;		i2___altoft
 18758 ;;		i2___ftadd
 18759 ;;		i2___ftge
 18760 ;;		i2___fttol
 18761 ;;		i2_frexp
 18762 ;; This function is called by:
 18763 ;;		i2_exp
 18764 ;; This function uses a non-reentrant model
 18765 ;;
 18766                           
 18767                           	psect	text79
 18768  0040EA                     __ptext79:
 18769                           	opt stack 0
 18770  0040EA                     i2_floor:
 18771                           	opt stack 17
 18772                           
 18773                           ;incstack = 0
 18774  0040EA  C041  F001         	movff	i2floor@x,i2frexp@value
 18775  0040EE  C042  F002         	movff	i2floor@x+1,i2frexp@value+1
 18776  0040F2  C043  F003         	movff	i2floor@x+2,i2frexp@value+2
 18777  0040F6  0E44               	movlw	low i2floor@expon
 18778  0040F8  6E04               	movwf	i2frexp@eptr,c
 18779  0040FA  0E00               	movlw	high i2floor@expon
 18780  0040FC  6E05               	movwf	i2frexp@eptr+1,c
 18781  0040FE  ECF3  F024         	call	i2_frexp	;wreg free
 18782  004102  AE45               	btfss	i2floor@expon+1,7,c
 18783  004104  D010               	goto	i2l5202
 18784  004106  AE43               	btfss	i2floor@x+2,7,c
 18785  004108  D007               	goto	i2l5198
 18786  00410A  0E00               	movlw	0
 18787  00410C  6E41               	movwf	?i2_floor,c
 18788  00410E  0E80               	movlw	128
 18789  004110  6E42               	movwf	?i2_floor+1,c
 18790  004112  0EBF               	movlw	191
 18791  004114  6E43               	movwf	?i2_floor+2,c
 18792  004116  0012               	return	
 18793  004118                     i2l5198:
 18794  004118  0E00               	movlw	0
 18795  00411A  6E41               	movwf	?i2_floor,c
 18796  00411C  0E00               	movlw	0
 18797  00411E  6E42               	movwf	?i2_floor+1,c
 18798  004120  0E00               	movlw	0
 18799  004122  6E43               	movwf	?i2_floor+2,c
 18800  004124  0012               	return	
 18801  004126                     i2l5202:
 18802  004126  5045               	movf	i2floor@expon+1,w,c
 18803  004128  E104               	bnz	i2u497_40
 18804  00412A  0E15               	movlw	21
 18805  00412C  5C44               	subwf	i2floor@expon,w,c
 18806  00412E  A0D8               	btfss	status,0,c
 18807  004130  D007               	goto	i2l5206
 18808  004132                     i2u497_40:
 18809  004132  C041  F041         	movff	i2floor@x,?i2_floor
 18810  004136  C042  F042         	movff	i2floor@x+1,?i2_floor+1
 18811  00413A  C043  F043         	movff	i2floor@x+2,?i2_floor+2
 18812  00413E  0012               	return	
 18813  004140                     i2l5206:
 18814  004140  C041  F028         	movff	i2floor@x,i2___fttol@f1
 18815  004144  C042  F029         	movff	i2floor@x+1,i2___fttol@f1+1
 18816  004148  C043  F02A         	movff	i2floor@x+2,i2___fttol@f1+2
 18817  00414C  EC98  F01E         	call	i2___fttol	;wreg free
 18818  004150  C028  F037         	movff	?i2___fttol,i2___altoft@c
 18819  004154  C029  F038         	movff	?i2___fttol+1,i2___altoft@c+1
 18820  004158  C02A  F039         	movff	?i2___fttol+2,i2___altoft@c+2
 18821  00415C  C02B  F03A         	movff	?i2___fttol+3,i2___altoft@c+3
 18822  004160  EC3F  F026         	call	i2___altoft	;wreg free
 18823  004164  C037  F046         	movff	?i2___altoft,i2floor@i
 18824  004168  C038  F047         	movff	?i2___altoft+1,i2floor@i+1
 18825  00416C  C039  F048         	movff	?i2___altoft+2,i2floor@i+2
 18826  004170  C041  F001         	movff	i2floor@x,i2___ftge@ff1
 18827  004174  C042  F002         	movff	i2floor@x+1,i2___ftge@ff1+1
 18828  004178  C043  F003         	movff	i2floor@x+2,i2___ftge@ff1+2
 18829  00417C  C046  F004         	movff	i2floor@i,i2___ftge@ff2
 18830  004180  C047  F005         	movff	i2floor@i+1,i2___ftge@ff2+1
 18831  004184  C048  F006         	movff	i2floor@i+2,i2___ftge@ff2+2
 18832  004188  EC3B  F025         	call	i2___ftge	;wreg free
 18833  00418C  B0D8               	btfsc	status,0,c
 18834  00418E  D015               	goto	i2l1288
 18835  004190  C046  F01C         	movff	i2floor@i,i2___ftadd@f1
 18836  004194  C047  F01D         	movff	i2floor@i+1,i2___ftadd@f1+1
 18837  004198  C048  F01E         	movff	i2floor@i+2,i2___ftadd@f1+2
 18838  00419C  0E00               	movlw	0
 18839  00419E  6E1F               	movwf	i2___ftadd@f2,c
 18840  0041A0  0E80               	movlw	128
 18841  0041A2  6E20               	movwf	i2___ftadd@f2+1,c
 18842  0041A4  0EBF               	movlw	191
 18843  0041A6  6E21               	movwf	i2___ftadd@f2+2,c
 18844  0041A8  ECBB  F013         	call	i2___ftadd	;wreg free
 18845  0041AC  C01C  F041         	movff	?i2___ftadd,?i2_floor
 18846  0041B0  C01D  F042         	movff	?i2___ftadd+1,?i2_floor+1
 18847  0041B4  C01E  F043         	movff	?i2___ftadd+2,?i2_floor+2
 18848  0041B8  0012               	return	
 18849  0041BA                     i2l1288:
 18850  0041BA  C046  F041         	movff	i2floor@i,?i2_floor
 18851  0041BE  C047  F042         	movff	i2floor@i+1,?i2_floor+1
 18852  0041C2  C048  F043         	movff	i2floor@i+2,?i2_floor+2
 18853  0041C6  0012               	return		;funcret
 18854  0041C8                     __end_ofi2_floor:
 18855                           	opt stack 0
 18856                           pclatu	equ	0xFFB
 18857                           pclath	equ	0xFFA
 18858                           tblptru	equ	0xFF8
 18859                           tblptrh	equ	0xFF7
 18860                           tblptrl	equ	0xFF6
 18861                           tablat	equ	0xFF5
 18862                           prodh	equ	0xFF4
 18863                           prodl	equ	0xFF3
 18864                           intcon	equ	0xFF2
 18865                           intcon2	equ	0xFF1
 18866                           intcon3	equ	0xFF0
 18867                           postinc0	equ	0xFEE
 18868                           fsr0h	equ	0xFEA
 18869                           fsr0l	equ	0xFE9
 18870                           wreg	equ	0xFE8
 18871                           postdec1	equ	0xFE5
 18872                           fsr1h	equ	0xFE2
 18873                           fsr1l	equ	0xFE1
 18874                           indf2	equ	0xFDF
 18875                           postinc2	equ	0xFDE
 18876                           postdec2	equ	0xFDD
 18877                           fsr2h	equ	0xFDA
 18878                           fsr2l	equ	0xFD9
 18879                           status	equ	0xFD8
 18880                           
 18881 ;; *************** function i2_frexp *****************
 18882 ;; Defined at:
 18883 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\frexp.c"
 18884 ;; Parameters:    Size  Location     Type
 18885 ;;  value           3    0[COMRAM] int 
 18886 ;;  eptr            2    3[COMRAM] PTR int 
 18887 ;;		 -> log@exponent(2), floor@expon(2), 
 18888 ;; Auto vars:     Size  Location     Type
 18889 ;;		None
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  3    0[COMRAM] PTR int 
 18892 ;; Registers used:
 18893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18894 ;; Tracked objects:
 18895 ;;		On entry : 0/0
 18896 ;;		On exit  : 0/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18899 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18902 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18903 ;;Total ram usage:        7 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; This function calls:
 18906 ;;		Nothing
 18907 ;; This function is called by:
 18908 ;;		i2_floor
 18909 ;;		i2_log
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           	psect	text80
 18914  0049E6                     __ptext80:
 18915                           	opt stack 0
 18916  0049E6                     i2_frexp:
 18917                           	opt stack 19
 18918                           
 18919                           ;incstack = 0
 18920  0049E6  5001               	movf	i2frexp@value,w,c
 18921  0049E8  1002               	iorwf	i2frexp@value+1,w,c
 18922  0049EA  1003               	iorwf	i2frexp@value+2,w,c
 18923  0049EC  A4D8               	btfss	status,2,c
 18924  0049EE  D00F               	goto	i2l5008
 18925  0049F0  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18926  0049F4  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18927  0049F8  0E00               	movlw	0
 18928  0049FA  6EDE               	movwf	postinc2,c
 18929  0049FC  0E00               	movlw	0
 18930  0049FE  6EDD               	movwf	postdec2,c
 18931  004A00  0E00               	movlw	0
 18932  004A02  6E01               	movwf	?i2_frexp,c
 18933  004A04  0E00               	movlw	0
 18934  004A06  6E02               	movwf	?i2_frexp+1,c
 18935  004A08  0E00               	movlw	0
 18936  004A0A  6E03               	movwf	?i2_frexp+2,c
 18937  004A0C  0012               	return	
 18938  004A0E                     i2l5008:
 18939  004A0E  5003               	movf	i2frexp@value+2,w,c
 18940  004A10  0B7F               	andlw	127
 18941  004A12  6E06               	movwf	??i2_frexp& (0+255),c
 18942  004A14  6A07               	clrf	(??i2_frexp+1)& (0+255),c
 18943  004A16  90D8               	bcf	status,0,c
 18944  004A18  3606               	rlcf	??i2_frexp,f,c
 18945  004A1A  3607               	rlcf	??i2_frexp+1,f,c
 18946  004A1C  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18947  004A20  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18948  004A24  C006  FFDE         	movff	??i2_frexp,postinc2
 18949  004A28  C007  FFDD         	movff	??i2_frexp+1,postdec2
 18950  004A2C  AE02               	btfss	i2frexp@value+1,7,c
 18951  004A2E  D003               	goto	i2u473_40
 18952  004A30  6A06               	clrf	??i2_frexp& (0+255),c
 18953  004A32  2A06               	incf	??i2_frexp& (0+255),f,c
 18954  004A34  D001               	goto	i2u473_48
 18955  004A36                     i2u473_40:
 18956  004A36  6A06               	clrf	??i2_frexp& (0+255),c
 18957  004A38                     i2u473_48:
 18958  004A38  5006               	movf	??i2_frexp,w,c
 18959  004A3A  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18960  004A3E  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18961  004A42  12DE               	iorwf	postinc2,f,c
 18962  004A44  0E00               	movlw	0
 18963  004A46  12DD               	iorwf	postdec2,f,c
 18964  004A48  C004  FFD9         	movff	i2frexp@eptr,fsr2l
 18965  004A4C  C005  FFDA         	movff	i2frexp@eptr+1,fsr2h
 18966  004A50  0E82               	movlw	130
 18967  004A52  26DE               	addwf	postinc2,f,c
 18968  004A54  0EFF               	movlw	255
 18969  004A56  22DD               	addwfc	postdec2,f,c
 18970  004A58  8003               	bsf	i2frexp@value+2,0,c
 18971  004A5A  8203               	bsf	i2frexp@value+2,1,c
 18972  004A5C  8403               	bsf	i2frexp@value+2,2,c
 18973  004A5E  8603               	bsf	i2frexp@value+2,3,c
 18974  004A60  8803               	bsf	i2frexp@value+2,4,c
 18975  004A62  8A03               	bsf	i2frexp@value+2,5,c
 18976  004A64  9C03               	bcf	i2frexp@value+2,6,c
 18977  004A66  9E02               	bcf	i2frexp@value+1,7,c
 18978  004A68  C001  F001         	movff	i2frexp@value,?i2_frexp
 18979  004A6C  C002  F002         	movff	i2frexp@value+1,?i2_frexp+1
 18980  004A70  C003  F003         	movff	i2frexp@value+2,?i2_frexp+2
 18981  004A74  0012               	return	
 18982  004A76                     __end_ofi2_frexp:
 18983                           	opt stack 0
 18984                           pclatu	equ	0xFFB
 18985                           pclath	equ	0xFFA
 18986                           tblptru	equ	0xFF8
 18987                           tblptrh	equ	0xFF7
 18988                           tblptrl	equ	0xFF6
 18989                           tablat	equ	0xFF5
 18990                           prodh	equ	0xFF4
 18991                           prodl	equ	0xFF3
 18992                           intcon	equ	0xFF2
 18993                           intcon2	equ	0xFF1
 18994                           intcon3	equ	0xFF0
 18995                           postinc0	equ	0xFEE
 18996                           fsr0h	equ	0xFEA
 18997                           fsr0l	equ	0xFE9
 18998                           wreg	equ	0xFE8
 18999                           postdec1	equ	0xFE5
 19000                           fsr1h	equ	0xFE2
 19001                           fsr1l	equ	0xFE1
 19002                           indf2	equ	0xFDF
 19003                           postinc2	equ	0xFDE
 19004                           postdec2	equ	0xFDD
 19005                           fsr2h	equ	0xFDA
 19006                           fsr2l	equ	0xFD9
 19007                           status	equ	0xFD8
 19008                           
 19009 ;; *************** function i2___fttol *****************
 19010 ;; Defined at:
 19011 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 19012 ;; Parameters:    Size  Location     Type
 19013 ;;  f1              3   39[COMRAM] float 
 19014 ;; Auto vars:     Size  Location     Type
 19015 ;;  __fttol         4   49[COMRAM] unsigned long 
 19016 ;;  __fttol         1   53[COMRAM] unsigned char 
 19017 ;;  __fttol         1   48[COMRAM] unsigned char 
 19018 ;; Return value:  Size  Location     Type
 19019 ;;                  4   39[COMRAM] long 
 19020 ;; Registers used:
 19021 ;;		wreg, status,2, status,0
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19028 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19029 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19030 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19031 ;;Total ram usage:       15 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; This function calls:
 19034 ;;		Nothing
 19035 ;; This function is called by:
 19036 ;;		i2_dec_to_hex
 19037 ;;		i2_pow
 19038 ;;		i2_exp
 19039 ;;		i2_floor
 19040 ;; This function uses a non-reentrant model
 19041 ;;
 19042                           
 19043                           	psect	text81
 19044  003D30                     __ptext81:
 19045                           	opt stack 0
 19046  003D30                     i2___fttol:
 19047                           	opt stack 18
 19048                           
 19049                           ;incstack = 0
 19050  003D30  C02A  F02C         	movff	i2___fttol@f1+2,??i2___fttol
 19051  003D34  6A2D               	clrf	(??i2___fttol+1)& (0+255),c
 19052  003D36  6A2E               	clrf	(??i2___fttol+2)& (0+255),c
 19053  003D38  3429               	rlcf	i2___fttol@f1+1,w,c
 19054  003D3A  362C               	rlcf	??i2___fttol& (0+255),f,c
 19055  003D3C  E301               	bnc	u464_41
 19056  003D3E  802D               	bsf	(??i2___fttol+1)& (0+255),0,c
 19057  003D40                     u464_41:
 19058  003D40  502C               	movf	??i2___fttol,w,c
 19059  003D42  6E36               	movwf	i2___fttol@exp1,c
 19060  003D44  5036               	movf	i2___fttol@exp1,w,c
 19061  003D46  A4D8               	btfss	status,2,c
 19062  003D48  D009               	goto	i2l4960
 19063  003D4A  0E00               	movlw	0
 19064  003D4C  6E28               	movwf	?i2___fttol,c
 19065  003D4E  0E00               	movlw	0
 19066  003D50  6E29               	movwf	?i2___fttol+1,c
 19067  003D52  0E00               	movlw	0
 19068  003D54  6E2A               	movwf	?i2___fttol+2,c
 19069  003D56  0E00               	movlw	0
 19070  003D58  6E2B               	movwf	?i2___fttol+3,c
 19071  003D5A  0012               	return	
 19072  003D5C                     i2l4960:
 19073  003D5C  0E17               	movlw	23
 19074  003D5E  6E2C               	movwf	??i2___fttol& (0+255),c
 19075  003D60  C028  F02D         	movff	i2___fttol@f1,??i2___fttol+1
 19076  003D64  C029  F02E         	movff	i2___fttol@f1+1,??i2___fttol+2
 19077  003D68  C02A  F02F         	movff	i2___fttol@f1+2,??i2___fttol+3
 19078  003D6C  282C               	incf	??i2___fttol,w,c
 19079  003D6E  6E30               	movwf	(??i2___fttol+4)& (0+255),c
 19080  003D70  D004               	goto	i2u466_40
 19081  003D72                     i2u466_45:
 19082  003D72  90D8               	bcf	status,0,c
 19083  003D74  322F               	rrcf	??i2___fttol+3,f,c
 19084  003D76  322E               	rrcf	??i2___fttol+2,f,c
 19085  003D78  322D               	rrcf	??i2___fttol+1,f,c
 19086  003D7A                     i2u466_40:
 19087  003D7A  2E30               	decfsz	(??i2___fttol+4)& (0+255),f,c
 19088  003D7C  D7FA               	goto	i2u466_45
 19089  003D7E  502D               	movf	??i2___fttol+1,w,c
 19090  003D80  6E31               	movwf	i2___fttol@sign1,c
 19091  003D82  8E29               	bsf	i2___fttol@f1+1,7,c
 19092  003D84  0EFF               	movlw	255
 19093  003D86  1628               	andwf	i2___fttol@f1,f,c
 19094  003D88  0EFF               	movlw	255
 19095  003D8A  1629               	andwf	i2___fttol@f1+1,f,c
 19096  003D8C  0E00               	movlw	0
 19097  003D8E  162A               	andwf	i2___fttol@f1+2,f,c
 19098  003D90  5028               	movf	i2___fttol@f1,w,c
 19099  003D92  6E32               	movwf	i2___fttol@lval,c
 19100  003D94  5029               	movf	i2___fttol@f1+1,w,c
 19101  003D96  6E33               	movwf	i2___fttol@lval+1,c
 19102  003D98  502A               	movf	i2___fttol@f1+2,w,c
 19103  003D9A  6E34               	movwf	i2___fttol@lval+2,c
 19104  003D9C  6A35               	clrf	i2___fttol@lval+3,c
 19105  003D9E  0E8E               	movlw	142
 19106  003DA0  5E36               	subwf	i2___fttol@exp1,f,c
 19107  003DA2  AE36               	btfss	i2___fttol@exp1,7,c
 19108  003DA4  D016               	goto	i2l4982
 19109  003DA6  5036               	movf	i2___fttol@exp1,w,c
 19110  003DA8  0A80               	xorlw	128
 19111  003DAA  0F8F               	addlw	143
 19112  003DAC  B0D8               	btfsc	status,0,c
 19113  003DAE  D009               	goto	i2l4978
 19114  003DB0  0E00               	movlw	0
 19115  003DB2  6E28               	movwf	?i2___fttol,c
 19116  003DB4  0E00               	movlw	0
 19117  003DB6  6E29               	movwf	?i2___fttol+1,c
 19118  003DB8  0E00               	movlw	0
 19119  003DBA  6E2A               	movwf	?i2___fttol+2,c
 19120  003DBC  0E00               	movlw	0
 19121  003DBE  6E2B               	movwf	?i2___fttol+3,c
 19122  003DC0  0012               	return	
 19123  003DC2                     i2l4978:
 19124  003DC2  90D8               	bcf	status,0,c
 19125  003DC4  3235               	rrcf	i2___fttol@lval+3,f,c
 19126  003DC6  3234               	rrcf	i2___fttol@lval+2,f,c
 19127  003DC8  3233               	rrcf	i2___fttol@lval+1,f,c
 19128  003DCA  3232               	rrcf	i2___fttol@lval,f,c
 19129  003DCC  3E36               	incfsz	i2___fttol@exp1,f,c
 19130  003DCE  D7F9               	goto	i2l4978
 19131  003DD0  D015               	goto	i2l4992
 19132  003DD2                     i2l4982:
 19133  003DD2  0E17               	movlw	23
 19134  003DD4  6436               	cpfsgt	i2___fttol@exp1,c
 19135  003DD6  D00F               	goto	i2l4990
 19136  003DD8  0E00               	movlw	0
 19137  003DDA  6E28               	movwf	?i2___fttol,c
 19138  003DDC  0E00               	movlw	0
 19139  003DDE  6E29               	movwf	?i2___fttol+1,c
 19140  003DE0  0E00               	movlw	0
 19141  003DE2  6E2A               	movwf	?i2___fttol+2,c
 19142  003DE4  0E00               	movlw	0
 19143  003DE6  6E2B               	movwf	?i2___fttol+3,c
 19144  003DE8  0012               	return	
 19145  003DEA                     i2l4988:
 19146  003DEA  90D8               	bcf	status,0,c
 19147  003DEC  3632               	rlcf	i2___fttol@lval,f,c
 19148  003DEE  3633               	rlcf	i2___fttol@lval+1,f,c
 19149  003DF0  3634               	rlcf	i2___fttol@lval+2,f,c
 19150  003DF2  3635               	rlcf	i2___fttol@lval+3,f,c
 19151  003DF4  0636               	decf	i2___fttol@exp1,f,c
 19152  003DF6                     i2l4990:
 19153  003DF6  5036               	movf	i2___fttol@exp1,w,c
 19154  003DF8  A4D8               	btfss	status,2,c
 19155  003DFA  D7F7               	goto	i2l4988
 19156  003DFC                     i2l4992:
 19157  003DFC  5031               	movf	i2___fttol@sign1,w,c
 19158  003DFE  B4D8               	btfsc	status,2,c
 19159  003E00  D008               	goto	i2l4996
 19160  003E02  1E35               	comf	i2___fttol@lval+3,f,c
 19161  003E04  1E34               	comf	i2___fttol@lval+2,f,c
 19162  003E06  1E33               	comf	i2___fttol@lval+1,f,c
 19163  003E08  6C32               	negf	i2___fttol@lval,c
 19164  003E0A  0E00               	movlw	0
 19165  003E0C  2233               	addwfc	i2___fttol@lval+1,f,c
 19166  003E0E  2234               	addwfc	i2___fttol@lval+2,f,c
 19167  003E10  2235               	addwfc	i2___fttol@lval+3,f,c
 19168  003E12                     i2l4996:
 19169  003E12  C032  F028         	movff	i2___fttol@lval,?i2___fttol
 19170  003E16  C033  F029         	movff	i2___fttol@lval+1,?i2___fttol+1
 19171  003E1A  C034  F02A         	movff	i2___fttol@lval+2,?i2___fttol+2
 19172  003E1E  C035  F02B         	movff	i2___fttol@lval+3,?i2___fttol+3
 19173  003E22  0012               	return	
 19174  003E24                     __end_ofi2___fttol:
 19175                           	opt stack 0
 19176                           pclatu	equ	0xFFB
 19177                           pclath	equ	0xFFA
 19178                           tblptru	equ	0xFF8
 19179                           tblptrh	equ	0xFF7
 19180                           tblptrl	equ	0xFF6
 19181                           tablat	equ	0xFF5
 19182                           prodh	equ	0xFF4
 19183                           prodl	equ	0xFF3
 19184                           intcon	equ	0xFF2
 19185                           intcon2	equ	0xFF1
 19186                           intcon3	equ	0xFF0
 19187                           postinc0	equ	0xFEE
 19188                           fsr0h	equ	0xFEA
 19189                           fsr0l	equ	0xFE9
 19190                           wreg	equ	0xFE8
 19191                           postdec1	equ	0xFE5
 19192                           fsr1h	equ	0xFE2
 19193                           fsr1l	equ	0xFE1
 19194                           indf2	equ	0xFDF
 19195                           postinc2	equ	0xFDE
 19196                           postdec2	equ	0xFDD
 19197                           fsr2h	equ	0xFDA
 19198                           fsr2l	equ	0xFD9
 19199                           status	equ	0xFD8
 19200                           
 19201 ;; *************** function i2___ftge *****************
 19202 ;; Defined at:
 19203 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 19204 ;; Parameters:    Size  Location     Type
 19205 ;;  ff1             3    0[COMRAM] float 
 19206 ;;  ff2             3    3[COMRAM] float 
 19207 ;; Auto vars:     Size  Location     Type
 19208 ;;		None
 19209 ;; Return value:  Size  Location     Type
 19210 ;;		None               void
 19211 ;; Registers used:
 19212 ;;		wreg, status,2, status,0
 19213 ;; Tracked objects:
 19214 ;;		On entry : 0/0
 19215 ;;		On exit  : 0/0
 19216 ;;		Unchanged: 0/0
 19217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19218 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19220 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19221 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19222 ;;Total ram usage:        9 bytes
 19223 ;; Hardware stack levels used:    1
 19224 ;; This function calls:
 19225 ;;		Nothing
 19226 ;; This function is called by:
 19227 ;;		i2_pow
 19228 ;;		i2_exp
 19229 ;;		i2_floor
 19230 ;; This function uses a non-reentrant model
 19231 ;;
 19232                           
 19233                           	psect	text82
 19234  004A76                     __ptext82:
 19235                           	opt stack 0
 19236  004A76                     i2___ftge:
 19237                           	opt stack 18
 19238                           
 19239                           ;incstack = 0
 19240  004A76  AE03               	btfss	i2___ftge@ff1+2,7,c
 19241  004A78  D016               	goto	i2l4892
 19242  004A7A  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 19243  004A7E  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 19244  004A82  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 19245  004A86  1E07               	comf	??i2___ftge,f,c
 19246  004A88  1E08               	comf	??i2___ftge+1,f,c
 19247  004A8A  1E09               	comf	??i2___ftge+2,f,c
 19248  004A8C  2A07               	incf	??i2___ftge,f,c
 19249  004A8E  0E00               	movlw	0
 19250  004A90  2208               	addwfc	??i2___ftge+1,f,c
 19251  004A92  2209               	addwfc	??i2___ftge+2,f,c
 19252  004A94  0E00               	movlw	0
 19253  004A96  2407               	addwf	??i2___ftge,w,c
 19254  004A98  6E01               	movwf	i2___ftge@ff1,c
 19255  004A9A  0E00               	movlw	0
 19256  004A9C  2008               	addwfc	??i2___ftge+1,w,c
 19257  004A9E  6E02               	movwf	i2___ftge@ff1+1,c
 19258  004AA0  0E80               	movlw	128
 19259  004AA2  2009               	addwfc	??i2___ftge+2,w,c
 19260  004AA4  6E03               	movwf	i2___ftge@ff1+2,c
 19261  004AA6                     i2l4892:
 19262  004AA6  AE06               	btfss	i2___ftge@ff2+2,7,c
 19263  004AA8  D016               	goto	i2l4896
 19264  004AAA  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 19265  004AAE  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 19266  004AB2  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 19267  004AB6  1E07               	comf	??i2___ftge,f,c
 19268  004AB8  1E08               	comf	??i2___ftge+1,f,c
 19269  004ABA  1E09               	comf	??i2___ftge+2,f,c
 19270  004ABC  2A07               	incf	??i2___ftge,f,c
 19271  004ABE  0E00               	movlw	0
 19272  004AC0  2208               	addwfc	??i2___ftge+1,f,c
 19273  004AC2  2209               	addwfc	??i2___ftge+2,f,c
 19274  004AC4  0E00               	movlw	0
 19275  004AC6  2407               	addwf	??i2___ftge,w,c
 19276  004AC8  6E04               	movwf	i2___ftge@ff2,c
 19277  004ACA  0E00               	movlw	0
 19278  004ACC  2008               	addwfc	??i2___ftge+1,w,c
 19279  004ACE  6E05               	movwf	i2___ftge@ff2+1,c
 19280  004AD0  0E80               	movlw	128
 19281  004AD2  2009               	addwfc	??i2___ftge+2,w,c
 19282  004AD4  6E06               	movwf	i2___ftge@ff2+2,c
 19283  004AD6                     i2l4896:
 19284  004AD6  0E00               	movlw	0
 19285  004AD8  1A01               	xorwf	i2___ftge@ff1,f,c
 19286  004ADA  0E00               	movlw	0
 19287  004ADC  1A02               	xorwf	i2___ftge@ff1+1,f,c
 19288  004ADE  0E80               	movlw	128
 19289  004AE0  1A03               	xorwf	i2___ftge@ff1+2,f,c
 19290  004AE2  0E00               	movlw	0
 19291  004AE4  1A04               	xorwf	i2___ftge@ff2,f,c
 19292  004AE6  0E00               	movlw	0
 19293  004AE8  1A05               	xorwf	i2___ftge@ff2+1,f,c
 19294  004AEA  0E80               	movlw	128
 19295  004AEC  1A06               	xorwf	i2___ftge@ff2+2,f,c
 19296  004AEE  5004               	movf	i2___ftge@ff2,w,c
 19297  004AF0  5C01               	subwf	i2___ftge@ff1,w,c
 19298  004AF2  5005               	movf	i2___ftge@ff2+1,w,c
 19299  004AF4  5802               	subwfb	i2___ftge@ff1+1,w,c
 19300  004AF6  5006               	movf	i2___ftge@ff2+2,w,c
 19301  004AF8  5803               	subwfb	i2___ftge@ff1+2,w,c
 19302  004AFA  B0D8               	btfsc	status,0,c
 19303  004AFC  D002               	goto	i2l4902
 19304  004AFE  90D8               	bcf	status,0,c
 19305  004B00  0012               	return	
 19306  004B02                     i2l4902:
 19307  004B02  80D8               	bsf	status,0,c
 19308  004B04  0012               	return	
 19309  004B06                     __end_ofi2___ftge:
 19310                           	opt stack 0
 19311                           pclatu	equ	0xFFB
 19312                           pclath	equ	0xFFA
 19313                           tblptru	equ	0xFF8
 19314                           tblptrh	equ	0xFF7
 19315                           tblptrl	equ	0xFF6
 19316                           tablat	equ	0xFF5
 19317                           prodh	equ	0xFF4
 19318                           prodl	equ	0xFF3
 19319                           intcon	equ	0xFF2
 19320                           intcon2	equ	0xFF1
 19321                           intcon3	equ	0xFF0
 19322                           postinc0	equ	0xFEE
 19323                           fsr0h	equ	0xFEA
 19324                           fsr0l	equ	0xFE9
 19325                           wreg	equ	0xFE8
 19326                           postdec1	equ	0xFE5
 19327                           fsr1h	equ	0xFE2
 19328                           fsr1l	equ	0xFE1
 19329                           indf2	equ	0xFDF
 19330                           postinc2	equ	0xFDE
 19331                           postdec2	equ	0xFDD
 19332                           fsr2h	equ	0xFDA
 19333                           fsr2l	equ	0xFD9
 19334                           status	equ	0xFD8
 19335                           
 19336 ;; *************** function i2___altoft *****************
 19337 ;; Defined at:
 19338 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
 19339 ;; Parameters:    Size  Location     Type
 19340 ;;  c               4   54[COMRAM] long 
 19341 ;; Auto vars:     Size  Location     Type
 19342 ;;  __altoft        1   63[COMRAM] unsigned char 
 19343 ;;  __altoft        1   62[COMRAM] unsigned char 
 19344 ;; Return value:  Size  Location     Type
 19345 ;;                  3   54[COMRAM] float 
 19346 ;; Registers used:
 19347 ;;		wreg, status,2, status,0, cstack
 19348 ;; Tracked objects:
 19349 ;;		On entry : 0/0
 19350 ;;		On exit  : 0/0
 19351 ;;		Unchanged: 0/0
 19352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19356 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19357 ;;Total ram usage:       10 bytes
 19358 ;; Hardware stack levels used:    1
 19359 ;; Hardware stack levels required when called:    1
 19360 ;; This function calls:
 19361 ;;		i2___ftpack
 19362 ;; This function is called by:
 19363 ;;		i2_floor
 19364 ;; This function uses a non-reentrant model
 19365 ;;
 19366                           
 19367                           	psect	text83
 19368  004C7E                     __ptext83:
 19369                           	opt stack 0
 19370  004C7E                     i2___altoft:
 19371                           	opt stack 17
 19372                           
 19373                           ;incstack = 0
 19374  004C7E  0E00               	movlw	0
 19375  004C80  6E40               	movwf	i2___altoft@sign,c
 19376  004C82  0E8E               	movlw	142
 19377  004C84  6E3F               	movwf	i2___altoft@exp,c
 19378  004C86  AE3A               	btfss	i2___altoft@c+3,7,c
 19379  004C88  D011               	goto	i2l4812
 19380  004C8A  1E3A               	comf	i2___altoft@c+3,f,c
 19381  004C8C  1E39               	comf	i2___altoft@c+2,f,c
 19382  004C8E  1E38               	comf	i2___altoft@c+1,f,c
 19383  004C90  6C37               	negf	i2___altoft@c,c
 19384  004C92  0E00               	movlw	0
 19385  004C94  2238               	addwfc	i2___altoft@c+1,f,c
 19386  004C96  2239               	addwfc	i2___altoft@c+2,f,c
 19387  004C98  223A               	addwfc	i2___altoft@c+3,f,c
 19388  004C9A  0E01               	movlw	1
 19389  004C9C  6E40               	movwf	i2___altoft@sign,c
 19390  004C9E  D006               	goto	i2l4812
 19391  004CA0                     i2l4810:
 19392  004CA0  90D8               	bcf	status,0,c
 19393  004CA2  323A               	rrcf	i2___altoft@c+3,f,c
 19394  004CA4  3239               	rrcf	i2___altoft@c+2,f,c
 19395  004CA6  3238               	rrcf	i2___altoft@c+1,f,c
 19396  004CA8  3237               	rrcf	i2___altoft@c,f,c
 19397  004CAA  2A3F               	incf	i2___altoft@exp,f,c
 19398  004CAC                     i2l4812:
 19399  004CAC  0E00               	movlw	0
 19400  004CAE  1437               	andwf	i2___altoft@c,w,c
 19401  004CB0  6E3B               	movwf	??i2___altoft& (0+255),c
 19402  004CB2  0E00               	movlw	0
 19403  004CB4  1438               	andwf	i2___altoft@c+1,w,c
 19404  004CB6  6E3C               	movwf	(??i2___altoft+1)& (0+255),c
 19405  004CB8  0E00               	movlw	0
 19406  004CBA  1439               	andwf	i2___altoft@c+2,w,c
 19407  004CBC  6E3D               	movwf	(??i2___altoft+2)& (0+255),c
 19408  004CBE  0EFF               	movlw	255
 19409  004CC0  143A               	andwf	i2___altoft@c+3,w,c
 19410  004CC2  6E3E               	movwf	(??i2___altoft+3)& (0+255),c
 19411  004CC4  503B               	movf	??i2___altoft,w,c
 19412  004CC6  103C               	iorwf	??i2___altoft+1,w,c
 19413  004CC8  103D               	iorwf	??i2___altoft+2,w,c
 19414  004CCA  103E               	iorwf	??i2___altoft+3,w,c
 19415  004CCC  A4D8               	btfss	status,2,c
 19416  004CCE  D7E8               	goto	i2l4810
 19417  004CD0  C037  F001         	movff	i2___altoft@c,i2___ftpack@arg
 19418  004CD4  C038  F002         	movff	i2___altoft@c+1,i2___ftpack@arg+1
 19419  004CD8  C039  F003         	movff	i2___altoft@c+2,i2___ftpack@arg+2
 19420  004CDC  C03F  F004         	movff	i2___altoft@exp,i2___ftpack@exp
 19421  004CE0  C040  F005         	movff	i2___altoft@sign,i2___ftpack@sign
 19422  004CE4  ECFC  F023         	call	i2___ftpack	;wreg free
 19423  004CE8  C001  F037         	movff	?i2___ftpack,?i2___altoft
 19424  004CEC  C002  F038         	movff	?i2___ftpack+1,?i2___altoft+1
 19425  004CF0  C003  F039         	movff	?i2___ftpack+2,?i2___altoft+2
 19426  004CF4  0012               	return	
 19427  004CF6                     __end_ofi2___altoft:
 19428                           	opt stack 0
 19429                           pclatu	equ	0xFFB
 19430                           pclath	equ	0xFFA
 19431                           tblptru	equ	0xFF8
 19432                           tblptrh	equ	0xFF7
 19433                           tblptrl	equ	0xFF6
 19434                           tablat	equ	0xFF5
 19435                           prodh	equ	0xFF4
 19436                           prodl	equ	0xFF3
 19437                           intcon	equ	0xFF2
 19438                           intcon2	equ	0xFF1
 19439                           intcon3	equ	0xFF0
 19440                           postinc0	equ	0xFEE
 19441                           fsr0h	equ	0xFEA
 19442                           fsr0l	equ	0xFE9
 19443                           wreg	equ	0xFE8
 19444                           postdec1	equ	0xFE5
 19445                           fsr1h	equ	0xFE2
 19446                           fsr1l	equ	0xFE1
 19447                           indf2	equ	0xFDF
 19448                           postinc2	equ	0xFDE
 19449                           postdec2	equ	0xFDD
 19450                           fsr2h	equ	0xFDA
 19451                           fsr2l	equ	0xFD9
 19452                           status	equ	0xFD8
 19453                           
 19454 ;; *************** function i2_eval_poly *****************
 19455 ;; Defined at:
 19456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\evalpoly.c"
 19457 ;; Parameters:    Size  Location     Type
 19458 ;;  x               3   39[COMRAM] float 
 19459 ;;  d               2   42[COMRAM] PTR const 
 19460 ;;		 -> log@coeff(27), exp@coeff(30), 
 19461 ;;  n               2   44[COMRAM] int 
 19462 ;; Auto vars:     Size  Location     Type
 19463 ;;  eval_poly       3   48[COMRAM] int 
 19464 ;; Return value:  Size  Location     Type
 19465 ;;                  3   39[COMRAM] int 
 19466 ;; Registers used:
 19467 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19468 ;; Tracked objects:
 19469 ;;		On entry : 0/0
 19470 ;;		On exit  : 0/0
 19471 ;;		Unchanged: 0/0
 19472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19473 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19476 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19477 ;;Total ram usage:       12 bytes
 19478 ;; Hardware stack levels used:    1
 19479 ;; Hardware stack levels required when called:    2
 19480 ;; This function calls:
 19481 ;;		i2___ftadd
 19482 ;;		i2___ftmul
 19483 ;;		i2___wmul
 19484 ;; This function is called by:
 19485 ;;		i2_exp
 19486 ;;		i2_log
 19487 ;; This function uses a non-reentrant model
 19488 ;;
 19489                           
 19490                           	psect	text84
 19491  004370                     __ptext84:
 19492                           	opt stack 0
 19493  004370                     i2_eval_poly:
 19494                           	opt stack 17
 19495                           
 19496                           ;incstack = 0
 19497  004370  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 19498  004374  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 19499  004378  0E00               	movlw	0
 19500  00437A  6E04               	movwf	i2___wmul@multiplicand+1,c
 19501  00437C  0E03               	movlw	3
 19502  00437E  6E03               	movwf	i2___wmul@multiplicand,c
 19503  004380  ECD5  F029         	call	i2___wmul	;wreg free
 19504  004384  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 19505  004388  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 19506  00438C  5001               	movf	?i2___wmul,w,c
 19507  00438E  262F               	addwf	??i2_eval_poly,f,c
 19508  004390  5002               	movf	?i2___wmul+1,w,c
 19509  004392  2230               	addwfc	??i2_eval_poly+1,f,c
 19510  004394  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 19511  004398  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 19512  00439C                     	if	0	;tblptru may be non-zero
 19513  00439C                     	endif
 19514  00439C                     	if	0	;tblptru may be non-zero
 19515  00439C                     	endif
 19516  00439C  0009               	tblrd		*+
 19517  00439E  CFF5 F031          	movff	tablat,i2eval_poly@res
 19518  0043A2  0009               	tblrd		*+
 19519  0043A4  CFF5 F032          	movff	tablat,i2eval_poly@res+1
 19520  0043A8  000A               	tblrd		*-
 19521  0043AA  CFF5 F033          	movff	tablat,i2eval_poly@res+2
 19522  0043AE  D03E               	goto	i2l5252
 19523  0043B0                     i2l5250:
 19524  0043B0  C031  F010         	movff	i2eval_poly@res,i2___ftmul@f2
 19525  0043B4  C032  F011         	movff	i2eval_poly@res+1,i2___ftmul@f2+1
 19526  0043B8  C033  F012         	movff	i2eval_poly@res+2,i2___ftmul@f2+2
 19527  0043BC  C028  F00D         	movff	i2eval_poly@x,i2___ftmul@f1
 19528  0043C0  C029  F00E         	movff	i2eval_poly@x+1,i2___ftmul@f1+1
 19529  0043C4  C02A  F00F         	movff	i2eval_poly@x+2,i2___ftmul@f1+2
 19530  0043C8  EC12  F01F         	call	i2___ftmul	;wreg free
 19531  0043CC  C00D  F01C         	movff	?i2___ftmul,i2___ftadd@f1
 19532  0043D0  C00E  F01D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 19533  0043D4  C00F  F01E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 19534  0043D8  0E00               	movlw	0
 19535  0043DA  6E04               	movwf	i2___wmul@multiplicand+1,c
 19536  0043DC  0E03               	movlw	3
 19537  0043DE  6E03               	movwf	i2___wmul@multiplicand,c
 19538  0043E0  062D               	decf	i2eval_poly@n,f,c
 19539  0043E2  A0D8               	btfss	status,0,c
 19540  0043E4  062E               	decf	i2eval_poly@n+1,f,c
 19541  0043E6  C02D  F001         	movff	i2eval_poly@n,i2___wmul@multiplier
 19542  0043EA  C02E  F002         	movff	i2eval_poly@n+1,i2___wmul@multiplier+1
 19543  0043EE  ECD5  F029         	call	i2___wmul	;wreg free
 19544  0043F2  C02B  F02F         	movff	i2eval_poly@d,??i2_eval_poly
 19545  0043F6  C02C  F030         	movff	i2eval_poly@d+1,??i2_eval_poly+1
 19546  0043FA  5001               	movf	?i2___wmul,w,c
 19547  0043FC  262F               	addwf	??i2_eval_poly,f,c
 19548  0043FE  5002               	movf	?i2___wmul+1,w,c
 19549  004400  2230               	addwfc	??i2_eval_poly+1,f,c
 19550  004402  C02F  FFF6         	movff	??i2_eval_poly,tblptrl
 19551  004406  C030  FFF7         	movff	??i2_eval_poly+1,tblptrh
 19552  00440A                     	if	0	;tblptru may be non-zero
 19553  00440A                     	endif
 19554  00440A                     	if	0	;tblptru may be non-zero
 19555  00440A                     	endif
 19556  00440A  0009               	tblrd		*+
 19557  00440C  CFF5 F01F          	movff	tablat,i2___ftadd@f2
 19558  004410  0009               	tblrd		*+
 19559  004412  CFF5 F020          	movff	tablat,i2___ftadd@f2+1
 19560  004416  000A               	tblrd		*-
 19561  004418  CFF5 F021          	movff	tablat,i2___ftadd@f2+2
 19562  00441C  ECBB  F013         	call	i2___ftadd	;wreg free
 19563  004420  C01C  F031         	movff	?i2___ftadd,i2eval_poly@res
 19564  004424  C01D  F032         	movff	?i2___ftadd+1,i2eval_poly@res+1
 19565  004428  C01E  F033         	movff	?i2___ftadd+2,i2eval_poly@res+2
 19566  00442C                     i2l5252:
 19567  00442C  502D               	movf	i2eval_poly@n,w,c
 19568  00442E  102E               	iorwf	i2eval_poly@n+1,w,c
 19569  004430  A4D8               	btfss	status,2,c
 19570  004432  D7BE               	goto	i2l5250
 19571  004434  C031  F028         	movff	i2eval_poly@res,?i2_eval_poly
 19572  004438  C032  F029         	movff	i2eval_poly@res+1,?i2_eval_poly+1
 19573  00443C  C033  F02A         	movff	i2eval_poly@res+2,?i2_eval_poly+2
 19574  004440  0012               	return		;funcret
 19575  004442                     __end_ofi2_eval_poly:
 19576                           	opt stack 0
 19577                           pclatu	equ	0xFFB
 19578                           pclath	equ	0xFFA
 19579                           tblptru	equ	0xFF8
 19580                           tblptrh	equ	0xFF7
 19581                           tblptrl	equ	0xFF6
 19582                           tablat	equ	0xFF5
 19583                           prodh	equ	0xFF4
 19584                           prodl	equ	0xFF3
 19585                           intcon	equ	0xFF2
 19586                           intcon2	equ	0xFF1
 19587                           intcon3	equ	0xFF0
 19588                           postinc0	equ	0xFEE
 19589                           fsr0h	equ	0xFEA
 19590                           fsr0l	equ	0xFE9
 19591                           wreg	equ	0xFE8
 19592                           postdec1	equ	0xFE5
 19593                           fsr1h	equ	0xFE2
 19594                           fsr1l	equ	0xFE1
 19595                           indf2	equ	0xFDF
 19596                           postinc2	equ	0xFDE
 19597                           postdec2	equ	0xFDD
 19598                           fsr2h	equ	0xFDA
 19599                           fsr2l	equ	0xFD9
 19600                           status	equ	0xFD8
 19601                           
 19602 ;; *************** function i2___wmul *****************
 19603 ;; Defined at:
 19604 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 19605 ;; Parameters:    Size  Location     Type
 19606 ;;  multiplier      2    0[COMRAM] unsigned int 
 19607 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19608 ;; Auto vars:     Size  Location     Type
 19609 ;;  __wmul          2    4[COMRAM] unsigned int 
 19610 ;; Return value:  Size  Location     Type
 19611 ;;                  2    0[COMRAM] unsigned int 
 19612 ;; Registers used:
 19613 ;;		wreg, status,2, status,0, prodl, prodh
 19614 ;; Tracked objects:
 19615 ;;		On entry : 0/0
 19616 ;;		On exit  : 0/0
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19623 ;;Total ram usage:        6 bytes
 19624 ;; Hardware stack levels used:    1
 19625 ;; This function calls:
 19626 ;;		Nothing
 19627 ;; This function is called by:
 19628 ;;		_isr
 19629 ;;		i2_printf
 19630 ;;		i2_eval_poly
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text85
 19635  0053AA                     __ptext85:
 19636                           	opt stack 0
 19637  0053AA                     i2___wmul:
 19638                           	opt stack 21
 19639                           
 19640                           ;incstack = 0
 19641  0053AA  5001               	movf	i2___wmul@multiplier,w,c
 19642  0053AC  0203               	mulwf	i2___wmul@multiplicand,c
 19643  0053AE  CFF3 F005          	movff	prodl,i2___wmul@product
 19644  0053B2  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19645  0053B6  5001               	movf	i2___wmul@multiplier,w,c
 19646  0053B8  0204               	mulwf	i2___wmul@multiplicand+1,c
 19647  0053BA  50F3               	movf	prodl,w,c
 19648  0053BC  2606               	addwf	i2___wmul@product+1,f,c
 19649  0053BE  5002               	movf	i2___wmul@multiplier+1,w,c
 19650  0053C0  0203               	mulwf	i2___wmul@multiplicand,c
 19651  0053C2  50F3               	movf	prodl,w,c
 19652  0053C4  2606               	addwf	i2___wmul@product+1,f,c
 19653  0053C6  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19654  0053CA  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19655  0053CE  0012               	return	
 19656  0053D0                     __end_ofi2___wmul:
 19657                           	opt stack 0
 19658                           pclatu	equ	0xFFB
 19659                           pclath	equ	0xFFA
 19660                           tblptru	equ	0xFF8
 19661                           tblptrh	equ	0xFF7
 19662                           tblptrl	equ	0xFF6
 19663                           tablat	equ	0xFF5
 19664                           prodh	equ	0xFF4
 19665                           prodl	equ	0xFF3
 19666                           intcon	equ	0xFF2
 19667                           intcon2	equ	0xFF1
 19668                           intcon3	equ	0xFF0
 19669                           postinc0	equ	0xFEE
 19670                           fsr0h	equ	0xFEA
 19671                           fsr0l	equ	0xFE9
 19672                           wreg	equ	0xFE8
 19673                           postdec1	equ	0xFE5
 19674                           fsr1h	equ	0xFE2
 19675                           fsr1l	equ	0xFE1
 19676                           indf2	equ	0xFDF
 19677                           postinc2	equ	0xFDE
 19678                           postdec2	equ	0xFDD
 19679                           fsr2h	equ	0xFDA
 19680                           fsr2l	equ	0xFD9
 19681                           status	equ	0xFD8
 19682                           
 19683 ;; *************** function i2___ftmul *****************
 19684 ;; Defined at:
 19685 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
 19686 ;; Parameters:    Size  Location     Type
 19687 ;;  f1              3   12[COMRAM] float 
 19688 ;;  f2              3   15[COMRAM] float 
 19689 ;; Auto vars:     Size  Location     Type
 19690 ;;  __ftmul         3   22[COMRAM] unsigned um
 19691 ;;  __ftmul         1   26[COMRAM] unsigned char 
 19692 ;;  __ftmul         1   25[COMRAM] unsigned char 
 19693 ;;  __ftmul         1   21[COMRAM] unsigned char 
 19694 ;; Return value:  Size  Location     Type
 19695 ;;                  3   12[COMRAM] float 
 19696 ;; Registers used:
 19697 ;;		wreg, status,2, status,0, cstack
 19698 ;; Tracked objects:
 19699 ;;		On entry : 0/0
 19700 ;;		On exit  : 0/0
 19701 ;;		Unchanged: 0/0
 19702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19703 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19704 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19705 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19706 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19707 ;;Total ram usage:       15 bytes
 19708 ;; Hardware stack levels used:    1
 19709 ;; Hardware stack levels required when called:    1
 19710 ;; This function calls:
 19711 ;;		i2___ftpack
 19712 ;; This function is called by:
 19713 ;;		i2_dec_to_hex
 19714 ;;		i2_pow
 19715 ;;		i2_exp
 19716 ;;		i2_log
 19717 ;;		i2_eval_poly
 19718 ;; This function uses a non-reentrant model
 19719 ;;
 19720                           
 19721                           	psect	text86
 19722  003E24                     __ptext86:
 19723                           	opt stack 0
 19724  003E24                     i2___ftmul:
 19725                           	opt stack 17
 19726                           
 19727                           ;incstack = 0
 19728  003E24  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
 19729  003E28  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 19730  003E2A  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 19731  003E2C  340E               	rlcf	i2___ftmul@f1+1,w,c
 19732  003E2E  3613               	rlcf	??i2___ftmul& (0+255),f,c
 19733  003E30  E301               	bnc	u458_41
 19734  003E32  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19735  003E34                     u458_41:
 19736  003E34  5013               	movf	??i2___ftmul,w,c
 19737  003E36  6E16               	movwf	i2___ftmul@exp,c
 19738  003E38  5016               	movf	i2___ftmul@exp,w,c
 19739  003E3A  A4D8               	btfss	status,2,c
 19740  003E3C  D007               	goto	i2l4912
 19741  003E3E  0E00               	movlw	0
 19742  003E40  6E0D               	movwf	?i2___ftmul,c
 19743  003E42  0E00               	movlw	0
 19744  003E44  6E0E               	movwf	?i2___ftmul+1,c
 19745  003E46  0E00               	movlw	0
 19746  003E48  6E0F               	movwf	?i2___ftmul+2,c
 19747  003E4A  0012               	return	
 19748  003E4C                     i2l4912:
 19749  003E4C  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
 19750  003E50  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 19751  003E52  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 19752  003E54  3411               	rlcf	i2___ftmul@f2+1,w,c
 19753  003E56  3613               	rlcf	??i2___ftmul& (0+255),f,c
 19754  003E58  E301               	bnc	u460_41
 19755  003E5A  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 19756  003E5C                     u460_41:
 19757  003E5C  5013               	movf	??i2___ftmul,w,c
 19758  003E5E  6E1B               	movwf	i2___ftmul@sign,c
 19759  003E60  501B               	movf	i2___ftmul@sign,w,c
 19760  003E62  A4D8               	btfss	status,2,c
 19761  003E64  D007               	goto	i2l4918
 19762  003E66  0E00               	movlw	0
 19763  003E68  6E0D               	movwf	?i2___ftmul,c
 19764  003E6A  0E00               	movlw	0
 19765  003E6C  6E0E               	movwf	?i2___ftmul+1,c
 19766  003E6E  0E00               	movlw	0
 19767  003E70  6E0F               	movwf	?i2___ftmul+2,c
 19768  003E72  0012               	return	
 19769  003E74                     i2l4918:
 19770  003E74  501B               	movf	i2___ftmul@sign,w,c
 19771  003E76  0F7B               	addlw	123
 19772  003E78  2616               	addwf	i2___ftmul@exp,f,c
 19773  003E7A  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 19774  003E7E  5012               	movf	i2___ftmul@f2+2,w,c
 19775  003E80  1A1B               	xorwf	i2___ftmul@sign,f,c
 19776  003E82  0E80               	movlw	128
 19777  003E84  161B               	andwf	i2___ftmul@sign,f,c
 19778  003E86  8E0E               	bsf	i2___ftmul@f1+1,7,c
 19779  003E88  8E11               	bsf	i2___ftmul@f2+1,7,c
 19780  003E8A  0EFF               	movlw	255
 19781  003E8C  1610               	andwf	i2___ftmul@f2,f,c
 19782  003E8E  0EFF               	movlw	255
 19783  003E90  1611               	andwf	i2___ftmul@f2+1,f,c
 19784  003E92  0E00               	movlw	0
 19785  003E94  1612               	andwf	i2___ftmul@f2+2,f,c
 19786  003E96  0E00               	movlw	0
 19787  003E98  6E17               	movwf	i2___ftmul@f3_as_product,c
 19788  003E9A  0E00               	movlw	0
 19789  003E9C  6E18               	movwf	i2___ftmul@f3_as_product+1,c
 19790  003E9E  0E00               	movlw	0
 19791  003EA0  6E19               	movwf	i2___ftmul@f3_as_product+2,c
 19792  003EA2  0E07               	movlw	7
 19793  003EA4  6E1A               	movwf	i2___ftmul@cntr,c
 19794  003EA6                     i2l4932:
 19795  003EA6  A00D               	btfss	i2___ftmul@f1,0,c
 19796  003EA8  D006               	goto	i2l4936
 19797  003EAA  5010               	movf	i2___ftmul@f2,w,c
 19798  003EAC  2617               	addwf	i2___ftmul@f3_as_product,f,c
 19799  003EAE  5011               	movf	i2___ftmul@f2+1,w,c
 19800  003EB0  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19801  003EB2  5012               	movf	i2___ftmul@f2+2,w,c
 19802  003EB4  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19803  003EB6                     i2l4936:
 19804  003EB6  90D8               	bcf	status,0,c
 19805  003EB8  320F               	rrcf	i2___ftmul@f1+2,f,c
 19806  003EBA  320E               	rrcf	i2___ftmul@f1+1,f,c
 19807  003EBC  320D               	rrcf	i2___ftmul@f1,f,c
 19808  003EBE  90D8               	bcf	status,0,c
 19809  003EC0  3610               	rlcf	i2___ftmul@f2,f,c
 19810  003EC2  3611               	rlcf	i2___ftmul@f2+1,f,c
 19811  003EC4  3612               	rlcf	i2___ftmul@f2+2,f,c
 19812  003EC6  2E1A               	decfsz	i2___ftmul@cntr,f,c
 19813  003EC8  D7EE               	goto	i2l4932
 19814  003ECA  0E09               	movlw	9
 19815  003ECC  6E1A               	movwf	i2___ftmul@cntr,c
 19816  003ECE                     i2l4942:
 19817  003ECE  A00D               	btfss	i2___ftmul@f1,0,c
 19818  003ED0  D006               	goto	i2l4946
 19819  003ED2  5010               	movf	i2___ftmul@f2,w,c
 19820  003ED4  2617               	addwf	i2___ftmul@f3_as_product,f,c
 19821  003ED6  5011               	movf	i2___ftmul@f2+1,w,c
 19822  003ED8  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 19823  003EDA  5012               	movf	i2___ftmul@f2+2,w,c
 19824  003EDC  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 19825  003EDE                     i2l4946:
 19826  003EDE  90D8               	bcf	status,0,c
 19827  003EE0  320F               	rrcf	i2___ftmul@f1+2,f,c
 19828  003EE2  320E               	rrcf	i2___ftmul@f1+1,f,c
 19829  003EE4  320D               	rrcf	i2___ftmul@f1,f,c
 19830  003EE6  90D8               	bcf	status,0,c
 19831  003EE8  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
 19832  003EEA  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
 19833  003EEC  3217               	rrcf	i2___ftmul@f3_as_product,f,c
 19834  003EEE  2E1A               	decfsz	i2___ftmul@cntr,f,c
 19835  003EF0  D7EE               	goto	i2l4942
 19836  003EF2  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 19837  003EF6  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 19838  003EFA  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 19839  003EFE  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 19840  003F02  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 19841  003F06  ECFC  F023         	call	i2___ftpack	;wreg free
 19842  003F0A  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
 19843  003F0E  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
 19844  003F12  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
 19845  003F16  0012               	return	
 19846  003F18                     __end_ofi2___ftmul:
 19847                           	opt stack 0
 19848                           pclatu	equ	0xFFB
 19849                           pclath	equ	0xFFA
 19850                           tblptru	equ	0xFF8
 19851                           tblptrh	equ	0xFF7
 19852                           tblptrl	equ	0xFF6
 19853                           tablat	equ	0xFF5
 19854                           prodh	equ	0xFF4
 19855                           prodl	equ	0xFF3
 19856                           intcon	equ	0xFF2
 19857                           intcon2	equ	0xFF1
 19858                           intcon3	equ	0xFF0
 19859                           postinc0	equ	0xFEE
 19860                           fsr0h	equ	0xFEA
 19861                           fsr0l	equ	0xFE9
 19862                           wreg	equ	0xFE8
 19863                           postdec1	equ	0xFE5
 19864                           fsr1h	equ	0xFE2
 19865                           fsr1l	equ	0xFE1
 19866                           indf2	equ	0xFDF
 19867                           postinc2	equ	0xFDE
 19868                           postdec2	equ	0xFDD
 19869                           fsr2h	equ	0xFDA
 19870                           fsr2l	equ	0xFD9
 19871                           status	equ	0xFD8
 19872                           
 19873 ;; *************** function i2___ftsub *****************
 19874 ;; Defined at:
 19875 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;  f1              3   39[COMRAM] float 
 19878 ;;  f2              3   42[COMRAM] float 
 19879 ;; Auto vars:     Size  Location     Type
 19880 ;;		None
 19881 ;; Return value:  Size  Location     Type
 19882 ;;                  3   39[COMRAM] float 
 19883 ;; Registers used:
 19884 ;;		wreg, status,2, status,0, cstack
 19885 ;; Tracked objects:
 19886 ;;		On entry : 0/0
 19887 ;;		On exit  : 0/0
 19888 ;;		Unchanged: 0/0
 19889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19890 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;Total ram usage:        6 bytes
 19895 ;; Hardware stack levels used:    1
 19896 ;; Hardware stack levels required when called:    2
 19897 ;; This function calls:
 19898 ;;		i2___ftadd
 19899 ;; This function is called by:
 19900 ;;		i2_exp
 19901 ;; This function uses a non-reentrant model
 19902 ;;
 19903                           
 19904                           	psect	text87
 19905  005166                     __ptext87:
 19906                           	opt stack 0
 19907  005166                     i2___ftsub:
 19908                           	opt stack 17
 19909                           
 19910                           ;incstack = 0
 19911  005166  502B               	movf	i2___ftsub@f2,w,c
 19912  005168  102C               	iorwf	i2___ftsub@f2+1,w,c
 19913  00516A  102D               	iorwf	i2___ftsub@f2+2,w,c
 19914  00516C  B4D8               	btfsc	status,2,c
 19915  00516E  D006               	goto	i2l5184
 19916  005170  0E00               	movlw	0
 19917  005172  1A2B               	xorwf	i2___ftsub@f2,f,c
 19918  005174  0E00               	movlw	0
 19919  005176  1A2C               	xorwf	i2___ftsub@f2+1,f,c
 19920  005178  0E80               	movlw	128
 19921  00517A  1A2D               	xorwf	i2___ftsub@f2+2,f,c
 19922  00517C                     i2l5184:
 19923  00517C  C028  F01C         	movff	i2___ftsub@f1,i2___ftadd@f1
 19924  005180  C029  F01D         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 19925  005184  C02A  F01E         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 19926  005188  C02B  F01F         	movff	i2___ftsub@f2,i2___ftadd@f2
 19927  00518C  C02C  F020         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 19928  005190  C02D  F021         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 19929  005194  ECBB  F013         	call	i2___ftadd	;wreg free
 19930  005198  C01C  F028         	movff	?i2___ftadd,?i2___ftsub
 19931  00519C  C01D  F029         	movff	?i2___ftadd+1,?i2___ftsub+1
 19932  0051A0  C01E  F02A         	movff	?i2___ftadd+2,?i2___ftsub+2
 19933  0051A4  0012               	return	
 19934  0051A6                     __end_ofi2___ftsub:
 19935                           	opt stack 0
 19936                           pclatu	equ	0xFFB
 19937                           pclath	equ	0xFFA
 19938                           tblptru	equ	0xFF8
 19939                           tblptrh	equ	0xFF7
 19940                           tblptrl	equ	0xFF6
 19941                           tablat	equ	0xFF5
 19942                           prodh	equ	0xFF4
 19943                           prodl	equ	0xFF3
 19944                           intcon	equ	0xFF2
 19945                           intcon2	equ	0xFF1
 19946                           intcon3	equ	0xFF0
 19947                           postinc0	equ	0xFEE
 19948                           fsr0h	equ	0xFEA
 19949                           fsr0l	equ	0xFE9
 19950                           wreg	equ	0xFE8
 19951                           postdec1	equ	0xFE5
 19952                           fsr1h	equ	0xFE2
 19953                           fsr1l	equ	0xFE1
 19954                           indf2	equ	0xFDF
 19955                           postinc2	equ	0xFDE
 19956                           postdec2	equ	0xFDD
 19957                           fsr2h	equ	0xFDA
 19958                           fsr2l	equ	0xFD9
 19959                           status	equ	0xFD8
 19960                           
 19961 ;; *************** function i2___ftadd *****************
 19962 ;; Defined at:
 19963 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 19964 ;; Parameters:    Size  Location     Type
 19965 ;;  f1              3   27[COMRAM] float 
 19966 ;;  f2              3   30[COMRAM] float 
 19967 ;; Auto vars:     Size  Location     Type
 19968 ;;  __ftadd         1   38[COMRAM] unsigned char 
 19969 ;;  __ftadd         1   37[COMRAM] unsigned char 
 19970 ;;  __ftadd         1   36[COMRAM] unsigned char 
 19971 ;; Return value:  Size  Location     Type
 19972 ;;                  3   27[COMRAM] float 
 19973 ;; Registers used:
 19974 ;;		wreg, status,2, status,0, cstack
 19975 ;; Tracked objects:
 19976 ;;		On entry : 0/0
 19977 ;;		On exit  : 0/0
 19978 ;;		Unchanged: 0/0
 19979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19981 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19983 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19984 ;;Total ram usage:       12 bytes
 19985 ;; Hardware stack levels used:    1
 19986 ;; Hardware stack levels required when called:    1
 19987 ;; This function calls:
 19988 ;;		i2___ftpack
 19989 ;; This function is called by:
 19990 ;;		i2_dec_to_hex
 19991 ;;		i2___ftsub
 19992 ;;		i2_floor
 19993 ;;		i2_log
 19994 ;;		i2_eval_poly
 19995 ;; This function uses a non-reentrant model
 19996 ;;
 19997                           
 19998                           	psect	text88
 19999  002776                     __ptext88:
 20000                           	opt stack 0
 20001  002776                     i2___ftadd:
 20002                           	opt stack 17
 20003                           
 20004                           ;incstack = 0
 20005  002776  C01E  F022         	movff	i2___ftadd@f1+2,??i2___ftadd
 20006  00277A  6A23               	clrf	(??i2___ftadd+1)& (0+255),c
 20007  00277C  6A24               	clrf	(??i2___ftadd+2)& (0+255),c
 20008  00277E  341D               	rlcf	i2___ftadd@f1+1,w,c
 20009  002780  3622               	rlcf	??i2___ftadd& (0+255),f,c
 20010  002782  E301               	bnc	u434_41
 20011  002784  8023               	bsf	(??i2___ftadd+1)& (0+255),0,c
 20012  002786                     u434_41:
 20013  002786  5022               	movf	??i2___ftadd,w,c
 20014  002788  6E27               	movwf	i2___ftadd@exp1,c
 20015  00278A  C021  F022         	movff	i2___ftadd@f2+2,??i2___ftadd
 20016  00278E  6A23               	clrf	(??i2___ftadd+1)& (0+255),c
 20017  002790  6A24               	clrf	(??i2___ftadd+2)& (0+255),c
 20018  002792  3420               	rlcf	i2___ftadd@f2+1,w,c
 20019  002794  3622               	rlcf	??i2___ftadd& (0+255),f,c
 20020  002796  E301               	bnc	u435_41
 20021  002798  8023               	bsf	(??i2___ftadd+1)& (0+255),0,c
 20022  00279A                     u435_41:
 20023  00279A  5022               	movf	??i2___ftadd,w,c
 20024  00279C  6E26               	movwf	i2___ftadd@exp2,c
 20025  00279E  5027               	movf	i2___ftadd@exp1,w,c
 20026  0027A0  B4D8               	btfsc	status,2,c
 20027  0027A2  D00B               	goto	i2l922
 20028  0027A4  5026               	movf	i2___ftadd@exp2,w,c
 20029  0027A6  5C27               	subwf	i2___ftadd@exp1,w,c
 20030  0027A8  B0D8               	btfsc	status,0,c
 20031  0027AA  D00E               	goto	i2l4826
 20032  0027AC  5027               	movf	i2___ftadd@exp1,w,c
 20033  0027AE  0800               	sublw	0
 20034  0027B0  2426               	addwf	i2___ftadd@exp2,w,c
 20035  0027B2  6E22               	movwf	??i2___ftadd& (0+255),c
 20036  0027B4  0E18               	movlw	24
 20037  0027B6  6422               	cpfsgt	??i2___ftadd,c
 20038  0027B8  D007               	goto	i2l4826
 20039  0027BA                     i2l922:
 20040  0027BA  C01F  F01C         	movff	i2___ftadd@f2,?i2___ftadd
 20041  0027BE  C020  F01D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 20042  0027C2  C021  F01E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 20043  0027C6  0012               	return	
 20044  0027C8                     i2l4826:
 20045  0027C8  5026               	movf	i2___ftadd@exp2,w,c
 20046  0027CA  B4D8               	btfsc	status,2,c
 20047  0027CC  D00B               	goto	i2l926
 20048  0027CE  5027               	movf	i2___ftadd@exp1,w,c
 20049  0027D0  5C26               	subwf	i2___ftadd@exp2,w,c
 20050  0027D2  B0D8               	btfsc	status,0,c
 20051  0027D4  D00E               	goto	i2l4832
 20052  0027D6  5026               	movf	i2___ftadd@exp2,w,c
 20053  0027D8  0800               	sublw	0
 20054  0027DA  2427               	addwf	i2___ftadd@exp1,w,c
 20055  0027DC  6E22               	movwf	??i2___ftadd& (0+255),c
 20056  0027DE  0E18               	movlw	24
 20057  0027E0  6422               	cpfsgt	??i2___ftadd,c
 20058  0027E2  D007               	goto	i2l4832
 20059  0027E4                     i2l926:
 20060  0027E4  C01C  F01C         	movff	i2___ftadd@f1,?i2___ftadd
 20061  0027E8  C01D  F01D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 20062  0027EC  C01E  F01E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 20063  0027F0  0012               	return	
 20064  0027F2                     i2l4832:
 20065  0027F2  0E06               	movlw	6
 20066  0027F4  6E25               	movwf	i2___ftadd@sign,c
 20067  0027F6  BE1E               	btfsc	i2___ftadd@f1+2,7,c
 20068  0027F8  8E25               	bsf	i2___ftadd@sign,7,c
 20069  0027FA  BE21               	btfsc	i2___ftadd@f2+2,7,c
 20070  0027FC  8C25               	bsf	i2___ftadd@sign,6,c
 20071  0027FE  8E1D               	bsf	i2___ftadd@f1+1,7,c
 20072  002800  0EFF               	movlw	255
 20073  002802  161C               	andwf	i2___ftadd@f1,f,c
 20074  002804  0EFF               	movlw	255
 20075  002806  161D               	andwf	i2___ftadd@f1+1,f,c
 20076  002808  0E00               	movlw	0
 20077  00280A  161E               	andwf	i2___ftadd@f1+2,f,c
 20078  00280C  8E20               	bsf	i2___ftadd@f2+1,7,c
 20079  00280E  0EFF               	movlw	255
 20080  002810  161F               	andwf	i2___ftadd@f2,f,c
 20081  002812  0EFF               	movlw	255
 20082  002814  1620               	andwf	i2___ftadd@f2+1,f,c
 20083  002816  0E00               	movlw	0
 20084  002818  1621               	andwf	i2___ftadd@f2+2,f,c
 20085  00281A  5026               	movf	i2___ftadd@exp2,w,c
 20086  00281C  5C27               	subwf	i2___ftadd@exp1,w,c
 20087  00281E  B0D8               	btfsc	status,0,c
 20088  002820  D01B               	goto	i2l4858
 20089  002822                     i2l4848:
 20090  002822  90D8               	bcf	status,0,c
 20091  002824  361F               	rlcf	i2___ftadd@f2,f,c
 20092  002826  3620               	rlcf	i2___ftadd@f2+1,f,c
 20093  002828  3621               	rlcf	i2___ftadd@f2+2,f,c
 20094  00282A  0626               	decf	i2___ftadd@exp2,f,c
 20095  00282C  5027               	movf	i2___ftadd@exp1,w,c
 20096  00282E  1826               	xorwf	i2___ftadd@exp2,w,c
 20097  002830  B4D8               	btfsc	status,2,c
 20098  002832  D00D               	goto	i2l4856
 20099  002834  0625               	decf	i2___ftadd@sign,f,c
 20100  002836  C025  F022         	movff	i2___ftadd@sign,??i2___ftadd
 20101  00283A  0E07               	movlw	7
 20102  00283C  1622               	andwf	??i2___ftadd,f,c
 20103  00283E  B4D8               	btfsc	status,2,c
 20104  002840  D006               	goto	i2l4856
 20105  002842  D7EF               	goto	i2l4848
 20106  002844                     i2l4854:
 20107  002844  90D8               	bcf	status,0,c
 20108  002846  321E               	rrcf	i2___ftadd@f1+2,f,c
 20109  002848  321D               	rrcf	i2___ftadd@f1+1,f,c
 20110  00284A  321C               	rrcf	i2___ftadd@f1,f,c
 20111  00284C  2A27               	incf	i2___ftadd@exp1,f,c
 20112  00284E                     i2l4856:
 20113  00284E  5026               	movf	i2___ftadd@exp2,w,c
 20114  002850  1827               	xorwf	i2___ftadd@exp1,w,c
 20115  002852  B4D8               	btfsc	status,2,c
 20116  002854  D01F               	goto	i2l937
 20117  002856  D7F6               	goto	i2l4854
 20118  002858                     i2l4858:
 20119  002858  5027               	movf	i2___ftadd@exp1,w,c
 20120  00285A  5C26               	subwf	i2___ftadd@exp2,w,c
 20121  00285C  B0D8               	btfsc	status,0,c
 20122  00285E  D01A               	goto	i2l937
 20123  002860                     i2l4860:
 20124  002860  90D8               	bcf	status,0,c
 20125  002862  361C               	rlcf	i2___ftadd@f1,f,c
 20126  002864  361D               	rlcf	i2___ftadd@f1+1,f,c
 20127  002866  361E               	rlcf	i2___ftadd@f1+2,f,c
 20128  002868  0627               	decf	i2___ftadd@exp1,f,c
 20129  00286A  5027               	movf	i2___ftadd@exp1,w,c
 20130  00286C  1826               	xorwf	i2___ftadd@exp2,w,c
 20131  00286E  B4D8               	btfsc	status,2,c
 20132  002870  D00D               	goto	i2l4868
 20133  002872  0625               	decf	i2___ftadd@sign,f,c
 20134  002874  C025  F022         	movff	i2___ftadd@sign,??i2___ftadd
 20135  002878  0E07               	movlw	7
 20136  00287A  1622               	andwf	??i2___ftadd,f,c
 20137  00287C  B4D8               	btfsc	status,2,c
 20138  00287E  D006               	goto	i2l4868
 20139  002880  D7EF               	goto	i2l4860
 20140  002882                     i2l4866:
 20141  002882  90D8               	bcf	status,0,c
 20142  002884  3221               	rrcf	i2___ftadd@f2+2,f,c
 20143  002886  3220               	rrcf	i2___ftadd@f2+1,f,c
 20144  002888  321F               	rrcf	i2___ftadd@f2,f,c
 20145  00288A  2A26               	incf	i2___ftadd@exp2,f,c
 20146  00288C                     i2l4868:
 20147  00288C  5026               	movf	i2___ftadd@exp2,w,c
 20148  00288E  1827               	xorwf	i2___ftadd@exp1,w,c
 20149  002890  A4D8               	btfss	status,2,c
 20150  002892  D7F7               	goto	i2l4866
 20151  002894                     i2l937:
 20152  002894  AE25               	btfss	i2___ftadd@sign,7,c
 20153  002896  D00C               	goto	i2l946
 20154  002898  0EFF               	movlw	255
 20155  00289A  1A1C               	xorwf	i2___ftadd@f1,f,c
 20156  00289C  0EFF               	movlw	255
 20157  00289E  1A1D               	xorwf	i2___ftadd@f1+1,f,c
 20158  0028A0  0EFF               	movlw	255
 20159  0028A2  1A1E               	xorwf	i2___ftadd@f1+2,f,c
 20160  0028A4  0E01               	movlw	1
 20161  0028A6  261C               	addwf	i2___ftadd@f1,f,c
 20162  0028A8  0E00               	movlw	0
 20163  0028AA  221D               	addwfc	i2___ftadd@f1+1,f,c
 20164  0028AC  0E00               	movlw	0
 20165  0028AE  221E               	addwfc	i2___ftadd@f1+2,f,c
 20166  0028B0                     i2l946:
 20167  0028B0  AC25               	btfss	i2___ftadd@sign,6,c
 20168  0028B2  D00C               	goto	i2l4874
 20169  0028B4  0EFF               	movlw	255
 20170  0028B6  1A1F               	xorwf	i2___ftadd@f2,f,c
 20171  0028B8  0EFF               	movlw	255
 20172  0028BA  1A20               	xorwf	i2___ftadd@f2+1,f,c
 20173  0028BC  0EFF               	movlw	255
 20174  0028BE  1A21               	xorwf	i2___ftadd@f2+2,f,c
 20175  0028C0  0E01               	movlw	1
 20176  0028C2  261F               	addwf	i2___ftadd@f2,f,c
 20177  0028C4  0E00               	movlw	0
 20178  0028C6  2220               	addwfc	i2___ftadd@f2+1,f,c
 20179  0028C8  0E00               	movlw	0
 20180  0028CA  2221               	addwfc	i2___ftadd@f2+2,f,c
 20181  0028CC                     i2l4874:
 20182  0028CC  0E00               	movlw	0
 20183  0028CE  6E25               	movwf	i2___ftadd@sign,c
 20184  0028D0  501C               	movf	i2___ftadd@f1,w,c
 20185  0028D2  261F               	addwf	i2___ftadd@f2,f,c
 20186  0028D4  501D               	movf	i2___ftadd@f1+1,w,c
 20187  0028D6  2220               	addwfc	i2___ftadd@f2+1,f,c
 20188  0028D8  501E               	movf	i2___ftadd@f1+2,w,c
 20189  0028DA  2221               	addwfc	i2___ftadd@f2+2,f,c
 20190  0028DC  AE21               	btfss	i2___ftadd@f2+2,7,c
 20191  0028DE  D00E               	goto	i2l4884
 20192  0028E0  0EFF               	movlw	255
 20193  0028E2  1A1F               	xorwf	i2___ftadd@f2,f,c
 20194  0028E4  0EFF               	movlw	255
 20195  0028E6  1A20               	xorwf	i2___ftadd@f2+1,f,c
 20196  0028E8  0EFF               	movlw	255
 20197  0028EA  1A21               	xorwf	i2___ftadd@f2+2,f,c
 20198  0028EC  0E01               	movlw	1
 20199  0028EE  261F               	addwf	i2___ftadd@f2,f,c
 20200  0028F0  0E00               	movlw	0
 20201  0028F2  2220               	addwfc	i2___ftadd@f2+1,f,c
 20202  0028F4  0E00               	movlw	0
 20203  0028F6  2221               	addwfc	i2___ftadd@f2+2,f,c
 20204  0028F8  0E01               	movlw	1
 20205  0028FA  6E25               	movwf	i2___ftadd@sign,c
 20206  0028FC                     i2l4884:
 20207  0028FC  C01F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 20208  002900  C020  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 20209  002904  C021  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 20210  002908  C027  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 20211  00290C  C025  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 20212  002910  ECFC  F023         	call	i2___ftpack	;wreg free
 20213  002914  C001  F01C         	movff	?i2___ftpack,?i2___ftadd
 20214  002918  C002  F01D         	movff	?i2___ftpack+1,?i2___ftadd+1
 20215  00291C  C003  F01E         	movff	?i2___ftpack+2,?i2___ftadd+2
 20216  002920  0012               	return	
 20217  002922                     __end_ofi2___ftadd:
 20218                           	opt stack 0
 20219                           pclatu	equ	0xFFB
 20220                           pclath	equ	0xFFA
 20221                           tblptru	equ	0xFF8
 20222                           tblptrh	equ	0xFF7
 20223                           tblptrl	equ	0xFF6
 20224                           tablat	equ	0xFF5
 20225                           prodh	equ	0xFF4
 20226                           prodl	equ	0xFF3
 20227                           intcon	equ	0xFF2
 20228                           intcon2	equ	0xFF1
 20229                           intcon3	equ	0xFF0
 20230                           postinc0	equ	0xFEE
 20231                           fsr0h	equ	0xFEA
 20232                           fsr0l	equ	0xFE9
 20233                           wreg	equ	0xFE8
 20234                           postdec1	equ	0xFE5
 20235                           fsr1h	equ	0xFE2
 20236                           fsr1l	equ	0xFE1
 20237                           indf2	equ	0xFDF
 20238                           postinc2	equ	0xFDE
 20239                           postdec2	equ	0xFDD
 20240                           fsr2h	equ	0xFDA
 20241                           fsr2l	equ	0xFD9
 20242                           status	equ	0xFD8
 20243                           
 20244 ;; *************** function i2___ftneg *****************
 20245 ;; Defined at:
 20246 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 20247 ;; Parameters:    Size  Location     Type
 20248 ;;  f1              3    0[COMRAM] float 
 20249 ;; Auto vars:     Size  Location     Type
 20250 ;;		None
 20251 ;; Return value:  Size  Location     Type
 20252 ;;                  3    0[COMRAM] float 
 20253 ;; Registers used:
 20254 ;;		wreg, status,2, status,0
 20255 ;; Tracked objects:
 20256 ;;		On entry : 0/0
 20257 ;;		On exit  : 0/0
 20258 ;;		Unchanged: 0/0
 20259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20264 ;;Total ram usage:        3 bytes
 20265 ;; Hardware stack levels used:    1
 20266 ;; This function calls:
 20267 ;;		Nothing
 20268 ;; This function is called by:
 20269 ;;		i2_pow
 20270 ;;		i2_exp
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           	psect	text89
 20275  0053D0                     __ptext89:
 20276                           	opt stack 0
 20277  0053D0                     i2___ftneg:
 20278                           	opt stack 19
 20279                           
 20280                           ;incstack = 0
 20281  0053D0  5001               	movf	i2___ftneg@f1,w,c
 20282  0053D2  1002               	iorwf	i2___ftneg@f1+1,w,c
 20283  0053D4  1003               	iorwf	i2___ftneg@f1+2,w,c
 20284  0053D6  B4D8               	btfsc	status,2,c
 20285  0053D8  D006               	goto	i2l979
 20286  0053DA  0E00               	movlw	0
 20287  0053DC  1A01               	xorwf	i2___ftneg@f1,f,c
 20288  0053DE  0E00               	movlw	0
 20289  0053E0  1A02               	xorwf	i2___ftneg@f1+1,f,c
 20290  0053E2  0E80               	movlw	128
 20291  0053E4  1A03               	xorwf	i2___ftneg@f1+2,f,c
 20292  0053E6                     i2l979:
 20293  0053E6  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 20294  0053EA  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 20295  0053EE  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 20296  0053F2  0012               	return		;funcret
 20297  0053F4                     __end_ofi2___ftneg:
 20298                           	opt stack 0
 20299                           pclatu	equ	0xFFB
 20300                           pclath	equ	0xFFA
 20301                           tblptru	equ	0xFF8
 20302                           tblptrh	equ	0xFF7
 20303                           tblptrl	equ	0xFF6
 20304                           tablat	equ	0xFF5
 20305                           prodh	equ	0xFF4
 20306                           prodl	equ	0xFF3
 20307                           intcon	equ	0xFF2
 20308                           intcon2	equ	0xFF1
 20309                           intcon3	equ	0xFF0
 20310                           postinc0	equ	0xFEE
 20311                           fsr0h	equ	0xFEA
 20312                           fsr0l	equ	0xFE9
 20313                           wreg	equ	0xFE8
 20314                           postdec1	equ	0xFE5
 20315                           fsr1h	equ	0xFE2
 20316                           fsr1l	equ	0xFE1
 20317                           indf2	equ	0xFDF
 20318                           postinc2	equ	0xFDE
 20319                           postdec2	equ	0xFDD
 20320                           fsr2h	equ	0xFDA
 20321                           fsr2l	equ	0xFD9
 20322                           status	equ	0xFD8
 20323                           
 20324 ;; *************** function i2___ftdiv *****************
 20325 ;; Defined at:
 20326 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
 20327 ;; Parameters:    Size  Location     Type
 20328 ;;  f1              3    8[COMRAM] float 
 20329 ;;  f2              3   11[COMRAM] float 
 20330 ;; Auto vars:     Size  Location     Type
 20331 ;;  __ftdiv         3   18[COMRAM] float 
 20332 ;;  __ftdiv         1   22[COMRAM] unsigned char 
 20333 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 20334 ;;  __ftdiv         1   17[COMRAM] unsigned char 
 20335 ;; Return value:  Size  Location     Type
 20336 ;;                  3    8[COMRAM] float 
 20337 ;; Registers used:
 20338 ;;		wreg, status,2, status,0, cstack
 20339 ;; Tracked objects:
 20340 ;;		On entry : 0/0
 20341 ;;		On exit  : 0/0
 20342 ;;		Unchanged: 0/0
 20343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20345 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20346 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20347 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20348 ;;Total ram usage:       15 bytes
 20349 ;; Hardware stack levels used:    1
 20350 ;; Hardware stack levels required when called:    1
 20351 ;; This function calls:
 20352 ;;		i2___ftpack
 20353 ;; This function is called by:
 20354 ;;		i2_exp
 20355 ;; This function uses a non-reentrant model
 20356 ;;
 20357                           
 20358                           	psect	text90
 20359  004004                     __ptext90:
 20360                           	opt stack 0
 20361  004004                     i2___ftdiv:
 20362                           	opt stack 18
 20363                           
 20364                           ;incstack = 0
 20365  004004  C00B  F00F         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 20366  004008  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 20367  00400A  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 20368  00400C  340A               	rlcf	i2___ftdiv@f1+1,w,c
 20369  00400E  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 20370  004010  E301               	bnc	u488_41
 20371  004012  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 20372  004014                     u488_41:
 20373  004014  500F               	movf	??i2___ftdiv,w,c
 20374  004016  6E16               	movwf	i2___ftdiv@exp,c
 20375  004018  5016               	movf	i2___ftdiv@exp,w,c
 20376  00401A  A4D8               	btfss	status,2,c
 20377  00401C  D007               	goto	i2l5136
 20378  00401E  0E00               	movlw	0
 20379  004020  6E09               	movwf	?i2___ftdiv,c
 20380  004022  0E00               	movlw	0
 20381  004024  6E0A               	movwf	?i2___ftdiv+1,c
 20382  004026  0E00               	movlw	0
 20383  004028  6E0B               	movwf	?i2___ftdiv+2,c
 20384  00402A  0012               	return	
 20385  00402C                     i2l5136:
 20386  00402C  C00E  F00F         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 20387  004030  6A10               	clrf	(??i2___ftdiv+1)& (0+255),c
 20388  004032  6A11               	clrf	(??i2___ftdiv+2)& (0+255),c
 20389  004034  340D               	rlcf	i2___ftdiv@f2+1,w,c
 20390  004036  360F               	rlcf	??i2___ftdiv& (0+255),f,c
 20391  004038  E301               	bnc	u490_41
 20392  00403A  8010               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 20393  00403C                     u490_41:
 20394  00403C  500F               	movf	??i2___ftdiv,w,c
 20395  00403E  6E17               	movwf	i2___ftdiv@sign,c
 20396  004040  5017               	movf	i2___ftdiv@sign,w,c
 20397  004042  A4D8               	btfss	status,2,c
 20398  004044  D007               	goto	i2l5142
 20399  004046  0E00               	movlw	0
 20400  004048  6E09               	movwf	?i2___ftdiv,c
 20401  00404A  0E00               	movlw	0
 20402  00404C  6E0A               	movwf	?i2___ftdiv+1,c
 20403  00404E  0E00               	movlw	0
 20404  004050  6E0B               	movwf	?i2___ftdiv+2,c
 20405  004052  0012               	return	
 20406  004054                     i2l5142:
 20407  004054  0E00               	movlw	0
 20408  004056  6E13               	movwf	i2___ftdiv@f3,c
 20409  004058  0E00               	movlw	0
 20410  00405A  6E14               	movwf	i2___ftdiv@f3+1,c
 20411  00405C  0E00               	movlw	0
 20412  00405E  6E15               	movwf	i2___ftdiv@f3+2,c
 20413  004060  5017               	movf	i2___ftdiv@sign,w,c
 20414  004062  0F89               	addlw	137
 20415  004064  5E16               	subwf	i2___ftdiv@exp,f,c
 20416  004066  C00B  F017         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 20417  00406A  500E               	movf	i2___ftdiv@f2+2,w,c
 20418  00406C  1A17               	xorwf	i2___ftdiv@sign,f,c
 20419  00406E  0E80               	movlw	128
 20420  004070  1617               	andwf	i2___ftdiv@sign,f,c
 20421  004072  8E0A               	bsf	i2___ftdiv@f1+1,7,c
 20422  004074  0EFF               	movlw	255
 20423  004076  1609               	andwf	i2___ftdiv@f1,f,c
 20424  004078  0EFF               	movlw	255
 20425  00407A  160A               	andwf	i2___ftdiv@f1+1,f,c
 20426  00407C  0E00               	movlw	0
 20427  00407E  160B               	andwf	i2___ftdiv@f1+2,f,c
 20428  004080  8E0D               	bsf	i2___ftdiv@f2+1,7,c
 20429  004082  0EFF               	movlw	255
 20430  004084  160C               	andwf	i2___ftdiv@f2,f,c
 20431  004086  0EFF               	movlw	255
 20432  004088  160D               	andwf	i2___ftdiv@f2+1,f,c
 20433  00408A  0E00               	movlw	0
 20434  00408C  160E               	andwf	i2___ftdiv@f2+2,f,c
 20435  00408E  0E18               	movlw	24
 20436  004090  6E12               	movwf	i2___ftdiv@cntr,c
 20437  004092                     i2l5162:
 20438  004092  90D8               	bcf	status,0,c
 20439  004094  3613               	rlcf	i2___ftdiv@f3,f,c
 20440  004096  3614               	rlcf	i2___ftdiv@f3+1,f,c
 20441  004098  3615               	rlcf	i2___ftdiv@f3+2,f,c
 20442  00409A  500C               	movf	i2___ftdiv@f2,w,c
 20443  00409C  5C09               	subwf	i2___ftdiv@f1,w,c
 20444  00409E  500D               	movf	i2___ftdiv@f2+1,w,c
 20445  0040A0  580A               	subwfb	i2___ftdiv@f1+1,w,c
 20446  0040A2  500E               	movf	i2___ftdiv@f2+2,w,c
 20447  0040A4  580B               	subwfb	i2___ftdiv@f1+2,w,c
 20448  0040A6  A0D8               	btfss	status,0,c
 20449  0040A8  D007               	goto	i2l957
 20450  0040AA  500C               	movf	i2___ftdiv@f2,w,c
 20451  0040AC  5E09               	subwf	i2___ftdiv@f1,f,c
 20452  0040AE  500D               	movf	i2___ftdiv@f2+1,w,c
 20453  0040B0  5A0A               	subwfb	i2___ftdiv@f1+1,f,c
 20454  0040B2  500E               	movf	i2___ftdiv@f2+2,w,c
 20455  0040B4  5A0B               	subwfb	i2___ftdiv@f1+2,f,c
 20456  0040B6  8013               	bsf	i2___ftdiv@f3,0,c
 20457  0040B8                     i2l957:
 20458  0040B8  90D8               	bcf	status,0,c
 20459  0040BA  3609               	rlcf	i2___ftdiv@f1,f,c
 20460  0040BC  360A               	rlcf	i2___ftdiv@f1+1,f,c
 20461  0040BE  360B               	rlcf	i2___ftdiv@f1+2,f,c
 20462  0040C0  2E12               	decfsz	i2___ftdiv@cntr,f,c
 20463  0040C2  D7E7               	goto	i2l5162
 20464  0040C4  C013  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 20465  0040C8  C014  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 20466  0040CC  C015  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 20467  0040D0  C016  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 20468  0040D4  C017  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 20469  0040D8  ECFC  F023         	call	i2___ftpack	;wreg free
 20470  0040DC  C001  F009         	movff	?i2___ftpack,?i2___ftdiv
 20471  0040E0  C002  F00A         	movff	?i2___ftpack+1,?i2___ftdiv+1
 20472  0040E4  C003  F00B         	movff	?i2___ftpack+2,?i2___ftdiv+2
 20473  0040E8  0012               	return	
 20474  0040EA                     __end_ofi2___ftdiv:
 20475                           	opt stack 0
 20476                           pclatu	equ	0xFFB
 20477                           pclath	equ	0xFFA
 20478                           tblptru	equ	0xFF8
 20479                           tblptrh	equ	0xFF7
 20480                           tblptrl	equ	0xFF6
 20481                           tablat	equ	0xFF5
 20482                           prodh	equ	0xFF4
 20483                           prodl	equ	0xFF3
 20484                           intcon	equ	0xFF2
 20485                           intcon2	equ	0xFF1
 20486                           intcon3	equ	0xFF0
 20487                           postinc0	equ	0xFEE
 20488                           fsr0h	equ	0xFEA
 20489                           fsr0l	equ	0xFE9
 20490                           wreg	equ	0xFE8
 20491                           postdec1	equ	0xFE5
 20492                           fsr1h	equ	0xFE2
 20493                           fsr1l	equ	0xFE1
 20494                           indf2	equ	0xFDF
 20495                           postinc2	equ	0xFDE
 20496                           postdec2	equ	0xFDD
 20497                           fsr2h	equ	0xFDA
 20498                           fsr2l	equ	0xFD9
 20499                           status	equ	0xFD8
 20500                           
 20501 ;; *************** function i2___awtoft *****************
 20502 ;; Defined at:
 20503 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;  c               2    8[COMRAM] int 
 20506 ;; Auto vars:     Size  Location     Type
 20507 ;;  __awtoft        1   11[COMRAM] unsigned char 
 20508 ;; Return value:  Size  Location     Type
 20509 ;;                  3    8[COMRAM] float 
 20510 ;; Registers used:
 20511 ;;		wreg, status,2, status,0, cstack
 20512 ;; Tracked objects:
 20513 ;;		On entry : 0/0
 20514 ;;		On exit  : 0/0
 20515 ;;		Unchanged: 0/0
 20516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20517 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20521 ;;Total ram usage:        4 bytes
 20522 ;; Hardware stack levels used:    1
 20523 ;; Hardware stack levels required when called:    1
 20524 ;; This function calls:
 20525 ;;		i2___ftpack
 20526 ;; This function is called by:
 20527 ;;		i2_dec_to_hex
 20528 ;;		i2_exp
 20529 ;;		i2_log
 20530 ;; This function uses a non-reentrant model
 20531 ;;
 20532                           
 20533                           	psect	text91
 20534  0051E0                     __ptext91:
 20535                           	opt stack 0
 20536  0051E0                     i2___awtoft:
 20537                           	opt stack 18
 20538                           
 20539                           ;incstack = 0
 20540  0051E0  0E00               	movlw	0
 20541  0051E2  6E0C               	movwf	i2___awtoft@sign,c
 20542  0051E4  AE0A               	btfss	i2___awtoft@c+1,7,c
 20543  0051E6  D006               	goto	i2l5126
 20544  0051E8  6C09               	negf	i2___awtoft@c,c
 20545  0051EA  1E0A               	comf	i2___awtoft@c+1,f,c
 20546  0051EC  B0D8               	btfsc	status,0,c
 20547  0051EE  2A0A               	incf	i2___awtoft@c+1,f,c
 20548  0051F0  0E01               	movlw	1
 20549  0051F2  6E0C               	movwf	i2___awtoft@sign,c
 20550  0051F4                     i2l5126:
 20551  0051F4  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 20552  0051F8  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 20553  0051FC  6A03               	clrf	i2___ftpack@arg+2,c
 20554  0051FE  0E8E               	movlw	142
 20555  005200  6E04               	movwf	i2___ftpack@exp,c
 20556  005202  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 20557  005206  ECFC  F023         	call	i2___ftpack	;wreg free
 20558  00520A  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 20559  00520E  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 20560  005212  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 20561  005216  0012               	return	
 20562  005218                     __end_ofi2___awtoft:
 20563                           	opt stack 0
 20564                           pclatu	equ	0xFFB
 20565                           pclath	equ	0xFFA
 20566                           tblptru	equ	0xFF8
 20567                           tblptrh	equ	0xFF7
 20568                           tblptrl	equ	0xFF6
 20569                           tablat	equ	0xFF5
 20570                           prodh	equ	0xFF4
 20571                           prodl	equ	0xFF3
 20572                           intcon	equ	0xFF2
 20573                           intcon2	equ	0xFF1
 20574                           intcon3	equ	0xFF0
 20575                           postinc0	equ	0xFEE
 20576                           fsr0h	equ	0xFEA
 20577                           fsr0l	equ	0xFE9
 20578                           wreg	equ	0xFE8
 20579                           postdec1	equ	0xFE5
 20580                           fsr1h	equ	0xFE2
 20581                           fsr1l	equ	0xFE1
 20582                           indf2	equ	0xFDF
 20583                           postinc2	equ	0xFDE
 20584                           postdec2	equ	0xFDD
 20585                           fsr2h	equ	0xFDA
 20586                           fsr2l	equ	0xFD9
 20587                           status	equ	0xFD8
 20588                           
 20589 ;; *************** function i2___lltoft *****************
 20590 ;; Defined at:
 20591 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 20592 ;; Parameters:    Size  Location     Type
 20593 ;;  c               4    8[COMRAM] unsigned long 
 20594 ;; Auto vars:     Size  Location     Type
 20595 ;;  __lltoft        1   16[COMRAM] unsigned char 
 20596 ;; Return value:  Size  Location     Type
 20597 ;;                  3    8[COMRAM] float 
 20598 ;; Registers used:
 20599 ;;		wreg, status,2, status,0, cstack
 20600 ;; Tracked objects:
 20601 ;;		On entry : 0/0
 20602 ;;		On exit  : 0/0
 20603 ;;		Unchanged: 0/0
 20604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20608 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20609 ;;Total ram usage:        9 bytes
 20610 ;; Hardware stack levels used:    1
 20611 ;; Hardware stack levels required when called:    1
 20612 ;; This function calls:
 20613 ;;		i2___ftpack
 20614 ;; This function is called by:
 20615 ;;		i2_pow
 20616 ;; This function uses a non-reentrant model
 20617 ;;
 20618                           
 20619                           	psect	text92
 20620  004EF6                     __ptext92:
 20621                           	opt stack 0
 20622  004EF6                     i2___lltoft:
 20623                           	opt stack 19
 20624                           
 20625                           ;incstack = 0
 20626  004EF6  0E8E               	movlw	142
 20627  004EF8  6E11               	movwf	i2___lltoft@exp,c
 20628  004EFA  D006               	goto	i2l5472
 20629  004EFC                     i2l5470:
 20630  004EFC  90D8               	bcf	status,0,c
 20631  004EFE  320C               	rrcf	i2___lltoft@c+3,f,c
 20632  004F00  320B               	rrcf	i2___lltoft@c+2,f,c
 20633  004F02  320A               	rrcf	i2___lltoft@c+1,f,c
 20634  004F04  3209               	rrcf	i2___lltoft@c,f,c
 20635  004F06  2A11               	incf	i2___lltoft@exp,f,c
 20636  004F08                     i2l5472:
 20637  004F08  0E00               	movlw	0
 20638  004F0A  1409               	andwf	i2___lltoft@c,w,c
 20639  004F0C  6E0D               	movwf	??i2___lltoft& (0+255),c
 20640  004F0E  0E00               	movlw	0
 20641  004F10  140A               	andwf	i2___lltoft@c+1,w,c
 20642  004F12  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 20643  004F14  0E00               	movlw	0
 20644  004F16  140B               	andwf	i2___lltoft@c+2,w,c
 20645  004F18  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 20646  004F1A  0EFF               	movlw	255
 20647  004F1C  140C               	andwf	i2___lltoft@c+3,w,c
 20648  004F1E  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 20649  004F20  500D               	movf	??i2___lltoft,w,c
 20650  004F22  100E               	iorwf	??i2___lltoft+1,w,c
 20651  004F24  100F               	iorwf	??i2___lltoft+2,w,c
 20652  004F26  1010               	iorwf	??i2___lltoft+3,w,c
 20653  004F28  A4D8               	btfss	status,2,c
 20654  004F2A  D7E8               	goto	i2l5470
 20655  004F2C  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 20656  004F30  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 20657  004F34  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 20658  004F38  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 20659  004F3C  0E00               	movlw	0
 20660  004F3E  6E05               	movwf	i2___ftpack@sign,c
 20661  004F40  ECFC  F023         	call	i2___ftpack	;wreg free
 20662  004F44  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 20663  004F48  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 20664  004F4C  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 20665  004F50  0012               	return	
 20666  004F52                     __end_ofi2___lltoft:
 20667                           	opt stack 0
 20668                           pclatu	equ	0xFFB
 20669                           pclath	equ	0xFFA
 20670                           tblptru	equ	0xFF8
 20671                           tblptrh	equ	0xFF7
 20672                           tblptrl	equ	0xFF6
 20673                           tablat	equ	0xFF5
 20674                           prodh	equ	0xFF4
 20675                           prodl	equ	0xFF3
 20676                           intcon	equ	0xFF2
 20677                           intcon2	equ	0xFF1
 20678                           intcon3	equ	0xFF0
 20679                           postinc0	equ	0xFEE
 20680                           fsr0h	equ	0xFEA
 20681                           fsr0l	equ	0xFE9
 20682                           wreg	equ	0xFE8
 20683                           postdec1	equ	0xFE5
 20684                           fsr1h	equ	0xFE2
 20685                           fsr1l	equ	0xFE1
 20686                           indf2	equ	0xFDF
 20687                           postinc2	equ	0xFDE
 20688                           postdec2	equ	0xFDD
 20689                           fsr2h	equ	0xFDA
 20690                           fsr2l	equ	0xFD9
 20691                           status	equ	0xFD8
 20692                           
 20693 ;; *************** function i2___ftpack *****************
 20694 ;; Defined at:
 20695 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 20696 ;; Parameters:    Size  Location     Type
 20697 ;;  arg             3    0[COMRAM] unsigned um
 20698 ;;  exp             1    3[COMRAM] unsigned char 
 20699 ;;  sign            1    4[COMRAM] unsigned char 
 20700 ;; Auto vars:     Size  Location     Type
 20701 ;;		None
 20702 ;; Return value:  Size  Location     Type
 20703 ;;                  3    0[COMRAM] float 
 20704 ;; Registers used:
 20705 ;;		wreg, status,2, status,0
 20706 ;; Tracked objects:
 20707 ;;		On entry : 0/0
 20708 ;;		On exit  : 0/0
 20709 ;;		Unchanged: 0/0
 20710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20711 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20713 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20715 ;;Total ram usage:        8 bytes
 20716 ;; Hardware stack levels used:    1
 20717 ;; This function calls:
 20718 ;;		Nothing
 20719 ;; This function is called by:
 20720 ;;		i2___altoft
 20721 ;;		i2___awtoft
 20722 ;;		i2___ftadd
 20723 ;;		i2___ftdiv
 20724 ;;		i2___ftmul
 20725 ;;		i2___lltoft
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text93
 20730  0047F8                     __ptext93:
 20731                           	opt stack 0
 20732  0047F8                     i2___ftpack:
 20733                           	opt stack 17
 20734                           
 20735                           ;incstack = 0
 20736  0047F8  5004               	movf	i2___ftpack@exp,w,c
 20737  0047FA  B4D8               	btfsc	status,2,c
 20738  0047FC  D005               	goto	i2l4628
 20739  0047FE  5001               	movf	i2___ftpack@arg,w,c
 20740  004800  1002               	iorwf	i2___ftpack@arg+1,w,c
 20741  004802  1003               	iorwf	i2___ftpack@arg+2,w,c
 20742  004804  A4D8               	btfss	status,2,c
 20743  004806  D00C               	goto	i2l4634
 20744  004808                     i2l4628:
 20745  004808  0E00               	movlw	0
 20746  00480A  6E01               	movwf	?i2___ftpack,c
 20747  00480C  0E00               	movlw	0
 20748  00480E  6E02               	movwf	?i2___ftpack+1,c
 20749  004810  0E00               	movlw	0
 20750  004812  6E03               	movwf	?i2___ftpack+2,c
 20751  004814  0012               	return	
 20752  004816                     i2l4632:
 20753  004816  2A04               	incf	i2___ftpack@exp,f,c
 20754  004818  90D8               	bcf	status,0,c
 20755  00481A  3203               	rrcf	i2___ftpack@arg+2,f,c
 20756  00481C  3202               	rrcf	i2___ftpack@arg+1,f,c
 20757  00481E  3201               	rrcf	i2___ftpack@arg,f,c
 20758  004820                     i2l4634:
 20759  004820  0E00               	movlw	0
 20760  004822  1401               	andwf	i2___ftpack@arg,w,c
 20761  004824  6E06               	movwf	??i2___ftpack& (0+255),c
 20762  004826  0E00               	movlw	0
 20763  004828  1402               	andwf	i2___ftpack@arg+1,w,c
 20764  00482A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20765  00482C  0EFE               	movlw	254
 20766  00482E  1403               	andwf	i2___ftpack@arg+2,w,c
 20767  004830  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20768  004832  5006               	movf	??i2___ftpack,w,c
 20769  004834  1007               	iorwf	??i2___ftpack+1,w,c
 20770  004836  1008               	iorwf	??i2___ftpack+2,w,c
 20771  004838  B4D8               	btfsc	status,2,c
 20772  00483A  D00C               	goto	i2l4640
 20773  00483C  D7EC               	goto	i2l4632
 20774  00483E                     i2l4636:
 20775  00483E  2A04               	incf	i2___ftpack@exp,f,c
 20776  004840  0E01               	movlw	1
 20777  004842  2601               	addwf	i2___ftpack@arg,f,c
 20778  004844  0E00               	movlw	0
 20779  004846  2202               	addwfc	i2___ftpack@arg+1,f,c
 20780  004848  0E00               	movlw	0
 20781  00484A  2203               	addwfc	i2___ftpack@arg+2,f,c
 20782  00484C  90D8               	bcf	status,0,c
 20783  00484E  3203               	rrcf	i2___ftpack@arg+2,f,c
 20784  004850  3202               	rrcf	i2___ftpack@arg+1,f,c
 20785  004852  3201               	rrcf	i2___ftpack@arg,f,c
 20786  004854                     i2l4640:
 20787  004854  0E00               	movlw	0
 20788  004856  1401               	andwf	i2___ftpack@arg,w,c
 20789  004858  6E06               	movwf	??i2___ftpack& (0+255),c
 20790  00485A  0E00               	movlw	0
 20791  00485C  1402               	andwf	i2___ftpack@arg+1,w,c
 20792  00485E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 20793  004860  0EFF               	movlw	255
 20794  004862  1403               	andwf	i2___ftpack@arg+2,w,c
 20795  004864  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 20796  004866  5006               	movf	??i2___ftpack,w,c
 20797  004868  1007               	iorwf	??i2___ftpack+1,w,c
 20798  00486A  1008               	iorwf	??i2___ftpack+2,w,c
 20799  00486C  B4D8               	btfsc	status,2,c
 20800  00486E  D006               	goto	i2l4644
 20801  004870  D7E6               	goto	i2l4636
 20802  004872                     i2l4642:
 20803  004872  0604               	decf	i2___ftpack@exp,f,c
 20804  004874  90D8               	bcf	status,0,c
 20805  004876  3601               	rlcf	i2___ftpack@arg,f,c
 20806  004878  3602               	rlcf	i2___ftpack@arg+1,f,c
 20807  00487A  3603               	rlcf	i2___ftpack@arg+2,f,c
 20808  00487C                     i2l4644:
 20809  00487C  BE02               	btfsc	i2___ftpack@arg+1,7,c
 20810  00487E  D003               	goto	i2l899
 20811  004880  0E02               	movlw	2
 20812  004882  6004               	cpfslt	i2___ftpack@exp,c
 20813  004884  D7F6               	goto	i2l4642
 20814  004886                     i2l899:
 20815  004886  A004               	btfss	i2___ftpack@exp,0,c
 20816  004888  9E02               	bcf	i2___ftpack@arg+1,7,c
 20817  00488A  90D8               	bcf	status,0,c
 20818  00488C  3204               	rrcf	i2___ftpack@exp,f,c
 20819  00488E  5004               	movf	i2___ftpack@exp,w,c
 20820  004890  1203               	iorwf	i2___ftpack@arg+2,f,c
 20821  004892  5005               	movf	i2___ftpack@sign,w,c
 20822  004894  A4D8               	btfss	status,2,c
 20823  004896  8E03               	bsf	i2___ftpack@arg+2,7,c
 20824  004898  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 20825  00489C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 20826  0048A0  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 20827  0048A4  0012               	return	
 20828  0048A6                     __end_ofi2___ftpack:
 20829                           	opt stack 0
 20830                           pclatu	equ	0xFFB
 20831                           pclath	equ	0xFFA
 20832                           tblptru	equ	0xFF8
 20833                           tblptrh	equ	0xFF7
 20834                           tblptrl	equ	0xFF6
 20835                           tablat	equ	0xFF5
 20836                           prodh	equ	0xFF4
 20837                           prodl	equ	0xFF3
 20838                           intcon	equ	0xFF2
 20839                           intcon2	equ	0xFF1
 20840                           intcon3	equ	0xFF0
 20841                           postinc0	equ	0xFEE
 20842                           fsr0h	equ	0xFEA
 20843                           fsr0l	equ	0xFE9
 20844                           wreg	equ	0xFE8
 20845                           postdec1	equ	0xFE5
 20846                           fsr1h	equ	0xFE2
 20847                           fsr1l	equ	0xFE1
 20848                           indf2	equ	0xFDF
 20849                           postinc2	equ	0xFDE
 20850                           postdec2	equ	0xFDD
 20851                           fsr2h	equ	0xFDA
 20852                           fsr2l	equ	0xFD9
 20853                           status	equ	0xFD8
 20854                           
 20855 ;; *************** function i2___awdiv *****************
 20856 ;; Defined at:
 20857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 20858 ;; Parameters:    Size  Location     Type
 20859 ;;  dividend        2    0[COMRAM] int 
 20860 ;;  divisor         2    2[COMRAM] int 
 20861 ;; Auto vars:     Size  Location     Type
 20862 ;;  __awdiv         2    6[COMRAM] int 
 20863 ;;  __awdiv         1    5[COMRAM] unsigned char 
 20864 ;;  __awdiv         1    4[COMRAM] unsigned char 
 20865 ;; Return value:  Size  Location     Type
 20866 ;;                  2    0[COMRAM] int 
 20867 ;; Registers used:
 20868 ;;		wreg, status,2, status,0
 20869 ;; Tracked objects:
 20870 ;;		On entry : 0/0
 20871 ;;		On exit  : 0/0
 20872 ;;		Unchanged: 0/0
 20873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20877 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20878 ;;Total ram usage:        8 bytes
 20879 ;; Hardware stack levels used:    1
 20880 ;; This function calls:
 20881 ;;		Nothing
 20882 ;; This function is called by:
 20883 ;;		i2_dec_to_hex
 20884 ;; This function uses a non-reentrant model
 20885 ;;
 20886                           
 20887                           	psect	text94
 20888  004B06                     __ptext94:
 20889                           	opt stack 0
 20890  004B06                     i2___awdiv:
 20891                           	opt stack 21
 20892                           
 20893                           ;incstack = 0
 20894  004B06  0E00               	movlw	0
 20895  004B08  6E06               	movwf	i2___awdiv@sign,c
 20896  004B0A  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20897  004B0C  D006               	goto	i2l5860
 20898  004B0E  6C03               	negf	i2___awdiv@divisor,c
 20899  004B10  1E04               	comf	i2___awdiv@divisor+1,f,c
 20900  004B12  B0D8               	btfsc	status,0,c
 20901  004B14  2A04               	incf	i2___awdiv@divisor+1,f,c
 20902  004B16  0E01               	movlw	1
 20903  004B18  6E06               	movwf	i2___awdiv@sign,c
 20904  004B1A                     i2l5860:
 20905  004B1A  AE02               	btfss	i2___awdiv@dividend+1,7,c
 20906  004B1C  D006               	goto	i2l5866
 20907  004B1E  6C01               	negf	i2___awdiv@dividend,c
 20908  004B20  1E02               	comf	i2___awdiv@dividend+1,f,c
 20909  004B22  B0D8               	btfsc	status,0,c
 20910  004B24  2A02               	incf	i2___awdiv@dividend+1,f,c
 20911  004B26  0E01               	movlw	1
 20912  004B28  1A06               	xorwf	i2___awdiv@sign,f,c
 20913  004B2A                     i2l5866:
 20914  004B2A  0E00               	movlw	0
 20915  004B2C  6E08               	movwf	i2___awdiv@quotient+1,c
 20916  004B2E  0E00               	movlw	0
 20917  004B30  6E07               	movwf	i2___awdiv@quotient,c
 20918  004B32  5003               	movf	i2___awdiv@divisor,w,c
 20919  004B34  1004               	iorwf	i2___awdiv@divisor+1,w,c
 20920  004B36  B4D8               	btfsc	status,2,c
 20921  004B38  D01C               	goto	i2l5888
 20922  004B3A  0E01               	movlw	1
 20923  004B3C  6E05               	movwf	i2___awdiv@counter,c
 20924  004B3E  D004               	goto	i2l5874
 20925  004B40                     i2l5872:
 20926  004B40  90D8               	bcf	status,0,c
 20927  004B42  3603               	rlcf	i2___awdiv@divisor,f,c
 20928  004B44  3604               	rlcf	i2___awdiv@divisor+1,f,c
 20929  004B46  2A05               	incf	i2___awdiv@counter,f,c
 20930  004B48                     i2l5874:
 20931  004B48  AE04               	btfss	i2___awdiv@divisor+1,7,c
 20932  004B4A  D7FA               	goto	i2l5872
 20933  004B4C                     i2l5876:
 20934  004B4C  90D8               	bcf	status,0,c
 20935  004B4E  3607               	rlcf	i2___awdiv@quotient,f,c
 20936  004B50  3608               	rlcf	i2___awdiv@quotient+1,f,c
 20937  004B52  5003               	movf	i2___awdiv@divisor,w,c
 20938  004B54  5C01               	subwf	i2___awdiv@dividend,w,c
 20939  004B56  5004               	movf	i2___awdiv@divisor+1,w,c
 20940  004B58  5802               	subwfb	i2___awdiv@dividend+1,w,c
 20941  004B5A  A0D8               	btfss	status,0,c
 20942  004B5C  D005               	goto	i2l5884
 20943  004B5E  5003               	movf	i2___awdiv@divisor,w,c
 20944  004B60  5E01               	subwf	i2___awdiv@dividend,f,c
 20945  004B62  5004               	movf	i2___awdiv@divisor+1,w,c
 20946  004B64  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 20947  004B66  8007               	bsf	i2___awdiv@quotient,0,c
 20948  004B68                     i2l5884:
 20949  004B68  90D8               	bcf	status,0,c
 20950  004B6A  3204               	rrcf	i2___awdiv@divisor+1,f,c
 20951  004B6C  3203               	rrcf	i2___awdiv@divisor,f,c
 20952  004B6E  2E05               	decfsz	i2___awdiv@counter,f,c
 20953  004B70  D7ED               	goto	i2l5876
 20954  004B72                     i2l5888:
 20955  004B72  5006               	movf	i2___awdiv@sign,w,c
 20956  004B74  B4D8               	btfsc	status,2,c
 20957  004B76  D004               	goto	i2l5892
 20958  004B78  6C07               	negf	i2___awdiv@quotient,c
 20959  004B7A  1E08               	comf	i2___awdiv@quotient+1,f,c
 20960  004B7C  B0D8               	btfsc	status,0,c
 20961  004B7E  2A08               	incf	i2___awdiv@quotient+1,f,c
 20962  004B80                     i2l5892:
 20963  004B80  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 20964  004B84  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 20965  004B88  0012               	return	
 20966  004B8A                     __end_ofi2___awdiv:
 20967                           	opt stack 0
 20968                           pclatu	equ	0xFFB
 20969                           pclath	equ	0xFFA
 20970                           tblptru	equ	0xFF8
 20971                           tblptrh	equ	0xFF7
 20972                           tblptrl	equ	0xFF6
 20973                           tablat	equ	0xFF5
 20974                           prodh	equ	0xFF4
 20975                           prodl	equ	0xFF3
 20976                           intcon	equ	0xFF2
 20977                           intcon2	equ	0xFF1
 20978                           intcon3	equ	0xFF0
 20979                           postinc0	equ	0xFEE
 20980                           fsr0h	equ	0xFEA
 20981                           fsr0l	equ	0xFE9
 20982                           wreg	equ	0xFE8
 20983                           postdec1	equ	0xFE5
 20984                           fsr1h	equ	0xFE2
 20985                           fsr1l	equ	0xFE1
 20986                           indf2	equ	0xFDF
 20987                           postinc2	equ	0xFDE
 20988                           postdec2	equ	0xFDD
 20989                           fsr2h	equ	0xFDA
 20990                           fsr2l	equ	0xFD9
 20991                           status	equ	0xFD8
 20992                           pclatu	equ	0xFFB
 20993                           pclath	equ	0xFFA
 20994                           tblptru	equ	0xFF8
 20995                           tblptrh	equ	0xFF7
 20996                           tblptrl	equ	0xFF6
 20997                           tablat	equ	0xFF5
 20998                           prodh	equ	0xFF4
 20999                           prodl	equ	0xFF3
 21000                           intcon	equ	0xFF2
 21001                           intcon2	equ	0xFF1
 21002                           intcon3	equ	0xFF0
 21003                           postinc0	equ	0xFEE
 21004                           fsr0h	equ	0xFEA
 21005                           fsr0l	equ	0xFE9
 21006                           wreg	equ	0xFE8
 21007                           postdec1	equ	0xFE5
 21008                           fsr1h	equ	0xFE2
 21009                           fsr1l	equ	0xFE1
 21010                           indf2	equ	0xFDF
 21011                           postinc2	equ	0xFDE
 21012                           postdec2	equ	0xFDD
 21013                           fsr2h	equ	0xFDA
 21014                           fsr2l	equ	0xFD9
 21015                           status	equ	0xFD8
 21016                           
 21017                           	psect	rparam
 21018  0000                     pclatu	equ	0xFFB
 21019                           pclath	equ	0xFFA
 21020                           tblptru	equ	0xFF8
 21021                           tblptrh	equ	0xFF7
 21022                           tblptrl	equ	0xFF6
 21023                           tablat	equ	0xFF5
 21024                           prodh	equ	0xFF4
 21025                           prodl	equ	0xFF3
 21026                           intcon	equ	0xFF2
 21027                           intcon2	equ	0xFF1
 21028                           intcon3	equ	0xFF0
 21029                           postinc0	equ	0xFEE
 21030                           fsr0h	equ	0xFEA
 21031                           fsr0l	equ	0xFE9
 21032                           wreg	equ	0xFE8
 21033                           postdec1	equ	0xFE5
 21034                           fsr1h	equ	0xFE2
 21035                           fsr1l	equ	0xFE1
 21036                           indf2	equ	0xFDF
 21037                           postinc2	equ	0xFDE
 21038                           postdec2	equ	0xFDD
 21039                           fsr2h	equ	0xFDA
 21040                           fsr2l	equ	0xFD9
 21041                           status	equ	0xFD8
 21042                           
 21043                           	psect	temp
 21044  00007F                     btemp:
 21045                           	opt stack 0
 21046  00007F                     	ds	1
 21047  0000                     int$flags	set	btemp
 21048                           pclatu	equ	0xFFB
 21049                           pclath	equ	0xFFA
 21050                           tblptru	equ	0xFF8
 21051                           tblptrh	equ	0xFF7
 21052                           tblptrl	equ	0xFF6
 21053                           tablat	equ	0xFF5
 21054                           prodh	equ	0xFF4
 21055                           prodl	equ	0xFF3
 21056                           intcon	equ	0xFF2
 21057                           intcon2	equ	0xFF1
 21058                           intcon3	equ	0xFF0
 21059                           postinc0	equ	0xFEE
 21060                           fsr0h	equ	0xFEA
 21061                           fsr0l	equ	0xFE9
 21062                           wreg	equ	0xFE8
 21063                           postdec1	equ	0xFE5
 21064                           fsr1h	equ	0xFE2
 21065                           fsr1l	equ	0xFE1
 21066                           indf2	equ	0xFDF
 21067                           postinc2	equ	0xFDE
 21068                           postdec2	equ	0xFDD
 21069                           fsr2h	equ	0xFDA
 21070                           fsr2l	equ	0xFD9
 21071                           status	equ	0xFD8


Data Sizes:
    Strings     520
    Constant    99
    Data        10
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     126
    BANK0           128     95     111
    BANK1           256     41     124
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_47(CODE[25]), STR_46(CODE[26]), STR_45(CODE[24]), STR_44(CODE[26]), 
		 -> STR_43(CODE[16]), STR_42(CODE[17]), STR_41(CODE[17]), STR_40(CODE[17]), 
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[25]), STR_36(CODE[16]), 
		 -> STR_35(CODE[17]), STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), 
		 -> STR_31(CODE[22]), STR_30(CODE[24]), STR_29(CODE[16]), STR_28(CODE[17]), 
		 -> STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[22]), 
		 -> STR_23(CODE[24]), STR_22(CODE[16]), STR_21(CODE[17]), STR_20(CODE[17]), 
		 -> STR_19(CODE[17]), STR_18(CODE[17]), STR_17(CODE[21]), STR_16(CODE[23]), 
		 -> STR_15(CODE[16]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[23]), 
		 -> STR_7(CODE[23]), STR_6(CODE[9]), STR_5(CODE[18]), STR_4(CODE[13]), 
		 -> STR_3(CODE[24]), STR_2(CODE[24]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->i2_dec_to_hex
    i2_savedata->i2_eeprom_writebyte
    i2_eeprom_writebyte->i2_eeprom_readbyte
    i2_read_time->i2_I2C_Master_Read
    i2_read_time->i2_I2C_Master_Write
    i2_read_colorsensor->i2_I2C_Master_Read
    i2_read_colorsensor->i2_I2C_Master_Write
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    i2_I2C_Master_Read->i2_I2C_Master_Wait
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble
    i2_dec_to_hex->i2_pow
    i2_pow->i2_exp
    i2_log->i2_eval_poly
    i2_exp->i2_floor
    i2_ldexp->i2_eval_poly
    i2_floor->i2___altoft
    i2___fttol->i2___ftadd
    i2___altoft->i2___fttol
    i2_eval_poly->i2___ftadd
    i2___ftmul->i2___awtoft
    i2___ftsub->i2___ftadd
    i2___ftadd->i2___ftmul
    i2___ftdiv->i2___ftpack
    i2___awtoft->i2___ftpack
    i2___lltoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_operation
    _standby->_printf
    _operationend->_printf
    _operation->_dec_to_hex
    _savedata->_eeprom_writebyte
    _eeprom_writebyte->_eeprom_readbyte
    _read_time->_I2C_Master_Read
    _read_time->_I2C_Master_Write
    _read_colorsensor->_I2C_Master_Read
    _read_colorsensor->_I2C_Master_Write
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___ftge->___ftdiv
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    _initLCD->_lcdInst
    _emergencystop->_printf
    _date_time->_printf
    _I2C_Master_Read->_I2C_Master_Wait
    _bottle_time->_printf
    _bottle_count4->_printf
    _bottle_count3->_printf
    _bottle_count2->_printf
    _bottle_count1->_printf
    _bottle_count->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv
    _I2C_ColorSens_Init->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_operation
    _operation->_dec_to_hex
    _dec_to_hex->_pow
    _pow->_exp

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  204745
                                             39 BANK1      2     2      0
                 _I2C_ColorSens_Init
                    _I2C_Master_Init
                       _bottle_count
                      _bottle_count1
                      _bottle_count2
                      _bottle_count3
                      _bottle_count4
                        _bottle_time
                          _date_time
                   _eeprom_writebyte
                      _emergencystop
                            _initLCD
                          _operation
                       _operationend
                            _standby
 ---------------------------------------------------------------------------------
 (1) _standby                                              0     0      0    9615
                            _lcdInst
                             _printf
                   _read_colorsensor
 ---------------------------------------------------------------------------------
 (1) _operationend                                         0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _operation                                            6     6      0  114438
                                             93 BANK0      2     2      0
                                             37 BANK1      2     2      0
                            ___ftdiv
                             ___ftge
                           ___lwtoft
                             ___wmul
                         _dec_to_hex
                            _lcdInst
                   _read_colorsensor
                          _read_time
                           _savedata
 ---------------------------------------------------------------------------------
 (2) _savedata                                             0     0      0    6749
                    _eeprom_readbyte
                   _eeprom_writebyte
 ---------------------------------------------------------------------------------
 (3) _eeprom_writebyte                                     3     0      3    4097
                                             18 BANK0      3     0      3
                    _eeprom_readbyte (ARG)
 ---------------------------------------------------------------------------------
 (3) _eeprom_readbyte                                      2     0      2    2652
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _read_time                                            1     1      0    2274
                                             19 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _read_colorsensor                                     2     2      0    2175
                                             19 BANK0      2     2      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _dec_to_hex                                          16    14      2   92896
                                             91 BANK0      2     0      2
                                             23 BANK1     14    14      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   78284
                                              6 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   24654
                                             67 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   43139
                                             88 BANK0      3     0      3
                                              0 BANK1      6     6      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     525
                                             67 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   11360
                                             80 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     642
                                             16 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     679
                                             55 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6    1738
                                             39 BANK0      9     3      6
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2925
                                             70 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   11251
                                             55 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    4284
                                             28 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5271
                                             55 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             12     6      6    4907
                                             43 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     296
                                             16 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    3948
                                             24 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3162
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2823
                                             24 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     599
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2983
                                             24 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2644
                                             16 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     195
                                             19 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _emergencystop                                        0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _date_time                                            1     1      0    9714
                                             50 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      2     2      0      65
                                             17 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _bottle_time                                          0     0      0    7440
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count4                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count3                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count2                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count1                                        0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count                                         0     0      0    8376
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    23      8    7245
                                             28 BANK0     22    14      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     195
                                             18 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1344
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             23 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     195
                                             18 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     164
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     936
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             29 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_ColorSens_Init                                   1     1      0    2110
                                             19 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    2110
                                             17 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                 25    25      0   39687
                                            114 COMRAM     3     3      0
                                              0 BANK0     16    16      0
                           i2___wmul
                       i2_dec_to_hex
                  i2_eeprom_readbyte
                          i2_lcdInst
                           i2_printf
                 i2_read_colorsensor
                        i2_read_time
                         i2_savedata
 ---------------------------------------------------------------------------------
 (9) i2_savedata                                           0     0      0    2580
                  i2_eeprom_readbyte
                 i2_eeprom_writebyte
 ---------------------------------------------------------------------------------
 (10) i2_eeprom_writebyte                                  3     0      3    1366
                                              2 COMRAM     3     0      3
                  i2_eeprom_readbyte (ARG)
 ---------------------------------------------------------------------------------
 (10) i2_eeprom_readbyte                                   2     0      2    1214
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i2_read_time                                          1     1      0     239
                                              3 COMRAM     1     1      0
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_read_colorsensor                                   2     2      0     171
                                              3 COMRAM     2     2      0
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Write                                  2     0      2     126
                                              1 COMRAM     2     0      2
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Stop                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Start                                  0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Master_Read                                   2     2      0      45
                                              1 COMRAM     2     2      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Master_Wait                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_printf                                            29    23      6    2303
                                             12 COMRAM    20    14      6
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (10) i2_putch                                             1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (10) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (10) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (9) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (11) i2_lcdNibble                                         2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_dec_to_hex                                        16    14      2   32110
                                             98 COMRAM    16    14      2
                          i2___awdiv
                         i2___awtoft
                          i2___ftadd
                          i2___ftmul
                          i2___fttol
                              i2_pow
 ---------------------------------------------------------------------------------
 (10) i2_pow                                              17    11      6   26857
                                             81 COMRAM    17    11      6
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___fttol
                         i2___lltoft
                              i2_exp
                              i2_log
 ---------------------------------------------------------------------------------
 (11) i2_log                                               5     2      3    8658
                                             51 COMRAM     5     2      3
                         i2___awtoft
                          i2___ftadd
                          i2___ftmul
                        i2_eval_poly
                            i2_frexp
 ---------------------------------------------------------------------------------
 (11) i2_exp                                               9     6      3   14834
                                             72 COMRAM     9     6      3
                         i2___awtoft
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                        i2_eval_poly
                            i2_floor
                            i2_ldexp
 ---------------------------------------------------------------------------------
 (12) i2_ldexp                                             7     2      5     296
                                             51 COMRAM     7     2      5
                        i2_eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_floor                                             8     5      3    4007
                                             64 COMRAM     8     5      3
                         i2___altoft
                          i2___ftadd
                           i2___ftge
                          i2___fttol
                            i2_frexp
 ---------------------------------------------------------------------------------
 (12) i2_frexp                                             7     2      5     324
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (13) i2___fttol                                          15    11      4     356
                                             39 COMRAM    15    11      4
                         i2___awtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___ftge                                            9     3      6     344
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (13) i2___altoft                                         10     6      4     863
                                             54 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) i2_eval_poly                                        12     5      7    4043
                                             39 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     521
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2___ftmul                                          15     9      6    1337
                                             12 COMRAM    15     9      6
                         i2___awtoft (ARG)
                         i2___ftpack
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftsub                                           6     0      6    1970
                                             39 COMRAM     6     0      6
                         i2___awtoft (ARG)
                          i2___ftadd
 ---------------------------------------------------------------------------------
 (13) i2___ftadd                                          12     6      6    1851
                                             27 COMRAM    12     6      6
                         i2___awtoft (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                            i2_frexp (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___ftneg                                           3     0      3     123
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (12) i2___ftdiv                                          15     9      6    1031
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___awtoft                                          4     1      3     920
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (11) i2___lltoft                                          9     5      4     794
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___ftpack                                          8     3      5     699
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_ColorSens_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _bottle_count
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count1
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count2
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count3
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_count4
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_time
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _date_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _eeprom_writebyte
     _eeprom_readbyte (ARG)
   _emergencystop
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _operation
     ___ftdiv
       ___ftpack
     ___ftge
       ___ftdiv (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     ___wmul
     _dec_to_hex
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
           ___ftdiv (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
             ___ftdiv (ARG)
               ___ftpack
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
               ___ftdiv (ARG)
                 ___ftpack
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
     _lcdInst
       _lcdNibble
     _read_colorsensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _read_time
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _savedata
       _eeprom_readbyte
       _eeprom_writebyte
         _eeprom_readbyte (ARG)
   _operationend
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _standby
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
     _read_colorsensor
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait

 _isr (ROOT)
   i2___wmul
   i2_dec_to_hex
     i2___awdiv
     i2___awtoft
       i2___ftpack
     i2___ftadd
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftmul (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
       i2_frexp (ARG)
     i2___ftmul
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftpack (ARG)
       i2_frexp (ARG)
     i2___fttol
       i2___awtoft (ARG)
         i2___ftpack
       i2___ftadd (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
         i2_frexp (ARG)
       i2___ftmul (ARG)
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
     i2_pow
       i2___ftge
       i2___ftmul
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
         i2_frexp (ARG)
       i2___ftneg
       i2___fttol
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftadd (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftmul (ARG)
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
       i2___lltoft
         i2___ftpack
       i2_exp
         i2___awtoft
           i2___ftpack
         i2___ftdiv
           i2___ftpack
         i2___ftge
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2___ftneg
         i2___ftsub
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
         i2___fttol
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftadd (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
         i2_eval_poly
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___wmul
         i2_floor
           i2___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftadd (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftmul (ARG)
                   i2___awtoft (ARG)
                     i2___ftpack
                   i2___ftpack (ARG)
                   i2_frexp (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                 i2_frexp (ARG)
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftge
           i2___fttol
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftadd (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
           i2_frexp
         i2_ldexp
           i2_eval_poly (ARG)
             i2___ftadd
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftmul (ARG)
                 i2___awtoft (ARG)
                   i2___ftpack
                 i2___ftpack (ARG)
                 i2_frexp (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
               i2_frexp (ARG)
             i2___ftmul
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___wmul
       i2_log
         i2___awtoft
           i2___ftpack
         i2___ftadd
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftmul (ARG)
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
           i2_frexp (ARG)
         i2___ftmul
           i2___awtoft (ARG)
             i2___ftpack
           i2___ftpack (ARG)
           i2_frexp (ARG)
         i2_eval_poly
           i2___ftadd
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftmul (ARG)
               i2___awtoft (ARG)
                 i2___ftpack
               i2___ftpack (ARG)
               i2_frexp (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
             i2_frexp (ARG)
           i2___ftmul
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
             i2_frexp (ARG)
           i2___wmul
         i2_frexp
   i2_eeprom_readbyte
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2___wmul
     i2_isdigit
     i2_putch
       i2_lcdNibble
   i2_read_colorsensor
     i2_I2C_Master_Read
       i2_I2C_Master_Wait
     i2_I2C_Master_Start
       i2_I2C_Master_Wait
     i2_I2C_Master_Stop
       i2_I2C_Master_Wait
     i2_I2C_Master_Write
       i2_I2C_Master_Wait
   i2_read_time
     i2_I2C_Master_Read
       i2_I2C_Master_Wait
     i2_I2C_Master_Start
       i2_I2C_Master_Wait
     i2_I2C_Master_Stop
       i2_I2C_Master_Wait
     i2_I2C_Master_Write
       i2_I2C_Master_Wait
   i2_savedata
     i2_eeprom_readbyte
     i2_eeprom_writebyte
       i2_eeprom_readbyte (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      7C       7       48.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5F      6F       5       86.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     169      34        0.0%
DATA                 0      0     169       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Apr 11 14:02:23 2017

               ___altoft@exp 00CE                            _b 011F                            _i 00EB  
                          _j 0078                            _r 0125           i2_I2C_Master_Start 550E  
         i2_I2C_Master_Write 54EC                ___altoft@sign 00CF                           l34 547A  
             ?_emergencystop 0001                 ___awdiv@sign 0095                   i2___altoft 4C7E  
        ___wmul@multiplicand 0092           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
                 i2___awtoft 51E0                   i2___ftpack 47F8                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                 ___ftadd@exp1 00B6                 ___ftadd@exp2 00B5  
                 i2___lltoft 4EF6                 ___ftadd@sign 00B4                          l518 0C12  
                        l528 0DCC                          l590 545C                          l559 5414  
                        l922 1D46                          l596 5354                          l926 1D80  
                        l928 1DA8                          l937 1E7E                          l946 1EA8  
                        l957 2E5C                          l899 33F8                          l979 52A6  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                          _PEN 007E2A  
               __CFG_CPD$OFF 000000                          _SEN 007E28                          _PSA 007EAB  
        ?i2_I2C_Master_Start 0001                          _b_p 0122          ?i2_I2C_Master_Write 0002  
                 i2_exp$1679 004C                          _exp 21A0                          _log 2BF6  
                        _r_p 0128                          _isr 0008                          _pow 25C2  
               ___awmod@sign 0095                          prod 000FF3                          wreg 000FE8  
         i2dec_to_hex@hexnum 006F                 ?_bottle_time 0001                 __CFG_LVP$OFF 000000  
               ___ftdiv@cntr 00A1                 ___ftdiv@sign 00A6                 __CFG_WDT$OFF 000000  
                       l1114 260A                         l1029 4738                         l1119 2768  
                       l1082 4C74                         l1092 4E2C                         l1277 2286  
                       l1278 23CC                         l1288 3A30                         l5414 4C24  
                       l5416 4C30                         l5360 532C                         l5426 4C66  
                       l5418 4C36                         l5442 4E1E                         l5434 4DE8  
                       l5436 4DF4                         l8100 1376                         l8012 112C  
                       l5438 4DFA                         l8110 13E4                         l8030 11C0  
                       l8006 111E                         l8014 1164                         l8032 11C6  
                       l8008 1124                         l8112 13F0                         l7400 1D9E  
                       l8106 13C4                         l8026 11A4                         l7330 334E  
                       l7410 1DE0                         l8130 330A                         l5740 48C2  
                       l8108 13DC                         l8044 11FC                         l8060 1238  
                       l7340 33DC                         l7332 335C                         l7420 1E2A  
                       ?_exp 00D8                         ?_log 00C3                         l5750 48F2  
                       l8046 1202                         l8062 1250                         l7342 33EA  
                       l7334 338C                         l7326 333A                         l7430 1E72  
                       l7422 1E36                         l7502 4482                         l8118 322A  
                       l8310 0DB8                         l5752 48F8                         l5760 492A  
                       l5744 48D2                         l8080 12CE                         l8072 12AA  
                       l8400 42E4                         l7416 1E0E                         l7512 4506  
                       l8312 0DD6                         l8074 12B4                         l7354 341E  
                       l7338 33AC                         l7418 1E1C                         l7506 44C2  
                       l7522 2ECC                         l8322 0E98                         l8306 0D6A  
                       l5764 493E                         l5756 491C                         l5748 48E6  
                       l8092 1310                         l8068 1272                         l7348 3402  
                       l7436 1ED2                         l7428 1E64                         l7372 4974  
                       l7540 2F5E                         ?_isr 0001                         l5774 46BC  
                       l8086 12EA                         l8422 3874                         l8406 4304  
                       l7614 2E1A                         l7446 1F20                         l7462 2B0C  
                       l7374 4984                         l7550 2F8E                         l8326 0EE6  
                       l8262 0BD0                         l5776 46CC                         l8088 12F6  
                       l8096 1324                         l8416 383E                         l8440 3908  
                       l8504 3700                         l8512 3532                         l7632 50B6  
                       l7480 2B78                         l7456 2AD2                         l7552 2F9E  
                       l7544 2F72                         l7712 31BC                         l8352 0F90  
                       l8344 0F68                         l8328 0EFC                         l8272 0C0C  
                       l5786 4726                         l5778 46D2                         l8098 132A  
                       l8434 38F0                         l8530 35E4                         l7394 1D8E  
                       l7490 2BB6                         l7554 2FA8                         l7570 477E  
                       l8362 0FBE                         l8290 0C7E                         l8266 0BE6  
                       l8428 38B2                         l8460 37AE                         l8524 35A6  
                       l7644 50FC                         l7388 1D54                         l7476 2B5A  
                       l7708 31AC                         l7812 239C                         l8356 0FA0  
                       l8348 0F78                         l8700 1B96                         l8454 3770  
                       l8518 3568                         l8550 3464                         l7742 4B92  
                       l7486 2B98                         l7558 2FC4                         l7670 39AE  
                       l7662 397C                         l7902 26E0                         l8366 0FCE  
                       l8382 1034                         l8294 0C9E                         l8448 373A  
                       l8472 3804                         l8480 3636                         l8536 35FC  
                       l8544 342E                         l7744 4BA2                         l7680 3FEA  
                       l8376 1002                         l8296 0CA8                         l8720 1C36  
                       l8712 1BF6                         l8704 1BB6                         l8466 37EC  
                       l8562 34E0                         l7922 45EC                         l7594 2DBA  
                       l7666 3990                         l7762 2C48                         l8378 1018  
                       l8492 36AA                         l8556 34A2                         l7836 52DA  
                       l8396 42DA                         l7588 2D80                         l7756 2C1A  
                       l8724 1C56                         l8716 1C16                         l8708 1BD6  
                       l8486 366C                         l7934 4620                         l7950 4670  
                       l7678 3F62                         l7790 2250                         l8734 1C96  
                       l8568 34F8                         l7936 462C                         l7928 4602  
                       l7696 317E                         l7688 3118                         l7784 220A  
                       l8728 1C76                         l8680 1B30                         l8664 1AD4  
                       l8498 36E8                         l7954 4684                         l7946 4662  
                       l7938 4632                         l7778 21C4                         l7890 2642  
                       l7970 4D3C                         l8674 1B10                         l7884 261E  
                       l8692 1B72                         l8676 1B1A                         l8668 1AEA  
                       ?_pow 014F                         l7982 1046                         l7966 4D32  
                       l8694 1B78                         l8686 1B4A                   i2_pow$1677 0058  
                 i2_pow$1678 005B                         l7992 1076                         l7976 4D5C  
                       l8688 1B52                         l7986 105A                         l7898 26BA  
                       l7988 106C                         l7998 10A6           i2_read_colorsensor 41C8  
                       STR_1 FED4                         STR_2 FE74                         STR_3 FE5C  
                       STR_4 FFE8                         STR_5 FF71                         STR_6 FFF5  
                       STR_7 FF02                         STR_8 FF19                         STR_9 FF46  
                       _T0CS 007EAD                         _LATA 000F89                         _LATB 000F8A  
                       _LATC 000F8B                         _LATD 000F8C                         _LATE 000F8D  
                       u6015 4EC6                         _PEIE 007F96                         u7201 1CF4  
                       u7211 1D12                         _RCEN 007E2B                         i2l34 548E  
                       u7411 2AAE                         u7501 2EA8                         u7431 2AE8  
                       u7520 2EF2                         u7601 2D5C                         u8410 0CB8  
                       u8330 0ADC                         u7700 39A0                         u7621 2D96  
                       u7525 2EE8                         u8600 102C                         u8520 0F1E  
                       u8360 0C48                         u7740 314A                         u8461 0DE4  
                       u7910 52D8                         u7590 47B0                         u8707 1B84  
                       u7748 314E                         u7860 225A                         u8717 1B8E  
                       u7598 47B4                         u7870 225C                         u8807 0AEA  
                       u8727 1BA8                         u8817 4FFE                         u8737 1BC8  
                       u8827 503A                         u8747 1BE8                         u8837 4E56  
                       u8757 1C08                         u7990 269C                         u8847 4E5E  
                       u8767 1C28                         u8857 4E88                         u8777 1C48  
                       u8697 1B64                         u8867 4E90                         u8787 1C68  
                       u8877 3A78                         u8797 1C88                         _TMR0 000FD6  
                       _TMR1 000FCE                         _TMR3 000FB2                         _RSEN 007E29  
  __size_of_eeprom_writebyte 0028                         _main 1A16                 ___ftpack@arg 0090  
               i2___altoft@c 0037                         _keys FD93                 ___ftpack@exp 0093  
                       _temp 007C                         _time 0110                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 007F                         exp@x 00D8  
                       log@x 00C3                         isr@i 0073                 i2___ftadd@f1 001C  
               i2___ftadd@f2 001F         ??i2_I2C_Master_Start 0002                 i2___ftge@ff1 0001  
               i2___ftge@ff2 0004         ??i2_I2C_Master_Write 0004                         pow@x 014F  
                       pow@y 0152                         prodh 000FF4                         prodl 000FF3  
                       start 000E          ?i2_read_colorsensor 0001                __CFG_IESO$OFF 000000  
            __end_ofi2_floor 41C8              __end_ofi2_ldexp 45D0                 i2___ftdiv@f1 0009  
               i2___ftdiv@f2 000C                 i2___ftdiv@f3 0013              __end_ofi2_frexp 4A76  
      __size_ofi2_dec_to_hex 00FC                 i2___ftneg@f1 0001                   i2_savedata 1F46  
            __end_ofi2_putch 54CC                 i2___awtoft@c 0009                __CFG_MCLRE$ON 000000  
               ___ftmul@cntr 00A9                 i2___ftmul@f1 000D                 i2___ftmul@f2 0010  
               ___param_bank 000000                 ___ftmul@sign 00AA                 i2___ftsub@f1 0028  
               i2___ftsub@f2 002B                 i2___fttol@f1 0028                  i2_lcdNibble 5046  
              ?_bottle_count 0001                 ___fttol@exp1 00C5                 i2___lltoft@c 0009  
                      ??_exp 00DB                        ??_log 00C6                 ___fttol@lval 00C1  
                      ??_isr 0080                        ??_pow 00DB             ?_I2C_Master_Init 009D  
           ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001             ?_I2C_Master_Stop 0001  
              _bottle_count1 3738                _bottle_count2 3634                _bottle_count3 3530  
              _bottle_count4 342C                        ?_main 0001                        _ACKEN 007E2C  
                      _ACKDT 007E2D              __end_of___awdiv 468E                        _EEADR 000FA9  
            __end_of___ftadd 1F46                        STR_10 FF30                        STR_11 FF94  
                      STR_20 FFB6                        STR_12 FFA5                        STR_21 FFC7  
                      STR_13 FFB6                        STR_22 FFD8                        STR_14 FFC7  
                      STR_30 FEBC                        STR_31 FF30                        STR_15 FFD8  
                      STR_23 FEA4                        STR_24 FF30                        STR_32 FF94  
                      STR_40 FFA5                        STR_16 FEEB                        STR_25 FF94  
                      STR_33 FFA5                        STR_41 FFB6                        STR_17 FF5C  
                      STR_18 FF94                        STR_26 FFA5                        STR_34 FFB6  
                      STR_42 FFC7                        STR_19 FFA5                        STR_27 FFB6  
                      STR_35 FFC7                        STR_43 FFD8                        STR_28 FFC7  
                      STR_36 FFD8                        STR_44 FE10              __end_of___awmod 4948  
                      STR_29 FFD8                        STR_45 FE8C                        STR_37 FE2A  
                      STR_38 FF5C                        STR_46 FDF6                        STR_39 FF94  
                      STR_47 FE43                        STR_48 FF83              __end_of___ftdiv 2E92  
            __end_of___ftneg 52B4              __end_of___lldiv 474A              __end_of___ftmul 2BF6  
            ___awdiv@divisor 0092                        _T1CON 000FCD              __end_of___ftsub 50E0  
            __end_of___fttol 2FD6                        _T3CON 000FB1                        _T0PS0 007EA8  
                      _T0PS1 007EA9                        _T0PS2 007EAA              __end_of___lwdiv 4C7E  
            __end_of___lwmod 4E36                        i2l411 092C                        i2l412 0904  
                      i2l405 08EA                        i2l406 08C4                        i2l352 08AC  
                      i2l370 02C8                        i2l354 0054                        i2l428 0A8A  
                      i2l357 08A8                        i2l382 04AC                        i2l358 0118  
                      i2l376 03BA                        i2l394 0690                        i2l388 059E  
                      i2l590 5472                        i2l398 07DC                        i2l922 27BA  
                      i2l596 537A                        i2l926 27E4                        i2l937 2894  
                      i2l946 28B0              ___awdiv@counter 0094                        i2l957 40B8  
                      i2l899 4886                        i2l979 53E6         ??i2_read_colorsensor 0004  
                      _PORTB 000F81                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      i2_exp 23DA                        i2_log 2FD6                __CFG_PWRT$OFF 000000  
                      i2_pow 2922                  i2_eval_poly 4370                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
               ___lltoft@exp 00A0              __end_of_lcdInst 54C0               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                        _nRBPU 007F8F                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000              __end_of_initLCD 5046  
             __CFG_EBTRB$OFF 000000                   i2isdigit@c 0003                ___awtoft@sign 009B  
            __end_of_dpowers FDAE                        _color 0100                        _floor 3940  
                      _etime 0131                        _ldexp 30F4                        _frexp 474A  
                      _errno 012F              __end_of_isdigit 5336                ___ftpack@sign 0094  
                      _putch 54A0                        _stime 0147                  i2_read_time 4D6C  
               i2_dec_to_hex 3B3C                        pclath 000FFA                        tablat 000FF5  
           __end_ofi2___ftge 4B06                        pow@yi 015C              __end_of_timeset FDBD  
           __end_ofi2___wmul 53D0              __end_of_standby 51E0                        status 000FD8  
              i2___ftdiv@exp 0016           __size_ofi2___awdiv 0084           __size_ofi2___ftadd 01AC  
             __CFG_PBADEN$ON 000000                i2printf@width 001E           __size_ofi2___ftdiv 00E6  
                exp@exponent 014C           __size_ofi2___ftneg 0024           __size_ofi2___ftmul 00F4  
         __size_ofi2___ftsub 0040           __size_ofi2___fttol 00F4             __end_ofi2_printf 173A  
         __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042                  ldexp@newexp 00C6  
            __initialization 4F52                  log@exponent 00C6           __size_ofi2_lcdInst 000C  
            ??_emergencystop 00B2               ??_bottle_count 00B2                 __end_of_main 1CDE  
               __end_of_keys FDA4                i2___ftmul@exp 0016                   i2printf@ap 0018  
         __size_ofi2_isdigit 001E                  ?i2___altoft 0037               ?_bottle_count1 0001  
             ?_bottle_count2 0001               ?_bottle_count3 0001               ?_bottle_count4 0001  
                ?i2___awtoft 0009                  ?i2___ftpack 0001                  ?i2___lltoft 0009  
                     ??_main 0170       i2eeprom_writebyte@data 0005                ___fttol@sign1 00C0  
              __activetblptr 000002                       ?i2_exp 0049                       ?i2_log 0034  
                     ?i2_pow 0052            ?_I2C_Master_Start 0001            ?_I2C_Master_Write 0091  
         ??_I2C_Master_Start 0091                       _ADCON0 000FC2                       _ADCON1 000FC1  
         ??_I2C_Master_Write 0093                       ?_floor 00D0                       ?_ldexp 00C3  
                     ?_frexp 0090             __end_of___altoft 49E6                       _EEADRH 000FAA  
                     _EEDATA 000FA8                       _EECON2 000FA7                       _T08BIT 007EAE  
           ___awdiv@dividend 0090              i2lcdNibble@data 0002             __end_of___awtoft 5124  
                     ?_putch 0001             __end_of___ftpack 342C         i2dec_to_hex@quotient 0071  
            i2lcdNibble@temp 0001             __end_of___lltoft 4C06                       _INT0IE 007F94  
                     _INT1IE 007F83                       _INT1IF 007F80                       _INT2IE 007F84  
                     i2l1114 295A                       i2l1119 2A8A                       i2l1082 4FEC  
                     i2l1092 515C                       i2l1277 2490                       i2l1278 25B4  
                     i2l1288 41BA                       i2l5008 4A0E                       i2l5202 4126  
                     i2l5126 51F4                       i2l5142 4054                       i2l5206 4140  
                     i2l5136 402C                       i2l5162 4092                       i2l5250 43B0  
                     i2l5242 4598                       i2l5226 4568                       i2l5218 4522  
                     i2l5252 442C                       i2l7100 0A4C                       i2l7020 07F6  
                     i2l7004 078A                       i2l5238 458C                       i2l7110 0A6C  
                     i2l7102 0A52                       i2l7030 0832                       i2l4640 4854  
                     i2l4632 4816                       i2l5184 517C                       i2l7104 0A56  
                     i2l7024 080C                       i2l7008 0792                       i2l4642 4872  
                     i2l4634 4820                       i2l4810 4CA0                       i2l7114 0A74  
                     i2l7018 07EC                       i2l7034 083A                       i2l4644 487C  
                     i2l4636 483E                       i2l4628 4808                       i2l4812 4CAC  
                     i2l7060 091A                       i2l5470 4EFC                       i2l4902 4B02  
                     i2l5198 4118                       i2l5518 258A                       i2l5534 3014  
                     i2l7046 08DA                       i2l5472 4F08                       i2l4832 27F2  
                     i2l4912 3E4C                       i2l5528 2FF2                       i2l6600 16B6  
                     i2l6512 14D2                       i2l4826 27C8                       i2l5490 242A  
                     i2l6434 3B56                       i2l6610 1718                       i2l6530 1556  
                     i2l6506 14C8                       i2l6514 1506                       i2l7090 0A1A  
                     i2l4860 2860                       i2l4932 3EA6                       i2l5484 23F2  
                     i2l6532 155A                       i2l6508 14CC                       i2l6612 1720  
                     i2l6452 4DA0                       i2l4854 2844                       i2l4942 3ECE  
                     i2l4918 3E74                       i2l6446 3C26                       i2l6606 16FC  
                     i2l6526 153C                       i2l5814 53A4                       i2l6462 4DC4  
                     i2l7086 0A04                    ??i2_floor 0044                       i2l4856 284E  
                     i2l4848 2822                       i2l4936 3EB6                       i2l4960 3D5C  
                     i2l5496 2462                       i2l5904 542C                       i2l6608 1712  
                     i2l6544 1586                       i2l6560 15B6                       i2l6456 4DA8  
                     i2l7096 0A40                       i2l4874 28CC                       i2l4866 2882  
                     i2l4858 2858                       i2l4946 3EDE                       i2l5914 4FBA  
                     i2l6546 158A                       i2l6562 15CC                       i2l6482 1418  
                     i2l5860 4B1A                       i2l4884 28FC                       i2l4868 288C  
                     i2l4892 4AA6                       i2l5916 4FC2                       i2l6580 1628  
                     i2l6572 160A                       i2l6492 143C                       i2l6812 0140  
                     i2l4990 3DF6                       i2l4982 3DD2                       i2l5926 4FE2  
                     i2l5918 4FC6                       i2l5942 5152                       i2l5934 5132  
                     i2l6574 1612                       i2l6486 1428                    ??i2_ldexp 0039  
                     i2l5872 4B40                       i2l4896 4AD6                       i2l4992 3DFC  
                     i2l5936 513A                       i2l6592 165A                       i2l6568 15E6  
                     i2l6488 1436                       i2l6904 0408                       i2l6832 01FE  
                     i2l6808 012A                       i2l5874 4B48                       i2l5866 4B2A  
                     i2l4978 3DC2                       i2l5970 29E4                       i2l5962 2980  
                     i2l5938 513E                       i2l6586 163E                       i2l6498 146A  
                     i2l6922 04BE                       i2l6850 027E                       i2l6842 0254  
                     i2l6834 020A                       i2l6818 0166                       i2l5892 4B80  
                     i2l5884 4B68                       i2l5876 4B4C                       i2l4996 3E12  
                     i2l4988 3DEA                       i2l5956 2968                       i2l6588 1646  
                     i2l6596 166C                       i2l6932 04FA                       i2l6852 0288  
                     i2l5974 2A06                       i2l6598 1672                       i2l6950 05B0  
                     i2l6926 04D4                       i2l6918 04A0                       i2l6870 02F0  
                     i2l6862 02C4                       i2l6838 023E                       i2l6790 009C  
                     i2l5888 4B72                       i2l6960 05EC                       i2l6856 029E  
                     i2l6848 027A                       i2l6954 05C6                       i2l6946 0592  
                     i2l6890 03AE                       i2l6866 02DA                       i2l6786 0086  
                     i2l6876 0316                       i2l6796 00E0                       i2l6974 0684  
                     i2l6894 03CC                    ??i2_frexp 0006                       i2l6994 074E  
                     i2l6898 03E2                       i2l6998 0764             __end_of___lwtoft 530C  
                     u434_41 2786                       u435_41 279A                       u460_41 3E5C  
                     u464_41 3D40                       u490_41 403C                       u458_41 3E34  
                     u488_41 4014                       _TMR0IE 007F95                       _TMR0IF 007F92  
                  ??i2_putch 0003                       _TMR1IE 007CE8                       _TMR1IF 007CF0  
                     _TMR1CS 007E69                       _TMR3IE 007D01                       _TMR3IF 007D09  
                     _TMR3CS 007D89                       _TMR0ON 007EAF                       _TMR1ON 007E68  
                     _TMR3ON 007D88                       _SSPADD 000FC8                       _TRISC3 007CA3  
                     _TRISC4 007CA4                       _SSPBUF 000FC9                  i2frexp@eptr 0004  
                     i2exp@x 0049                       i2log@x 0034                       i2pow@x 0052  
                     i2pow@y 0055                  ?i2_savedata 0001               __CFG_XINST$OFF 000000  
   __size_of_eeprom_readbyte 0018            ?_read_colorsensor 0001                       ___ftge 4442  
                     ___wmul 524E           ??_read_colorsensor 0093                    ??___awdiv 0094  
                  ??___ftadd 00B1               __CFG_STVREN$ON 000000                    ??___awmod 0094  
                  ??___ftdiv 009E                    ??___ftneg 0093                    ??___lldiv 0098  
                  ??___ftmul 00A2                    ??___ftsub 00BD                    ??___fttol 00BB  
                  ??___lwdiv 0094                    ??___lwmod 009B                dec_to_hex@num 00DB  
             i2___altoft@exp 003F                       clear_0 4F78                       clear_1 4F84  
                     clear_2 4F90             ___awdiv@quotient 0096              ___awmod@divisor 0092  
            ___awmod@counter 0094                    ??_lcdInst 0092                       _printf 1038  
             i2___awdiv@sign 0006                       floor@i 00D3                       floor@x 00D0  
      ___ftmul@f3_as_product 00A6                    ??_initLCD 0093             __end_of_savedata 1A16  
                  ??_isdigit 0090            __end_ofi2___awdiv 4B8A            __end_ofi2___ftadd 2922  
          __end_ofi2___ftdiv 40EA               i2___ftadd@exp1 0027               i2___ftadd@exp2 0026  
          __end_ofi2___ftneg 53F4            __end_ofi2___ftmul 3F18            __end_ofi2___ftsub 51A6  
          __end_ofi2___fttol 3E24               i2___ftadd@sign 0025            __end_ofi2___lwdiv 4FF6  
               __mediumconst FD92            __end_ofi2___lwmod 5166                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                    ??_standby 00B2  
          __end_ofi2_lcdInst 54D8            __end_ofi2_isdigit 5434             __end_ofexp@coeff FDDB  
       __size_of_bottle_time 0036             __end_oflog@coeff FDF6             _eeprom_writebyte 5336  
             i2___ftdiv@cntr 0012                   __accesstop 0080      __end_of__initialization 4F96  
                 ___altoft@c 00C6          __size_ofi2___altoft 0078               i2___ftdiv@sign 0017  
                 ___ftadd@f1 00AB                   ___ftadd@f2 00AE          __size_ofi2___awtoft 0038  
        __size_ofi2___ftpack 00AE                   ___ftge@ff1 00A7                   ___ftge@ff2 00AA  
        __size_ofi2___lltoft 005C                 eval_poly@res 00C0                ___rparam_used 000001  
                 ___ftdiv@f1 0098                   ___ftdiv@f2 009B                   ___ftdiv@f3 00A2  
           i2dec_to_hex@temp 006B                   ___ftneg@f1 0090                   ___awtoft@c 0098  
             i2___ftpack@arg 0001               i2___ftpack@exp 0004                __end_ofi2_exp 25C2  
              __end_ofi2_log 30F4                   ___ftmul@f1 009C                   ___ftmul@f2 009F  
              __end_ofi2_pow 2A98                   ___ftsub@f1 00B7                   ___ftsub@f2 00BA  
          i2_eeprom_readbyte 5464                   ___fttol@f1 00B7           i2___lwmod@dividend 0008  
             __pcstackCOMRAM 0001                 __pidataBANK1 54D8                   ___lltoft@c 0098  
            ??_bottle_count1 00B2              ??_bottle_count2 00B2              ??_bottle_count3 00B2  
            ??_bottle_count4 00B2           ?i2_eeprom_readbyte 0001                __end_of_floor 3A3E  
              __end_of_ldexp 320C                __end_of_frexp 47F8               i2___ftmul@cntr 001A  
             i2___ftmul@sign 001B                __end_of_putch 54B0                  i2printf@idx 0017  
                i2printf@val 001B           __size_of_date_time 00D2               i2___fttol@exp1 0036  
                 ___lwtoft@c 0098               i2___fttol@lval 0032                    ?i2___ftge 0001  
                  ?i2___wmul 0001           __size_of_lcdNibble 0060          ??i2_eeprom_readbyte 0003  
                i2putch@data 0003                      ??i2_exp 004C                      ??i2_log 0037  
                    ??i2_pow 0058                    ?i2_printf 000D          __size_ofi2_savedata 025A  
           _flag_bottle_high 0135  __size_of_I2C_ColorSens_Init 00FE                      ??_floor 00D3  
                    ??_ldexp 00C8                      ??_frexp 0095   __end_ofi2_eeprom_writebyte 5384  
             i2___lltoft@exp 0011         __end_of_bottle_count 3940                   _dec_to_hex 320C  
                    ??_putch 0092                   __pbssBANK0 00DF                   __pbssBANK1 0100  
         __size_of_eval_poly 00EC    __end_ofi2_eeprom_readbyte 547A           __size_of_read_time 0076  
                    ?___ftge 00A7                 ?i2_lcdNibble 0001                      ?___wmul 0090  
                  ?___altoft 00C6                   _flag_eskaC 0137            ??_eeprom_readbyte 0092  
                  ?___awtoft 0098                    ?___ftpack 0090                      ?_printf 009C  
         __size_of_operation 0572                    ?___lltoft 0098                   _flag_yopNC 013B  
            _bottle_read_bot 012B                   ??i2___ftge 0007              _bottle_read_top 012D  
                    _T1CKPS0 007E6C                      _T1CKPS1 007E6D                      _T3CKPS0 007D8C  
                  ?___lwtoft 0098                      _T3CKPS1 007D8D                   ??i2___wmul 0005  
   i2eeprom_readbyte@address 0001                 i2floor@expon 0044                 ?i2_eval_poly 0028  
               i2eval_poly@d 002B                 i2eval_poly@n 002D                 i2eval_poly@x 0028  
                 ??i2_printf 0013                 i2ldexp@value 0034                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                   _color_high 0117                      _SSPSTAT 000FC7  
               ?i2_read_time 0001                      i2_floor 40EA                      i2_ldexp 450A  
                    i2_frexp 49E6            __end_of_date_time 4370                      i2_putch 54C0  
               i2frexp@value 0001            _bottle_count_disp 0172                      i2pow@yi 005F  
__size_ofi2_I2C_Master_Start 0008            __end_of_lcdNibble 4E96  __size_ofi2_I2C_Master_Write 000A  
              ?_operationend 0001                      __Hparam 0000                    ?_savedata 0001  
                    __Lparam 0000              __size_of___ftge 00C8                      ___awdiv 45D0  
                    ___ftadd 1CDE                i2dec_to_hex@i 006D                      ___awmod 48A6  
                    ___ftdiv 2D46                      ___ftneg 5284                      ___lldiv 468E  
            __size_of___wmul 0036                      ___ftmul 2A98                      ___ftsub 5094  
                    ___fttol 2E92                      ___lwdiv 4C06                      ___lwmod 4DD4  
               ??i2___altoft 003B                   _curr_state 00ED                   ??___altoft 00CA  
                    __pcinit 4F52                 ??i2___awtoft 000C                 ??i2___ftpack 0006  
                 ??___awtoft 009B                   ??___ftpack 0095            __end_of_eval_poly 4004  
    i2___ftmul@f3_as_product 0017                      __ramtop 1000                 ??i2___lltoft 000D  
                    _lcdInst 54B0                   ??___lltoft 009C                      __ptext0 1A16  
                    __ptext1 51A6                      __ptext2 5434                      __ptext3 0AC6  
                    __ptext4 173A                      __ptext5 5336                      __ptext6 544C  
                    __ptext7 4CF6                      __ptext8 3C38                      __ptext9 320C  
            __size_of_printf 03D6                   ??___lwtoft 009B               dec_to_hex@temp 0166  
                    _initLCD 4FF6            __end_of_hexpowers FDB6                i2_isdigit$965 0002  
                    _dpowers FDA4                 i2read_time@i 0004                 __size_of_exp 023A  
               __size_of_log 0150                      _isdigit 530C                 __size_of_isr 0ABE  
__size_ofi2_read_colorsensor 00D6               _operation$1412 016E                 __size_of_pow 01B4  
           ___awmod@dividend 0090              i2___altoft@sign 0040            __end_of_read_time 4D6C  
   __size_of_I2C_Master_Init 0060     __size_of_I2C_Master_Read 002E     __size_of_I2C_Master_Wait 0014  
                 date_time@i 00B2     __size_of_I2C_Master_Stop 0008                      _timeset FDB6  
                    _standby 51A6                  ?_dec_to_hex 00DB               __pintcode_body 0012  
       end_of_initialization 4F96                      exp@sign 014E      eeprom_writebyte@address 0092  
              __Lmediumconst FD92                      int_func 0012          i2___wmul@multiplier 0001  
          __end_of_operation 1038           __end_ofi2___altoft 4CF6               _operation_disp 013D  
         __end_ofi2___awtoft 5218           __end_ofi2___ftpack 48A6               _operation_time 013F  
             ??_operationend 00B2   __size_ofi2_eeprom_readbyte 0016    __size_of_I2C_Master_Start 0008  
         __end_ofi2___lltoft 4F52    __size_of_I2C_Master_Write 000A              ___lldiv@divisor 0094  
               ??i2_savedata 0006                      pow@sign 015B                   ??_savedata 0095  
            ___lldiv@counter 009C               i2eval_poly@res 0031                      printf@c 00B1  
                    printf@f 009C             I2C_Master_Init@c 009D             I2C_Master_Read@a 0091  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE        __end_of_emergencystop 5416     __end_of_eeprom_writebyte 535E  
                  _PORTAbits 000F80        __size_of_bottle_count 0104    __size_of_read_colorsensor 00F8  
          i2_I2C_Master_Read 5384            i2_I2C_Master_Wait 548E            i2_I2C_Master_Stop 5506  
         __end_ofi2_savedata 21A0                    i2___awdiv 4B06                    i2___ftadd 2776  
                  i2___ftdiv 4004                    i2___ftneg 53D0            i2___lwdiv@divisor 0003  
                  i2___ftmul 3E24                    i2___ftsub 5166                    i2___fttol 3D30  
                  i2___lwdiv 4FA4                    i2___lwmod 5124            i2___lwdiv@counter 0007  
         ?i2_I2C_Master_Read 0001           ?i2_I2C_Master_Wait 0001           ?i2_I2C_Master_Stop 0001  
                 _start_time 007A                    i2_lcdInst 54CC                  ___ftdiv@exp 00A5  
                printf@width 00AF              i2___awtoft@sign 000C           i2___awdiv@dividend 0001  
        ??i2_I2C_Master_Read 0002              i2___ftpack@sign 0005                    i2_isdigit 5416  
        ??i2_I2C_Master_Wait 0001          ??i2_I2C_Master_Stop 0002                  ___ftmul@exp 00A5  
          i2_dec_to_hex$1675 0065            i2_dec_to_hex$1676 0068                 _bottle_count 383C  
             __end_of___ftge 450A                    i2exp@sign 0051               __end_of___wmul 5284  
        __size_of_dec_to_hex 0114         __size_ofi2_lcdNibble 004E                i2lcdInst@data 0003  
       eeprom_writebyte@data 0094                   floor@expon 00D6             i2___wmul@product 0005  
             __end_of_printf 140E                 i2printf@flag 001D    __end_ofi2_I2C_Master_Read 53AA  
  __end_ofi2_I2C_Master_Wait 54A0                 i2printf@prec 001A          start_initialization 4F52  
  __end_ofi2_I2C_Master_Stop 550E            __size_ofi2___ftge 0090                    i2pow@sign 005E  
                 eval_poly@d 00BA                   eval_poly@n 00BC                   eval_poly@x 00B7  
         i2___awdiv@quotient 0007            __size_ofi2___wmul 0026                   ldexp@value 00C3  
                __end_of_exp 23DA                  __end_of_log 2D46                  __end_of_isr 0AC6  
                __end_of_pow 2776                    i2printf@c 0020                    i2printf@f 000D  
              ??_bottle_time 00B2        i2I2C_Master_Read@temp 0003         __size_ofi2_eval_poly 00D2  
            i2___fttol@sign1 0031                   ?i2___awdiv 0001                   ?i2___ftadd 001C  
                 ?i2___ftdiv 0009                   ?i2___ftneg 0001                   ?i2___ftmul 000D  
                 ?i2___ftsub 0028                   ?i2___fttol 0028                   ?i2___lwdiv 0001  
                 ?i2___lwmod 0008            __size_ofi2_printf 032C                   frexp@value 0090  
          ??_I2C_Master_Init 00A1            ??_I2C_Master_Read 0091            ??_I2C_Master_Wait 0090  
                 ?i2_lcdInst 0001            ??_I2C_Master_Stop 0091         __size_ofi2_read_time 0068  
            _eeprom_readbyte 544C                   ?i2_isdigit 0001           i2_eeprom_writebyte 535E  
                   ??___ftge 00AD                     ??___wmul 0094                  __pdataBANK1 0172  
           __CFG_LPT1OSC$OFF 000000        __end_of_bottle_count1 383C        __end_of_bottle_count2 3738  
      __end_of_bottle_count3 3634        __end_of_bottle_count4 3530          ?i2_eeprom_writebyte 0003  
                   ??_printf 00A4            __size_of___altoft 009E                   read_time@i 0093  
          __size_of___awtoft 0044            __size_of___ftpack 010C            __size_of___lltoft 007C  
 __end_of_I2C_ColorSens_Init 3B3C                  __pbssCOMRAM 0076         __end_of_operationend 544C  
            i2dec_to_hex@num 0063            __size_of___lwtoft 002A                __pcstackBANK0 0080  
              __pcstackBANK1 0149            i2___lwmod@divisor 000A            i2___lwmod@counter 000C  
              ?i2_dec_to_hex 0063         ??i2_eeprom_writebyte 0006                     ?i2_floor 0041  
                   ?i2_ldexp 0034                     ?i2_frexp 0001                     ?i2_putch 0001  
        __end_of_bottle_time 524E             _I2C_Master_Start 54FE          i2I2C_Master_Write@d 0002  
           _I2C_Master_Write 54E2                    _date_time 429E             ___lwdiv@dividend 0090  
          __CFG_CCP2MX$PORTC 000000            _operation_timeout 0141                    __pintcode 0008  
              __pmediumconst FD92                    _lcdNibble 4E36            __size_of_savedata 02DC  
                   ?___awdiv 0090                     ?___ftadd 00AB                     ?___awmod 0090  
                   ?___ftdiv 0098                     ?___ftneg 0090                     ?___lldiv 0090  
                   ?___ftmul 009C                     ?___ftsub 00B7                     ?___fttol 00B7  
                   ?___lwdiv 0090                     ?___lwmod 0097                     ?_lcdInst 0001  
           dec_to_hex@hexnum 016A                    _color_low 011B                     ?_initLCD 0001  
                  _colorprev 0108                     ?_isdigit 0001             _read_colorsensor 3C38  
 __size_ofi2_I2C_Master_Read 0026   __size_ofi2_I2C_Master_Wait 0012                    _eval_poly 3F18  
 __size_ofi2_I2C_Master_Stop 0008               __size_ofi2_exp 01E8               __size_ofi2_log 011E  
                _flag_bottle 0133               __size_ofi2_pow 0176                  _flag_picbug 00E9  
                  _hexpowers FDAE                     ?_standby 0001             ___lwdiv@quotient 0094  
             ??i2_dec_to_hex 0065                  ??i2___awdiv 0005                  ??i2___ftadd 0022  
             __size_of_floor 00FE               __size_of_ldexp 0118                  ??i2___ftdiv 000F  
             __size_of_frexp 00AE                  ??i2___ftneg 0004                 ??_dec_to_hex 00DD  
                ??i2___ftmul 0013                  ??i2___ftsub 002E                  ??i2___fttol 002C  
                ??i2___lwdiv 0005                  ??i2___lwmod 000C      __end_of_eeprom_readbyte 5464  
                  _read_time 4CF6               __size_of_putch 0010   __end_ofi2_I2C_Master_Start 5516  
 __end_ofi2_I2C_Master_Write 54F6                  ??i2_lcdInst 0003               ___wmul@product 0094  
                   _LATAbits 000F89                     _LATCbits 000F8B                     _LATDbits 000F8C  
                ??i2_isdigit 0001                   ?_date_time 0001                     i2u500_40 4542  
                   i2u500_48 4544                i2exp@exponent 004F                     _PIR2bits 000FA1  
                   i2u535_40 246A                    _operation 0AC6                     i2u536_40 246C  
                   i2u473_40 4A36                     i2u466_40 3D7A                     i2u473_48 4A38  
                   i2u466_45 3D72                     i2u497_40 4132                     i2u577_40 53A2  
                   i2u599_40 29CC                     i2u695_40 0946                     i2u890_47 505E  
                   i2u891_47 5066                     i2u892_47 5086                     i2u893_47 508E  
              i2ldexp@newexp 0037                     i2u888_47 00F4                     i2u889_47 0A7C  
           __CFG_WDTPS$32768 000000                   ?_lcdNibble 0001                i2log@exponent 0037  
         __end_of_dec_to_hex 3320   __end_ofi2_read_colorsensor 429E            ?_eeprom_writebyte 0092  
          ___wmul@multiplier 0090                     i2___ftge 4A76                     i2___wmul 53AA  
              lcdNibble@data 0091                   printf@flag 00AE                lcdNibble@temp 0090  
                 printf@prec 00AB           ??_eeprom_writebyte 0095                   ?_eval_poly 00B7  
          i2___awdiv@divisor 0003            i2___awdiv@counter 0005                     i2_printf 140E  
                   i2floor@i 0046                     i2floor@x 0041                  _bottle_time 5218  
        I2C_Master_Read@temp 0092                    copy_data0 4F66           _bottle_count_array 00DF  
                 ?_read_time 0001           dec_to_hex@quotient 016C             __size_ofi2_floor 00DE  
           __size_ofi2_ldexp 00C6             __size_ofi2_frexp 0090             __size_ofi2_putch 000C  
                  frexp@eptr 0093                   _EECON1bits 000FA6                     __Hrparam 0000  
                 ?_operation 0001                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
                dec_to_hex@i 0168             __size_of___awdiv 00BE             __size_of___ftadd 0268  
           __size_of___awmod 00A2             __size_of___ftdiv 014C    i2eeprom_writebyte@address 0003  
           __size_of___ftneg 0030        i2___wmul@multiplicand 0003             __size_of___lldiv 00BC  
                   ___altoft 4948             __size_of___ftmul 015E             __size_of___ftsub 004C  
           __size_of___fttol 0144             __size_of___lwdiv 0078             __size_of___lwmod 0062  
      __size_of_operationend 0018                     ___awtoft 50E0                     ___ftpack 3320  
                   ___lltoft 4B8A                _flag_top_read 0139                  _isdigit$965 0091  
         i2I2C_Master_Read@a 0002                     ___lwtoft 52E2             __size_of_lcdInst 0010  
                   _exp$1415 0149              _I2C_Master_Init 4E96              _I2C_Master_Read 52B4  
           __size_of_initLCD 0050              _I2C_Master_Wait 547A              _I2C_Master_Stop 54F6  
                   _isr$1674 0074             __size_of_isdigit 002A              ___lwdiv@divisor 0092  
            ___lwdiv@counter 0096                     __ptext10 25C2                     __ptext11 2BF6  
                   __ptext20 2A98                     __ptext12 21A0                     __ptext21 5094  
                   __ptext13 30F4                     __ptext30 4FF6                     __ptext22 1CDE  
                   __ptext14 3940                     __ptext31 53F4                     __ptext23 5284  
                   __ptext15 474A                     __ptext40 1038                     __ptext32 429E  
                   __ptext24 2D46                     __ptext16 2E92                     __ptext41 54A0  
                   __ptext33 52B4                     __ptext25 50E0                     __ptext17 4442  
                   __ptext50 468E                     __ptext42 530C                     __ptext34 5218  
                   __ptext26 4B8A                     __ptext18 4948                     __ptext51 3A3E  
                   __ptext43 524E                     __ptext35 342C                     __ptext27 45D0  
                   __ptext19 3F18                     __ptext60 4D6C                     __ptext52 54E2  
                   __ptext44 4DD4                     __ptext36 3530                     __ptext28 52E2  
                   __ptext61 41C8                     __ptext53 54F6                     __ptext45 4C06  
                   __ptext37 3634                     __ptext29 3320                     __ptext70 5124  
                   __ptext62 54EC                     __ptext54 54FE                     __ptext46 54B0  
                   __ptext38 3738                     __ptext71 4FA4                     __ptext63 5506  
                   __ptext55 547A                     __ptext47 4E36                     __ptext39 383C  
                   __ptext80 49E6                     __ptext72 54CC                     __ptext64 550E  
                   __ptext48 48A6                     __ptext81 3D30                     __ptext73 5046  
                   __ptext65 5384                     __ptext57 1F46                     __ptext49 4E96  
                   __ptext90 4004                     __ptext82 4A76                     __ptext74 3B3C  
                   __ptext66 548E                     __ptext58 535E                     __ptext91 51E0  
                   __ptext83 4C7E                     __ptext75 2922                     __ptext67 140E  
                   __ptext59 5464                     __ptext92 4EF6                     __ptext84 4370  
                   __ptext76 2FD6                     __ptext68 54C0                     __ptext93 47F8  
                   __ptext85 53AA                     __ptext77 23DA                     __ptext69 5416  
                   __ptext94 4B06                     __ptext86 3E24                     __ptext78 450A  
                   __ptext87 5166                     __ptext79 40EA                     __ptext88 2776  
                   __ptext89 53D0                     _end_time 0076             __size_of_standby 003A  
                   _pow$1413 0155                     _pow$1414 0158             ?_eeprom_readbyte 0090  
     __size_of_emergencystop 0022                __size_of_main 02C8              _dec_to_hex$1410 0160  
            _dec_to_hex$1411 0163                  ??_date_time 00B2                     _savedata 173A  
               _operationend 5434                ??i2_lcdNibble 0001                  ??_lcdNibble 0090  
                   int$flags 007F         __end_ofi2_dec_to_hex 3C38                    printf@idx 00A8  
                  printf@val 00AC                     exp@coeff FDBD                     log@coeff FDDB  
                  putch@data 0092     __end_of_I2C_Master_Start 5506                ??i2_eval_poly 002F  
   __end_of_I2C_Master_Write 54EC                 _servo0_timer 0143                   _INTCONbits 000FF2  
                ??_eval_poly 00BE                 _servo1_timer 0145                     isdigit@c 0092  
              ??i2_read_time 0004                  ??_read_time 0093                     intlevel2 0000  
           ___lwmod@dividend 0097             ___lldiv@dividend 0090           _I2C_ColorSens_Init 3A3E  
   __end_of_read_colorsensor 3D30                  ??_operation 00DD          ?_I2C_ColorSens_Init 0001  
                   printf@ap 00A9      __end_of_I2C_Master_Init 4EF6                  _servo0_flag 007E  
    __end_of_I2C_Master_Read 52E2                  _servo1_flag 00EE      __end_of_I2C_Master_Wait 548E  
    __end_of_I2C_Master_Stop 54FE                  lcdInst@data 0092                _emergencystop 53F4  
        __end_ofi2_lcdNibble 5094             ___lldiv@quotient 0098            I2C_Master_Write@d 0091  
            ___lwmod@divisor 0099              ___lwmod@counter 009B       eeprom_readbyte@address 0090  
       ??_I2C_ColorSens_Init 0093          __end_ofi2_eval_poly 4442  __size_ofi2_eeprom_writebyte 0026  
     __size_of_bottle_count1 0104       __size_of_bottle_count2 0104       __size_of_bottle_count3 0104  
     __size_of_bottle_count4 0104          __end_ofi2_read_time 4DD4  
