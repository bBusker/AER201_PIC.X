

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 07 15:38:51 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           ; Version 1.40
    58                           ; Generated 01/12/2016 GMT
    59                           ; 
    60                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4620 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  001132                     __pidataCOMRAM:
    94                           	opt stack 0
    95                           
    96                           ;initializer for _bottle_count_disp
    97  001132  FFFF               	dw	65535
    98                           
    99                           	psect	mediumconst
   100  00FE1C                     __pmediumconst:
   101                           	opt stack 0
   102  00FE1C  00                 	db	0
   103  00FE1D                     _keys:
   104                           	opt stack 0
   105  00FE1D  31                 	db	49
   106  00FE1E  32                 	db	50
   107  00FE1F  33                 	db	51
   108  00FE20  41                 	db	65
   109  00FE21  34                 	db	52
   110  00FE22  35                 	db	53
   111  00FE23  36                 	db	54
   112  00FE24  42                 	db	66
   113  00FE25  37                 	db	55
   114  00FE26  38                 	db	56
   115  00FE27  39                 	db	57
   116  00FE28  43                 	db	67
   117  00FE29  2A                 	db	42
   118  00FE2A  30                 	db	48
   119  00FE2B  23                 	db	35
   120  00FE2C  44                 	db	68
   121  00FE2D  00                 	db	0
   122  00FE2E                     __end_of_keys:
   123                           	opt stack 0
   124  00FE2E                     _dpowers:
   125                           	opt stack 0
   126  00FE2E  0001               	dw	1
   127  00FE30  000A               	dw	10
   128  00FE32  0064               	dw	100
   129  00FE34  03E8               	dw	1000
   130  00FE36  2710               	dw	10000
   131  00FE38                     __end_of_dpowers:
   132                           	opt stack 0
   133  00FE38                     _hexpowers:
   134                           	opt stack 0
   135  00FE38  0001               	dw	1
   136  00FE3A  0010               	dw	16
   137  00FE3C  0100               	dw	256
   138  00FE3E  1000               	dw	4096
   139  00FE40                     __end_of_hexpowers:
   140                           	opt stack 0
   141  00FE40                     _timeset:
   142                           	opt stack 0
   143  00FE40  50                 	db	80
   144  00FE41  35                 	db	53
   145  00FE42  21                 	db	33
   146  00FE43  08                 	db	8
   147  00FE44  05                 	db	5
   148  00FE45  02                 	db	2
   149  00FE46  17                 	db	23
   150  00FE47                     __end_of_timeset:
   151                           	opt stack 0
   152  0000                     _TMR0	set	4054
   153  0000                     _ADCON0	set	4034
   154  0000                     _ADCON1	set	4033
   155  0000                     _INTCONbits	set	4082
   156  0000                     _LATA	set	3977
   157  0000                     _LATB	set	3978
   158  0000                     _LATC	set	3979
   159  0000                     _LATD	set	3980
   160  0000                     _LATDbits	set	3980
   161  0000                     _LATE	set	3981
   162  0000                     _PORTB	set	3969
   163  0000                     _SSPADD	set	4040
   164  0000                     _SSPBUF	set	4041
   165  0000                     _SSPCON1	set	4038
   166  0000                     _SSPCON2	set	4037
   167  0000                     _SSPSTAT	set	4039
   168  0000                     _TRISA	set	3986
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISC	set	3988
   171  0000                     _TRISD	set	3989
   172  0000                     _TRISE	set	3990
   173  0000                     _ACKDT	set	32301
   174  0000                     _ACKEN	set	32300
   175  0000                     _INT1IE	set	32643
   176  0000                     _INT1IF	set	32640
   177  0000                     _PEN	set	32298
   178  0000                     _PSA	set	32427
   179  0000                     _RCEN	set	32299
   180  0000                     _RSEN	set	32297
   181  0000                     _SEN	set	32296
   182  0000                     _T08BIT	set	32430
   183  0000                     _T0CS	set	32429
   184  0000                     _T0PS0	set	32424
   185  0000                     _T0PS1	set	32425
   186  0000                     _T0PS2	set	32426
   187  0000                     _TMR0IE	set	32661
   188  0000                     _TMR0IF	set	32658
   189  0000                     _TMR0ON	set	32431
   190  0000                     _TRISC3	set	31907
   191  0000                     _TRISC4	set	31908
   192  0000                     _nRBPU	set	32655
   193  00FE47                     STR_21:
   194  00FE47  52                 	db	82	;'R'
   195  00FE48  75                 	db	117	;'u'
   196  00FE49  6E                 	db	110	;'n'
   197  00FE4A  6E                 	db	110	;'n'
   198  00FE4B  69                 	db	105	;'i'
   199  00FE4C  6E                 	db	110	;'n'
   200  00FE4D  67                 	db	103	;'g'
   201  00FE4E  7E                 	db	126
   202  00FE4F  7E                 	db	126
   203  00FE50  7E                 	db	126
   204  00FE51  20                 	db	32
   205  00FE52  20                 	db	32
   206  00FE53  20                 	db	32
   207  00FE54  20                 	db	32
   208  00FE55  20                 	db	32
   209  00FE56  20                 	db	32
   210  00FE57  20                 	db	32
   211  00FE58  20                 	db	32
   212  00FE59  20                 	db	32
   213  00FE5A  20                 	db	32
   214  00FE5B  20                 	db	32
   215  00FE5C  20                 	db	32
   216  00FE5D  20                 	db	32
   217  00FE5E  20                 	db	32
   218  00FE5F  00                 	db	0
   219  00FE60                     STR_20:
   220  00FE60  52                 	db	82	;'R'
   221  00FE61  75                 	db	117	;'u'
   222  00FE62  6E                 	db	110	;'n'
   223  00FE63  6E                 	db	110	;'n'
   224  00FE64  69                 	db	105	;'i'
   225  00FE65  6E                 	db	110	;'n'
   226  00FE66  67                 	db	103	;'g'
   227  00FE67  7E                 	db	126
   228  00FE68  7E                 	db	126
   229  00FE69  20                 	db	32
   230  00FE6A  20                 	db	32
   231  00FE6B  20                 	db	32
   232  00FE6C  20                 	db	32
   233  00FE6D  20                 	db	32
   234  00FE6E  20                 	db	32
   235  00FE6F  20                 	db	32
   236  00FE70  20                 	db	32
   237  00FE71  20                 	db	32
   238  00FE72  20                 	db	32
   239  00FE73  20                 	db	32
   240  00FE74  20                 	db	32
   241  00FE75  20                 	db	32
   242  00FE76  20                 	db	32
   243  00FE77  00                 	db	0
   244  00FE78                     STR_19:
   245  00FE78  52                 	db	82	;'R'
   246  00FE79  75                 	db	117	;'u'
   247  00FE7A  6E                 	db	110	;'n'
   248  00FE7B  6E                 	db	110	;'n'
   249  00FE7C  69                 	db	105	;'i'
   250  00FE7D  6E                 	db	110	;'n'
   251  00FE7E  67                 	db	103	;'g'
   252  00FE7F  7E                 	db	126
   253  00FE80  20                 	db	32
   254  00FE81  20                 	db	32
   255  00FE82  20                 	db	32
   256  00FE83  20                 	db	32
   257  00FE84  20                 	db	32
   258  00FE85  20                 	db	32
   259  00FE86  20                 	db	32
   260  00FE87  20                 	db	32
   261  00FE88  20                 	db	32
   262  00FE89  20                 	db	32
   263  00FE8A  20                 	db	32
   264  00FE8B  20                 	db	32
   265  00FE8C  20                 	db	32
   266  00FE8D  20                 	db	32
   267  00FE8E  00                 	db	0
   268  00FE8F                     STR_17:
   269  00FE8F  54                 	db	84	;'T'
   270  00FE90  6F                 	db	111	;'o'
   271  00FE91  74                 	db	116	;'t'
   272  00FE92  61                 	db	97	;'a'
   273  00FE93  6C                 	db	108	;'l'
   274  00FE94  20                 	db	32
   275  00FE95  4F                 	db	79	;'O'
   276  00FE96  70                 	db	112	;'p'
   277  00FE97  65                 	db	101	;'e'
   278  00FE98  72                 	db	114	;'r'
   279  00FE99  61                 	db	97	;'a'
   280  00FE9A  74                 	db	116	;'t'
   281  00FE9B  69                 	db	105	;'i'
   282  00FE9C  6F                 	db	111	;'o'
   283  00FE9D  6E                 	db	110	;'n'
   284  00FE9E  20                 	db	32
   285  00FE9F  20                 	db	32
   286  00FEA0  20                 	db	32
   287  00FEA1  20                 	db	32
   288  00FEA2  20                 	db	32
   289  00FEA3  20                 	db	32
   290  00FEA4  20                 	db	32
   291  00FEA5  00                 	db	0
   292  00FEA6                     STR_4:
   293  00FEA6  44                 	db	68	;'D'
   294  00FEA7  61                 	db	97	;'a'
   295  00FEA8  74                 	db	116	;'t'
   296  00FEA9  65                 	db	101	;'e'
   297  00FEAA  3A                 	db	58	;':'
   298  00FEAB  20                 	db	32
   299  00FEAC  25                 	db	37
   300  00FEAD  30                 	db	48	;'0'
   301  00FEAE  32                 	db	50	;'2'
   302  00FEAF  78                 	db	120	;'x'
   303  00FEB0  2F                 	db	47
   304  00FEB1  25                 	db	37
   305  00FEB2  30                 	db	48	;'0'
   306  00FEB3  32                 	db	50	;'2'
   307  00FEB4  78                 	db	120	;'x'
   308  00FEB5  2F                 	db	47
   309  00FEB6  25                 	db	37
   310  00FEB7  30                 	db	48	;'0'
   311  00FEB8  32                 	db	50	;'2'
   312  00FEB9  78                 	db	120	;'x'
   313  00FEBA  20                 	db	32
   314  00FEBB  20                 	db	32
   315  00FEBC  00                 	db	0
   316  00FEBD                     STR_5:
   317  00FEBD  54                 	db	84	;'T'
   318  00FEBE  69                 	db	105	;'i'
   319  00FEBF  6D                 	db	109	;'m'
   320  00FEC0  65                 	db	101	;'e'
   321  00FEC1  3A                 	db	58	;':'
   322  00FEC2  20                 	db	32
   323  00FEC3  25                 	db	37
   324  00FEC4  30                 	db	48	;'0'
   325  00FEC5  32                 	db	50	;'2'
   326  00FEC6  78                 	db	120	;'x'
   327  00FEC7  3A                 	db	58	;':'
   328  00FEC8  25                 	db	37
   329  00FEC9  30                 	db	48	;'0'
   330  00FECA  32                 	db	50	;'2'
   331  00FECB  78                 	db	120	;'x'
   332  00FECC  3A                 	db	58	;':'
   333  00FECD  25                 	db	37
   334  00FECE  30                 	db	48	;'0'
   335  00FECF  32                 	db	50	;'2'
   336  00FED0  78                 	db	120	;'x'
   337  00FED1  20                 	db	32
   338  00FED2  20                 	db	32
   339  00FED3  00                 	db	0
   340  00FED4                     STR_18:
   341  00FED4  54                 	db	84	;'T'
   342  00FED5  69                 	db	105	;'i'
   343  00FED6  6D                 	db	109	;'m'
   344  00FED7  65                 	db	101	;'e'
   345  00FED8  3A                 	db	58	;':'
   346  00FED9  20                 	db	32
   347  00FEDA  37                 	db	55	;'7'
   348  00FEDB  73                 	db	115	;'s'
   349  00FEDC  20                 	db	32
   350  00FEDD  20                 	db	32
   351  00FEDE  20                 	db	32
   352  00FEDF  20                 	db	32
   353  00FEE0  20                 	db	32
   354  00FEE1  20                 	db	32
   355  00FEE2  20                 	db	32
   356  00FEE3  20                 	db	32
   357  00FEE4  20                 	db	32
   358  00FEE5  20                 	db	32
   359  00FEE6  20                 	db	32
   360  00FEE7  20                 	db	32
   361  00FEE8  20                 	db	32
   362  00FEE9  00                 	db	0
   363  00FEEA                     STR_24:
   364  00FEEA  30                 	db	48	;'0'
   365  00FEEB  31                 	db	49	;'1'
   366  00FEEC  32                 	db	50	;'2'
   367  00FEED  33                 	db	51	;'3'
   368  00FEEE  34                 	db	52	;'4'
   369  00FEEF  35                 	db	53	;'5'
   370  00FEF0  36                 	db	54	;'6'
   371  00FEF1  37                 	db	55	;'7'
   372  00FEF2  38                 	db	56	;'8'
   373  00FEF3  39                 	db	57	;'9'
   374  00FEF4  61                 	db	97	;'a'
   375  00FEF5  62                 	db	98	;'b'
   376  00FEF6  63                 	db	99	;'c'
   377  00FEF7  64                 	db	100	;'d'
   378  00FEF8  65                 	db	101	;'e'
   379  00FEF9  66                 	db	102	;'f'
   380  00FEFA  00                 	db	0
   381  00FEFB                     STR_2:
   382  00FEFB  73                 	db	115	;'s'
   383  00FEFC  74                 	db	116	;'t'
   384  00FEFD  61                 	db	97	;'a'
   385  00FEFE  6E                 	db	110	;'n'
   386  00FEFF  64                 	db	100	;'d'
   387  00FF00  62                 	db	98	;'b'
   388  00FF01  79                 	db	121	;'y'
   389  00FF02  20                 	db	32
   390  00FF03  20                 	db	32
   391  00FF04  20                 	db	32
   392  00FF05  20                 	db	32
   393  00FF06  20                 	db	32
   394  00FF07  20                 	db	32
   395  00FF08  20                 	db	32
   396  00FF09  20                 	db	32
   397  00FF0A  20                 	db	32
   398  00FF0B  00                 	db	0
   399  00FF0C                     STR_7:
   400  00FF0C  54                 	db	84	;'T'
   401  00FF0D  6F                 	db	111	;'o'
   402  00FF0E  74                 	db	116	;'t'
   403  00FF0F  61                 	db	97	;'a'
   404  00FF10  6C                 	db	108	;'l'
   405  00FF11  3A                 	db	58	;':'
   406  00FF12  20                 	db	32
   407  00FF13  31                 	db	49	;'1'
   408  00FF14  30                 	db	48	;'0'
   409  00FF15  20                 	db	32
   410  00FF16  20                 	db	32
   411  00FF17  20                 	db	32
   412  00FF18  20                 	db	32
   413  00FF19  20                 	db	32
   414  00FF1A  20                 	db	32
   415  00FF1B  20                 	db	32
   416  00FF1C  00                 	db	0
   417  00FF1D                     STR_3:
   418  00FF1D  50                 	db	80	;'P'
   419  00FF1E  4F                 	db	79	;'O'
   420  00FF1F  52                 	db	82	;'R'
   421  00FF20  54                 	db	84	;'T'
   422  00FF21  42                 	db	66	;'B'
   423  00FF22  3A                 	db	58	;':'
   424  00FF23  20                 	db	32
   425  00FF24  25                 	db	37
   426  00FF25  64                 	db	100	;'d'
   427  00FF26  20                 	db	32
   428  00FF27  20                 	db	32
   429  00FF28  20                 	db	32
   430  00FF29  20                 	db	32
   431  00FF2A  20                 	db	32
   432  00FF2B  20                 	db	32
   433  00FF2C  20                 	db	32
   434  00FF2D  00                 	db	0
   435  00FF2E                     STR_6:
   436  00FF2E  42                 	db	66	;'B'
   437  00FF2F  6F                 	db	111	;'o'
   438  00FF30  74                 	db	116	;'t'
   439  00FF31  74                 	db	116	;'t'
   440  00FF32  6C                 	db	108	;'l'
   441  00FF33  65                 	db	101	;'e'
   442  00FF34  20                 	db	32
   443  00FF35  43                 	db	67	;'C'
   444  00FF36  6F                 	db	111	;'o'
   445  00FF37  75                 	db	117	;'u'
   446  00FF38  6E                 	db	110	;'n'
   447  00FF39  74                 	db	116	;'t'
   448  00FF3A  20                 	db	32
   449  00FF3B  20                 	db	32
   450  00FF3C  20                 	db	32
   451  00FF3D  20                 	db	32
   452  00FF3E  00                 	db	0
   453  00FF3F                     STR_11:
   454  00FF3F  59                 	db	89	;'Y'
   455  00FF40  4F                 	db	79	;'O'
   456  00FF41  50                 	db	80	;'P'
   457  00FF42  2D                 	db	45
   458  00FF43  43                 	db	67	;'C'
   459  00FF44  41                 	db	65	;'A'
   460  00FF45  50                 	db	80	;'P'
   461  00FF46  2D                 	db	45
   462  00FF47  4C                 	db	76	;'L'
   463  00FF48  42                 	db	66	;'B'
   464  00FF49  4C                 	db	76	;'L'
   465  00FF4A  3A                 	db	58	;':'
   466  00FF4B  20                 	db	32
   467  00FF4C  30                 	db	48	;'0'
   468  00FF4D  20                 	db	32
   469  00FF4E  20                 	db	32
   470  00FF4F  00                 	db	0
   471  00FF50                     STR_10:
   472  00FF50  59                 	db	89	;'Y'
   473  00FF51  4F                 	db	79	;'O'
   474  00FF52  50                 	db	80	;'P'
   475  00FF53  2D                 	db	45
   476  00FF54  43                 	db	67	;'C'
   477  00FF55  41                 	db	65	;'A'
   478  00FF56  50                 	db	80	;'P'
   479  00FF57  2B                 	db	43
   480  00FF58  4C                 	db	76	;'L'
   481  00FF59  42                 	db	66	;'B'
   482  00FF5A  4C                 	db	76	;'L'
   483  00FF5B  3A                 	db	58	;':'
   484  00FF5C  20                 	db	32
   485  00FF5D  31                 	db	49	;'1'
   486  00FF5E  20                 	db	32
   487  00FF5F  20                 	db	32
   488  00FF60  00                 	db	0
   489  00FF61                     STR_9:
   490  00FF61  59                 	db	89	;'Y'
   491  00FF62  4F                 	db	79	;'O'
   492  00FF63  50                 	db	80	;'P'
   493  00FF64  2B                 	db	43
   494  00FF65  43                 	db	67	;'C'
   495  00FF66  41                 	db	65	;'A'
   496  00FF67  50                 	db	80	;'P'
   497  00FF68  2D                 	db	45
   498  00FF69  4C                 	db	76	;'L'
   499  00FF6A  42                 	db	66	;'B'
   500  00FF6B  4C                 	db	76	;'L'
   501  00FF6C  3A                 	db	58	;':'
   502  00FF6D  20                 	db	32
   503  00FF6E  31                 	db	49	;'1'
   504  00FF6F  20                 	db	32
   505  00FF70  20                 	db	32
   506  00FF71  00                 	db	0
   507  00FF72                     STR_8:
   508  00FF72  59                 	db	89	;'Y'
   509  00FF73  4F                 	db	79	;'O'
   510  00FF74  50                 	db	80	;'P'
   511  00FF75  2B                 	db	43
   512  00FF76  43                 	db	67	;'C'
   513  00FF77  41                 	db	65	;'A'
   514  00FF78  50                 	db	80	;'P'
   515  00FF79  2B                 	db	43
   516  00FF7A  4C                 	db	76	;'L'
   517  00FF7B  42                 	db	66	;'B'
   518  00FF7C  4C                 	db	76	;'L'
   519  00FF7D  3A                 	db	58	;':'
   520  00FF7E  20                 	db	32
   521  00FF7F  33                 	db	51	;'3'
   522  00FF80  20                 	db	32
   523  00FF81  20                 	db	32
   524  00FF82  00                 	db	0
   525  00FF83                     STR_12:
   526  00FF83  45                 	db	69	;'E'
   527  00FF84  53                 	db	83	;'S'
   528  00FF85  4B                 	db	75	;'K'
   529  00FF86  41                 	db	65	;'A'
   530  00FF87  2B                 	db	43
   531  00FF88  43                 	db	67	;'C'
   532  00FF89  41                 	db	65	;'A'
   533  00FF8A  50                 	db	80	;'P'
   534  00FF8B  2B                 	db	43
   535  00FF8C  4C                 	db	76	;'L'
   536  00FF8D  42                 	db	66	;'B'
   537  00FF8E  4C                 	db	76	;'L'
   538  00FF8F  3A                 	db	58	;':'
   539  00FF90  20                 	db	32
   540  00FF91  31                 	db	49	;'1'
   541  00FF92  20                 	db	32
   542  00FF93  00                 	db	0
   543  00FF94                     STR_14:
   544  00FF94  45                 	db	69	;'E'
   545  00FF95  53                 	db	83	;'S'
   546  00FF96  4B                 	db	75	;'K'
   547  00FF97  41                 	db	65	;'A'
   548  00FF98  2D                 	db	45
   549  00FF99  43                 	db	67	;'C'
   550  00FF9A  41                 	db	65	;'A'
   551  00FF9B  50                 	db	80	;'P'
   552  00FF9C  2B                 	db	43
   553  00FF9D  4C                 	db	76	;'L'
   554  00FF9E  42                 	db	66	;'B'
   555  00FF9F  4C                 	db	76	;'L'
   556  00FFA0  3A                 	db	58	;':'
   557  00FFA1  20                 	db	32
   558  00FFA2  31                 	db	49	;'1'
   559  00FFA3  20                 	db	32
   560  00FFA4  00                 	db	0
   561  00FFA5                     STR_13:
   562  00FFA5  45                 	db	69	;'E'
   563  00FFA6  53                 	db	83	;'S'
   564  00FFA7  4B                 	db	75	;'K'
   565  00FFA8  41                 	db	65	;'A'
   566  00FFA9  2B                 	db	43
   567  00FFAA  43                 	db	67	;'C'
   568  00FFAB  41                 	db	65	;'A'
   569  00FFAC  50                 	db	80	;'P'
   570  00FFAD  2D                 	db	45
   571  00FFAE  4C                 	db	76	;'L'
   572  00FFAF  42                 	db	66	;'B'
   573  00FFB0  4C                 	db	76	;'L'
   574  00FFB1  3A                 	db	58	;':'
   575  00FFB2  20                 	db	32
   576  00FFB3  31                 	db	49	;'1'
   577  00FFB4  20                 	db	32
   578  00FFB5  00                 	db	0
   579  00FFB6                     STR_15:
   580  00FFB6  45                 	db	69	;'E'
   581  00FFB7  53                 	db	83	;'S'
   582  00FFB8  4B                 	db	75	;'K'
   583  00FFB9  41                 	db	65	;'A'
   584  00FFBA  2D                 	db	45
   585  00FFBB  43                 	db	67	;'C'
   586  00FFBC  41                 	db	65	;'A'
   587  00FFBD  50                 	db	80	;'P'
   588  00FFBE  2D                 	db	45
   589  00FFBF  4C                 	db	76	;'L'
   590  00FFC0  42                 	db	66	;'B'
   591  00FFC1  4C                 	db	76	;'L'
   592  00FFC2  3A                 	db	58	;':'
   593  00FFC3  20                 	db	32
   594  00FFC4  32                 	db	50	;'2'
   595  00FFC5  20                 	db	32
   596  00FFC6  00                 	db	0
   597  00FFC7                     STR_22:
   598  00FFC7  4F                 	db	79	;'O'
   599  00FFC8  70                 	db	112	;'p'
   600  00FFC9  65                 	db	101	;'e'
   601  00FFCA  72                 	db	114	;'r'
   602  00FFCB  61                 	db	97	;'a'
   603  00FFCC  74                 	db	116	;'t'
   604  00FFCD  69                 	db	105	;'i'
   605  00FFCE  6F                 	db	111	;'o'
   606  00FFCF  6E                 	db	110	;'n'
   607  00FFD0  20                 	db	32
   608  00FFD1  44                 	db	68	;'D'
   609  00FFD2  6F                 	db	111	;'o'
   610  00FFD3  6E                 	db	110	;'n'
   611  00FFD4  65                 	db	101	;'e'
   612  00FFD5  21                 	db	33
   613  00FFD6  00                 	db	0
   614  00FFD7                     STR_23:
   615  00FFD7  45                 	db	69	;'E'
   616  00FFD8  4D                 	db	77	;'M'
   617  00FFD9  45                 	db	69	;'E'
   618  00FFDA  52                 	db	82	;'R'
   619  00FFDB  47                 	db	71	;'G'
   620  00FFDC  45                 	db	69	;'E'
   621  00FFDD  4E                 	db	78	;'N'
   622  00FFDE  43                 	db	67	;'C'
   623  00FFDF  59                 	db	89	;'Y'
   624  00FFE0  20                 	db	32
   625  00FFE1  53                 	db	83	;'S'
   626  00FFE2  54                 	db	84	;'T'
   627  00FFE3  4F                 	db	79	;'O'
   628  00FFE4  50                 	db	80	;'P'
   629  00FFE5  00                 	db	0
   630  00FFE6                     STR_1:
   631  00FFE6  62                 	db	98	;'b'
   632  00FFE7  61                 	db	97	;'a'
   633  00FFE8  64                 	db	100	;'d'
   634  00FFE9  20                 	db	32
   635  00FFEA  69                 	db	105	;'i'
   636  00FFEB  6E                 	db	110	;'n'
   637  00FFEC  74                 	db	116	;'t'
   638  00FFED  65                 	db	101	;'e'
   639  00FFEE  72                 	db	114	;'r'
   640  00FFEF  72                 	db	114	;'r'
   641  00FFF0  75                 	db	117	;'u'
   642  00FFF1  70                 	db	112	;'p'
   643  00FFF2  74                 	db	116	;'t'
   644  00FFF3  00                 	db	0
   645  00FFF4                     STR_16:
   646  00FFF4  45                 	db	69	;'E'
   647  00FFF5  52                 	db	82	;'R'
   648  00FFF6  52                 	db	82	;'R'
   649  00FFF7  4F                 	db	79	;'O'
   650  00FFF8  52                 	db	82	;'R'
   651  00FFF9  3A                 	db	58	;':'
   652  00FFFA  20                 	db	32
   653  00FFFB  25                 	db	37
   654  00FFFC  64                 	db	100	;'d'
   655  00FFFD  00                 	db	0
   656                           
   657                           ; #config settings
   658  00FFFE  00                 	db	0	; dummy byte at the end
   659  0000                     
   660                           	psect	cinit
   661  000F28                     __pcinit:
   662                           	opt stack 0
   663  000F28                     start_initialization:
   664                           	opt stack 0
   665  000F28                     __initialization:
   666                           	opt stack 0
   667                           
   668                           ; Initialize objects allocated to COMRAM (2 bytes)
   669                           ; load TBLPTR registers with __pidataCOMRAM
   670  000F28  0E32               	movlw	low __pidataCOMRAM
   671  000F2A  6EF6               	movwf	tblptrl,c
   672  000F2C  0E11               	movlw	high __pidataCOMRAM
   673  000F2E  6EF7               	movwf	tblptrh,c
   674  000F30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   675  000F32  6EF8               	movwf	tblptru,c
   676  000F34  0009               	tblrd		*+	;fetch initializer
   677  000F36  CFF5 F051          	movff	tablat,__pdataCOMRAM
   678  000F3A  0009               	tblrd		*+	;fetch initializer
   679  000F3C  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   680                           
   681                           ; Clear objects allocated to COMRAM (16 bytes)
   682  000F40  EE00  F041         	lfsr	0,__pbssCOMRAM
   683  000F44  0E10               	movlw	16
   684  000F46                     clear_0:
   685  000F46  6AEE               	clrf	postinc0,c
   686  000F48  06E8               	decf	wreg,f,c
   687  000F4A  E1FD               	bnz	clear_0
   688  000F4C                     end_of_initialization:
   689                           	opt stack 0
   690  000F4C                     __end_of__initialization:
   691                           	opt stack 0
   692  000F4C  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   693  000F4E  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   694  000F50  0E00               	movlw	low (__Lmediumconst shr (0+16))
   695  000F52  6EF8               	movwf	tblptru,c
   696  000F54  0100               	movlb	0
   697  000F56  EFAC  F004         	goto	_main	;jump to C main() function
   698                           tblptru	equ	0xFF8
   699                           tblptrh	equ	0xFF7
   700                           tblptrl	equ	0xFF6
   701                           tablat	equ	0xFF5
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           
   705                           	psect	bssCOMRAM
   706  000041                     __pbssCOMRAM:
   707                           	opt stack 0
   708  000041                     _time:
   709                           	opt stack 0
   710  000041                     	ds	7
   711  000048                     _end_time:
   712                           	opt stack 0
   713  000048                     	ds	2
   714  00004A                     _operation_disp:
   715                           	opt stack 0
   716  00004A                     	ds	2
   717  00004C                     _ptr:
   718                           	opt stack 0
   719  00004C                     	ds	2
   720  00004E                     _start_time:
   721                           	opt stack 0
   722  00004E                     	ds	2
   723  000050                     _curr_state:
   724                           	opt stack 0
   725  000050                     	ds	1
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           
   733                           	psect	dataCOMRAM
   734  000051                     __pdataCOMRAM:
   735                           	opt stack 0
   736  000051                     _bottle_count_disp:
   737                           	opt stack 0
   738  000051                     	ds	2
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           
   746                           	psect	cstackBANK0
   747  000080                     __pcstackBANK0:
   748                           	opt stack 0
   749  000080                     ??_printf:
   750  000080                     ??_I2C_Master_Init:
   751                           
   752                           ; 1 bytes @ 0x0
   753  000080                     	ds	4
   754  000084                     printf@idx:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x4
   758  000084                     	ds	1
   759  000085                     printf@ap:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x5
   763  000085                     	ds	2
   764  000087                     printf@prec:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x7
   768  000087                     	ds	1
   769  000088                     printf@val:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0x8
   773  000088                     	ds	2
   774  00008A                     printf@flag:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0xA
   778  00008A                     	ds	1
   779  00008B                     printf@width:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0xB
   783  00008B                     	ds	2
   784  00008D                     printf@c:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0xD
   788  00008D                     	ds	1
   789  00008E                     ??_operation:
   790  00008E                     date_time@i:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0xE
   794  00008E                     	ds	2
   795  000090                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x10
   798  000090                     	ds	2
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           
   806                           	psect	cstackCOMRAM
   807  000001                     __pcstackCOMRAM:
   808                           	opt stack 0
   809  000001                     ??i2_I2C_Master_Wait:
   810  000001                     ??i2_isdigit:
   811  000001                     ?i2___wmul:
   812                           	opt stack 0
   813  000001                     ?i2___lwdiv:
   814                           	opt stack 0
   815  000001                     i2lcdNibble@temp:
   816                           	opt stack 0
   817  000001                     i2___wmul@multiplier:
   818                           	opt stack 0
   819  000001                     i2___lwdiv@dividend:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x0
   823  000001                     	ds	1
   824  000002                     i2I2C_Master_Read@a:
   825                           	opt stack 0
   826  000002                     i2lcdNibble@data:
   827                           	opt stack 0
   828  000002                     i2_isdigit$563:
   829                           	opt stack 0
   830  000002                     i2I2C_Master_Write@d:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x1
   834  000002                     	ds	1
   835  000003                     i2I2C_Master_Read@temp:
   836                           	opt stack 0
   837  000003                     i2lcdInst@data:
   838                           	opt stack 0
   839  000003                     i2putch@data:
   840                           	opt stack 0
   841  000003                     i2isdigit@c:
   842                           	opt stack 0
   843  000003                     i2___wmul@multiplicand:
   844                           	opt stack 0
   845  000003                     i2___lwdiv@divisor:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x2
   849  000003                     	ds	1
   850  000004                     read_time@i:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x3
   854  000004                     	ds	1
   855  000005                     i2___wmul@product:
   856                           	opt stack 0
   857  000005                     i2___lwdiv@quotient:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x4
   861  000005                     	ds	2
   862  000007                     i2___lwdiv@counter:
   863                           	opt stack 0
   864                           
   865                           ; 1 bytes @ 0x6
   866  000007                     	ds	1
   867  000008                     ?i2___lwmod:
   868                           	opt stack 0
   869  000008                     i2___lwmod@dividend:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x7
   873  000008                     	ds	2
   874  00000A                     i2___lwmod@divisor:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x9
   878  00000A                     	ds	2
   879  00000C                     i2___lwmod@counter:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0xB
   883  00000C                     	ds	1
   884  00000D                     ?i2_printf:
   885                           	opt stack 0
   886  00000D                     i2printf@f:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0xC
   890  00000D                     	ds	2
   891  00000F                     ??i2_printf:
   892                           
   893                           ; 1 bytes @ 0xE
   894  00000F                     	ds	4
   895  000013                     i2printf@idx:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x12
   899  000013                     	ds	1
   900  000014                     i2printf@ap:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x13
   904  000014                     	ds	2
   905  000016                     i2printf@prec:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x15
   909  000016                     	ds	1
   910  000017                     i2printf@val:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x16
   914  000017                     	ds	2
   915  000019                     i2printf@flag:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x18
   919  000019                     	ds	1
   920  00001A                     i2printf@width:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x19
   924  00001A                     	ds	2
   925  00001C                     i2printf@c:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x1B
   929  00001C                     	ds	1
   930  00001D                     ??_isr:
   931                           
   932                           ; 1 bytes @ 0x1C
   933  00001D                     	ds	15
   934  00002C                     isr@i:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x2B
   938  00002C                     	ds	1
   939  00002D                     ??_isdigit:
   940  00002D                     ??_I2C_Master_Wait:
   941  00002D                     ?___wmul:
   942                           	opt stack 0
   943  00002D                     ?___awmod:
   944                           	opt stack 0
   945  00002D                     ?___lwdiv:
   946                           	opt stack 0
   947  00002D                     ?___lldiv:
   948                           	opt stack 0
   949  00002D                     lcdNibble@temp:
   950                           	opt stack 0
   951  00002D                     ___wmul@multiplier:
   952                           	opt stack 0
   953  00002D                     ___awmod@dividend:
   954                           	opt stack 0
   955  00002D                     ___lwdiv@dividend:
   956                           	opt stack 0
   957  00002D                     ___lldiv@dividend:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x2C
   961  00002D                     	ds	1
   962  00002E                     I2C_Master_Read@a:
   963                           	opt stack 0
   964  00002E                     lcdNibble@data:
   965                           	opt stack 0
   966  00002E                     _isdigit$563:
   967                           	opt stack 0
   968  00002E                     I2C_Master_Write@d:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x2D
   972  00002E                     	ds	1
   973  00002F                     I2C_Master_Read@temp:
   974                           	opt stack 0
   975  00002F                     lcdInst@data:
   976                           	opt stack 0
   977  00002F                     putch@data:
   978                           	opt stack 0
   979  00002F                     isdigit@c:
   980                           	opt stack 0
   981  00002F                     ___wmul@multiplicand:
   982                           	opt stack 0
   983  00002F                     ___awmod@divisor:
   984                           	opt stack 0
   985  00002F                     ___lwdiv@divisor:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x2E
   989  00002F                     	ds	1
   990  000030                     ??_initLCD:
   991                           
   992                           ; 1 bytes @ 0x2F
   993  000030                     	ds	1
   994  000031                     ___awmod@counter:
   995                           	opt stack 0
   996  000031                     ___lwdiv@counter:
   997                           	opt stack 0
   998  000031                     ___wmul@product:
   999                           	opt stack 0
  1000  000031                     ___lldiv@divisor:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x30
  1004  000031                     	ds	1
  1005  000032                     ___awmod@sign:
  1006                           	opt stack 0
  1007  000032                     ___lwdiv@quotient:
  1008                           	opt stack 0
  1009                           
  1010                           ; 2 bytes @ 0x31
  1011  000032                     	ds	2
  1012  000034                     ?___lwmod:
  1013                           	opt stack 0
  1014  000034                     ___lwmod@dividend:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x33
  1018  000034                     	ds	1
  1019  000035                     ___lldiv@quotient:
  1020                           	opt stack 0
  1021                           
  1022                           ; 4 bytes @ 0x34
  1023  000035                     	ds	1
  1024  000036                     ___lwmod@divisor:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x35
  1028  000036                     	ds	2
  1029  000038                     ___lwmod@counter:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x37
  1033  000038                     	ds	1
  1034  000039                     ?_printf:
  1035                           	opt stack 0
  1036  000039                     ___lldiv@counter:
  1037                           	opt stack 0
  1038  000039                     printf@f:
  1039                           	opt stack 0
  1040                           
  1041                           ; 2 bytes @ 0x38
  1042  000039                     	ds	1
  1043  00003A                     I2C_Master_Init@c:
  1044                           	opt stack 0
  1045                           
  1046                           ; 4 bytes @ 0x39
  1047  00003A                     	ds	7
  1048  000041                     tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           
  1055                           ; 1 bytes @ 0x40
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 52 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels required when called:    8
  1081 ;; This function calls:
  1082 ;;		_I2C_Master_Init
  1083 ;;		_bottle_count
  1084 ;;		_bottle_time
  1085 ;;		_date_time
  1086 ;;		_emergencystop
  1087 ;;		_initLCD
  1088 ;;		_operation
  1089 ;;		_operationend
  1090 ;;		_standby
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text0
  1097  000958                     __ptext0:
  1098                           	opt stack 0
  1099  000958                     _main:
  1100                           	opt stack 23
  1101                           
  1102                           ;main.c: 56: TRISA = 0xFF;
  1103                           
  1104                           ;incstack = 0
  1105  000958  6892               	setf	3986,c	;volatile
  1106                           
  1107                           ;main.c: 57: TRISB = 0xFF;
  1108  00095A  6893               	setf	3987,c	;volatile
  1109                           
  1110                           ;main.c: 58: TRISC = 0x00;
  1111  00095C  0E00               	movlw	0
  1112  00095E  6E94               	movwf	3988,c	;volatile
  1113                           
  1114                           ;main.c: 59: TRISD = 0x00;
  1115  000960  0E00               	movlw	0
  1116  000962  6E95               	movwf	3989,c	;volatile
  1117                           
  1118                           ;main.c: 60: TRISE = 0x00;
  1119  000964  0E00               	movlw	0
  1120  000966  6E96               	movwf	3990,c	;volatile
  1121                           
  1122                           ;main.c: 62: LATA = 0x00;
  1123  000968  0E00               	movlw	0
  1124  00096A  6E89               	movwf	3977,c	;volatile
  1125                           
  1126                           ;main.c: 63: LATB = 0x00;
  1127  00096C  0E00               	movlw	0
  1128  00096E  6E8A               	movwf	3978,c	;volatile
  1129                           
  1130                           ;main.c: 64: LATC = 0x00;
  1131  000970  0E00               	movlw	0
  1132  000972  6E8B               	movwf	3979,c	;volatile
  1133                           
  1134                           ;main.c: 65: LATD = 0x00;
  1135  000974  0E00               	movlw	0
  1136  000976  6E8C               	movwf	3980,c	;volatile
  1137                           
  1138                           ;main.c: 66: LATE = 0x00;
  1139  000978  0E00               	movlw	0
  1140  00097A  6E8D               	movwf	3981,c	;volatile
  1141                           
  1142                           ;main.c: 68: ADCON0 = 0x00;
  1143  00097C  0E00               	movlw	0
  1144  00097E  6EC2               	movwf	4034,c	;volatile
  1145                           
  1146                           ;main.c: 69: ADCON1 = 0xFF;
  1147  000980  68C1               	setf	4033,c	;volatile
  1148                           
  1149                           ;main.c: 71: INT1IE = 1;
  1150  000982  86F0               	bsf	intcon3,3,c	;volatile
  1151                           
  1152                           ;main.c: 73: nRBPU = 0;
  1153  000984  9EF1               	bcf	intcon2,7,c	;volatile
  1154                           
  1155                           ;main.c: 75: initLCD();
  1156  000986  EC2C  F007         	call	_initLCD	;wreg free
  1157                           
  1158                           ;main.c: 76: I2C_Master_Init(10000);
  1159  00098A  0E10               	movlw	16
  1160  00098C  6E3A               	movwf	I2C_Master_Init@c,c
  1161  00098E  0E27               	movlw	39
  1162  000990  6E3B               	movwf	I2C_Master_Init@c+1,c
  1163  000992  0E00               	movlw	0
  1164  000994  6E3C               	movwf	I2C_Master_Init@c+2,c
  1165  000996  0E00               	movlw	0
  1166  000998  6E3D               	movwf	I2C_Master_Init@c+3,c
  1167  00099A  EC5E  F006         	call	_I2C_Master_Init	;wreg free
  1168                           
  1169                           ;main.c: 78: TMR0 = 0;
  1170  00099E  0E00               	movlw	0
  1171  0009A0  6ED7               	movwf	4055,c	;volatile
  1172  0009A2  0E00               	movlw	0
  1173  0009A4  6ED6               	movwf	4054,c	;volatile
  1174                           
  1175                           ;main.c: 79: T08BIT = 0;
  1176  0009A6  9CD5               	bcf	4053,6,c	;volatile
  1177                           
  1178                           ;main.c: 80: T0CS = 0;
  1179  0009A8  9AD5               	bcf	4053,5,c	;volatile
  1180                           
  1181                           ;main.c: 81: PSA = 0;
  1182  0009AA  96D5               	bcf	4053,3,c	;volatile
  1183                           
  1184                           ;main.c: 82: T0PS2 = 1;
  1185  0009AC  84D5               	bsf	4053,2,c	;volatile
  1186                           
  1187                           ;main.c: 83: T0PS1 = 1;
  1188  0009AE  82D5               	bsf	4053,1,c	;volatile
  1189                           
  1190                           ;main.c: 84: T0PS0 = 1;
  1191  0009B0  80D5               	bsf	4053,0,c	;volatile
  1192                           
  1193                           ;main.c: 88: (INTCONbits.GIE = 1);
  1194  0009B2  8EF2               	bsf	intcon,7,c	;volatile
  1195                           
  1196                           ;main.c: 90: curr_state = STANDBY;
  1197  0009B4  0E00               	movlw	0
  1198  0009B6  6E50               	movwf	_curr_state,c
  1199                           
  1200                           ;main.c: 93: switch(curr_state){
  1201                           
  1202                           ;main.c: 92: while(1){
  1203  0009B8  D015               	goto	l3079
  1204  0009BA                     l3063:
  1205                           
  1206                           ;main.c: 95: standby();
  1207  0009BA  ECAD  F007         	call	_standby	;wreg free
  1208                           
  1209                           ;main.c: 96: break;
  1210  0009BE  D028               	goto	l3081
  1211  0009C0                     l3065:
  1212                           
  1213                           ;main.c: 98: emergencystop();
  1214  0009C0  EC40  F008         	call	_emergencystop	;wreg free
  1215                           
  1216                           ;main.c: 99: break;
  1217  0009C4  D025               	goto	l3081
  1218  0009C6                     l3067:
  1219                           
  1220                           ;main.c: 101: operation();
  1221  0009C6  ECB3  F005         	call	_operation	;wreg free
  1222                           
  1223                           ;main.c: 102: break;
  1224  0009CA  D022               	goto	l3081
  1225  0009CC                     l3069:
  1226                           
  1227                           ;main.c: 104: operationend();
  1228  0009CC  EC4B  F008         	call	_operationend	;wreg free
  1229                           
  1230                           ;main.c: 105: break;
  1231  0009D0  D01F               	goto	l3081
  1232  0009D2                     l3071:
  1233                           
  1234                           ;main.c: 107: date_time();
  1235  0009D2  EC17  F005         	call	_date_time	;wreg free
  1236                           
  1237                           ;main.c: 108: break;
  1238  0009D6  D01C               	goto	l3081
  1239  0009D8                     l3073:
  1240                           
  1241                           ;main.c: 110: bottle_count();
  1242  0009D8  EC1F  F004         	call	_bottle_count	;wreg free
  1243                           
  1244                           ;main.c: 111: break;
  1245  0009DC  D019               	goto	l3081
  1246  0009DE                     l3075:
  1247                           
  1248                           ;main.c: 113: bottle_time();
  1249  0009DE  ECD6  F007         	call	_bottle_time	;wreg free
  1250                           
  1251                           ;main.c: 115: }
  1252                           
  1253                           ;main.c: 114: break;
  1254  0009E2  D016               	goto	l3081
  1255  0009E4                     l3079:
  1256  0009E4  5050               	movf	_curr_state,w,c
  1257                           
  1258                           ; Switch size 1, requested type "space"
  1259                           ; Number of cases is 7, Range of values is 0 to 6
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; simple_byte           22    12 (average)
  1263                           ;	Chosen strategy is simple_byte
  1264  0009E6  0A00               	xorlw	0	; case 0
  1265  0009E8  B4D8               	btfsc	status,2,c
  1266  0009EA  D7E7               	goto	l3063
  1267  0009EC  0A01               	xorlw	1	; case 1
  1268  0009EE  B4D8               	btfsc	status,2,c
  1269  0009F0  D7E7               	goto	l3065
  1270  0009F2  0A03               	xorlw	3	; case 2
  1271  0009F4  B4D8               	btfsc	status,2,c
  1272  0009F6  D7E7               	goto	l3067
  1273  0009F8  0A01               	xorlw	1	; case 3
  1274  0009FA  B4D8               	btfsc	status,2,c
  1275  0009FC  D7E7               	goto	l3069
  1276  0009FE  0A07               	xorlw	7	; case 4
  1277  000A00  B4D8               	btfsc	status,2,c
  1278  000A02  D7E7               	goto	l3071
  1279  000A04  0A01               	xorlw	1	; case 5
  1280  000A06  B4D8               	btfsc	status,2,c
  1281  000A08  D7E7               	goto	l3073
  1282  000A0A  0A03               	xorlw	3	; case 6
  1283  000A0C  B4D8               	btfsc	status,2,c
  1284  000A0E  D7E7               	goto	l3075
  1285  000A10                     l3081:
  1286                           
  1287                           ;main.c: 116: _delay((unsigned long)((200)*(10000000/4000.0)));
  1288  000A10  0E03               	movlw	3
  1289  000A12  0100               	movlb	0	; () banked
  1290  000A14  6F91               	movwf	(??_main+1)& (0+255),b
  1291  000A16  0E8A               	movlw	138
  1292  000A18  0100               	movlb	0	; () banked
  1293  000A1A  6F90               	movwf	??_main& (0+255),b
  1294  000A1C  0E55               	movlw	85
  1295  000A1E                     u2207:
  1296  000A1E  2EE8               	decfsz	wreg,f,c
  1297  000A20  D7FE               	bra	u2207
  1298  000A22  2F90               	decfsz	??_main& (0+255),f,b
  1299  000A24  D7FC               	bra	u2207
  1300  000A26  2F91               	decfsz	(??_main+1)& (0+255),f,b
  1301  000A28  D7FA               	bra	u2207
  1302  000A2A  D000               	nop2	
  1303  000A2C  D7DB               	goto	l3079
  1304  000A2E                     __end_of_main:
  1305                           	opt stack 0
  1306                           tblptru	equ	0xFF8
  1307                           tblptrh	equ	0xFF7
  1308                           tblptrl	equ	0xFF6
  1309                           tablat	equ	0xFF5
  1310                           intcon	equ	0xFF2
  1311                           intcon2	equ	0xFF1
  1312                           intcon3	equ	0xFF0
  1313                           postinc0	equ	0xFEE
  1314                           wreg	equ	0xFE8
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _standby *****************
  1318 ;; Defined at:
  1319 ;;		line 190 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    7
  1340 ;; This function calls:
  1341 ;;		_lcdInst
  1342 ;;		_printf
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349  000F5A                     __ptext1:
  1350                           	opt stack 0
  1351  000F5A                     _standby:
  1352                           	opt stack 23
  1353                           
  1354                           ;main.c: 191: lcdInst(0b10000000);
  1355                           
  1356                           ;incstack = 0
  1357  000F5A  0E80               	movlw	128
  1358  000F5C  EC6D  F008         	call	_lcdInst
  1359                           
  1360                           ;main.c: 192: printf("standby         ");
  1361  000F60  0EFB               	movlw	low STR_2
  1362  000F62  6E39               	movwf	printf@f,c
  1363  000F64  0EFE               	movlw	high STR_2
  1364  000F66  6E3A               	movwf	printf@f+1,c
  1365  000F68  EC09  F000         	call	_printf	;wreg free
  1366                           
  1367                           ;main.c: 193: lcdInst(0b11000000);
  1368  000F6C  0EC0               	movlw	192
  1369  000F6E  EC6D  F008         	call	_lcdInst
  1370                           
  1371                           ;main.c: 194: printf("PORTB: %d       ", PORTB);
  1372  000F72  0E1D               	movlw	low STR_3
  1373  000F74  6E39               	movwf	printf@f,c
  1374  000F76  0EFF               	movlw	high STR_3
  1375  000F78  6E3A               	movwf	printf@f+1,c
  1376  000F7A  CF81 F03B          	movff	3969,?_printf+2	;volatile
  1377  000F7E  6A3C               	clrf	?_printf+3,c
  1378  000F80  EC09  F000         	call	_printf	;wreg free
  1379  000F84  0012               	return	
  1380  000F86                     __end_of_standby:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           intcon	equ	0xFF2
  1387                           intcon2	equ	0xFF1
  1388                           intcon3	equ	0xFF0
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           status	equ	0xFD8
  1392                           
  1393 ;; *************** function _operationend *****************
  1394 ;; Defined at:
  1395 ;;		line 325 in file "main.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    7
  1416 ;; This function calls:
  1417 ;;		_lcdInst
  1418 ;;		_printf
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text2
  1425  001096                     __ptext2:
  1426                           	opt stack 0
  1427  001096                     _operationend:
  1428                           	opt stack 23
  1429                           
  1430                           ;main.c: 326: lcdInst(0b10000000);
  1431                           
  1432                           ;incstack = 0
  1433  001096  0E80               	movlw	128
  1434  001098  EC6D  F008         	call	_lcdInst
  1435                           
  1436                           ;main.c: 327: printf("Operation Done!");
  1437  00109C  0EC7               	movlw	low STR_22
  1438  00109E  6E39               	movwf	printf@f,c
  1439  0010A0  0EFF               	movlw	high STR_22
  1440  0010A2  6E3A               	movwf	printf@f+1,c
  1441  0010A4  EC09  F000         	call	_printf	;wreg free
  1442  0010A8  0012               	return	
  1443  0010AA                     __end_of_operationend:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           intcon	equ	0xFF2
  1450                           intcon2	equ	0xFF1
  1451                           intcon3	equ	0xFF0
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _operation *****************
  1457 ;; Defined at:
  1458 ;;		line 304 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    7
  1479 ;; This function calls:
  1480 ;;		_lcdInst
  1481 ;;		_printf
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text3
  1488  000B66                     __ptext3:
  1489                           	opt stack 0
  1490  000B66                     _operation:
  1491                           	opt stack 23
  1492                           
  1493                           ;main.c: 305: switch(operation_disp){
  1494                           
  1495                           ;incstack = 0
  1496  000B66  D02A               	goto	l2945
  1497  000B68                     l2925:
  1498                           
  1499                           ;main.c: 307: lcdInst(0b10000000);
  1500  000B68  0E80               	movlw	128
  1501  000B6A  EC6D  F008         	call	_lcdInst
  1502                           
  1503                           ;main.c: 308: printf("Running~              ");
  1504  000B6E  0E78               	movlw	low STR_19
  1505  000B70  6E39               	movwf	printf@f,c
  1506  000B72  0EFE               	movlw	high STR_19
  1507  000B74  6E3A               	movwf	printf@f+1,c
  1508  000B76  EC09  F000         	call	_printf	;wreg free
  1509                           
  1510                           ;main.c: 309: operation_disp = 1;
  1511  000B7A  0E00               	movlw	0
  1512  000B7C  6E4B               	movwf	_operation_disp+1,c
  1513  000B7E  0E01               	movlw	1
  1514  000B80  6E4A               	movwf	_operation_disp,c
  1515                           
  1516                           ;main.c: 310: break;
  1517  000B82  0012               	return	
  1518  000B84                     l2931:
  1519                           
  1520                           ;main.c: 312: lcdInst(0b10000000);
  1521  000B84  0E80               	movlw	128
  1522  000B86  EC6D  F008         	call	_lcdInst
  1523                           
  1524                           ;main.c: 313: printf("Running~~              ");
  1525  000B8A  0E60               	movlw	low STR_20
  1526  000B8C  6E39               	movwf	printf@f,c
  1527  000B8E  0EFE               	movlw	high STR_20
  1528  000B90  6E3A               	movwf	printf@f+1,c
  1529  000B92  EC09  F000         	call	_printf	;wreg free
  1530                           
  1531                           ;main.c: 314: operation_disp = 2;
  1532  000B96  0E00               	movlw	0
  1533  000B98  6E4B               	movwf	_operation_disp+1,c
  1534  000B9A  0E02               	movlw	2
  1535  000B9C  6E4A               	movwf	_operation_disp,c
  1536                           
  1537                           ;main.c: 315: break;
  1538  000B9E  0012               	return	
  1539  000BA0                     l2937:
  1540                           
  1541                           ;main.c: 317: lcdInst(0b10000000);
  1542  000BA0  0E80               	movlw	128
  1543  000BA2  EC6D  F008         	call	_lcdInst
  1544                           
  1545                           ;main.c: 318: printf("Running~~~              ");
  1546  000BA6  0E47               	movlw	low STR_21
  1547  000BA8  6E39               	movwf	printf@f,c
  1548  000BAA  0EFE               	movlw	high STR_21
  1549  000BAC  6E3A               	movwf	printf@f+1,c
  1550  000BAE  EC09  F000         	call	_printf	;wreg free
  1551                           
  1552                           ;main.c: 319: operation_disp = 0;
  1553  000BB2  0E00               	movlw	0
  1554  000BB4  6E4B               	movwf	_operation_disp+1,c
  1555  000BB6  0E00               	movlw	0
  1556  000BB8  6E4A               	movwf	_operation_disp,c
  1557                           
  1558                           ;main.c: 321: }
  1559                           
  1560                           ;main.c: 320: break;
  1561  000BBA  0012               	return	
  1562  000BBC                     l2945:
  1563  000BBC  C04A  F08E         	movff	_operation_disp,??_operation
  1564  000BC0  C04B  F08F         	movff	_operation_disp+1,??_operation+1
  1565                           
  1566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1567                           ; Switch size 1, requested type "space"
  1568                           ; Number of cases is 1, Range of values is 0 to 0
  1569                           ; switch strategies available:
  1570                           ; Name         Instructions Cycles
  1571                           ; simple_byte            4     3 (average)
  1572                           ;	Chosen strategy is simple_byte
  1573  000BC4  0100               	movlb	0	; () banked
  1574  000BC6  518F               	movf	(??_operation+1)& (0+255),w,b
  1575  000BC8  0A00               	xorlw	0	; case 0
  1576  000BCA  A4D8               	btfss	status,2,c
  1577  000BCC  0012               	return	
  1578                           
  1579                           ; BSR set to: 0
  1580                           ; Switch size 1, requested type "space"
  1581                           ; Number of cases is 3, Range of values is 0 to 2
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte           10     6 (average)
  1585                           ;	Chosen strategy is simple_byte
  1586  000BCE  0100               	movlb	0	; () banked
  1587  000BD0  518E               	movf	??_operation& (0+255),w,b
  1588  000BD2  0A00               	xorlw	0	; case 0
  1589  000BD4  B4D8               	btfsc	status,2,c
  1590  000BD6  D7C8               	goto	l2925
  1591  000BD8  0A01               	xorlw	1	; case 1
  1592  000BDA  B4D8               	btfsc	status,2,c
  1593  000BDC  D7D3               	goto	l2931
  1594  000BDE  0A03               	xorlw	3	; case 2
  1595  000BE0  A4D8               	btfss	status,2,c
  1596  000BE2  0012               	return	
  1597  000BE4  D7DD               	goto	l2937
  1598  000BE6                     __end_of_operation:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           intcon	equ	0xFF2
  1605                           intcon2	equ	0xFF1
  1606                           intcon3	equ	0xFF0
  1607                           postinc0	equ	0xFEE
  1608                           wreg	equ	0xFE8
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _initLCD *****************
  1612 ;; Defined at:
  1613 ;;		line 14 in file "lcd.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    6
  1634 ;; This function calls:
  1635 ;;		_lcdInst
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text4
  1642  000E58                     __ptext4:
  1643                           	opt stack 0
  1644  000E58                     _initLCD:
  1645                           	opt stack 24
  1646                           
  1647                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
  1648                           
  1649                           ;incstack = 0
  1650  000E58  0E31               	movlw	49
  1651  000E5A  6E30               	movwf	??_initLCD& (0+255),c
  1652  000E5C  0EB2               	movlw	178
  1653  000E5E                     u2217:
  1654  000E5E  2EE8               	decfsz	wreg,f,c
  1655  000E60  D7FE               	bra	u2217
  1656  000E62  2E30               	decfsz	??_initLCD& (0+255),f,c
  1657  000E64  D7FC               	bra	u2217
  1658  000E66  D000               	nop2	
  1659                           
  1660                           ;lcd.c: 16: lcdInst(0b00110011);
  1661  000E68  0E33               	movlw	51
  1662  000E6A  EC6D  F008         	call	_lcdInst
  1663                           
  1664                           ;lcd.c: 17: lcdInst(0b00110011);
  1665  000E6E  0E33               	movlw	51
  1666  000E70  EC6D  F008         	call	_lcdInst
  1667                           
  1668                           ;lcd.c: 18: lcdInst(0b00110010);
  1669  000E74  0E32               	movlw	50
  1670  000E76  EC6D  F008         	call	_lcdInst
  1671                           
  1672                           ;lcd.c: 19: lcdInst(0b00101000);
  1673  000E7A  0E28               	movlw	40
  1674  000E7C  EC6D  F008         	call	_lcdInst
  1675                           
  1676                           ;lcd.c: 20: lcdInst(0b00001111);
  1677  000E80  0E0F               	movlw	15
  1678  000E82  EC6D  F008         	call	_lcdInst
  1679                           
  1680                           ;lcd.c: 21: lcdInst(0b00000110);
  1681  000E86  0E06               	movlw	6
  1682  000E88  EC6D  F008         	call	_lcdInst
  1683                           
  1684                           ;lcd.c: 22: lcdInst(0b00000001);
  1685  000E8C  0E01               	movlw	1
  1686  000E8E  EC6D  F008         	call	_lcdInst
  1687                           
  1688                           ;lcd.c: 23: _delay((unsigned long)((15)*(10000000/4000.0)));
  1689  000E92  0E31               	movlw	49
  1690  000E94  6E30               	movwf	??_initLCD& (0+255),c
  1691  000E96  0EB2               	movlw	178
  1692  000E98                     u2227:
  1693  000E98  2EE8               	decfsz	wreg,f,c
  1694  000E9A  D7FE               	bra	u2227
  1695  000E9C  2E30               	decfsz	??_initLCD& (0+255),f,c
  1696  000E9E  D7FC               	bra	u2227
  1697  000EA0  D000               	nop2	
  1698  000EA2  0012               	return		;funcret
  1699  000EA4                     __end_of_initLCD:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           intcon	equ	0xFF2
  1706                           intcon2	equ	0xFF1
  1707                           intcon3	equ	0xFF0
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _emergencystop *****************
  1713 ;; Defined at:
  1714 ;;		line 331 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    7
  1735 ;; This function calls:
  1736 ;;		_lcdInst
  1737 ;;		_printf
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text5
  1744  001080                     __ptext5:
  1745                           	opt stack 0
  1746  001080                     _emergencystop:
  1747                           	opt stack 23
  1748                           
  1749                           ;main.c: 332: lcdInst(0b10000000);
  1750                           
  1751                           ;incstack = 0
  1752  001080  0E80               	movlw	128
  1753  001082  EC6D  F008         	call	_lcdInst
  1754                           
  1755                           ;main.c: 333: printf("EMERGENCY STOP");
  1756  001086  0ED7               	movlw	low STR_23
  1757  001088  6E39               	movwf	printf@f,c
  1758  00108A  0EFF               	movlw	high STR_23
  1759  00108C  6E3A               	movwf	printf@f+1,c
  1760  00108E  EC09  F000         	call	_printf	;wreg free
  1761                           
  1762                           ;main.c: 334: (INTCONbits.GIE = 0);
  1763  001092  9EF2               	bcf	intcon,7,c	;volatile
  1764  001094                     l274:
  1765  001094  D7FF               	goto	l274
  1766  001096                     __end_of_emergencystop:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           intcon	equ	0xFF2
  1773                           intcon2	equ	0xFF1
  1774                           intcon3	equ	0xFF0
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function _date_time *****************
  1780 ;; Defined at:
  1781 ;;		line 208 in file "main.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  i               1   14[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;Total ram usage:        1 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    7
  1802 ;; This function calls:
  1803 ;;		_I2C_Master_Read
  1804 ;;		_I2C_Master_Start
  1805 ;;		_I2C_Master_Stop
  1806 ;;		_I2C_Master_Write
  1807 ;;		_lcdInst
  1808 ;;		_printf
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text6
  1815  000A2E                     __ptext6:
  1816                           	opt stack 0
  1817  000A2E                     _date_time:
  1818                           	opt stack 23
  1819                           
  1820                           ;main.c: 210: I2C_Master_Start();
  1821                           
  1822                           ;incstack = 0
  1823  000A2E  EC8D  F008         	call	_I2C_Master_Start	;wreg free
  1824                           
  1825                           ;main.c: 211: I2C_Master_Write(0b11010000);
  1826  000A32  0E00               	movlw	0
  1827  000A34  6E2F               	movwf	I2C_Master_Write@d+1,c
  1828  000A36  0ED0               	movlw	208
  1829  000A38  6E2E               	movwf	I2C_Master_Write@d,c
  1830  000A3A  EC7F  F008         	call	_I2C_Master_Write	;wreg free
  1831                           
  1832                           ;main.c: 212: I2C_Master_Write(0x00);
  1833  000A3E  0E00               	movlw	0
  1834  000A40  6E2F               	movwf	I2C_Master_Write@d+1,c
  1835  000A42  0E00               	movlw	0
  1836  000A44  6E2E               	movwf	I2C_Master_Write@d,c
  1837  000A46  EC7F  F008         	call	_I2C_Master_Write	;wreg free
  1838                           
  1839                           ;main.c: 213: I2C_Master_Stop();
  1840  000A4A  EC89  F008         	call	_I2C_Master_Stop	;wreg free
  1841                           
  1842                           ;main.c: 216: I2C_Master_Start();
  1843  000A4E  EC8D  F008         	call	_I2C_Master_Start	;wreg free
  1844                           
  1845                           ;main.c: 217: I2C_Master_Write(0b11010001);
  1846  000A52  0E00               	movlw	0
  1847  000A54  6E2F               	movwf	I2C_Master_Write@d+1,c
  1848  000A56  0ED1               	movlw	209
  1849  000A58  6E2E               	movwf	I2C_Master_Write@d,c
  1850  000A5A  EC7F  F008         	call	_I2C_Master_Write	;wreg free
  1851                           
  1852                           ;main.c: 218: for(unsigned char i=0;i<0x06;i++){
  1853  000A5E  0E00               	movlw	0
  1854  000A60  0100               	movlb	0	; () banked
  1855  000A62  6F8E               	movwf	date_time@i& (0+255),b
  1856  000A64                     l2961:
  1857                           
  1858                           ; BSR set to: 0
  1859  000A64  0E05               	movlw	5
  1860  000A66  0100               	movlb	0	; () banked
  1861  000A68  658E               	cpfsgt	date_time@i& (0+255),b
  1862  000A6A  D001               	goto	l2965
  1863  000A6C  D010               	goto	l2971
  1864  000A6E                     l2965:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 219: time[i] = I2C_Master_Read(1);
  1868  000A6E  0100               	movlb	0	; () banked
  1869  000A70  518E               	movf	date_time@i& (0+255),w,b
  1870  000A72  0D01               	mullw	1
  1871  000A74  0E41               	movlw	low _time
  1872  000A76  24F3               	addwf	prodl,w,c
  1873  000A78  6ED9               	movwf	fsr2l,c
  1874  000A7A  0E00               	movlw	high _time
  1875  000A7C  20F4               	addwfc	prodh,w,c
  1876  000A7E  6EDA               	movwf	fsr2h,c
  1877  000A80  0E01               	movlw	1
  1878  000A82  ECC3  F007         	call	_I2C_Master_Read
  1879  000A86  6EDF               	movwf	indf2,c
  1880  000A88  0100               	movlb	0	; () banked
  1881  000A8A  2B8E               	incf	date_time@i& (0+255),f,b
  1882  000A8C  D7EB               	goto	l2961
  1883  000A8E                     l2971:
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;main.c: 220: }
  1887                           ;main.c: 221: time[6] = I2C_Master_Read(0);
  1888  000A8E  0E00               	movlw	0
  1889  000A90  ECC3  F007         	call	_I2C_Master_Read
  1890  000A94  6E47               	movwf	_time+6,c
  1891                           
  1892                           ;main.c: 222: I2C_Master_Stop();
  1893  000A96  EC89  F008         	call	_I2C_Master_Stop	;wreg free
  1894                           
  1895                           ;main.c: 225: lcdInst(0b10000000);
  1896  000A9A  0E80               	movlw	128
  1897  000A9C  EC6D  F008         	call	_lcdInst
  1898                           
  1899                           ;main.c: 226: printf("Date: %02x/%02x/%02x  ", time[5],time[4],time[6]);
  1900  000AA0  0EA6               	movlw	low STR_4
  1901  000AA2  6E39               	movwf	printf@f,c
  1902  000AA4  0EFE               	movlw	high STR_4
  1903  000AA6  6E3A               	movwf	printf@f+1,c
  1904  000AA8  C046  F03B         	movff	_time+5,?_printf+2
  1905  000AAC  6A3C               	clrf	?_printf+3,c
  1906  000AAE  C045  F03D         	movff	_time+4,?_printf+4
  1907  000AB2  6A3E               	clrf	?_printf+5,c
  1908  000AB4  C047  F03F         	movff	_time+6,?_printf+6
  1909  000AB8  6A40               	clrf	?_printf+7,c
  1910  000ABA  EC09  F000         	call	_printf	;wreg free
  1911                           
  1912                           ;main.c: 227: lcdInst(0b11000000);
  1913  000ABE  0EC0               	movlw	192
  1914  000AC0  EC6D  F008         	call	_lcdInst
  1915                           
  1916                           ;main.c: 228: printf("Time: %02x:%02x:%02x  ", time[2],time[1],time[0]);
  1917  000AC4  0EBD               	movlw	low STR_5
  1918  000AC6  6E39               	movwf	printf@f,c
  1919  000AC8  0EFE               	movlw	high STR_5
  1920  000ACA  6E3A               	movwf	printf@f+1,c
  1921  000ACC  C043  F03B         	movff	_time+2,?_printf+2
  1922  000AD0  6A3C               	clrf	?_printf+3,c
  1923  000AD2  C042  F03D         	movff	_time+1,?_printf+4
  1924  000AD6  6A3E               	clrf	?_printf+5,c
  1925  000AD8  C041  F03F         	movff	_time,?_printf+6
  1926  000ADC  6A40               	clrf	?_printf+7,c
  1927  000ADE  EC09  F000         	call	_printf	;wreg free
  1928  000AE2  0012               	return	
  1929  000AE4                     __end_of_date_time:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           intcon	equ	0xFF2
  1938                           intcon2	equ	0xFF1
  1939                           intcon3	equ	0xFF0
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           indf2	equ	0xFDF
  1943                           fsr2h	equ	0xFDA
  1944                           fsr2l	equ	0xFD9
  1945                           status	equ	0xFD8
  1946                           
  1947 ;; *************** function _I2C_Master_Write *****************
  1948 ;; Defined at:
  1949 ;;		line 47 in file "I2C.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  d               2   45[COMRAM] unsigned int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;Total ram usage:        2 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    5
  1970 ;; This function calls:
  1971 ;;		_I2C_Master_Wait
  1972 ;; This function is called by:
  1973 ;;		_date_time
  1974 ;;		_set_time
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text7
  1979  0010FE                     __ptext7:
  1980                           	opt stack 0
  1981  0010FE                     _I2C_Master_Write:
  1982                           	opt stack 24
  1983                           
  1984                           ;I2C.c: 49: I2C_Master_Wait();
  1985                           
  1986                           ;incstack = 0
  1987  0010FE  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  1988                           
  1989                           ;I2C.c: 50: SSPBUF = d;
  1990  001102  C02E  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1991  001106  0012               	return		;funcret
  1992  001108                     __end_of_I2C_Master_Write:
  1993                           	opt stack 0
  1994                           tblptru	equ	0xFF8
  1995                           tblptrh	equ	0xFF7
  1996                           tblptrl	equ	0xFF6
  1997                           tablat	equ	0xFF5
  1998                           prodh	equ	0xFF4
  1999                           prodl	equ	0xFF3
  2000                           intcon	equ	0xFF2
  2001                           intcon2	equ	0xFF1
  2002                           intcon3	equ	0xFF0
  2003                           postinc0	equ	0xFEE
  2004                           wreg	equ	0xFE8
  2005                           indf2	equ	0xFDF
  2006                           fsr2h	equ	0xFDA
  2007                           fsr2l	equ	0xFD9
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _I2C_Master_Stop *****************
  2011 ;; Defined at:
  2012 ;;		line 41 in file "I2C.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		_I2C_Master_Wait
  2035 ;; This function is called by:
  2036 ;;		_date_time
  2037 ;;		_set_time
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text8
  2042  001112                     __ptext8:
  2043                           	opt stack 0
  2044  001112                     _I2C_Master_Stop:
  2045                           	opt stack 24
  2046                           
  2047                           ;I2C.c: 43: I2C_Master_Wait();
  2048                           
  2049                           ;incstack = 0
  2050  001112  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  2051                           
  2052                           ;I2C.c: 44: PEN = 1;
  2053  001116  84C5               	bsf	4037,2,c	;volatile
  2054  001118  0012               	return		;funcret
  2055  00111A                     __end_of_I2C_Master_Stop:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           intcon2	equ	0xFF1
  2065                           intcon3	equ	0xFF0
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           indf2	equ	0xFDF
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _I2C_Master_Start *****************
  2074 ;; Defined at:
  2075 ;;		line 29 in file "I2C.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    5
  2096 ;; This function calls:
  2097 ;;		_I2C_Master_Wait
  2098 ;; This function is called by:
  2099 ;;		_date_time
  2100 ;;		_set_time
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	text9
  2105  00111A                     __ptext9:
  2106                           	opt stack 0
  2107  00111A                     _I2C_Master_Start:
  2108                           	opt stack 24
  2109                           
  2110                           ;I2C.c: 31: I2C_Master_Wait();
  2111                           
  2112                           ;incstack = 0
  2113  00111A  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  2114                           
  2115                           ;I2C.c: 32: SEN = 1;
  2116  00111E  80C5               	bsf	4037,0,c	;volatile
  2117  001120  0012               	return		;funcret
  2118  001122                     __end_of_I2C_Master_Start:
  2119                           	opt stack 0
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           prodh	equ	0xFF4
  2125                           prodl	equ	0xFF3
  2126                           intcon	equ	0xFF2
  2127                           intcon2	equ	0xFF1
  2128                           intcon3	equ	0xFF0
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _I2C_Master_Read *****************
  2137 ;; Defined at:
  2138 ;;		line 53 in file "I2C.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  a               1    wreg     unsigned char 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  a               1   45[COMRAM] unsigned char 
  2143 ;;  temp            1   46[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      unsigned char 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    5
  2160 ;; This function calls:
  2161 ;;		_I2C_Master_Wait
  2162 ;; This function is called by:
  2163 ;;		_date_time
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text10
  2168  000F86                     __ptext10:
  2169                           	opt stack 0
  2170  000F86                     _I2C_Master_Read:
  2171                           	opt stack 24
  2172                           
  2173                           ;incstack = 0
  2174                           ;I2C_Master_Read@a stored from wreg
  2175  000F86  6E2E               	movwf	I2C_Master_Read@a,c
  2176                           
  2177                           ;I2C.c: 55: unsigned char temp;
  2178                           ;I2C.c: 56: I2C_Master_Wait();
  2179  000F88  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  2180                           
  2181                           ;I2C.c: 57: RCEN = 1;
  2182  000F8C  86C5               	bsf	4037,3,c	;volatile
  2183                           
  2184                           ;I2C.c: 58: I2C_Master_Wait();
  2185  000F8E  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  2186                           
  2187                           ;I2C.c: 59: temp = SSPBUF;
  2188  000F92  CFC9 F02F          	movff	4041,I2C_Master_Read@temp	;volatile
  2189                           
  2190                           ;I2C.c: 60: I2C_Master_Wait();
  2191  000F96  EC55  F008         	call	_I2C_Master_Wait	;wreg free
  2192                           
  2193                           ;I2C.c: 61: ACKDT = (a)?0:1;
  2194  000F9A  502E               	movf	I2C_Master_Read@a,w,c
  2195  000F9C  A4D8               	btfss	status,2,c
  2196  000F9E  D002               	goto	u1900
  2197  000FA0  8AC5               	bsf	4037,5,c	;volatile
  2198  000FA2  D001               	goto	l2743
  2199  000FA4                     u1900:
  2200  000FA4  9AC5               	bcf	4037,5,c	;volatile
  2201  000FA6                     l2743:
  2202                           
  2203                           ;I2C.c: 62: ACKEN = 1;
  2204  000FA6  88C5               	bsf	4037,4,c	;volatile
  2205                           
  2206                           ;I2C.c: 63: return temp;
  2207  000FA8  502F               	movf	I2C_Master_Read@temp,w,c
  2208  000FAA  0012               	return	
  2209  000FAC                     __end_of_I2C_Master_Read:
  2210                           	opt stack 0
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           prodh	equ	0xFF4
  2216                           prodl	equ	0xFF3
  2217                           intcon	equ	0xFF2
  2218                           intcon2	equ	0xFF1
  2219                           intcon3	equ	0xFF0
  2220                           postinc0	equ	0xFEE
  2221                           wreg	equ	0xFE8
  2222                           indf2	equ	0xFDF
  2223                           fsr2h	equ	0xFDA
  2224                           fsr2l	equ	0xFD9
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _I2C_Master_Wait *****************
  2228 ;; Defined at:
  2229 ;;		line 24 in file "I2C.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        1 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_I2C_Master_Start
  2254 ;;		_I2C_Master_Stop
  2255 ;;		_I2C_Master_Write
  2256 ;;		_I2C_Master_Read
  2257 ;;		_I2C_Master_RepeatedStart
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text11
  2262  0010AA                     __ptext11:
  2263                           	opt stack 0
  2264  0010AA                     _I2C_Master_Wait:
  2265                           	opt stack 24
  2266  0010AA                     l34:
  2267  0010AA  B4C7               	btfsc	4039,2,c	;volatile
  2268  0010AC  D7FE               	goto	l34
  2269  0010AE  CFC5 F02D          	movff	4037,??_I2C_Master_Wait	;volatile
  2270  0010B2  0E1F               	movlw	31
  2271  0010B4  162D               	andwf	??_I2C_Master_Wait,f,c
  2272  0010B6  B4D8               	btfsc	status,2,c
  2273  0010B8  0012               	return	
  2274  0010BA  D7F7               	goto	l34
  2275  0010BC                     __end_of_I2C_Master_Wait:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           intcon	equ	0xFF2
  2284                           intcon2	equ	0xFF1
  2285                           intcon3	equ	0xFF0
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           indf2	equ	0xFDF
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _bottle_time *****************
  2294 ;; Defined at:
  2295 ;;		line 293 in file "main.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    7
  2316 ;; This function calls:
  2317 ;;		_lcdInst
  2318 ;;		_printf
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text12
  2325  000FAC                     __ptext12:
  2326                           	opt stack 0
  2327  000FAC                     _bottle_time:
  2328                           	opt stack 23
  2329                           
  2330                           ;main.c: 296: lcdInst(0b10000000);
  2331                           
  2332                           ;incstack = 0
  2333  000FAC  0E80               	movlw	128
  2334  000FAE  EC6D  F008         	call	_lcdInst
  2335                           
  2336                           ;main.c: 297: printf("Total Operation       ");
  2337  000FB2  0E8F               	movlw	low STR_17
  2338  000FB4  6E39               	movwf	printf@f,c
  2339  000FB6  0EFE               	movlw	high STR_17
  2340  000FB8  6E3A               	movwf	printf@f+1,c
  2341  000FBA  EC09  F000         	call	_printf	;wreg free
  2342                           
  2343                           ;main.c: 298: lcdInst(0b11000000);
  2344  000FBE  0EC0               	movlw	192
  2345  000FC0  EC6D  F008         	call	_lcdInst
  2346                           
  2347                           ;main.c: 300: printf("Time: 7s             ");
  2348  000FC4  0ED4               	movlw	low STR_18
  2349  000FC6  6E39               	movwf	printf@f,c
  2350  000FC8  0EFE               	movlw	high STR_18
  2351  000FCA  6E3A               	movwf	printf@f+1,c
  2352  000FCC  EC09  F000         	call	_printf	;wreg free
  2353  000FD0  0012               	return	
  2354  000FD2                     __end_of_bottle_time:
  2355                           	opt stack 0
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           prodh	equ	0xFF4
  2361                           prodl	equ	0xFF3
  2362                           intcon	equ	0xFF2
  2363                           intcon2	equ	0xFF1
  2364                           intcon3	equ	0xFF0
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           indf2	equ	0xFDF
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _bottle_count *****************
  2373 ;; Defined at:
  2374 ;;		line 251 in file "main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    7
  2395 ;; This function calls:
  2396 ;;		___awmod
  2397 ;;		_lcdInst
  2398 ;;		_printf
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text13
  2405  00083E                     __ptext13:
  2406                           	opt stack 0
  2407  00083E                     _bottle_count:
  2408                           	opt stack 23
  2409                           
  2410                           ;main.c: 252: switch(bottle_count_disp % 5){
  2411                           
  2412                           ;incstack = 0
  2413  00083E  D06D               	goto	l3017
  2414  000840                     l2981:
  2415                           
  2416                           ;main.c: 254: lcdInst(0b10000000);
  2417  000840  0E80               	movlw	128
  2418  000842  EC6D  F008         	call	_lcdInst
  2419                           
  2420                           ;main.c: 255: printf("Bottle Count    ");
  2421  000846  0E2E               	movlw	low STR_6
  2422  000848  6E39               	movwf	printf@f,c
  2423  00084A  0EFF               	movlw	high STR_6
  2424  00084C  6E3A               	movwf	printf@f+1,c
  2425  00084E  EC09  F000         	call	_printf	;wreg free
  2426                           
  2427                           ;main.c: 256: lcdInst(0b11000000);
  2428  000852  0EC0               	movlw	192
  2429  000854  EC6D  F008         	call	_lcdInst
  2430                           
  2431                           ;main.c: 257: printf("Total: 10       ");
  2432  000858  0E0C               	movlw	low STR_7
  2433  00085A  6E39               	movwf	printf@f,c
  2434  00085C  0EFF               	movlw	high STR_7
  2435  00085E  6E3A               	movwf	printf@f+1,c
  2436  000860  EC09  F000         	call	_printf	;wreg free
  2437                           
  2438                           ;main.c: 258: break;
  2439  000864  0012               	return	
  2440  000866                     l2987:
  2441                           
  2442                           ;main.c: 260: lcdInst(0b10000000);
  2443  000866  0E80               	movlw	128
  2444  000868  EC6D  F008         	call	_lcdInst
  2445                           
  2446                           ;main.c: 261: printf("YOP+CAP+LBL: 3  ");
  2447  00086C  0E72               	movlw	low STR_8
  2448  00086E  6E39               	movwf	printf@f,c
  2449  000870  0EFF               	movlw	high STR_8
  2450  000872  6E3A               	movwf	printf@f+1,c
  2451  000874  EC09  F000         	call	_printf	;wreg free
  2452                           
  2453                           ;main.c: 262: lcdInst(0b11000000);
  2454  000878  0EC0               	movlw	192
  2455  00087A  EC6D  F008         	call	_lcdInst
  2456                           
  2457                           ;main.c: 263: printf("YOP+CAP-LBL: 1  ");
  2458  00087E  0E61               	movlw	low STR_9
  2459  000880  6E39               	movwf	printf@f,c
  2460  000882  0EFF               	movlw	high STR_9
  2461  000884  6E3A               	movwf	printf@f+1,c
  2462  000886  EC09  F000         	call	_printf	;wreg free
  2463                           
  2464                           ;main.c: 264: break;
  2465  00088A  0012               	return	
  2466  00088C                     l2993:
  2467                           
  2468                           ;main.c: 266: lcdInst(0b10000000);
  2469  00088C  0E80               	movlw	128
  2470  00088E  EC6D  F008         	call	_lcdInst
  2471                           
  2472                           ;main.c: 267: printf("YOP-CAP+LBL: 1  ");
  2473  000892  0E50               	movlw	low STR_10
  2474  000894  6E39               	movwf	printf@f,c
  2475  000896  0EFF               	movlw	high STR_10
  2476  000898  6E3A               	movwf	printf@f+1,c
  2477  00089A  EC09  F000         	call	_printf	;wreg free
  2478                           
  2479                           ;main.c: 268: lcdInst(0b11000000);
  2480  00089E  0EC0               	movlw	192
  2481  0008A0  EC6D  F008         	call	_lcdInst
  2482                           
  2483                           ;main.c: 269: printf("YOP-CAP-LBL: 0  ");
  2484  0008A4  0E3F               	movlw	low STR_11
  2485  0008A6  6E39               	movwf	printf@f,c
  2486  0008A8  0EFF               	movlw	high STR_11
  2487  0008AA  6E3A               	movwf	printf@f+1,c
  2488  0008AC  EC09  F000         	call	_printf	;wreg free
  2489                           
  2490                           ;main.c: 270: break;
  2491  0008B0  0012               	return	
  2492  0008B2                     l2999:
  2493                           
  2494                           ;main.c: 272: lcdInst(0b10000000);
  2495  0008B2  0E80               	movlw	128
  2496  0008B4  EC6D  F008         	call	_lcdInst
  2497                           
  2498                           ;main.c: 273: printf("ESKA+CAP+LBL: 1 ");
  2499  0008B8  0E83               	movlw	low STR_12
  2500  0008BA  6E39               	movwf	printf@f,c
  2501  0008BC  0EFF               	movlw	high STR_12
  2502  0008BE  6E3A               	movwf	printf@f+1,c
  2503  0008C0  EC09  F000         	call	_printf	;wreg free
  2504                           
  2505                           ;main.c: 274: lcdInst(0b11000000);
  2506  0008C4  0EC0               	movlw	192
  2507  0008C6  EC6D  F008         	call	_lcdInst
  2508                           
  2509                           ;main.c: 275: printf("ESKA+CAP-LBL: 1 ");
  2510  0008CA  0EA5               	movlw	low STR_13
  2511  0008CC  6E39               	movwf	printf@f,c
  2512  0008CE  0EFF               	movlw	high STR_13
  2513  0008D0  6E3A               	movwf	printf@f+1,c
  2514  0008D2  EC09  F000         	call	_printf	;wreg free
  2515                           
  2516                           ;main.c: 276: break;
  2517  0008D6  0012               	return	
  2518  0008D8                     l3005:
  2519                           
  2520                           ;main.c: 278: lcdInst(0b10000000);
  2521  0008D8  0E80               	movlw	128
  2522  0008DA  EC6D  F008         	call	_lcdInst
  2523                           
  2524                           ;main.c: 279: printf("ESKA-CAP+LBL: 1 ");
  2525  0008DE  0E94               	movlw	low STR_14
  2526  0008E0  6E39               	movwf	printf@f,c
  2527  0008E2  0EFF               	movlw	high STR_14
  2528  0008E4  6E3A               	movwf	printf@f+1,c
  2529  0008E6  EC09  F000         	call	_printf	;wreg free
  2530                           
  2531                           ;main.c: 280: lcdInst(0b11000000);
  2532  0008EA  0EC0               	movlw	192
  2533  0008EC  EC6D  F008         	call	_lcdInst
  2534                           
  2535                           ;main.c: 281: printf("ESKA-CAP-LBL: 2 ");
  2536  0008F0  0EB6               	movlw	low STR_15
  2537  0008F2  6E39               	movwf	printf@f,c
  2538  0008F4  0EFF               	movlw	high STR_15
  2539  0008F6  6E3A               	movwf	printf@f+1,c
  2540  0008F8  EC09  F000         	call	_printf	;wreg free
  2541                           
  2542                           ;main.c: 282: break;
  2543  0008FC  0012               	return	
  2544  0008FE                     l3011:
  2545                           
  2546                           ;main.c: 285: lcdInst(0b10000000);
  2547  0008FE  0E80               	movlw	128
  2548  000900  EC6D  F008         	call	_lcdInst
  2549                           
  2550                           ;main.c: 286: printf("ERROR: %d", bottle_count_disp);
  2551  000904  0EF4               	movlw	low STR_16
  2552  000906  6E39               	movwf	printf@f,c
  2553  000908  0EFF               	movlw	high STR_16
  2554  00090A  6E3A               	movwf	printf@f+1,c
  2555  00090C  C051  F03B         	movff	_bottle_count_disp,?_printf+2
  2556  000910  C052  F03C         	movff	_bottle_count_disp+1,?_printf+3
  2557  000914  EC09  F000         	call	_printf	;wreg free
  2558  000918  D7F2               	goto	l3011
  2559  00091A                     l3017:
  2560  00091A  C051  F02D         	movff	_bottle_count_disp,___awmod@dividend
  2561  00091E  C052  F02E         	movff	_bottle_count_disp+1,___awmod@dividend+1
  2562  000922  0E00               	movlw	0
  2563  000924  6E30               	movwf	___awmod@divisor+1,c
  2564  000926  0E05               	movlw	5
  2565  000928  6E2F               	movwf	___awmod@divisor,c
  2566  00092A  ECF3  F005         	call	___awmod	;wreg free
  2567                           
  2568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2569                           ; Switch size 1, requested type "space"
  2570                           ; Number of cases is 1, Range of values is 0 to 0
  2571                           ; switch strategies available:
  2572                           ; Name         Instructions Cycles
  2573                           ; simple_byte            4     3 (average)
  2574                           ;	Chosen strategy is simple_byte
  2575  00092E  502E               	movf	?___awmod+1,w,c
  2576  000930  0A00               	xorlw	0	; case 0
  2577  000932  A4D8               	btfss	status,2,c
  2578  000934  D7E4               	goto	l3011
  2579                           
  2580                           ; Switch size 1, requested type "space"
  2581                           ; Number of cases is 5, Range of values is 0 to 4
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte           16     9 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  000936  502D               	movf	?___awmod,w,c
  2587  000938  0A00               	xorlw	0	; case 0
  2588  00093A  B4D8               	btfsc	status,2,c
  2589  00093C  D781               	goto	l2981
  2590  00093E  0A01               	xorlw	1	; case 1
  2591  000940  B4D8               	btfsc	status,2,c
  2592  000942  D791               	goto	l2987
  2593  000944  0A03               	xorlw	3	; case 2
  2594  000946  B4D8               	btfsc	status,2,c
  2595  000948  D7A1               	goto	l2993
  2596  00094A  0A01               	xorlw	1	; case 3
  2597  00094C  B4D8               	btfsc	status,2,c
  2598  00094E  D7B1               	goto	l2999
  2599  000950  0A07               	xorlw	7	; case 4
  2600  000952  B4D8               	btfsc	status,2,c
  2601  000954  D7C1               	goto	l3005
  2602  000956  D7D3               	goto	l3011
  2603  000958                     __end_of_bottle_count:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           intcon2	equ	0xFF1
  2613                           intcon3	equ	0xFF0
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           indf2	equ	0xFDF
  2617                           fsr2h	equ	0xFDA
  2618                           fsr2l	equ	0xFD9
  2619                           status	equ	0xFD8
  2620                           
  2621 ;; *************** function _printf *****************
  2622 ;; Defined at:
  2623 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  f               2   56[COMRAM] PTR const unsigned char 
  2626 ;;		 -> STR_23(15), STR_22(16), STR_21(25), STR_20(24), 
  2627 ;;		 -> STR_19(23), STR_18(22), STR_17(23), STR_16(10), 
  2628 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  2629 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
  2630 ;;		 -> STR_7(17), STR_6(17), STR_5(23), STR_4(23), 
  2631 ;;		 -> STR_3(17), STR_2(17), STR_1(14), 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  idx             1    4[BANK0 ] unsigned char 
  2634 ;;  tmpval          4    0        struct .
  2635 ;;  cp              3    0        PTR const unsigned char 
  2636 ;;  width           2   11[BANK0 ] int 
  2637 ;;  val             2    8[BANK0 ] unsigned int 
  2638 ;;  ap              2    5[BANK0 ] PTR void [1]
  2639 ;;		 -> ?i2_printf(2), ?_printf(2), 
  2640 ;;  len             2    0        unsigned int 
  2641 ;;  c               1   13[BANK0 ] char 
  2642 ;;  flag            1   10[BANK0 ] unsigned char 
  2643 ;;  prec            1    7[BANK0 ] char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   56[COMRAM] int 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         8      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:       22 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    6
  2660 ;; This function calls:
  2661 ;;		___lwdiv
  2662 ;;		___lwmod
  2663 ;;		___wmul
  2664 ;;		_isdigit
  2665 ;;		_putch
  2666 ;; This function is called by:
  2667 ;;		_standby
  2668 ;;		_date_time
  2669 ;;		_bottle_count
  2670 ;;		_bottle_time
  2671 ;;		_operation
  2672 ;;		_operationend
  2673 ;;		_emergencystop
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text14
  2678  000012                     __ptext14:
  2679                           	opt stack 0
  2680  000012                     _printf:
  2681                           	opt stack 23
  2682                           
  2683                           ;doprnt.c: 466: va_list ap;
  2684                           ;doprnt.c: 499: signed char c;
  2685                           ;doprnt.c: 501: int width;
  2686                           ;doprnt.c: 506: signed char prec;
  2687                           ;doprnt.c: 508: unsigned char flag;
  2688                           ;doprnt.c: 523: union {
  2689                           ;doprnt.c: 524: unsigned long vd;
  2690                           ;doprnt.c: 525: double integ;
  2691                           ;doprnt.c: 526: } tmpval;
  2692                           ;doprnt.c: 528: unsigned int val;
  2693                           ;doprnt.c: 529: unsigned len;
  2694                           ;doprnt.c: 530: const char * cp;
  2695                           ;doprnt.c: 533: *ap = __va_start();
  2696                           
  2697                           ;incstack = 0
  2698  000012  0E3B               	movlw	low (?_printf+2)
  2699  000014  0100               	movlb	0	; () banked
  2700  000016  6F85               	movwf	printf@ap& (0+255),b
  2701  000018  0E00               	movlw	high (?_printf+2)
  2702  00001A  0100               	movlb	0	; () banked
  2703  00001C  6F86               	movwf	(printf@ap+1)& (0+255),b
  2704                           
  2705                           ;doprnt.c: 536: while(c = *f++) {
  2706  00001E  D1BD               	goto	l2881
  2707  000020                     l2755:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;doprnt.c: 538: if(c != '%')
  2711  000020  0E25               	movlw	37
  2712  000022  0100               	movlb	0	; () banked
  2713  000024  198D               	xorwf	printf@c& (0+255),w,b
  2714  000026  B4D8               	btfsc	status,2,c
  2715  000028  D005               	goto	l2759
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;doprnt.c: 540: {
  2719                           ;doprnt.c: 541: (putch(c) );
  2720  00002A  0100               	movlb	0	; () banked
  2721  00002C  518D               	movf	printf@c& (0+255),w,b
  2722  00002E  EC67  F008         	call	_putch
  2723                           
  2724                           ;doprnt.c: 542: continue;
  2725  000032  D1B3               	goto	l2881
  2726  000034                     l2759:
  2727                           
  2728                           ;doprnt.c: 543: }
  2729                           ;doprnt.c: 546: width = 0;
  2730  000034  0E00               	movlw	0
  2731  000036  0100               	movlb	0	; () banked
  2732  000038  6F8C               	movwf	(printf@width+1)& (0+255),b
  2733  00003A  0E00               	movlw	0
  2734  00003C  6F8B               	movwf	printf@width& (0+255),b
  2735                           
  2736                           ;doprnt.c: 548: flag = 0;
  2737  00003E  0E00               	movlw	0
  2738  000040  0100               	movlb	0	; () banked
  2739  000042  6F8A               	movwf	printf@flag& (0+255),b
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;doprnt.c: 551: switch(*f) {
  2743                           
  2744                           ;doprnt.c: 550: for(;;) {
  2745  000044  D004               	goto	l2765
  2746  000046                     l2761:
  2747                           
  2748                           ;doprnt.c: 580: flag |= 0x04;
  2749  000046  0100               	movlb	0	; () banked
  2750  000048  858A               	bsf	printf@flag& (0+255),2,b
  2751                           
  2752                           ;doprnt.c: 581: f++;
  2753  00004A  4A39               	infsnz	printf@f,f,c
  2754  00004C  2A3A               	incf	printf@f+1,f,c
  2755  00004E                     l2765:
  2756  00004E  C039  FFF6         	movff	printf@f,tblptrl
  2757  000052  C03A  FFF7         	movff	printf@f+1,tblptrh
  2758  000056                     	if	0	;tblptru may be non-zero
  2759  000056                     	endif
  2760  000056                     	if	0	;tblptru may be non-zero
  2761  000056                     	endif
  2762  000056  0008               	tblrd		*
  2763  000058  50F5               	movf	tablat,w,c
  2764                           
  2765                           ; Switch size 1, requested type "space"
  2766                           ; Number of cases is 1, Range of values is 48 to 48
  2767                           ; switch strategies available:
  2768                           ; Name         Instructions Cycles
  2769                           ; simple_byte            4     3 (average)
  2770                           ;	Chosen strategy is simple_byte
  2771  00005A  0A30               	xorlw	48	; case 48
  2772  00005C  B4D8               	btfsc	status,2,c
  2773  00005E  D7F3               	goto	l2761
  2774                           
  2775                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2776                           
  2777                           ;doprnt.c: 586: }
  2778                           
  2779                           ;doprnt.c: 585: break;
  2780  000060  C039  FFF6         	movff	printf@f,tblptrl
  2781  000064  C03A  FFF7         	movff	printf@f+1,tblptrh
  2782  000068                     	if	0	;tblptru may be non-zero
  2783  000068                     	endif
  2784  000068                     	if	0	;tblptru may be non-zero
  2785  000068                     	endif
  2786  000068  0008               	tblrd		*
  2787  00006A  50F5               	movf	tablat,w,c
  2788  00006C  EC22  F008         	call	_isdigit
  2789  000070  A0D8               	btfss	status,0,c
  2790  000072  D042               	goto	l2783
  2791                           
  2792                           ;doprnt.c: 598: width = 0;
  2793  000074  0E00               	movlw	0
  2794  000076  0100               	movlb	0	; () banked
  2795  000078  6F8C               	movwf	(printf@width+1)& (0+255),b
  2796  00007A  0E00               	movlw	0
  2797  00007C  6F8B               	movwf	printf@width& (0+255),b
  2798  00007E                     l2771:
  2799                           
  2800                           ;doprnt.c: 600: width *= 10;
  2801  00007E  C08B  F02D         	movff	printf@width,___wmul@multiplier
  2802  000082  C08C  F02E         	movff	printf@width+1,___wmul@multiplier+1
  2803  000086  0E00               	movlw	0
  2804  000088  6E30               	movwf	___wmul@multiplicand+1,c
  2805  00008A  0E0A               	movlw	10
  2806  00008C  6E2F               	movwf	___wmul@multiplicand,c
  2807  00008E  ECE9  F007         	call	___wmul	;wreg free
  2808  000092  C02D  F08B         	movff	?___wmul,printf@width
  2809  000096  C02E  F08C         	movff	?___wmul+1,printf@width+1
  2810                           
  2811                           ;doprnt.c: 601: width += *f++ - '0';
  2812  00009A  0ED0               	movlw	208
  2813  00009C  0100               	movlb	0	; () banked
  2814  00009E  6F80               	movwf	??_printf& (0+255),b
  2815  0000A0  0EFF               	movlw	255
  2816  0000A2  0100               	movlb	0	; () banked
  2817  0000A4  6F81               	movwf	(??_printf+1)& (0+255),b
  2818  0000A6  C039  FFF6         	movff	printf@f,tblptrl
  2819  0000AA  C03A  FFF7         	movff	printf@f+1,tblptrh
  2820  0000AE                     	if	0	;tblptru may be non-zero
  2821  0000AE                     	endif
  2822  0000AE                     	if	0	;tblptru may be non-zero
  2823  0000AE                     	endif
  2824  0000AE  0008               	tblrd		*
  2825  0000B0  50F5               	movf	tablat,w,c
  2826  0000B2  0100               	movlb	0	; () banked
  2827  0000B4  6F82               	movwf	(??_printf+2)& (0+255),b
  2828  0000B6  6B83               	clrf	(??_printf+3)& (0+255),b
  2829  0000B8  0100               	movlb	0	; () banked
  2830  0000BA  5180               	movf	??_printf& (0+255),w,b
  2831  0000BC  0100               	movlb	0	; () banked
  2832  0000BE  2782               	addwf	(??_printf+2)& (0+255),f,b
  2833  0000C0  0100               	movlb	0	; () banked
  2834  0000C2  5181               	movf	(??_printf+1)& (0+255),w,b
  2835  0000C4  0100               	movlb	0	; () banked
  2836  0000C6  2383               	addwfc	(??_printf+3)& (0+255),f,b
  2837  0000C8  0100               	movlb	0	; () banked
  2838  0000CA  5182               	movf	(??_printf+2)& (0+255),w,b
  2839  0000CC  0100               	movlb	0	; () banked
  2840  0000CE  278B               	addwf	printf@width& (0+255),f,b
  2841  0000D0  0100               	movlb	0	; () banked
  2842  0000D2  5183               	movf	(??_printf+3)& (0+255),w,b
  2843  0000D4  0100               	movlb	0	; () banked
  2844  0000D6  238C               	addwfc	(printf@width+1)& (0+255),f,b
  2845                           
  2846                           ; BSR set to: 0
  2847  0000D8  4A39               	infsnz	printf@f,f,c
  2848  0000DA  2A3A               	incf	printf@f+1,f,c
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2852  0000DC  C039  FFF6         	movff	printf@f,tblptrl
  2853  0000E0  C03A  FFF7         	movff	printf@f+1,tblptrh
  2854  0000E4                     	if	0	;tblptru may be non-zero
  2855  0000E4                     	endif
  2856  0000E4                     	if	0	;tblptru may be non-zero
  2857  0000E4                     	endif
  2858  0000E4  0008               	tblrd		*
  2859  0000E6  50F5               	movf	tablat,w,c
  2860  0000E8  EC22  F008         	call	_isdigit
  2861  0000EC  A0D8               	btfss	status,0,c
  2862  0000EE  D004               	goto	l2783
  2863  0000F0  D7C6               	goto	l2771
  2864  0000F2                     l2779:
  2865                           
  2866                           ;doprnt.c: 721: flag |= 0x80;
  2867  0000F2  0100               	movlb	0	; () banked
  2868  0000F4  8F8A               	bsf	printf@flag& (0+255),7,b
  2869                           
  2870                           ;doprnt.c: 723: break;
  2871  0000F6  D018               	goto	l309
  2872  0000F8                     l2783:
  2873  0000F8  C039  FFF6         	movff	printf@f,tblptrl
  2874  0000FC  C03A  FFF7         	movff	printf@f+1,tblptrh
  2875  000100  4A39               	infsnz	printf@f,f,c
  2876  000102  2A3A               	incf	printf@f+1,f,c
  2877  000104                     	if	0	;tblptru may be non-zero
  2878  000104                     	endif
  2879  000104                     	if	0	;tblptru may be non-zero
  2880  000104                     	endif
  2881  000104  0008               	tblrd		*
  2882  000106  CFF5 F08D          	movff	tablat,printf@c
  2883  00010A  0100               	movlb	0	; () banked
  2884  00010C  518D               	movf	printf@c& (0+255),w,b
  2885                           
  2886                           ; Switch size 1, requested type "space"
  2887                           ; Number of cases is 4, Range of values is 0 to 120
  2888                           ; switch strategies available:
  2889                           ; Name         Instructions Cycles
  2890                           ; simple_byte           13     7 (average)
  2891                           ;	Chosen strategy is simple_byte
  2892  00010E  0A00               	xorlw	0	; case 0
  2893  000110  B4D8               	btfsc	status,2,c
  2894  000112  0012               	return	
  2895  000114  0A64               	xorlw	100	; case 100
  2896  000116  B4D8               	btfsc	status,2,c
  2897  000118  D007               	goto	l309
  2898  00011A  0A0D               	xorlw	13	; case 105
  2899  00011C  B4D8               	btfsc	status,2,c
  2900  00011E  D004               	goto	l309
  2901  000120  0A11               	xorlw	17	; case 120
  2902  000122  B4D8               	btfsc	status,2,c
  2903  000124  D7E6               	goto	l2779
  2904  000126  D139               	goto	l2881
  2905  000128                     l309:
  2906                           
  2907                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  2908  000128  0100               	movlb	0	; () banked
  2909  00012A  BF8A               	btfsc	printf@flag& (0+255),7,b
  2910  00012C  D019               	goto	l2795
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;doprnt.c: 1253: {
  2914                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2915  00012E  C085  FFD9         	movff	printf@ap,fsr2l
  2916  000132  C086  FFDA         	movff	printf@ap+1,fsr2h
  2917  000136  CFDE F088          	movff	postinc2,printf@val
  2918  00013A  CFDD F089          	movff	postdec2,printf@val+1
  2919                           
  2920                           ; BSR set to: 0
  2921  00013E  0E02               	movlw	2
  2922  000140  0100               	movlb	0	; () banked
  2923  000142  2785               	addwf	printf@ap& (0+255),f,b
  2924  000144  0E00               	movlw	0
  2925  000146  2386               	addwfc	(printf@ap+1)& (0+255),f,b
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;doprnt.c: 1261: if((int)val < 0) {
  2929  000148  0100               	movlb	0	; () banked
  2930  00014A  AF89               	btfss	(printf@val+1)& (0+255),7,b
  2931  00014C  D053               	goto	l2829
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;doprnt.c: 1262: flag |= 0x03;
  2935  00014E  0E03               	movlw	3
  2936  000150  0100               	movlb	0	; () banked
  2937  000152  138A               	iorwf	printf@flag& (0+255),f,b
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;doprnt.c: 1263: val = -val;
  2941  000154  0100               	movlb	0	; () banked
  2942  000156  6D88               	negf	printf@val& (0+255),b
  2943  000158  1F89               	comf	(printf@val+1)& (0+255),f,b
  2944  00015A  B0D8               	btfsc	status,0,c
  2945  00015C  2B89               	incf	(printf@val+1)& (0+255),f,b
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;doprnt.c: 1264: }
  2949                           ;doprnt.c: 1266: }
  2950  00015E  D04A               	goto	l2829
  2951  000160                     l2795:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;doprnt.c: 1268: else
  2955                           ;doprnt.c: 1273: {
  2956                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2957  000160  C085  FFD9         	movff	printf@ap,fsr2l
  2958  000164  C086  FFDA         	movff	printf@ap+1,fsr2h
  2959  000168  CFDE F088          	movff	postinc2,printf@val
  2960  00016C  CFDD F089          	movff	postdec2,printf@val+1
  2961                           
  2962                           ; BSR set to: 0
  2963  000170  0E02               	movlw	2
  2964  000172  0100               	movlb	0	; () banked
  2965  000174  2785               	addwf	printf@ap& (0+255),f,b
  2966  000176  0E00               	movlw	0
  2967  000178  2386               	addwfc	(printf@ap+1)& (0+255),f,b
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;doprnt.c: 1287: }
  2971                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  2972  00017A  D03C               	goto	l2829
  2973  00017C                     l2799:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2977  00017C  0E01               	movlw	1
  2978  00017E  0100               	movlb	0	; () banked
  2979  000180  6F8D               	movwf	printf@c& (0+255),b
  2980  000182                     l2801:
  2981                           
  2982                           ; BSR set to: 0
  2983  000182  0E05               	movlw	5
  2984  000184  0100               	movlb	0	; () banked
  2985  000186  198D               	xorwf	printf@c& (0+255),w,b
  2986  000188  B4D8               	btfsc	status,2,c
  2987  00018A  D03D               	goto	l2831
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;doprnt.c: 1306: if(val < dpowers[c])
  2991                           
  2992                           ; BSR set to: 0
  2993                           
  2994                           ; BSR set to: 0
  2995  00018C  0100               	movlb	0	; () banked
  2996  00018E  518D               	movf	printf@c& (0+255),w,b
  2997  000190  0D02               	mullw	2
  2998  000192  0E2E               	movlw	low _dpowers
  2999  000194  24F3               	addwf	prodl,w,c
  3000  000196  6EF6               	movwf	tblptrl,c
  3001  000198  0EFE               	movlw	high _dpowers
  3002  00019A  20F4               	addwfc	prodh,w,c
  3003  00019C  6EF7               	movwf	tblptrh,c
  3004  00019E                     	if	0	;There are less than 3 active tblptr bytes
  3005  00019E                     	endif
  3006  00019E  0009               	tblrd		*+
  3007  0001A0  50F5               	movf	tablat,w,c
  3008  0001A2  0100               	movlb	0	; () banked
  3009  0001A4  5D88               	subwf	printf@val& (0+255),w,b
  3010  0001A6  0009               	tblrd		*+
  3011  0001A8  50F5               	movf	tablat,w,c
  3012  0001AA  0100               	movlb	0	; () banked
  3013  0001AC  5989               	subwfb	(printf@val+1)& (0+255),w,b
  3014  0001AE  A0D8               	btfss	status,0,c
  3015  0001B0  D02A               	goto	l2831
  3016                           
  3017                           ; BSR set to: 0
  3018                           
  3019                           ; BSR set to: 0
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;doprnt.c: 1307: break;
  3023  0001B2  0100               	movlb	0	; () banked
  3024  0001B4  2B8D               	incf	printf@c& (0+255),f,b
  3025  0001B6  D7E5               	goto	l2801
  3026  0001B8                     l2813:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3030  0001B8  0E01               	movlw	1
  3031  0001BA  0100               	movlb	0	; () banked
  3032  0001BC  6F8D               	movwf	printf@c& (0+255),b
  3033  0001BE                     l2815:
  3034                           
  3035                           ; BSR set to: 0
  3036  0001BE  0E04               	movlw	4
  3037  0001C0  0100               	movlb	0	; () banked
  3038  0001C2  198D               	xorwf	printf@c& (0+255),w,b
  3039  0001C4  B4D8               	btfsc	status,2,c
  3040  0001C6  D01F               	goto	l2831
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3044                           
  3045                           ; BSR set to: 0
  3046                           
  3047                           ; BSR set to: 0
  3048  0001C8  0100               	movlb	0	; () banked
  3049  0001CA  518D               	movf	printf@c& (0+255),w,b
  3050  0001CC  0D02               	mullw	2
  3051  0001CE  0E38               	movlw	low _hexpowers
  3052  0001D0  24F3               	addwf	prodl,w,c
  3053  0001D2  6EF6               	movwf	tblptrl,c
  3054  0001D4  0EFE               	movlw	high _hexpowers
  3055  0001D6  20F4               	addwfc	prodh,w,c
  3056  0001D8  6EF7               	movwf	tblptrh,c
  3057  0001DA                     	if	0	;There are less than 3 active tblptr bytes
  3058  0001DA                     	endif
  3059  0001DA  0009               	tblrd		*+
  3060  0001DC  50F5               	movf	tablat,w,c
  3061  0001DE  0100               	movlb	0	; () banked
  3062  0001E0  5D88               	subwf	printf@val& (0+255),w,b
  3063  0001E2  0009               	tblrd		*+
  3064  0001E4  50F5               	movf	tablat,w,c
  3065  0001E6  0100               	movlb	0	; () banked
  3066  0001E8  5989               	subwfb	(printf@val+1)& (0+255),w,b
  3067  0001EA  A0D8               	btfss	status,0,c
  3068  0001EC  D00C               	goto	l2831
  3069                           
  3070                           ; BSR set to: 0
  3071                           
  3072                           ; BSR set to: 0
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;doprnt.c: 1318: break;
  3076  0001EE  0100               	movlb	0	; () banked
  3077  0001F0  2B8D               	incf	printf@c& (0+255),f,b
  3078  0001F2  D7E5               	goto	l2815
  3079  0001F4                     l2829:
  3080                           
  3081                           ; BSR set to: 0
  3082  0001F4  0100               	movlb	0	; () banked
  3083  0001F6  518A               	movf	printf@flag& (0+255),w,b
  3084  0001F8  0B80               	andlw	128
  3085                           
  3086                           ; Switch size 1, requested type "space"
  3087                           ; Number of cases is 2, Range of values is 0 to 128
  3088                           ; switch strategies available:
  3089                           ; Name         Instructions Cycles
  3090                           ; simple_byte            7     4 (average)
  3091                           ;	Chosen strategy is simple_byte
  3092  0001FA  0A00               	xorlw	0	; case 0
  3093  0001FC  B4D8               	btfsc	status,2,c
  3094  0001FE  D7BE               	goto	l2799
  3095  000200  0A80               	xorlw	128	; case 128
  3096  000202  B4D8               	btfsc	status,2,c
  3097  000204  D7D9               	goto	l2813
  3098  000206                     l2831:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3102  000206  0100               	movlb	0	; () banked
  3103  000208  518B               	movf	printf@width& (0+255),w,b
  3104  00020A  0100               	movlb	0	; () banked
  3105  00020C  118C               	iorwf	(printf@width+1)& (0+255),w,b
  3106  00020E  B4D8               	btfsc	status,2,c
  3107  000210  D00B               	goto	l2837
  3108                           
  3109                           ; BSR set to: 0
  3110  000212  C08A  F080         	movff	printf@flag,??_printf
  3111  000216  0E03               	movlw	3
  3112  000218  0100               	movlb	0	; () banked
  3113  00021A  1780               	andwf	??_printf& (0+255),f,b
  3114  00021C  B4D8               	btfsc	status,2,c
  3115  00021E  D004               	goto	l2837
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;doprnt.c: 1346: width--;
  3119  000220  0100               	movlb	0	; () banked
  3120  000222  078B               	decf	printf@width& (0+255),f,b
  3121  000224  A0D8               	btfss	status,0,c
  3122  000226  078C               	decf	(printf@width+1)& (0+255),f,b
  3123  000228                     l2837:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;doprnt.c: 1381: if(width > c)
  3127  000228  0E80               	movlw	128
  3128  00022A  0100               	movlb	0	; () banked
  3129  00022C  BF8D               	btfsc	printf@c& (0+255),7,b
  3130  00022E  0E7F               	movlw	127
  3131  000230  0100               	movlb	0	; () banked
  3132  000232  6F80               	movwf	??_printf& (0+255),b
  3133  000234  0100               	movlb	0	; () banked
  3134  000236  518B               	movf	printf@width& (0+255),w,b
  3135  000238  0100               	movlb	0	; () banked
  3136  00023A  5D8D               	subwf	printf@c& (0+255),w,b
  3137  00023C  0100               	movlb	0	; () banked
  3138  00023E  518C               	movf	(printf@width+1)& (0+255),w,b
  3139  000240  0A80               	xorlw	128
  3140  000242  0100               	movlb	0	; () banked
  3141  000244  5980               	subwfb	??_printf& (0+255),w,b
  3142  000246  B0D8               	btfsc	status,0,c
  3143  000248  D00B               	goto	l2841
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;doprnt.c: 1382: width -= c;
  3147  00024A  0100               	movlb	0	; () banked
  3148  00024C  518D               	movf	printf@c& (0+255),w,b
  3149  00024E  0100               	movlb	0	; () banked
  3150  000250  5F8B               	subwf	printf@width& (0+255),f,b
  3151  000252  0E00               	movlw	0
  3152  000254  0100               	movlb	0	; () banked
  3153  000256  BF8D               	btfsc	printf@c& (0+255),7,b
  3154  000258  0EFF               	movlw	255
  3155  00025A  0100               	movlb	0	; () banked
  3156  00025C  5B8C               	subwfb	(printf@width+1)& (0+255),f,b
  3157  00025E  D005               	goto	l2843
  3158  000260                     l2841:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;doprnt.c: 1383: else
  3162                           ;doprnt.c: 1384: width = 0;
  3163  000260  0E00               	movlw	0
  3164  000262  0100               	movlb	0	; () banked
  3165  000264  6F8C               	movwf	(printf@width+1)& (0+255),b
  3166  000266  0E00               	movlw	0
  3167  000268  6F8B               	movwf	printf@width& (0+255),b
  3168  00026A                     l2843:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;doprnt.c: 1387: if(flag & 0x04) {
  3172  00026A  0100               	movlb	0	; () banked
  3173  00026C  A58A               	btfss	printf@flag& (0+255),2,b
  3174  00026E  D018               	goto	l2855
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;doprnt.c: 1392: if(flag & 0x03)
  3178  000270  C08A  F080         	movff	printf@flag,??_printf
  3179  000274  0E03               	movlw	3
  3180  000276  0100               	movlb	0	; () banked
  3181  000278  1780               	andwf	??_printf& (0+255),f,b
  3182  00027A  B4D8               	btfsc	status,2,c
  3183  00027C  D003               	goto	l2849
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;doprnt.c: 1393: (putch('-') );
  3187  00027E  0E2D               	movlw	45
  3188  000280  EC67  F008         	call	_putch
  3189  000284                     l2849:
  3190                           
  3191                           ;doprnt.c: 1415: if(width)
  3192  000284  0100               	movlb	0	; () banked
  3193  000286  518B               	movf	printf@width& (0+255),w,b
  3194  000288  0100               	movlb	0	; () banked
  3195  00028A  118C               	iorwf	(printf@width+1)& (0+255),w,b
  3196  00028C  B4D8               	btfsc	status,2,c
  3197  00028E  D025               	goto	l2865
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;doprnt.c: 1417: (putch('0') );
  3201                           
  3202                           ; BSR set to: 0
  3203                           
  3204                           ;doprnt.c: 1416: do
  3205  000290  0E30               	movlw	48
  3206  000292  EC67  F008         	call	_putch
  3207                           
  3208                           ;doprnt.c: 1418: while(--width);
  3209  000296  0100               	movlb	0	; () banked
  3210  000298  078B               	decf	printf@width& (0+255),f,b
  3211  00029A  A0D8               	btfss	status,0,c
  3212  00029C  078C               	decf	(printf@width+1)& (0+255),f,b
  3213  00029E  D7F2               	goto	l2849
  3214  0002A0                     l2855:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;doprnt.c: 1422: {
  3218                           ;doprnt.c: 1424: if(width
  3219                           ;doprnt.c: 1428: )
  3220  0002A0  0100               	movlb	0	; () banked
  3221  0002A2  518B               	movf	printf@width& (0+255),w,b
  3222  0002A4  0100               	movlb	0	; () banked
  3223  0002A6  118C               	iorwf	(printf@width+1)& (0+255),w,b
  3224  0002A8  B4D8               	btfsc	status,2,c
  3225  0002AA  D00D               	goto	l2861
  3226  0002AC                     l2857:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;doprnt.c: 1430: (putch(' ') );
  3230  0002AC  0E20               	movlw	32
  3231  0002AE  EC67  F008         	call	_putch
  3232                           
  3233                           ;doprnt.c: 1431: while(--width);
  3234  0002B2  0100               	movlb	0	; () banked
  3235  0002B4  078B               	decf	printf@width& (0+255),f,b
  3236  0002B6  A0D8               	btfss	status,0,c
  3237  0002B8  078C               	decf	(printf@width+1)& (0+255),f,b
  3238  0002BA  0100               	movlb	0	; () banked
  3239  0002BC  518B               	movf	printf@width& (0+255),w,b
  3240  0002BE  0100               	movlb	0	; () banked
  3241  0002C0  118C               	iorwf	(printf@width+1)& (0+255),w,b
  3242  0002C2  A4D8               	btfss	status,2,c
  3243  0002C4  D7F3               	goto	l2857
  3244  0002C6                     l2861:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;doprnt.c: 1438: if(flag & 0x03)
  3248  0002C6  C08A  F080         	movff	printf@flag,??_printf
  3249  0002CA  0E03               	movlw	3
  3250  0002CC  0100               	movlb	0	; () banked
  3251  0002CE  1780               	andwf	??_printf& (0+255),f,b
  3252  0002D0  B4D8               	btfsc	status,2,c
  3253  0002D2  D003               	goto	l2865
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;doprnt.c: 1439: (putch('-') );
  3257  0002D4  0E2D               	movlw	45
  3258  0002D6  EC67  F008         	call	_putch
  3259  0002DA                     l2865:
  3260                           
  3261                           ;doprnt.c: 1469: }
  3262                           ;doprnt.c: 1472: prec = c;
  3263  0002DA  C08D  F087         	movff	printf@c,printf@prec
  3264                           
  3265                           ;doprnt.c: 1474: while(prec--) {
  3266  0002DE  D057               	goto	l2879
  3267  0002E0                     l2867:
  3268                           
  3269                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3270  0002E0  0100               	movlb	0	; () banked
  3271  0002E2  5187               	movf	printf@prec& (0+255),w,b
  3272  0002E4  0D02               	mullw	2
  3273  0002E6  0E2E               	movlw	low _dpowers
  3274  0002E8  24F3               	addwf	prodl,w,c
  3275  0002EA  6EF6               	movwf	tblptrl,c
  3276  0002EC  0EFE               	movlw	high _dpowers
  3277  0002EE  20F4               	addwfc	prodh,w,c
  3278  0002F0  6EF7               	movwf	tblptrh,c
  3279  0002F2                     	if	0	;There are less than 3 active tblptr bytes
  3280  0002F2                     	endif
  3281  0002F2  0009               	tblrd		*+
  3282  0002F4  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  3283  0002F8  000A               	tblrd		*-
  3284  0002FA  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  3285  0002FE  C088  F02D         	movff	printf@val,___lwdiv@dividend
  3286  000302  C089  F02E         	movff	printf@val+1,___lwdiv@dividend+1
  3287  000306  EC8C  F006         	call	___lwdiv	;wreg free
  3288  00030A  C02D  F034         	movff	?___lwdiv,___lwmod@dividend
  3289  00030E  C02E  F035         	movff	?___lwdiv+1,___lwmod@dividend+1
  3290  000312  0E00               	movlw	0
  3291  000314  6E37               	movwf	___lwmod@divisor+1,c
  3292  000316  0E0A               	movlw	10
  3293  000318  6E36               	movwf	___lwmod@divisor,c
  3294  00031A  EC52  F007         	call	___lwmod	;wreg free
  3295  00031E  5034               	movf	?___lwmod,w,c
  3296  000320  0F30               	addlw	48
  3297  000322  0100               	movlb	0	; () banked
  3298  000324  6F8D               	movwf	printf@c& (0+255),b
  3299                           
  3300                           ;doprnt.c: 1491: break;
  3301  000326  D02F               	goto	l2877
  3302  000328                     l2869:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;doprnt.c: 1499: {
  3306                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3307  000328  C088  F02D         	movff	printf@val,___lwdiv@dividend
  3308  00032C  C089  F02E         	movff	printf@val+1,___lwdiv@dividend+1
  3309  000330  0100               	movlb	0	; () banked
  3310  000332  5187               	movf	printf@prec& (0+255),w,b
  3311  000334  0D02               	mullw	2
  3312  000336  0E38               	movlw	low _hexpowers
  3313  000338  24F3               	addwf	prodl,w,c
  3314  00033A  6EF6               	movwf	tblptrl,c
  3315  00033C  0EFE               	movlw	high _hexpowers
  3316  00033E  20F4               	addwfc	prodh,w,c
  3317  000340  6EF7               	movwf	tblptrh,c
  3318  000342                     	if	0	;There are less than 3 active tblptr bytes
  3319  000342                     	endif
  3320  000342  0009               	tblrd		*+
  3321  000344  CFF5 F02F          	movff	tablat,___lwdiv@divisor
  3322  000348  000A               	tblrd		*-
  3323  00034A  CFF5 F030          	movff	tablat,___lwdiv@divisor+1
  3324  00034E  EC8C  F006         	call	___lwdiv	;wreg free
  3325  000352  502D               	movf	?___lwdiv,w,c
  3326  000354  0B0F               	andlw	15
  3327  000356  0100               	movlb	0	; () banked
  3328  000358  6F84               	movwf	printf@idx& (0+255),b
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3332  00035A  0100               	movlb	0	; () banked
  3333  00035C  5184               	movf	printf@idx& (0+255),w,b
  3334  00035E  0D01               	mullw	1
  3335  000360  0EEA               	movlw	low STR_24
  3336  000362  24F3               	addwf	prodl,w,c
  3337  000364  6EF6               	movwf	tblptrl,c
  3338  000366  0EFE               	movlw	high STR_24
  3339  000368  20F4               	addwfc	prodh,w,c
  3340  00036A  6EF7               	movwf	tblptrh,c
  3341  00036C                     	if	0	;There are less than 3 active tblptr bytes
  3342  00036C                     	endif
  3343  00036C  0008               	tblrd		*
  3344  00036E  CFF5 F08D          	movff	tablat,printf@c
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;doprnt.c: 1523: }
  3348                           
  3349                           ;doprnt.c: 1508: }
  3350                           ;doprnt.c: 1510: break;
  3351  000372  D009               	goto	l2877
  3352  000374                     l2875:
  3353  000374  0100               	movlb	0	; () banked
  3354  000376  518A               	movf	printf@flag& (0+255),w,b
  3355  000378  0B80               	andlw	128
  3356                           
  3357                           ; Switch size 1, requested type "space"
  3358                           ; Number of cases is 2, Range of values is 0 to 128
  3359                           ; switch strategies available:
  3360                           ; Name         Instructions Cycles
  3361                           ; simple_byte            7     4 (average)
  3362                           ;	Chosen strategy is simple_byte
  3363  00037A  0A00               	xorlw	0	; case 0
  3364  00037C  B4D8               	btfsc	status,2,c
  3365  00037E  D7B0               	goto	l2867
  3366  000380  0A80               	xorlw	128	; case 128
  3367  000382  B4D8               	btfsc	status,2,c
  3368  000384  D7D1               	goto	l2869
  3369  000386                     l2877:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;doprnt.c: 1524: (putch(c) );
  3373  000386  0100               	movlb	0	; () banked
  3374  000388  518D               	movf	printf@c& (0+255),w,b
  3375  00038A  EC67  F008         	call	_putch
  3376  00038E                     l2879:
  3377  00038E  0100               	movlb	0	; () banked
  3378  000390  0787               	decf	printf@prec& (0+255),f,b
  3379  000392  0100               	movlb	0	; () banked
  3380  000394  2987               	incf	printf@prec& (0+255),w,b
  3381  000396  A4D8               	btfss	status,2,c
  3382  000398  D7ED               	goto	l2875
  3383  00039A                     l2881:
  3384  00039A  C039  FFF6         	movff	printf@f,tblptrl
  3385  00039E  C03A  FFF7         	movff	printf@f+1,tblptrh
  3386  0003A2  4A39               	infsnz	printf@f,f,c
  3387  0003A4  2A3A               	incf	printf@f+1,f,c
  3388  0003A6                     	if	0	;tblptru may be non-zero
  3389  0003A6                     	endif
  3390  0003A6                     	if	0	;tblptru may be non-zero
  3391  0003A6                     	endif
  3392  0003A6  0008               	tblrd		*
  3393  0003A8  CFF5 F08D          	movff	tablat,printf@c
  3394  0003AC  0100               	movlb	0	; () banked
  3395  0003AE  518D               	movf	printf@c& (0+255),w,b
  3396  0003B0  B4D8               	btfsc	status,2,c
  3397  0003B2  0012               	return	
  3398  0003B4  D635               	goto	l2755
  3399  0003B6                     __end_of_printf:
  3400                           	opt stack 0
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           intcon2	equ	0xFF1
  3409                           intcon3	equ	0xFF0
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           indf2	equ	0xFDF
  3413                           postinc2	equ	0xFDE
  3414                           postdec2	equ	0xFDD
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _putch *****************
  3420 ;; Defined at:
  3421 ;;		line 31 in file "lcd.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  data            1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  data            1   46[COMRAM] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    5
  3442 ;; This function calls:
  3443 ;;		_lcdNibble
  3444 ;; This function is called by:
  3445 ;;		_printf
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text15
  3450  0010CE                     __ptext15:
  3451                           	opt stack 0
  3452  0010CE                     _putch:
  3453                           	opt stack 23
  3454                           
  3455                           ;incstack = 0
  3456                           ;putch@data stored from wreg
  3457  0010CE  6E2F               	movwf	putch@data,c
  3458                           
  3459                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  3460  0010D0  848C               	bsf	3980,2,c	;volatile
  3461                           
  3462                           ;lcd.c: 33: lcdNibble(data);
  3463  0010D2  502F               	movf	putch@data,w,c
  3464  0010D4  ECDE  F006         	call	_lcdNibble
  3465  0010D8  0012               	return		;funcret
  3466  0010DA                     __end_of_putch:
  3467                           	opt stack 0
  3468                           tblptru	equ	0xFF8
  3469                           tblptrh	equ	0xFF7
  3470                           tblptrl	equ	0xFF6
  3471                           tablat	equ	0xFF5
  3472                           prodh	equ	0xFF4
  3473                           prodl	equ	0xFF3
  3474                           intcon	equ	0xFF2
  3475                           intcon2	equ	0xFF1
  3476                           intcon3	equ	0xFF0
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _isdigit *****************
  3487 ;; Defined at:
  3488 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  c               1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  c               1   46[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;		None               void
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;Total ram usage:        3 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    4
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_printf
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text16
  3517  001044                     __ptext16:
  3518                           	opt stack 0
  3519  001044                     _isdigit:
  3520                           	opt stack 24
  3521                           
  3522                           ;incstack = 0
  3523                           ;isdigit@c stored from wreg
  3524  001044  6E2F               	movwf	isdigit@c,c
  3525  001046  0E00               	movlw	0
  3526  001048  6E2E               	movwf	_isdigit$563,c
  3527  00104A  0E3A               	movlw	58
  3528  00104C  602F               	cpfslt	isdigit@c,c
  3529  00104E  D005               	goto	l2675
  3530  001050  0E2F               	movlw	47
  3531  001052  642F               	cpfsgt	isdigit@c,c
  3532  001054  D002               	goto	l2675
  3533  001056  0E01               	movlw	1
  3534  001058  6E2E               	movwf	_isdigit$563,c
  3535  00105A                     l2675:
  3536  00105A  C02E  F02D         	movff	_isdigit$563,??_isdigit
  3537  00105E  302D               	rrcf	??_isdigit,w,c
  3538  001060  0012               	return	
  3539  001062                     __end_of_isdigit:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           intcon2	equ	0xFF1
  3549                           intcon3	equ	0xFF0
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           fsr2h	equ	0xFDA
  3556                           fsr2l	equ	0xFD9
  3557                           status	equ	0xFD8
  3558                           
  3559 ;; *************** function ___wmul *****************
  3560 ;; Defined at:
  3561 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  multiplier      2   44[COMRAM] unsigned int 
  3564 ;;  multiplicand    2   46[COMRAM] unsigned int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  product         2   48[COMRAM] unsigned int 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  2   44[COMRAM] unsigned int 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0, prodl, prodh
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;Total ram usage:        6 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    4
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_printf
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text17
  3591  000FD2                     __ptext17:
  3592                           	opt stack 0
  3593  000FD2                     ___wmul:
  3594                           	opt stack 24
  3595                           
  3596                           ;incstack = 0
  3597  000FD2  502D               	movf	___wmul@multiplier,w,c
  3598  000FD4  022F               	mulwf	___wmul@multiplicand,c
  3599  000FD6  CFF3 F031          	movff	prodl,___wmul@product
  3600  000FDA  CFF4 F032          	movff	prodh,___wmul@product+1
  3601  000FDE  502D               	movf	___wmul@multiplier,w,c
  3602  000FE0  0230               	mulwf	___wmul@multiplicand+1,c
  3603  000FE2  50F3               	movf	prodl,w,c
  3604  000FE4  2632               	addwf	___wmul@product+1,f,c
  3605  000FE6  502E               	movf	___wmul@multiplier+1,w,c
  3606  000FE8  022F               	mulwf	___wmul@multiplicand,c
  3607  000FEA  50F3               	movf	prodl,w,c
  3608  000FEC  2632               	addwf	___wmul@product+1,f,c
  3609  000FEE  C031  F02D         	movff	___wmul@product,?___wmul
  3610  000FF2  C032  F02E         	movff	___wmul@product+1,?___wmul+1
  3611  000FF6  0012               	return	
  3612  000FF8                     __end_of___wmul:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           intcon	equ	0xFF2
  3621                           intcon2	equ	0xFF1
  3622                           intcon3	equ	0xFF0
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           indf2	equ	0xFDF
  3626                           postinc2	equ	0xFDE
  3627                           postdec2	equ	0xFDD
  3628                           fsr2h	equ	0xFDA
  3629                           fsr2l	equ	0xFD9
  3630                           status	equ	0xFD8
  3631                           
  3632 ;; *************** function ___lwmod *****************
  3633 ;; Defined at:
  3634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  dividend        2   51[COMRAM] unsigned int 
  3637 ;;  divisor         2   53[COMRAM] unsigned int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  counter         1   55[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  2   51[COMRAM] unsigned int 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;Total ram usage:        5 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    4
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_printf
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text18
  3664  000EA4                     __ptext18:
  3665                           	opt stack 0
  3666  000EA4                     ___lwmod:
  3667                           	opt stack 24
  3668                           
  3669                           ;incstack = 0
  3670  000EA4  5036               	movf	___lwmod@divisor,w,c
  3671  000EA6  1037               	iorwf	___lwmod@divisor+1,w,c
  3672  000EA8  B4D8               	btfsc	status,2,c
  3673  000EAA  D018               	goto	l764
  3674  000EAC  0E01               	movlw	1
  3675  000EAE  6E38               	movwf	___lwmod@counter,c
  3676  000EB0  D004               	goto	l2713
  3677  000EB2                     l2711:
  3678  000EB2  90D8               	bcf	status,0,c
  3679  000EB4  3636               	rlcf	___lwmod@divisor,f,c
  3680  000EB6  3637               	rlcf	___lwmod@divisor+1,f,c
  3681  000EB8  2A38               	incf	___lwmod@counter,f,c
  3682  000EBA                     l2713:
  3683  000EBA  AE37               	btfss	___lwmod@divisor+1,7,c
  3684  000EBC  D7FA               	goto	l2711
  3685  000EBE                     l2715:
  3686  000EBE  5036               	movf	___lwmod@divisor,w,c
  3687  000EC0  5C34               	subwf	___lwmod@dividend,w,c
  3688  000EC2  5037               	movf	___lwmod@divisor+1,w,c
  3689  000EC4  5835               	subwfb	___lwmod@dividend+1,w,c
  3690  000EC6  A0D8               	btfss	status,0,c
  3691  000EC8  D004               	goto	l2719
  3692  000ECA  5036               	movf	___lwmod@divisor,w,c
  3693  000ECC  5E34               	subwf	___lwmod@dividend,f,c
  3694  000ECE  5037               	movf	___lwmod@divisor+1,w,c
  3695  000ED0  5A35               	subwfb	___lwmod@dividend+1,f,c
  3696  000ED2                     l2719:
  3697  000ED2  90D8               	bcf	status,0,c
  3698  000ED4  3237               	rrcf	___lwmod@divisor+1,f,c
  3699  000ED6  3236               	rrcf	___lwmod@divisor,f,c
  3700  000ED8  2E38               	decfsz	___lwmod@counter,f,c
  3701  000EDA  D7F1               	goto	l2715
  3702  000EDC                     l764:
  3703  000EDC  C034  F034         	movff	___lwmod@dividend,?___lwmod
  3704  000EE0  C035  F035         	movff	___lwmod@dividend+1,?___lwmod+1
  3705  000EE4  0012               	return		;funcret
  3706  000EE6                     __end_of___lwmod:
  3707                           	opt stack 0
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           intcon2	equ	0xFF1
  3716                           intcon3	equ	0xFF0
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf2	equ	0xFDF
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           
  3726 ;; *************** function ___lwdiv *****************
  3727 ;; Defined at:
  3728 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  dividend        2   44[COMRAM] unsigned int 
  3731 ;;  divisor         2   46[COMRAM] unsigned int 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  quotient        2   49[COMRAM] unsigned int 
  3734 ;;  counter         1   48[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  2   44[COMRAM] unsigned int 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;Total ram usage:        7 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_printf
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text19
  3759  000D18                     __ptext19:
  3760                           	opt stack 0
  3761  000D18                     ___lwdiv:
  3762                           	opt stack 24
  3763                           
  3764                           ;incstack = 0
  3765  000D18  0E00               	movlw	0
  3766  000D1A  6E33               	movwf	___lwdiv@quotient+1,c
  3767  000D1C  0E00               	movlw	0
  3768  000D1E  6E32               	movwf	___lwdiv@quotient,c
  3769  000D20  502F               	movf	___lwdiv@divisor,w,c
  3770  000D22  1030               	iorwf	___lwdiv@divisor+1,w,c
  3771  000D24  B4D8               	btfsc	status,2,c
  3772  000D26  D01C               	goto	l754
  3773  000D28  0E01               	movlw	1
  3774  000D2A  6E31               	movwf	___lwdiv@counter,c
  3775  000D2C  D004               	goto	l2693
  3776  000D2E                     l2691:
  3777  000D2E  90D8               	bcf	status,0,c
  3778  000D30  362F               	rlcf	___lwdiv@divisor,f,c
  3779  000D32  3630               	rlcf	___lwdiv@divisor+1,f,c
  3780  000D34  2A31               	incf	___lwdiv@counter,f,c
  3781  000D36                     l2693:
  3782  000D36  AE30               	btfss	___lwdiv@divisor+1,7,c
  3783  000D38  D7FA               	goto	l2691
  3784  000D3A                     l2695:
  3785  000D3A  90D8               	bcf	status,0,c
  3786  000D3C  3632               	rlcf	___lwdiv@quotient,f,c
  3787  000D3E  3633               	rlcf	___lwdiv@quotient+1,f,c
  3788  000D40  502F               	movf	___lwdiv@divisor,w,c
  3789  000D42  5C2D               	subwf	___lwdiv@dividend,w,c
  3790  000D44  5030               	movf	___lwdiv@divisor+1,w,c
  3791  000D46  582E               	subwfb	___lwdiv@dividend+1,w,c
  3792  000D48  A0D8               	btfss	status,0,c
  3793  000D4A  D005               	goto	l2703
  3794  000D4C  502F               	movf	___lwdiv@divisor,w,c
  3795  000D4E  5E2D               	subwf	___lwdiv@dividend,f,c
  3796  000D50  5030               	movf	___lwdiv@divisor+1,w,c
  3797  000D52  5A2E               	subwfb	___lwdiv@dividend+1,f,c
  3798  000D54  8032               	bsf	___lwdiv@quotient,0,c
  3799  000D56                     l2703:
  3800  000D56  90D8               	bcf	status,0,c
  3801  000D58  3230               	rrcf	___lwdiv@divisor+1,f,c
  3802  000D5A  322F               	rrcf	___lwdiv@divisor,f,c
  3803  000D5C  2E31               	decfsz	___lwdiv@counter,f,c
  3804  000D5E  D7ED               	goto	l2695
  3805  000D60                     l754:
  3806  000D60  C032  F02D         	movff	___lwdiv@quotient,?___lwdiv
  3807  000D64  C033  F02E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3808  000D68  0012               	return		;funcret
  3809  000D6A                     __end_of___lwdiv:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           intcon2	equ	0xFF1
  3819                           intcon3	equ	0xFF0
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf2	equ	0xFDF
  3823                           postinc2	equ	0xFDE
  3824                           postdec2	equ	0xFDD
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _lcdInst *****************
  3830 ;; Defined at:
  3831 ;;		line 26 in file "lcd.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  data            1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  data            1   46[COMRAM] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    5
  3852 ;; This function calls:
  3853 ;;		_lcdNibble
  3854 ;; This function is called by:
  3855 ;;		_initLCD
  3856 ;;		_standby
  3857 ;;		_date_time
  3858 ;;		_bottle_count
  3859 ;;		_bottle_time
  3860 ;;		_operation
  3861 ;;		_operationend
  3862 ;;		_emergencystop
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text20
  3867  0010DA                     __ptext20:
  3868                           	opt stack 0
  3869  0010DA                     _lcdInst:
  3870                           	opt stack 24
  3871                           
  3872                           ;incstack = 0
  3873                           ;lcdInst@data stored from wreg
  3874  0010DA  6E2F               	movwf	lcdInst@data,c
  3875                           
  3876                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  3877  0010DC  948C               	bcf	3980,2,c	;volatile
  3878                           
  3879                           ;lcd.c: 28: lcdNibble(data);
  3880  0010DE  502F               	movf	lcdInst@data,w,c
  3881  0010E0  ECDE  F006         	call	_lcdNibble
  3882  0010E4  0012               	return		;funcret
  3883  0010E6                     __end_of_lcdInst:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           intcon	equ	0xFF2
  3892                           intcon2	equ	0xFF1
  3893                           intcon3	equ	0xFF0
  3894                           postinc0	equ	0xFEE
  3895                           wreg	equ	0xFE8
  3896                           indf2	equ	0xFDF
  3897                           postinc2	equ	0xFDE
  3898                           postdec2	equ	0xFDD
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _lcdNibble *****************
  3904 ;; Defined at:
  3905 ;;		line 36 in file "lcd.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  data            1    wreg     unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  data            1   45[COMRAM] unsigned char 
  3910 ;;  temp            1   44[COMRAM] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    4
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_lcdInst
  3931 ;;		_putch
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text21
  3936  000DBC                     __ptext21:
  3937                           	opt stack 0
  3938  000DBC                     _lcdNibble:
  3939                           	opt stack 23
  3940                           
  3941                           ;incstack = 0
  3942                           ;lcdNibble@data stored from wreg
  3943  000DBC  6E2E               	movwf	lcdNibble@data,c
  3944                           
  3945                           ;lcd.c: 38: char temp = data & 0xF0;
  3946  000DBE  502E               	movf	lcdNibble@data,w,c
  3947  000DC0  0BF0               	andlw	240
  3948  000DC2  6E2D               	movwf	lcdNibble@temp,c
  3949                           
  3950                           ;lcd.c: 39: LATD = LATD & 0x0F;
  3951  000DC4  508C               	movf	3980,w,c	;volatile
  3952  000DC6  0B0F               	andlw	15
  3953  000DC8  6E8C               	movwf	3980,c	;volatile
  3954                           
  3955                           ;lcd.c: 40: LATD = temp | LATD;
  3956  000DCA  502D               	movf	lcdNibble@temp,w,c
  3957  000DCC  108C               	iorwf	3980,w,c	;volatile
  3958  000DCE  6E8C               	movwf	3980,c	;volatile
  3959                           
  3960                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  3961  000DD0  968C               	bcf	3980,3,c	;volatile
  3962                           
  3963                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3964  000DD2  0E19               	movlw	25
  3965  000DD4                     u2237:
  3966  000DD4  2EE8               	decfsz	wreg,f,c
  3967  000DD6  D7FE               	bra	u2237
  3968                           
  3969                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  3970  000DD8  868C               	bsf	3980,3,c	;volatile
  3971                           
  3972                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
  3973  000DDA  0E19               	movlw	25
  3974  000DDC                     u2247:
  3975  000DDC  2EE8               	decfsz	wreg,f,c
  3976  000DDE  D7FE               	bra	u2247
  3977                           
  3978                           ;lcd.c: 47: data = data << 4;
  3979  000DE0  382E               	swapf	lcdNibble@data,w,c
  3980  000DE2  0BF0               	andlw	240
  3981  000DE4  6E2E               	movwf	lcdNibble@data,c
  3982                           
  3983                           ;lcd.c: 49: temp = data & 0xF0;
  3984  000DE6  502E               	movf	lcdNibble@data,w,c
  3985  000DE8  0BF0               	andlw	240
  3986  000DEA  6E2D               	movwf	lcdNibble@temp,c
  3987                           
  3988                           ;lcd.c: 50: LATD = LATD & 0x0F;
  3989  000DEC  508C               	movf	3980,w,c	;volatile
  3990  000DEE  0B0F               	andlw	15
  3991  000DF0  6E8C               	movwf	3980,c	;volatile
  3992                           
  3993                           ;lcd.c: 51: LATD = temp | LATD;
  3994  000DF2  502D               	movf	lcdNibble@temp,w,c
  3995  000DF4  108C               	iorwf	3980,w,c	;volatile
  3996  000DF6  6E8C               	movwf	3980,c	;volatile
  3997                           
  3998                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  3999  000DF8  968C               	bcf	3980,3,c	;volatile
  4000                           
  4001                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
  4002  000DFA  0E19               	movlw	25
  4003  000DFC                     u2257:
  4004  000DFC  2EE8               	decfsz	wreg,f,c
  4005  000DFE  D7FE               	bra	u2257
  4006                           
  4007                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  4008  000E00  868C               	bsf	3980,3,c	;volatile
  4009                           
  4010                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
  4011  000E02  0E19               	movlw	25
  4012  000E04                     u2267:
  4013  000E04  2EE8               	decfsz	wreg,f,c
  4014  000E06  D7FE               	bra	u2267
  4015  000E08  0012               	return		;funcret
  4016  000E0A                     __end_of_lcdNibble:
  4017                           	opt stack 0
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           intcon	equ	0xFF2
  4025                           intcon2	equ	0xFF1
  4026                           intcon3	equ	0xFF0
  4027                           postinc0	equ	0xFEE
  4028                           wreg	equ	0xFE8
  4029                           indf2	equ	0xFDF
  4030                           postinc2	equ	0xFDE
  4031                           postdec2	equ	0xFDD
  4032                           fsr2h	equ	0xFDA
  4033                           fsr2l	equ	0xFD9
  4034                           status	equ	0xFD8
  4035                           
  4036 ;; *************** function ___awmod *****************
  4037 ;; Defined at:
  4038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  dividend        2   44[COMRAM] int 
  4041 ;;  divisor         2   46[COMRAM] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  sign            1   49[COMRAM] unsigned char 
  4044 ;;  counter         1   48[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  2   44[COMRAM] int 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        6 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    4
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_bottle_count
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text22
  4069  000BE6                     __ptext22:
  4070                           	opt stack 0
  4071  000BE6                     ___awmod:
  4072                           	opt stack 25
  4073                           
  4074                           ;incstack = 0
  4075  000BE6  0E00               	movlw	0
  4076  000BE8  6E32               	movwf	___awmod@sign,c
  4077  000BEA  AE2E               	btfss	___awmod@dividend+1,7,c
  4078  000BEC  D006               	goto	l2063
  4079  000BEE  6C2D               	negf	___awmod@dividend,c
  4080  000BF0  1E2E               	comf	___awmod@dividend+1,f,c
  4081  000BF2  B0D8               	btfsc	status,0,c
  4082  000BF4  2A2E               	incf	___awmod@dividend+1,f,c
  4083  000BF6  0E01               	movlw	1
  4084  000BF8  6E32               	movwf	___awmod@sign,c
  4085  000BFA                     l2063:
  4086  000BFA  AE30               	btfss	___awmod@divisor+1,7,c
  4087  000BFC  D004               	goto	l2067
  4088  000BFE  6C2F               	negf	___awmod@divisor,c
  4089  000C00  1E30               	comf	___awmod@divisor+1,f,c
  4090  000C02  B0D8               	btfsc	status,0,c
  4091  000C04  2A30               	incf	___awmod@divisor+1,f,c
  4092  000C06                     l2067:
  4093  000C06  502F               	movf	___awmod@divisor,w,c
  4094  000C08  1030               	iorwf	___awmod@divisor+1,w,c
  4095  000C0A  B4D8               	btfsc	status,2,c
  4096  000C0C  D018               	goto	l2083
  4097  000C0E  0E01               	movlw	1
  4098  000C10  6E31               	movwf	___awmod@counter,c
  4099  000C12  D004               	goto	l2073
  4100  000C14                     l2071:
  4101  000C14  90D8               	bcf	status,0,c
  4102  000C16  362F               	rlcf	___awmod@divisor,f,c
  4103  000C18  3630               	rlcf	___awmod@divisor+1,f,c
  4104  000C1A  2A31               	incf	___awmod@counter,f,c
  4105  000C1C                     l2073:
  4106  000C1C  AE30               	btfss	___awmod@divisor+1,7,c
  4107  000C1E  D7FA               	goto	l2071
  4108  000C20                     l2075:
  4109  000C20  502F               	movf	___awmod@divisor,w,c
  4110  000C22  5C2D               	subwf	___awmod@dividend,w,c
  4111  000C24  5030               	movf	___awmod@divisor+1,w,c
  4112  000C26  582E               	subwfb	___awmod@dividend+1,w,c
  4113  000C28  A0D8               	btfss	status,0,c
  4114  000C2A  D004               	goto	l2079
  4115  000C2C  502F               	movf	___awmod@divisor,w,c
  4116  000C2E  5E2D               	subwf	___awmod@dividend,f,c
  4117  000C30  5030               	movf	___awmod@divisor+1,w,c
  4118  000C32  5A2E               	subwfb	___awmod@dividend+1,f,c
  4119  000C34                     l2079:
  4120  000C34  90D8               	bcf	status,0,c
  4121  000C36  3230               	rrcf	___awmod@divisor+1,f,c
  4122  000C38  322F               	rrcf	___awmod@divisor,f,c
  4123  000C3A  2E31               	decfsz	___awmod@counter,f,c
  4124  000C3C  D7F1               	goto	l2075
  4125  000C3E                     l2083:
  4126  000C3E  5032               	movf	___awmod@sign,w,c
  4127  000C40  B4D8               	btfsc	status,2,c
  4128  000C42  D004               	goto	l2087
  4129  000C44  6C2D               	negf	___awmod@dividend,c
  4130  000C46  1E2E               	comf	___awmod@dividend+1,f,c
  4131  000C48  B0D8               	btfsc	status,0,c
  4132  000C4A  2A2E               	incf	___awmod@dividend+1,f,c
  4133  000C4C                     l2087:
  4134  000C4C  C02D  F02D         	movff	___awmod@dividend,?___awmod
  4135  000C50  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
  4136  000C54  0012               	return	
  4137  000C56                     __end_of___awmod:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           intcon	equ	0xFF2
  4146                           intcon2	equ	0xFF1
  4147                           intcon3	equ	0xFF0
  4148                           postinc0	equ	0xFEE
  4149                           wreg	equ	0xFE8
  4150                           indf2	equ	0xFDF
  4151                           postinc2	equ	0xFDE
  4152                           postdec2	equ	0xFDD
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function _I2C_Master_Init *****************
  4158 ;; Defined at:
  4159 ;;		line 13 in file "I2C.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  c               4   57[COMRAM] const unsigned long 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0, cstack
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;Total ram usage:        8 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    5
  4180 ;; This function calls:
  4181 ;;		___lldiv
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text23
  4188  000CBC                     __ptext23:
  4189                           	opt stack 0
  4190  000CBC                     _I2C_Master_Init:
  4191                           	opt stack 25
  4192                           
  4193                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  4194                           
  4195                           ;incstack = 0
  4196  000CBC  0E00               	movlw	0
  4197  000CBE  6EC7               	movwf	4039,c	;volatile
  4198                           
  4199                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  4200  000CC0  0E28               	movlw	40
  4201  000CC2  6EC6               	movwf	4038,c	;volatile
  4202                           
  4203                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  4204  000CC4  0E00               	movlw	0
  4205  000CC6  6EC5               	movwf	4037,c	;volatile
  4206                           
  4207                           ;I2C.c: 19: SSPADD = (10000000/(4*c))-1;
  4208  000CC8  0E80               	movlw	128
  4209  000CCA  6E2D               	movwf	___lldiv@dividend,c
  4210  000CCC  0E96               	movlw	150
  4211  000CCE  6E2E               	movwf	___lldiv@dividend+1,c
  4212  000CD0  0E98               	movlw	152
  4213  000CD2  6E2F               	movwf	___lldiv@dividend+2,c
  4214  000CD4  0E00               	movlw	0
  4215  000CD6  6E30               	movwf	___lldiv@dividend+3,c
  4216  000CD8  C03A  F080         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  4217  000CDC  C03B  F081         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  4218  000CE0  C03C  F082         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  4219  000CE4  C03D  F083         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  4220  000CE8  0E02               	movlw	2
  4221  000CEA                     u2155:
  4222  000CEA  90D8               	bcf	status,0,c
  4223  000CEC  0100               	movlb	0	; () banked
  4224  000CEE  3780               	rlcf	??_I2C_Master_Init& (0+255),f,b
  4225  000CF0  3781               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
  4226  000CF2  3782               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
  4227  000CF4  3783               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
  4228  000CF6  2EE8               	decfsz	wreg,f,c
  4229  000CF8  D7F8               	goto	u2155
  4230  000CFA  C080  F031         	movff	??_I2C_Master_Init,___lldiv@divisor
  4231  000CFE  C081  F032         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  4232  000D02  C082  F033         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  4233  000D06  C083  F034         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  4234  000D0A  EC72  F005         	call	___lldiv	;wreg free
  4235  000D0E  042D               	decf	?___lldiv,w,c
  4236  000D10  6EC8               	movwf	4040,c	;volatile
  4237                           
  4238                           ;I2C.c: 20: TRISC3 = 1;
  4239  000D12  8694               	bsf	3988,3,c	;volatile
  4240                           
  4241                           ;I2C.c: 21: TRISC4 = 1;
  4242  000D14  8894               	bsf	3988,4,c	;volatile
  4243  000D16  0012               	return		;funcret
  4244  000D18                     __end_of_I2C_Master_Init:
  4245                           	opt stack 0
  4246                           tblptru	equ	0xFF8
  4247                           tblptrh	equ	0xFF7
  4248                           tblptrl	equ	0xFF6
  4249                           tablat	equ	0xFF5
  4250                           prodh	equ	0xFF4
  4251                           prodl	equ	0xFF3
  4252                           intcon	equ	0xFF2
  4253                           intcon2	equ	0xFF1
  4254                           intcon3	equ	0xFF0
  4255                           postinc0	equ	0xFEE
  4256                           wreg	equ	0xFE8
  4257                           indf2	equ	0xFDF
  4258                           postinc2	equ	0xFDE
  4259                           postdec2	equ	0xFDD
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function ___lldiv *****************
  4265 ;; Defined at:
  4266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  dividend        4   44[COMRAM] unsigned long 
  4269 ;;  divisor         4   48[COMRAM] unsigned long 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  quotient        4   52[COMRAM] unsigned long 
  4272 ;;  counter         1   56[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  4   44[COMRAM] unsigned long 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4282 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;Total ram usage:       13 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    4
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_I2C_Master_Init
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text24
  4297  000AE4                     __ptext24:
  4298                           	opt stack 0
  4299  000AE4                     ___lldiv:
  4300                           	opt stack 25
  4301                           
  4302                           ;incstack = 0
  4303  000AE4  0E00               	movlw	0
  4304  000AE6  6E35               	movwf	___lldiv@quotient,c
  4305  000AE8  0E00               	movlw	0
  4306  000AEA  6E36               	movwf	___lldiv@quotient+1,c
  4307  000AEC  0E00               	movlw	0
  4308  000AEE  6E37               	movwf	___lldiv@quotient+2,c
  4309  000AF0  0E00               	movlw	0
  4310  000AF2  6E38               	movwf	___lldiv@quotient+3,c
  4311  000AF4  5031               	movf	___lldiv@divisor,w,c
  4312  000AF6  1032               	iorwf	___lldiv@divisor+1,w,c
  4313  000AF8  1033               	iorwf	___lldiv@divisor+2,w,c
  4314  000AFA  1034               	iorwf	___lldiv@divisor+3,w,c
  4315  000AFC  B4D8               	btfsc	status,2,c
  4316  000AFE  D02A               	goto	l701
  4317  000B00  0E01               	movlw	1
  4318  000B02  6E39               	movwf	___lldiv@counter,c
  4319  000B04  D006               	goto	l2099
  4320  000B06                     l2097:
  4321  000B06  90D8               	bcf	status,0,c
  4322  000B08  3631               	rlcf	___lldiv@divisor,f,c
  4323  000B0A  3632               	rlcf	___lldiv@divisor+1,f,c
  4324  000B0C  3633               	rlcf	___lldiv@divisor+2,f,c
  4325  000B0E  3634               	rlcf	___lldiv@divisor+3,f,c
  4326  000B10  2A39               	incf	___lldiv@counter,f,c
  4327  000B12                     l2099:
  4328  000B12  AE34               	btfss	___lldiv@divisor+3,7,c
  4329  000B14  D7F8               	goto	l2097
  4330  000B16                     l2101:
  4331  000B16  90D8               	bcf	status,0,c
  4332  000B18  3635               	rlcf	___lldiv@quotient,f,c
  4333  000B1A  3636               	rlcf	___lldiv@quotient+1,f,c
  4334  000B1C  3637               	rlcf	___lldiv@quotient+2,f,c
  4335  000B1E  3638               	rlcf	___lldiv@quotient+3,f,c
  4336  000B20  5031               	movf	___lldiv@divisor,w,c
  4337  000B22  5C2D               	subwf	___lldiv@dividend,w,c
  4338  000B24  5032               	movf	___lldiv@divisor+1,w,c
  4339  000B26  582E               	subwfb	___lldiv@dividend+1,w,c
  4340  000B28  5033               	movf	___lldiv@divisor+2,w,c
  4341  000B2A  582F               	subwfb	___lldiv@dividend+2,w,c
  4342  000B2C  5034               	movf	___lldiv@divisor+3,w,c
  4343  000B2E  5830               	subwfb	___lldiv@dividend+3,w,c
  4344  000B30  A0D8               	btfss	status,0,c
  4345  000B32  D009               	goto	l2109
  4346  000B34  5031               	movf	___lldiv@divisor,w,c
  4347  000B36  5E2D               	subwf	___lldiv@dividend,f,c
  4348  000B38  5032               	movf	___lldiv@divisor+1,w,c
  4349  000B3A  5A2E               	subwfb	___lldiv@dividend+1,f,c
  4350  000B3C  5033               	movf	___lldiv@divisor+2,w,c
  4351  000B3E  5A2F               	subwfb	___lldiv@dividend+2,f,c
  4352  000B40  5034               	movf	___lldiv@divisor+3,w,c
  4353  000B42  5A30               	subwfb	___lldiv@dividend+3,f,c
  4354  000B44  8035               	bsf	___lldiv@quotient,0,c
  4355  000B46                     l2109:
  4356  000B46  90D8               	bcf	status,0,c
  4357  000B48  3234               	rrcf	___lldiv@divisor+3,f,c
  4358  000B4A  3233               	rrcf	___lldiv@divisor+2,f,c
  4359  000B4C  3232               	rrcf	___lldiv@divisor+1,f,c
  4360  000B4E  3231               	rrcf	___lldiv@divisor,f,c
  4361  000B50  2E39               	decfsz	___lldiv@counter,f,c
  4362  000B52  D7E1               	goto	l2101
  4363  000B54                     l701:
  4364  000B54  C035  F02D         	movff	___lldiv@quotient,?___lldiv
  4365  000B58  C036  F02E         	movff	___lldiv@quotient+1,?___lldiv+1
  4366  000B5C  C037  F02F         	movff	___lldiv@quotient+2,?___lldiv+2
  4367  000B60  C038  F030         	movff	___lldiv@quotient+3,?___lldiv+3
  4368  000B64  0012               	return		;funcret
  4369  000B66                     __end_of___lldiv:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodh	equ	0xFF4
  4376                           prodl	equ	0xFF3
  4377                           intcon	equ	0xFF2
  4378                           intcon2	equ	0xFF1
  4379                           intcon3	equ	0xFF0
  4380                           postinc0	equ	0xFEE
  4381                           wreg	equ	0xFE8
  4382                           indf2	equ	0xFDF
  4383                           postinc2	equ	0xFDE
  4384                           postdec2	equ	0xFDD
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _isr *****************
  4390 ;; Defined at:
  4391 ;;		line 122 in file "main.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  i               1   43[COMRAM] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:       16 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    3
  4412 ;; This function calls:
  4413 ;;		_read_time
  4414 ;;		i2_lcdInst
  4415 ;;		i2_printf
  4416 ;; This function is called by:
  4417 ;;		Interrupt level 2
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	intcode
  4422  000008                     __pintcode:
  4423                           	opt stack 0
  4424  000008                     _isr:
  4425                           	opt stack 23
  4426                           
  4427                           ;incstack = 0
  4428  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4429  00000A  ED61  F003         	call	int_func,f	;refresh shadow registers
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           intcon2	equ	0xFF1
  4438                           intcon3	equ	0xFF0
  4439                           postinc0	equ	0xFEE
  4440                           wreg	equ	0xFE8
  4441                           indf2	equ	0xFDF
  4442                           postinc2	equ	0xFDE
  4443                           postdec2	equ	0xFDD
  4444                           fsr2h	equ	0xFDA
  4445                           fsr2l	equ	0xFD9
  4446                           status	equ	0xFD8
  4447                           
  4448                           	psect	intcode_body
  4449  0006C2                     __pintcode_body:
  4450                           	opt stack 23
  4451  0006C2                     int_func:
  4452                           	opt stack 23
  4453  0006C2  0006               	pop		; remove dummy address from shadow register refresh
  4454  0006C4  CFFA F01E          	movff	pclath,??_isr+1
  4455  0006C8  CFFB F01F          	movff	pclatu,??_isr+2
  4456  0006CC  CFE9 F020          	movff	fsr0l,??_isr+3
  4457  0006D0  CFEA F021          	movff	fsr0h,??_isr+4
  4458  0006D4  CFE1 F022          	movff	fsr1l,??_isr+5
  4459  0006D8  CFE2 F023          	movff	fsr1h,??_isr+6
  4460  0006DC  CFD9 F024          	movff	fsr2l,??_isr+7
  4461  0006E0  CFDA F025          	movff	fsr2h,??_isr+8
  4462  0006E4  CFF3 F026          	movff	prodl,??_isr+9
  4463  0006E8  CFF4 F027          	movff	prodh,??_isr+10
  4464  0006EC  CFF6 F028          	movff	tblptrl,??_isr+11
  4465  0006F0  CFF7 F029          	movff	tblptrh,??_isr+12
  4466  0006F4  CFF8 F02A          	movff	tblptru,??_isr+13
  4467  0006F8  CFF5 F02B          	movff	tablat,??_isr+14
  4468                           
  4469                           ;main.c: 123: if (INT1IF) {
  4470  0006FC  B0F0               	btfsc	intcon3,0,c	;volatile
  4471  0006FE  D03E               	goto	i2l2585
  4472  000700  D055               	goto	i2l204
  4473  000702                     i2l2533:
  4474                           
  4475                           ;main.c: 126: curr_state = STANDBY;
  4476  000702  0E00               	movlw	0
  4477  000704  6E50               	movwf	_curr_state,c
  4478                           
  4479                           ;main.c: 127: bottle_count_disp = 0;
  4480  000706  0E00               	movlw	0
  4481  000708  6E52               	movwf	_bottle_count_disp+1,c
  4482  00070A  0E00               	movlw	0
  4483  00070C  6E51               	movwf	_bottle_count_disp,c
  4484                           
  4485                           ;main.c: 128: break;
  4486  00070E  D04C               	goto	i2l207
  4487  000710                     i2l208:
  4488                           
  4489                           ;main.c: 130: TMR0IE = 1;
  4490  000710  8AF2               	bsf	intcon,5,c	;volatile
  4491                           
  4492                           ;main.c: 131: TMR0ON = 1;
  4493  000712  8ED5               	bsf	4053,7,c	;volatile
  4494                           
  4495                           ;main.c: 132: TMR0 = 0;
  4496  000714  0E00               	movlw	0
  4497  000716  6ED7               	movwf	4055,c	;volatile
  4498  000718  0E00               	movlw	0
  4499  00071A  6ED6               	movwf	4054,c	;volatile
  4500                           
  4501                           ;main.c: 133: read_time();
  4502  00071C  EC2B  F006         	call	_read_time	;wreg free
  4503                           
  4504                           ;main.c: 134: start_time[1] = time[1];
  4505  000720  C042  F04F         	movff	_time+1,_start_time+1
  4506                           
  4507                           ;main.c: 135: start_time[0] = time[0];
  4508  000724  C041  F04E         	movff	_time,_start_time
  4509                           
  4510                           ;main.c: 136: lcdInst(0b00000001);
  4511  000728  0E01               	movlw	1
  4512  00072A  EC79  F008         	call	i2_lcdInst
  4513                           
  4514                           ;main.c: 137: curr_state = OPERATION;
  4515  00072E  0E02               	movlw	2
  4516  000730  D01A               	goto	L3
  4517  000732                     i2l2547:
  4518                           
  4519                           ;main.c: 138: bottle_count_disp = -1;
  4520  000732  6851               	setf	_bottle_count_disp,c
  4521  000734  6852               	setf	_bottle_count_disp+1,c
  4522                           
  4523                           ;main.c: 139: break;
  4524  000736  D038               	goto	i2l207
  4525  000738                     i2l2549:
  4526                           
  4527                           ;main.c: 141: curr_state = BOTTLECOUNT;
  4528  000738  0E05               	movlw	5
  4529  00073A  6E50               	movwf	_curr_state,c
  4530                           
  4531                           ;main.c: 142: bottle_count_disp += 1;
  4532  00073C  4A51               	infsnz	_bottle_count_disp,f,c
  4533  00073E  2A52               	incf	_bottle_count_disp+1,f,c
  4534  000740                     i2l2553:
  4535  000740  0E1F               	movlw	31
  4536  000742  1881               	xorwf	3969,w,c	;volatile
  4537  000744  A4D8               	btfss	status,2,c
  4538  000746  D030               	goto	i2l207
  4539  000748  D7FB               	goto	i2l2553
  4540  00074A                     i2l2555:
  4541                           
  4542                           ;main.c: 146: curr_state = BOTTLETIME;
  4543  00074A  0E06               	movlw	6
  4544  00074C  D00C               	goto	L3
  4545  00074E                     i2l2559:
  4546                           
  4547                           ;main.c: 150: curr_state = DATETIME;
  4548  00074E  0E04               	movlw	4
  4549  000750  D00A               	goto	L3
  4550  000752                     i2l2563:
  4551                           
  4552                           ;main.c: 154: read_time();
  4553  000752  EC2B  F006         	call	_read_time	;wreg free
  4554                           
  4555                           ;main.c: 155: end_time[1] = time[1];
  4556  000756  C042  F049         	movff	_time+1,_end_time+1
  4557                           
  4558                           ;main.c: 156: end_time[0] = time[0];
  4559  00075A  C041  F048         	movff	_time,_end_time
  4560                           
  4561                           ;main.c: 157: lcdInst(0b00000001);
  4562  00075E  0E01               	movlw	1
  4563  000760  EC79  F008         	call	i2_lcdInst
  4564                           
  4565                           ;main.c: 158: curr_state = OPERATIONEND;
  4566  000764  0E03               	movlw	3
  4567  000766                     L3:
  4568  000766  6E50               	movwf	_curr_state,c
  4569  000768  D7E4               	goto	i2l2547
  4570  00076A                     i2l2575:
  4571                           
  4572                           ;main.c: 162: lcdInst(0b00000001);
  4573  00076A  0E01               	movlw	1
  4574  00076C  EC79  F008         	call	i2_lcdInst
  4575                           
  4576                           ;main.c: 163: curr_state = EMERGENCYSTOP;
  4577  000770  0E01               	movlw	1
  4578  000772  6E50               	movwf	_curr_state,c
  4579                           
  4580                           ;main.c: 164: bottle_count_disp = -1;
  4581  000774  6851               	setf	_bottle_count_disp,c
  4582  000776  6852               	setf	_bottle_count_disp+1,c
  4583                           
  4584                           ;main.c: 165: TMR0ON = 0;
  4585  000778  9ED5               	bcf	4053,7,c	;volatile
  4586                           
  4587                           ;main.c: 167: }
  4588                           
  4589                           ;main.c: 166: break;
  4590  00077A  D016               	goto	i2l207
  4591  00077C                     i2l2585:
  4592  00077C  5081               	movf	3969,w,c	;volatile
  4593                           
  4594                           ; Switch size 1, requested type "space"
  4595                           ; Number of cases is 7, Range of values is 15 to 239
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte           22    12 (average)
  4599                           ;	Chosen strategy is simple_byte
  4600  00077E  0A0F               	xorlw	15	; case 15
  4601  000780  B4D8               	btfsc	status,2,c
  4602  000782  D7C6               	goto	i2l208
  4603  000784  0A10               	xorlw	16	; case 31
  4604  000786  B4D8               	btfsc	status,2,c
  4605  000788  D7D7               	goto	i2l2549
  4606  00078A  0A30               	xorlw	48	; case 47
  4607  00078C  B4D8               	btfsc	status,2,c
  4608  00078E  D7DD               	goto	i2l2555
  4609  000790  0A10               	xorlw	16	; case 63
  4610  000792  B4D8               	btfsc	status,2,c
  4611  000794  D7DC               	goto	i2l2559
  4612  000796  0A70               	xorlw	112	; case 79
  4613  000798  B4D8               	btfsc	status,2,c
  4614  00079A  D7DB               	goto	i2l2563
  4615  00079C  0A80               	xorlw	128	; case 207
  4616  00079E  B4D8               	btfsc	status,2,c
  4617  0007A0  D7E4               	goto	i2l2575
  4618  0007A2  0A20               	xorlw	32	; case 239
  4619  0007A4  B4D8               	btfsc	status,2,c
  4620  0007A6  D7AD               	goto	i2l2533
  4621  0007A8                     i2l207:
  4622                           
  4623                           ;main.c: 168: INT1IF = 0;
  4624  0007A8  90F0               	bcf	intcon3,0,c	;volatile
  4625                           
  4626                           ;main.c: 169: }
  4627  0007AA  D02B               	goto	i2l225
  4628  0007AC                     i2l204:
  4629                           
  4630                           ;main.c: 170: else if (TMR0IF) {
  4631  0007AC  A4F2               	btfss	intcon,2,c	;volatile
  4632  0007AE  D010               	goto	i2l2603
  4633                           
  4634                           ;main.c: 171: TMR0ON = 0;
  4635  0007B0  9ED5               	bcf	4053,7,c	;volatile
  4636                           
  4637                           ;main.c: 172: read_time();
  4638  0007B2  EC2B  F006         	call	_read_time	;wreg free
  4639                           
  4640                           ;main.c: 173: end_time[1] = time[1];
  4641  0007B6  C042  F049         	movff	_time+1,_end_time+1
  4642                           
  4643                           ;main.c: 174: end_time[0] = time[0];
  4644  0007BA  C041  F048         	movff	_time,_end_time
  4645                           
  4646                           ;main.c: 175: lcdInst(0b00000001);
  4647  0007BE  0E01               	movlw	1
  4648  0007C0  EC79  F008         	call	i2_lcdInst
  4649                           
  4650                           ;main.c: 176: curr_state = OPERATIONEND;
  4651  0007C4  0E03               	movlw	3
  4652  0007C6  6E50               	movwf	_curr_state,c
  4653                           
  4654                           ;main.c: 177: bottle_count_disp = -1;
  4655  0007C8  6851               	setf	_bottle_count_disp,c
  4656  0007CA  6852               	setf	_bottle_count_disp+1,c
  4657                           
  4658                           ;main.c: 178: TMR0IF = 0;
  4659  0007CC  94F2               	bcf	intcon,2,c	;volatile
  4660                           
  4661                           ;main.c: 179: }
  4662  0007CE  D019               	goto	i2l225
  4663  0007D0                     i2l2603:
  4664                           
  4665                           ;main.c: 182: lcdInst(0b10000000);
  4666  0007D0  0E80               	movlw	128
  4667  0007D2  EC79  F008         	call	i2_lcdInst
  4668                           
  4669                           ;main.c: 183: printf("bad interrupt");
  4670  0007D6  0EE6               	movlw	low STR_1
  4671  0007D8  6E0D               	movwf	i2printf@f,c
  4672  0007DA  0EFF               	movlw	high STR_1
  4673  0007DC  6E0E               	movwf	i2printf@f+1,c
  4674  0007DE  ECDB  F001         	call	i2_printf	;wreg free
  4675                           
  4676                           ;main.c: 184: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
  4677  0007E2  0E00               	movlw	0
  4678  0007E4  6E2C               	movwf	isr@i,c
  4679  0007E6                     i2l2609:
  4680  0007E6  0E63               	movlw	99
  4681  0007E8  642C               	cpfsgt	isr@i,c
  4682  0007EA  D001               	goto	i2l2613
  4683  0007EC  D7F1               	goto	i2l2603
  4684  0007EE                     i2l2613:
  4685  0007EE  0E21               	movlw	33
  4686  0007F0  6E1D               	movwf	??_isr& (0+255),c
  4687  0007F2  0E76               	movlw	118
  4688  0007F4                     i2u227_47:
  4689  0007F4  2EE8               	decfsz	wreg,f,c
  4690  0007F6  D7FE               	bra	i2u227_47
  4691  0007F8  2E1D               	decfsz	??_isr& (0+255),f,c
  4692  0007FA  D7FC               	bra	i2u227_47
  4693  0007FC  D000               	nop2	
  4694  0007FE  2A2C               	incf	isr@i,f,c
  4695  000800  D7F2               	goto	i2l2609
  4696  000802                     i2l225:
  4697  000802  C02B  FFF5         	movff	??_isr+14,tablat
  4698  000806  C02A  FFF8         	movff	??_isr+13,tblptru
  4699  00080A  C029  FFF7         	movff	??_isr+12,tblptrh
  4700  00080E  C028  FFF6         	movff	??_isr+11,tblptrl
  4701  000812  C027  FFF4         	movff	??_isr+10,prodh
  4702  000816  C026  FFF3         	movff	??_isr+9,prodl
  4703  00081A  C025  FFDA         	movff	??_isr+8,fsr2h
  4704  00081E  C024  FFD9         	movff	??_isr+7,fsr2l
  4705  000822  C023  FFE2         	movff	??_isr+6,fsr1h
  4706  000826  C022  FFE1         	movff	??_isr+5,fsr1l
  4707  00082A  C021  FFEA         	movff	??_isr+4,fsr0h
  4708  00082E  C020  FFE9         	movff	??_isr+3,fsr0l
  4709  000832  C01F  FFFB         	movff	??_isr+2,pclatu
  4710  000836  C01E  FFFA         	movff	??_isr+1,pclath
  4711  00083A  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4712  00083C  0011               	retfie		f
  4713  00083E                     __end_of_isr:
  4714                           	opt stack 0
  4715                           pclatu	equ	0xFFB
  4716                           pclath	equ	0xFFA
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           intcon2	equ	0xFF1
  4725                           intcon3	equ	0xFF0
  4726                           postinc0	equ	0xFEE
  4727                           fsr0h	equ	0xFEA
  4728                           fsr0l	equ	0xFE9
  4729                           wreg	equ	0xFE8
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function i2_printf *****************
  4740 ;; Defined at:
  4741 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  f               2   12[COMRAM] PTR const unsigned char 
  4744 ;;		 -> STR_23(15), STR_22(16), STR_21(25), STR_20(24), 
  4745 ;;		 -> STR_19(23), STR_18(22), STR_17(23), STR_16(10), 
  4746 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  4747 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_8(17), 
  4748 ;;		 -> STR_7(17), STR_6(17), STR_5(23), STR_4(23), 
  4749 ;;		 -> STR_3(17), STR_2(17), STR_1(14), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  printf          4    0        struct .
  4752 ;;  printf          3    0        PTR const unsigned char 
  4753 ;;  printf          2   25[COMRAM] int 
  4754 ;;  printf          2   22[COMRAM] unsigned int 
  4755 ;;  printf          2   19[COMRAM] PTR void [1]
  4756 ;;		 -> ?i2_printf(2), ?_printf(2), 
  4757 ;;  printf          2    0        unsigned int 
  4758 ;;  printf          1   27[COMRAM] char 
  4759 ;;  printf          1   24[COMRAM] unsigned char 
  4760 ;;  printf          1   21[COMRAM] char 
  4761 ;;  printf          1   18[COMRAM] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2   12[COMRAM] int 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:       16 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    2
  4778 ;; This function calls:
  4779 ;;		i2___lwdiv
  4780 ;;		i2___lwmod
  4781 ;;		i2___wmul
  4782 ;;		i2_isdigit
  4783 ;;		i2_putch
  4784 ;; This function is called by:
  4785 ;;		_isr
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text26
  4790  0003B6                     __ptext26:
  4791                           	opt stack 0
  4792  0003B6                     i2_printf:
  4793                           	opt stack 23
  4794                           
  4795                           ;doprnt.c: 466: va_list ap;
  4796                           ;doprnt.c: 499: signed char c;
  4797                           ;doprnt.c: 501: int width;
  4798                           ;doprnt.c: 506: signed char prec;
  4799                           ;doprnt.c: 508: unsigned char flag;
  4800                           ;doprnt.c: 523: union {
  4801                           ;doprnt.c: 524: unsigned long vd;
  4802                           ;doprnt.c: 525: double integ;
  4803                           ;doprnt.c: 526: } tmpval;
  4804                           ;doprnt.c: 528: unsigned int val;
  4805                           ;doprnt.c: 529: unsigned len;
  4806                           ;doprnt.c: 530: const char * cp;
  4807                           ;doprnt.c: 533: *ap = __va_start();
  4808                           
  4809                           ;incstack = 0
  4810  0003B6  0E0F               	movlw	low (?i2_printf+2)
  4811  0003B8  6E14               	movwf	i2printf@ap,c
  4812  0003BA  0E00               	movlw	high (?i2_printf+2)
  4813  0003BC  6E15               	movwf	i2printf@ap+1,c
  4814                           
  4815                           ;doprnt.c: 536: while(c = *f++) {
  4816  0003BE  D174               	goto	i2l2479
  4817  0003C0                     i2l2353:
  4818                           
  4819                           ;doprnt.c: 538: if(c != '%')
  4820  0003C0  0E25               	movlw	37
  4821  0003C2  181C               	xorwf	i2printf@c,w,c
  4822  0003C4  B4D8               	btfsc	status,2,c
  4823  0003C6  D004               	goto	i2l2357
  4824                           
  4825                           ;doprnt.c: 540: {
  4826                           ;doprnt.c: 541: (putch(c) );
  4827  0003C8  501C               	movf	i2printf@c,w,c
  4828  0003CA  EC73  F008         	call	i2_putch
  4829                           
  4830                           ;doprnt.c: 542: continue;
  4831  0003CE  D16C               	goto	i2l2479
  4832  0003D0                     i2l2357:
  4833                           
  4834                           ;doprnt.c: 543: }
  4835                           ;doprnt.c: 546: width = 0;
  4836  0003D0  0E00               	movlw	0
  4837  0003D2  6E1B               	movwf	i2printf@width+1,c
  4838  0003D4  0E00               	movlw	0
  4839  0003D6  6E1A               	movwf	i2printf@width,c
  4840                           
  4841                           ;doprnt.c: 548: flag = 0;
  4842  0003D8  0E00               	movlw	0
  4843  0003DA  6E19               	movwf	i2printf@flag,c
  4844                           
  4845                           ;doprnt.c: 551: switch(*f) {
  4846                           
  4847                           ;doprnt.c: 550: for(;;) {
  4848  0003DC  D003               	goto	i2l2363
  4849  0003DE                     i2l2359:
  4850                           
  4851                           ;doprnt.c: 580: flag |= 0x04;
  4852  0003DE  8419               	bsf	i2printf@flag,2,c
  4853                           
  4854                           ;doprnt.c: 581: f++;
  4855  0003E0  4A0D               	infsnz	i2printf@f,f,c
  4856  0003E2  2A0E               	incf	i2printf@f+1,f,c
  4857  0003E4                     i2l2363:
  4858  0003E4  C00D  FFF6         	movff	i2printf@f,tblptrl
  4859  0003E8  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4860  0003EC                     	if	0	;tblptru may be non-zero
  4861  0003EC                     	endif
  4862  0003EC                     	if	0	;tblptru may be non-zero
  4863  0003EC                     	endif
  4864  0003EC  0008               	tblrd		*
  4865  0003EE  50F5               	movf	tablat,w,c
  4866                           
  4867                           ; Switch size 1, requested type "space"
  4868                           ; Number of cases is 1, Range of values is 48 to 48
  4869                           ; switch strategies available:
  4870                           ; Name         Instructions Cycles
  4871                           ; simple_byte            4     3 (average)
  4872                           ;	Chosen strategy is simple_byte
  4873  0003F0  0A30               	xorlw	48	; case 48
  4874  0003F2  B4D8               	btfsc	status,2,c
  4875  0003F4  D7F4               	goto	i2l2359
  4876                           
  4877                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4878                           
  4879                           ;doprnt.c: 586: }
  4880                           
  4881                           ;doprnt.c: 585: break;
  4882  0003F6  C00D  FFF6         	movff	i2printf@f,tblptrl
  4883  0003FA  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4884  0003FE                     	if	0	;tblptru may be non-zero
  4885  0003FE                     	endif
  4886  0003FE                     	if	0	;tblptru may be non-zero
  4887  0003FE                     	endif
  4888  0003FE  0008               	tblrd		*
  4889  000400  50F5               	movf	tablat,w,c
  4890  000402  EC31  F008         	call	i2_isdigit
  4891  000406  A0D8               	btfss	status,0,c
  4892  000408  D035               	goto	i2l2381
  4893                           
  4894                           ;doprnt.c: 598: width = 0;
  4895  00040A  0E00               	movlw	0
  4896  00040C  6E1B               	movwf	i2printf@width+1,c
  4897  00040E  0E00               	movlw	0
  4898  000410  6E1A               	movwf	i2printf@width,c
  4899  000412                     i2l2369:
  4900                           
  4901                           ;doprnt.c: 600: width *= 10;
  4902  000412  C01A  F001         	movff	i2printf@width,i2___wmul@multiplier
  4903  000416  C01B  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
  4904  00041A  0E00               	movlw	0
  4905  00041C  6E04               	movwf	i2___wmul@multiplicand+1,c
  4906  00041E  0E0A               	movlw	10
  4907  000420  6E03               	movwf	i2___wmul@multiplicand,c
  4908  000422  ECFC  F007         	call	i2___wmul	;wreg free
  4909  000426  C001  F01A         	movff	?i2___wmul,i2printf@width
  4910  00042A  C002  F01B         	movff	?i2___wmul+1,i2printf@width+1
  4911                           
  4912                           ;doprnt.c: 601: width += *f++ - '0';
  4913  00042E  0ED0               	movlw	208
  4914  000430  6E0F               	movwf	??i2_printf& (0+255),c
  4915  000432  0EFF               	movlw	255
  4916  000434  6E10               	movwf	(??i2_printf+1)& (0+255),c
  4917  000436  C00D  FFF6         	movff	i2printf@f,tblptrl
  4918  00043A  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4919  00043E                     	if	0	;tblptru may be non-zero
  4920  00043E                     	endif
  4921  00043E                     	if	0	;tblptru may be non-zero
  4922  00043E                     	endif
  4923  00043E  0008               	tblrd		*
  4924  000440  50F5               	movf	tablat,w,c
  4925  000442  6E11               	movwf	(??i2_printf+2)& (0+255),c
  4926  000444  6A12               	clrf	(??i2_printf+3)& (0+255),c
  4927  000446  500F               	movf	??i2_printf,w,c
  4928  000448  2611               	addwf	??i2_printf+2,f,c
  4929  00044A  5010               	movf	??i2_printf+1,w,c
  4930  00044C  2212               	addwfc	??i2_printf+3,f,c
  4931  00044E  5011               	movf	??i2_printf+2,w,c
  4932  000450  261A               	addwf	i2printf@width,f,c
  4933  000452  5012               	movf	??i2_printf+3,w,c
  4934  000454  221B               	addwfc	i2printf@width+1,f,c
  4935  000456  4A0D               	infsnz	i2printf@f,f,c
  4936  000458  2A0E               	incf	i2printf@f+1,f,c
  4937                           
  4938                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4939  00045A  C00D  FFF6         	movff	i2printf@f,tblptrl
  4940  00045E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4941  000462                     	if	0	;tblptru may be non-zero
  4942  000462                     	endif
  4943  000462                     	if	0	;tblptru may be non-zero
  4944  000462                     	endif
  4945  000462  0008               	tblrd		*
  4946  000464  50F5               	movf	tablat,w,c
  4947  000466  EC31  F008         	call	i2_isdigit
  4948  00046A  A0D8               	btfss	status,0,c
  4949  00046C  D003               	goto	i2l2381
  4950  00046E  D7D1               	goto	i2l2369
  4951  000470                     i2l2377:
  4952                           
  4953                           ;doprnt.c: 721: flag |= 0x80;
  4954  000470  8E19               	bsf	i2printf@flag,7,c
  4955                           
  4956                           ;doprnt.c: 723: break;
  4957  000472  D017               	goto	i2l309
  4958  000474                     i2l2381:
  4959  000474  C00D  FFF6         	movff	i2printf@f,tblptrl
  4960  000478  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  4961  00047C  4A0D               	infsnz	i2printf@f,f,c
  4962  00047E  2A0E               	incf	i2printf@f+1,f,c
  4963  000480                     	if	0	;tblptru may be non-zero
  4964  000480                     	endif
  4965  000480                     	if	0	;tblptru may be non-zero
  4966  000480                     	endif
  4967  000480  0008               	tblrd		*
  4968  000482  CFF5 F01C          	movff	tablat,i2printf@c
  4969  000486  501C               	movf	i2printf@c,w,c
  4970                           
  4971                           ; Switch size 1, requested type "space"
  4972                           ; Number of cases is 4, Range of values is 0 to 120
  4973                           ; switch strategies available:
  4974                           ; Name         Instructions Cycles
  4975                           ; simple_byte           13     7 (average)
  4976                           ;	Chosen strategy is simple_byte
  4977  000488  0A00               	xorlw	0	; case 0
  4978  00048A  B4D8               	btfsc	status,2,c
  4979  00048C  0012               	return	
  4980  00048E  0A64               	xorlw	100	; case 100
  4981  000490  B4D8               	btfsc	status,2,c
  4982  000492  D007               	goto	i2l309
  4983  000494  0A0D               	xorlw	13	; case 105
  4984  000496  B4D8               	btfsc	status,2,c
  4985  000498  D004               	goto	i2l309
  4986  00049A  0A11               	xorlw	17	; case 120
  4987  00049C  B4D8               	btfsc	status,2,c
  4988  00049E  D7E8               	goto	i2l2377
  4989  0004A0  D103               	goto	i2l2479
  4990  0004A2                     i2l309:
  4991                           
  4992                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4993  0004A2  BE19               	btfsc	i2printf@flag,7,c
  4994  0004A4  D015               	goto	i2l2393
  4995                           
  4996                           ;doprnt.c: 1253: {
  4997                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4998  0004A6  C014  FFD9         	movff	i2printf@ap,fsr2l
  4999  0004AA  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  5000  0004AE  CFDE F017          	movff	postinc2,i2printf@val
  5001  0004B2  CFDD F018          	movff	postdec2,i2printf@val+1
  5002  0004B6  0E02               	movlw	2
  5003  0004B8  2614               	addwf	i2printf@ap,f,c
  5004  0004BA  0E00               	movlw	0
  5005  0004BC  2215               	addwfc	i2printf@ap+1,f,c
  5006                           
  5007                           ;doprnt.c: 1261: if((int)val < 0) {
  5008  0004BE  AE18               	btfss	i2printf@val+1,7,c
  5009  0004C0  D044               	goto	i2l2427
  5010                           
  5011                           ;doprnt.c: 1262: flag |= 0x03;
  5012  0004C2  0E03               	movlw	3
  5013  0004C4  1219               	iorwf	i2printf@flag,f,c
  5014                           
  5015                           ;doprnt.c: 1263: val = -val;
  5016  0004C6  6C17               	negf	i2printf@val,c
  5017  0004C8  1E18               	comf	i2printf@val+1,f,c
  5018  0004CA  B0D8               	btfsc	status,0,c
  5019  0004CC  2A18               	incf	i2printf@val+1,f,c
  5020                           
  5021                           ;doprnt.c: 1264: }
  5022                           ;doprnt.c: 1266: }
  5023  0004CE  D03D               	goto	i2l2427
  5024  0004D0                     i2l2393:
  5025                           
  5026                           ;doprnt.c: 1268: else
  5027                           ;doprnt.c: 1273: {
  5028                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5029  0004D0  C014  FFD9         	movff	i2printf@ap,fsr2l
  5030  0004D4  C015  FFDA         	movff	i2printf@ap+1,fsr2h
  5031  0004D8  CFDE F017          	movff	postinc2,i2printf@val
  5032  0004DC  CFDD F018          	movff	postdec2,i2printf@val+1
  5033  0004E0  0E02               	movlw	2
  5034  0004E2  2614               	addwf	i2printf@ap,f,c
  5035  0004E4  0E00               	movlw	0
  5036  0004E6  2215               	addwfc	i2printf@ap+1,f,c
  5037                           
  5038                           ;doprnt.c: 1287: }
  5039                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5040  0004E8  D030               	goto	i2l2427
  5041  0004EA                     i2l2397:
  5042                           
  5043                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5044  0004EA  0E01               	movlw	1
  5045  0004EC  6E1C               	movwf	i2printf@c,c
  5046  0004EE                     i2l2399:
  5047  0004EE  0E05               	movlw	5
  5048  0004F0  181C               	xorwf	i2printf@c,w,c
  5049  0004F2  B4D8               	btfsc	status,2,c
  5050  0004F4  D032               	goto	i2l2429
  5051                           
  5052                           ;doprnt.c: 1306: if(val < dpowers[c])
  5053  0004F6  501C               	movf	i2printf@c,w,c
  5054  0004F8  0D02               	mullw	2
  5055  0004FA  0E2E               	movlw	low _dpowers
  5056  0004FC  24F3               	addwf	prodl,w,c
  5057  0004FE  6EF6               	movwf	tblptrl,c
  5058  000500  0EFE               	movlw	high _dpowers
  5059  000502  20F4               	addwfc	prodh,w,c
  5060  000504  6EF7               	movwf	tblptrh,c
  5061  000506                     	if	0	;There are less than 3 active tblptr bytes
  5062  000506                     	endif
  5063  000506  0009               	tblrd		*+
  5064  000508  50F5               	movf	tablat,w,c
  5065  00050A  5C17               	subwf	i2printf@val,w,c
  5066  00050C  0009               	tblrd		*+
  5067  00050E  50F5               	movf	tablat,w,c
  5068  000510  5818               	subwfb	i2printf@val+1,w,c
  5069  000512  A0D8               	btfss	status,0,c
  5070  000514  D022               	goto	i2l2429
  5071                           
  5072                           ;doprnt.c: 1307: break;
  5073  000516  2A1C               	incf	i2printf@c,f,c
  5074  000518  D7EA               	goto	i2l2399
  5075  00051A                     i2l2411:
  5076                           
  5077                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5078  00051A  0E01               	movlw	1
  5079  00051C  6E1C               	movwf	i2printf@c,c
  5080  00051E                     i2l2413:
  5081  00051E  0E04               	movlw	4
  5082  000520  181C               	xorwf	i2printf@c,w,c
  5083  000522  B4D8               	btfsc	status,2,c
  5084  000524  D01A               	goto	i2l2429
  5085                           
  5086                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5087  000526  501C               	movf	i2printf@c,w,c
  5088  000528  0D02               	mullw	2
  5089  00052A  0E38               	movlw	low _hexpowers
  5090  00052C  24F3               	addwf	prodl,w,c
  5091  00052E  6EF6               	movwf	tblptrl,c
  5092  000530  0EFE               	movlw	high _hexpowers
  5093  000532  20F4               	addwfc	prodh,w,c
  5094  000534  6EF7               	movwf	tblptrh,c
  5095  000536                     	if	0	;There are less than 3 active tblptr bytes
  5096  000536                     	endif
  5097  000536  0009               	tblrd		*+
  5098  000538  50F5               	movf	tablat,w,c
  5099  00053A  5C17               	subwf	i2printf@val,w,c
  5100  00053C  0009               	tblrd		*+
  5101  00053E  50F5               	movf	tablat,w,c
  5102  000540  5818               	subwfb	i2printf@val+1,w,c
  5103  000542  A0D8               	btfss	status,0,c
  5104  000544  D00A               	goto	i2l2429
  5105                           
  5106                           ;doprnt.c: 1318: break;
  5107  000546  2A1C               	incf	i2printf@c,f,c
  5108  000548  D7EA               	goto	i2l2413
  5109  00054A                     i2l2427:
  5110  00054A  5019               	movf	i2printf@flag,w,c
  5111  00054C  0B80               	andlw	128
  5112                           
  5113                           ; Switch size 1, requested type "space"
  5114                           ; Number of cases is 2, Range of values is 0 to 128
  5115                           ; switch strategies available:
  5116                           ; Name         Instructions Cycles
  5117                           ; simple_byte            7     4 (average)
  5118                           ;	Chosen strategy is simple_byte
  5119  00054E  0A00               	xorlw	0	; case 0
  5120  000550  B4D8               	btfsc	status,2,c
  5121  000552  D7CB               	goto	i2l2397
  5122  000554  0A80               	xorlw	128	; case 128
  5123  000556  B4D8               	btfsc	status,2,c
  5124  000558  D7E0               	goto	i2l2411
  5125  00055A                     i2l2429:
  5126                           
  5127                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5128  00055A  501A               	movf	i2printf@width,w,c
  5129  00055C  101B               	iorwf	i2printf@width+1,w,c
  5130  00055E  B4D8               	btfsc	status,2,c
  5131  000560  D009               	goto	i2l2435
  5132  000562  C019  F00F         	movff	i2printf@flag,??i2_printf
  5133  000566  0E03               	movlw	3
  5134  000568  160F               	andwf	??i2_printf,f,c
  5135  00056A  B4D8               	btfsc	status,2,c
  5136  00056C  D003               	goto	i2l2435
  5137                           
  5138                           ;doprnt.c: 1346: width--;
  5139  00056E  061A               	decf	i2printf@width,f,c
  5140  000570  A0D8               	btfss	status,0,c
  5141  000572  061B               	decf	i2printf@width+1,f,c
  5142  000574                     i2l2435:
  5143                           
  5144                           ;doprnt.c: 1381: if(width > c)
  5145  000574  0E80               	movlw	128
  5146  000576  BE1C               	btfsc	i2printf@c,7,c
  5147  000578  0E7F               	movlw	127
  5148  00057A  6E0F               	movwf	??i2_printf& (0+255),c
  5149  00057C  501A               	movf	i2printf@width,w,c
  5150  00057E  5C1C               	subwf	i2printf@c,w,c
  5151  000580  501B               	movf	i2printf@width+1,w,c
  5152  000582  0A80               	xorlw	128
  5153  000584  580F               	subwfb	??i2_printf& (0+255),w,c
  5154  000586  B0D8               	btfsc	status,0,c
  5155  000588  D007               	goto	i2l2439
  5156                           
  5157                           ;doprnt.c: 1382: width -= c;
  5158  00058A  501C               	movf	i2printf@c,w,c
  5159  00058C  5E1A               	subwf	i2printf@width,f,c
  5160  00058E  0E00               	movlw	0
  5161  000590  BE1C               	btfsc	i2printf@c,7,c
  5162  000592  0EFF               	movlw	255
  5163  000594  5A1B               	subwfb	i2printf@width+1,f,c
  5164  000596  D004               	goto	i2l2441
  5165  000598                     i2l2439:
  5166                           
  5167                           ;doprnt.c: 1383: else
  5168                           ;doprnt.c: 1384: width = 0;
  5169  000598  0E00               	movlw	0
  5170  00059A  6E1B               	movwf	i2printf@width+1,c
  5171  00059C  0E00               	movlw	0
  5172  00059E  6E1A               	movwf	i2printf@width,c
  5173  0005A0                     i2l2441:
  5174                           
  5175                           ;doprnt.c: 1387: if(flag & 0x04) {
  5176  0005A0  A419               	btfss	i2printf@flag,2,c
  5177  0005A2  D014               	goto	i2l2453
  5178                           
  5179                           ;doprnt.c: 1392: if(flag & 0x03)
  5180  0005A4  C019  F00F         	movff	i2printf@flag,??i2_printf
  5181  0005A8  0E03               	movlw	3
  5182  0005AA  160F               	andwf	??i2_printf,f,c
  5183  0005AC  B4D8               	btfsc	status,2,c
  5184  0005AE  D003               	goto	i2l2447
  5185                           
  5186                           ;doprnt.c: 1393: (putch('-') );
  5187  0005B0  0E2D               	movlw	45
  5188  0005B2  EC73  F008         	call	i2_putch
  5189  0005B6                     i2l2447:
  5190                           
  5191                           ;doprnt.c: 1415: if(width)
  5192  0005B6  501A               	movf	i2printf@width,w,c
  5193  0005B8  101B               	iorwf	i2printf@width+1,w,c
  5194  0005BA  B4D8               	btfsc	status,2,c
  5195  0005BC  D01E               	goto	i2l2463
  5196                           
  5197                           ;doprnt.c: 1417: (putch('0') );
  5198                           
  5199                           ;doprnt.c: 1416: do
  5200  0005BE  0E30               	movlw	48
  5201  0005C0  EC73  F008         	call	i2_putch
  5202                           
  5203                           ;doprnt.c: 1418: while(--width);
  5204  0005C4  061A               	decf	i2printf@width,f,c
  5205  0005C6  A0D8               	btfss	status,0,c
  5206  0005C8  061B               	decf	i2printf@width+1,f,c
  5207  0005CA  D7F5               	goto	i2l2447
  5208  0005CC                     i2l2453:
  5209                           
  5210                           ;doprnt.c: 1422: {
  5211                           ;doprnt.c: 1424: if(width
  5212                           ;doprnt.c: 1428: )
  5213  0005CC  501A               	movf	i2printf@width,w,c
  5214  0005CE  101B               	iorwf	i2printf@width+1,w,c
  5215  0005D0  B4D8               	btfsc	status,2,c
  5216  0005D2  D00A               	goto	i2l2459
  5217  0005D4                     i2l2455:
  5218                           
  5219                           ;doprnt.c: 1430: (putch(' ') );
  5220  0005D4  0E20               	movlw	32
  5221  0005D6  EC73  F008         	call	i2_putch
  5222                           
  5223                           ;doprnt.c: 1431: while(--width);
  5224  0005DA  061A               	decf	i2printf@width,f,c
  5225  0005DC  A0D8               	btfss	status,0,c
  5226  0005DE  061B               	decf	i2printf@width+1,f,c
  5227  0005E0  501A               	movf	i2printf@width,w,c
  5228  0005E2  101B               	iorwf	i2printf@width+1,w,c
  5229  0005E4  A4D8               	btfss	status,2,c
  5230  0005E6  D7F6               	goto	i2l2455
  5231  0005E8                     i2l2459:
  5232                           
  5233                           ;doprnt.c: 1438: if(flag & 0x03)
  5234  0005E8  C019  F00F         	movff	i2printf@flag,??i2_printf
  5235  0005EC  0E03               	movlw	3
  5236  0005EE  160F               	andwf	??i2_printf,f,c
  5237  0005F0  B4D8               	btfsc	status,2,c
  5238  0005F2  D003               	goto	i2l2463
  5239                           
  5240                           ;doprnt.c: 1439: (putch('-') );
  5241  0005F4  0E2D               	movlw	45
  5242  0005F6  EC73  F008         	call	i2_putch
  5243  0005FA                     i2l2463:
  5244                           
  5245                           ;doprnt.c: 1469: }
  5246                           ;doprnt.c: 1472: prec = c;
  5247  0005FA  C01C  F016         	movff	i2printf@c,i2printf@prec
  5248                           
  5249                           ;doprnt.c: 1474: while(prec--) {
  5250  0005FE  D050               	goto	i2l2477
  5251  000600                     i2l2465:
  5252                           
  5253                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5254  000600  5016               	movf	i2printf@prec,w,c
  5255  000602  0D02               	mullw	2
  5256  000604  0E2E               	movlw	low _dpowers
  5257  000606  24F3               	addwf	prodl,w,c
  5258  000608  6EF6               	movwf	tblptrl,c
  5259  00060A  0EFE               	movlw	high _dpowers
  5260  00060C  20F4               	addwfc	prodh,w,c
  5261  00060E  6EF7               	movwf	tblptrh,c
  5262  000610                     	if	0	;There are less than 3 active tblptr bytes
  5263  000610                     	endif
  5264  000610  0009               	tblrd		*+
  5265  000612  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  5266  000616  000A               	tblrd		*-
  5267  000618  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  5268  00061C  C017  F001         	movff	i2printf@val,i2___lwdiv@dividend
  5269  000620  C018  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  5270  000624  ECB5  F006         	call	i2___lwdiv	;wreg free
  5271  000628  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
  5272  00062C  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  5273  000630  0E00               	movlw	0
  5274  000632  6E0B               	movwf	i2___lwmod@divisor+1,c
  5275  000634  0E0A               	movlw	10
  5276  000636  6E0A               	movwf	i2___lwmod@divisor,c
  5277  000638  EC73  F007         	call	i2___lwmod	;wreg free
  5278  00063C  5008               	movf	?i2___lwmod,w,c
  5279  00063E  0F30               	addlw	48
  5280  000640  6E1C               	movwf	i2printf@c,c
  5281                           
  5282                           ;doprnt.c: 1491: break;
  5283  000642  D02B               	goto	i2l2475
  5284  000644                     i2l2467:
  5285                           
  5286                           ;doprnt.c: 1499: {
  5287                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5288  000644  C017  F001         	movff	i2printf@val,i2___lwdiv@dividend
  5289  000648  C018  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  5290  00064C  5016               	movf	i2printf@prec,w,c
  5291  00064E  0D02               	mullw	2
  5292  000650  0E38               	movlw	low _hexpowers
  5293  000652  24F3               	addwf	prodl,w,c
  5294  000654  6EF6               	movwf	tblptrl,c
  5295  000656  0EFE               	movlw	high _hexpowers
  5296  000658  20F4               	addwfc	prodh,w,c
  5297  00065A  6EF7               	movwf	tblptrh,c
  5298  00065C                     	if	0	;There are less than 3 active tblptr bytes
  5299  00065C                     	endif
  5300  00065C  0009               	tblrd		*+
  5301  00065E  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
  5302  000662  000A               	tblrd		*-
  5303  000664  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
  5304  000668  ECB5  F006         	call	i2___lwdiv	;wreg free
  5305  00066C  5001               	movf	?i2___lwdiv,w,c
  5306  00066E  0B0F               	andlw	15
  5307  000670  6E13               	movwf	i2printf@idx,c
  5308                           
  5309                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  5310  000672  5013               	movf	i2printf@idx,w,c
  5311  000674  0D01               	mullw	1
  5312  000676  0EEA               	movlw	low STR_24
  5313  000678  24F3               	addwf	prodl,w,c
  5314  00067A  6EF6               	movwf	tblptrl,c
  5315  00067C  0EFE               	movlw	high STR_24
  5316  00067E  20F4               	addwfc	prodh,w,c
  5317  000680  6EF7               	movwf	tblptrh,c
  5318  000682                     	if	0	;There are less than 3 active tblptr bytes
  5319  000682                     	endif
  5320  000682  0008               	tblrd		*
  5321  000684  CFF5 F01C          	movff	tablat,i2printf@c
  5322                           
  5323                           ;doprnt.c: 1523: }
  5324                           
  5325                           ;doprnt.c: 1508: }
  5326                           ;doprnt.c: 1510: break;
  5327  000688  D008               	goto	i2l2475
  5328  00068A                     i2l2473:
  5329  00068A  5019               	movf	i2printf@flag,w,c
  5330  00068C  0B80               	andlw	128
  5331                           
  5332                           ; Switch size 1, requested type "space"
  5333                           ; Number of cases is 2, Range of values is 0 to 128
  5334                           ; switch strategies available:
  5335                           ; Name         Instructions Cycles
  5336                           ; simple_byte            7     4 (average)
  5337                           ;	Chosen strategy is simple_byte
  5338  00068E  0A00               	xorlw	0	; case 0
  5339  000690  B4D8               	btfsc	status,2,c
  5340  000692  D7B6               	goto	i2l2465
  5341  000694  0A80               	xorlw	128	; case 128
  5342  000696  B4D8               	btfsc	status,2,c
  5343  000698  D7D5               	goto	i2l2467
  5344  00069A                     i2l2475:
  5345                           
  5346                           ;doprnt.c: 1524: (putch(c) );
  5347  00069A  501C               	movf	i2printf@c,w,c
  5348  00069C  EC73  F008         	call	i2_putch
  5349  0006A0                     i2l2477:
  5350  0006A0  0616               	decf	i2printf@prec,f,c
  5351  0006A2  2816               	incf	i2printf@prec,w,c
  5352  0006A4  A4D8               	btfss	status,2,c
  5353  0006A6  D7F1               	goto	i2l2473
  5354  0006A8                     i2l2479:
  5355  0006A8  C00D  FFF6         	movff	i2printf@f,tblptrl
  5356  0006AC  C00E  FFF7         	movff	i2printf@f+1,tblptrh
  5357  0006B0  4A0D               	infsnz	i2printf@f,f,c
  5358  0006B2  2A0E               	incf	i2printf@f+1,f,c
  5359  0006B4                     	if	0	;tblptru may be non-zero
  5360  0006B4                     	endif
  5361  0006B4                     	if	0	;tblptru may be non-zero
  5362  0006B4                     	endif
  5363  0006B4  0008               	tblrd		*
  5364  0006B6  CFF5 F01C          	movff	tablat,i2printf@c
  5365  0006BA  501C               	movf	i2printf@c,w,c
  5366  0006BC  B4D8               	btfsc	status,2,c
  5367  0006BE  0012               	return	
  5368  0006C0  D67F               	goto	i2l2353
  5369  0006C2                     __end_ofi2_printf:
  5370                           	opt stack 0
  5371                           pclatu	equ	0xFFB
  5372                           pclath	equ	0xFFA
  5373                           tblptru	equ	0xFF8
  5374                           tblptrh	equ	0xFF7
  5375                           tblptrl	equ	0xFF6
  5376                           tablat	equ	0xFF5
  5377                           prodh	equ	0xFF4
  5378                           prodl	equ	0xFF3
  5379                           intcon	equ	0xFF2
  5380                           intcon2	equ	0xFF1
  5381                           intcon3	equ	0xFF0
  5382                           postinc0	equ	0xFEE
  5383                           fsr0h	equ	0xFEA
  5384                           fsr0l	equ	0xFE9
  5385                           wreg	equ	0xFE8
  5386                           fsr1h	equ	0xFE2
  5387                           fsr1l	equ	0xFE1
  5388                           indf2	equ	0xFDF
  5389                           postinc2	equ	0xFDE
  5390                           postdec2	equ	0xFDD
  5391                           fsr2h	equ	0xFDA
  5392                           fsr2l	equ	0xFD9
  5393                           status	equ	0xFD8
  5394                           
  5395 ;; *************** function i2_putch *****************
  5396 ;; Defined at:
  5397 ;;		line 31 in file "lcd.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  data            1    wreg     unsigned char 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  data            1    2[COMRAM] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;Total ram usage:        1 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    1
  5418 ;; This function calls:
  5419 ;;		i2_lcdNibble
  5420 ;; This function is called by:
  5421 ;;		i2_printf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text27
  5426  0010E6                     __ptext27:
  5427                           	opt stack 0
  5428  0010E6                     i2_putch:
  5429                           	opt stack 23
  5430                           
  5431                           ;incstack = 0
  5432                           ;i2putch@data stored from wreg
  5433  0010E6  6E03               	movwf	i2putch@data,c
  5434                           
  5435                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  5436  0010E8  848C               	bsf	3980,2,c	;volatile
  5437                           
  5438                           ;lcd.c: 33: lcdNibble(data);
  5439  0010EA  5003               	movf	i2putch@data,w,c
  5440  0010EC  EC05  F007         	call	i2_lcdNibble
  5441  0010F0  0012               	return		;funcret
  5442  0010F2                     __end_ofi2_putch:
  5443                           	opt stack 0
  5444                           pclatu	equ	0xFFB
  5445                           pclath	equ	0xFFA
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           prodh	equ	0xFF4
  5451                           prodl	equ	0xFF3
  5452                           intcon	equ	0xFF2
  5453                           intcon2	equ	0xFF1
  5454                           intcon3	equ	0xFF0
  5455                           postinc0	equ	0xFEE
  5456                           fsr0h	equ	0xFEA
  5457                           fsr0l	equ	0xFE9
  5458                           wreg	equ	0xFE8
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           fsr2h	equ	0xFDA
  5465                           fsr2l	equ	0xFD9
  5466                           status	equ	0xFD8
  5467                           
  5468 ;; *************** function i2_isdigit *****************
  5469 ;; Defined at:
  5470 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  c               1    wreg     unsigned char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  c               1    2[COMRAM] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;Total ram usage:        3 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		i2_printf
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text28
  5498  001062                     __ptext28:
  5499                           	opt stack 0
  5500  001062                     i2_isdigit:
  5501                           	opt stack 24
  5502                           
  5503                           ;incstack = 0
  5504                           ;i2isdigit@c stored from wreg
  5505  001062  6E03               	movwf	i2isdigit@c,c
  5506  001064  0E00               	movlw	0
  5507  001066  6E02               	movwf	i2_isdigit$563,c
  5508  001068  0E3A               	movlw	58
  5509  00106A  6003               	cpfslt	i2isdigit@c,c
  5510  00106C  D005               	goto	i2l2157
  5511  00106E  0E2F               	movlw	47
  5512  001070  6403               	cpfsgt	i2isdigit@c,c
  5513  001072  D002               	goto	i2l2157
  5514  001074  0E01               	movlw	1
  5515  001076  6E02               	movwf	i2_isdigit$563,c
  5516  001078                     i2l2157:
  5517  001078  C002  F001         	movff	i2_isdigit$563,??i2_isdigit
  5518  00107C  3001               	rrcf	??i2_isdigit,w,c
  5519  00107E  0012               	return	
  5520  001080                     __end_ofi2_isdigit:
  5521                           	opt stack 0
  5522                           pclatu	equ	0xFFB
  5523                           pclath	equ	0xFFA
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           intcon	equ	0xFF2
  5531                           intcon2	equ	0xFF1
  5532                           intcon3	equ	0xFF0
  5533                           postinc0	equ	0xFEE
  5534                           fsr0h	equ	0xFEA
  5535                           fsr0l	equ	0xFE9
  5536                           wreg	equ	0xFE8
  5537                           fsr1h	equ	0xFE2
  5538                           fsr1l	equ	0xFE1
  5539                           indf2	equ	0xFDF
  5540                           postinc2	equ	0xFDE
  5541                           postdec2	equ	0xFDD
  5542                           fsr2h	equ	0xFDA
  5543                           fsr2l	equ	0xFD9
  5544                           status	equ	0xFD8
  5545                           
  5546 ;; *************** function i2___wmul *****************
  5547 ;; Defined at:
  5548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  multiplier      2    0[COMRAM] unsigned int 
  5551 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  __wmul          2    4[COMRAM] unsigned int 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  2    0[COMRAM] unsigned int 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, prodl, prodh
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;Total ram usage:        6 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		i2_printf
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text29
  5577  000FF8                     __ptext29:
  5578                           	opt stack 0
  5579  000FF8                     i2___wmul:
  5580                           	opt stack 24
  5581                           
  5582                           ;incstack = 0
  5583  000FF8  5001               	movf	i2___wmul@multiplier,w,c
  5584  000FFA  0203               	mulwf	i2___wmul@multiplicand,c
  5585  000FFC  CFF3 F005          	movff	prodl,i2___wmul@product
  5586  001000  CFF4 F006          	movff	prodh,i2___wmul@product+1
  5587  001004  5001               	movf	i2___wmul@multiplier,w,c
  5588  001006  0204               	mulwf	i2___wmul@multiplicand+1,c
  5589  001008  50F3               	movf	prodl,w,c
  5590  00100A  2606               	addwf	i2___wmul@product+1,f,c
  5591  00100C  5002               	movf	i2___wmul@multiplier+1,w,c
  5592  00100E  0203               	mulwf	i2___wmul@multiplicand,c
  5593  001010  50F3               	movf	prodl,w,c
  5594  001012  2606               	addwf	i2___wmul@product+1,f,c
  5595  001014  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5596  001018  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5597  00101C  0012               	return	
  5598  00101E                     __end_ofi2___wmul:
  5599                           	opt stack 0
  5600                           pclatu	equ	0xFFB
  5601                           pclath	equ	0xFFA
  5602                           tblptru	equ	0xFF8
  5603                           tblptrh	equ	0xFF7
  5604                           tblptrl	equ	0xFF6
  5605                           tablat	equ	0xFF5
  5606                           prodh	equ	0xFF4
  5607                           prodl	equ	0xFF3
  5608                           intcon	equ	0xFF2
  5609                           intcon2	equ	0xFF1
  5610                           intcon3	equ	0xFF0
  5611                           postinc0	equ	0xFEE
  5612                           fsr0h	equ	0xFEA
  5613                           fsr0l	equ	0xFE9
  5614                           wreg	equ	0xFE8
  5615                           fsr1h	equ	0xFE2
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function i2___lwmod *****************
  5625 ;; Defined at:
  5626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  dividend        2    7[COMRAM] unsigned int 
  5629 ;;  divisor         2    9[COMRAM] unsigned int 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  __lwmod         1   11[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  2    7[COMRAM] unsigned int 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;Total ram usage:        5 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		i2_printf
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text30
  5655  000EE6                     __ptext30:
  5656                           	opt stack 0
  5657  000EE6                     i2___lwmod:
  5658                           	opt stack 24
  5659                           
  5660                           ;incstack = 0
  5661  000EE6  500A               	movf	i2___lwmod@divisor,w,c
  5662  000EE8  100B               	iorwf	i2___lwmod@divisor+1,w,c
  5663  000EEA  B4D8               	btfsc	status,2,c
  5664  000EEC  D018               	goto	i2l764
  5665  000EEE  0E01               	movlw	1
  5666  000EF0  6E0C               	movwf	i2___lwmod@counter,c
  5667  000EF2  D004               	goto	i2l2189
  5668  000EF4                     i2l2187:
  5669  000EF4  90D8               	bcf	status,0,c
  5670  000EF6  360A               	rlcf	i2___lwmod@divisor,f,c
  5671  000EF8  360B               	rlcf	i2___lwmod@divisor+1,f,c
  5672  000EFA  2A0C               	incf	i2___lwmod@counter,f,c
  5673  000EFC                     i2l2189:
  5674  000EFC  AE0B               	btfss	i2___lwmod@divisor+1,7,c
  5675  000EFE  D7FA               	goto	i2l2187
  5676  000F00                     i2l2191:
  5677  000F00  500A               	movf	i2___lwmod@divisor,w,c
  5678  000F02  5C08               	subwf	i2___lwmod@dividend,w,c
  5679  000F04  500B               	movf	i2___lwmod@divisor+1,w,c
  5680  000F06  5809               	subwfb	i2___lwmod@dividend+1,w,c
  5681  000F08  A0D8               	btfss	status,0,c
  5682  000F0A  D004               	goto	i2l2195
  5683  000F0C  500A               	movf	i2___lwmod@divisor,w,c
  5684  000F0E  5E08               	subwf	i2___lwmod@dividend,f,c
  5685  000F10  500B               	movf	i2___lwmod@divisor+1,w,c
  5686  000F12  5A09               	subwfb	i2___lwmod@dividend+1,f,c
  5687  000F14                     i2l2195:
  5688  000F14  90D8               	bcf	status,0,c
  5689  000F16  320B               	rrcf	i2___lwmod@divisor+1,f,c
  5690  000F18  320A               	rrcf	i2___lwmod@divisor,f,c
  5691  000F1A  2E0C               	decfsz	i2___lwmod@counter,f,c
  5692  000F1C  D7F1               	goto	i2l2191
  5693  000F1E                     i2l764:
  5694  000F1E  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
  5695  000F22  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5696  000F26  0012               	return		;funcret
  5697  000F28                     __end_ofi2___lwmod:
  5698                           	opt stack 0
  5699                           pclatu	equ	0xFFB
  5700                           pclath	equ	0xFFA
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           intcon	equ	0xFF2
  5708                           intcon2	equ	0xFF1
  5709                           intcon3	equ	0xFF0
  5710                           postinc0	equ	0xFEE
  5711                           fsr0h	equ	0xFEA
  5712                           fsr0l	equ	0xFE9
  5713                           wreg	equ	0xFE8
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           indf2	equ	0xFDF
  5717                           postinc2	equ	0xFDE
  5718                           postdec2	equ	0xFDD
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function i2___lwdiv *****************
  5724 ;; Defined at:
  5725 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  dividend        2    0[COMRAM] unsigned int 
  5728 ;;  divisor         2    2[COMRAM] unsigned int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5731 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  2    0[COMRAM] unsigned int 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        7 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		i2_printf
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text31
  5755  000D6A                     __ptext31:
  5756                           	opt stack 0
  5757  000D6A                     i2___lwdiv:
  5758                           	opt stack 24
  5759                           
  5760                           ;incstack = 0
  5761  000D6A  0E00               	movlw	0
  5762  000D6C  6E06               	movwf	i2___lwdiv@quotient+1,c
  5763  000D6E  0E00               	movlw	0
  5764  000D70  6E05               	movwf	i2___lwdiv@quotient,c
  5765  000D72  5003               	movf	i2___lwdiv@divisor,w,c
  5766  000D74  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  5767  000D76  B4D8               	btfsc	status,2,c
  5768  000D78  D01C               	goto	i2l754
  5769  000D7A  0E01               	movlw	1
  5770  000D7C  6E07               	movwf	i2___lwdiv@counter,c
  5771  000D7E  D004               	goto	i2l2169
  5772  000D80                     i2l2167:
  5773  000D80  90D8               	bcf	status,0,c
  5774  000D82  3603               	rlcf	i2___lwdiv@divisor,f,c
  5775  000D84  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  5776  000D86  2A07               	incf	i2___lwdiv@counter,f,c
  5777  000D88                     i2l2169:
  5778  000D88  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  5779  000D8A  D7FA               	goto	i2l2167
  5780  000D8C                     i2l2171:
  5781  000D8C  90D8               	bcf	status,0,c
  5782  000D8E  3605               	rlcf	i2___lwdiv@quotient,f,c
  5783  000D90  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  5784  000D92  5003               	movf	i2___lwdiv@divisor,w,c
  5785  000D94  5C01               	subwf	i2___lwdiv@dividend,w,c
  5786  000D96  5004               	movf	i2___lwdiv@divisor+1,w,c
  5787  000D98  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  5788  000D9A  A0D8               	btfss	status,0,c
  5789  000D9C  D005               	goto	i2l2179
  5790  000D9E  5003               	movf	i2___lwdiv@divisor,w,c
  5791  000DA0  5E01               	subwf	i2___lwdiv@dividend,f,c
  5792  000DA2  5004               	movf	i2___lwdiv@divisor+1,w,c
  5793  000DA4  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  5794  000DA6  8005               	bsf	i2___lwdiv@quotient,0,c
  5795  000DA8                     i2l2179:
  5796  000DA8  90D8               	bcf	status,0,c
  5797  000DAA  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  5798  000DAC  3203               	rrcf	i2___lwdiv@divisor,f,c
  5799  000DAE  2E07               	decfsz	i2___lwdiv@counter,f,c
  5800  000DB0  D7ED               	goto	i2l2171
  5801  000DB2                     i2l754:
  5802  000DB2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  5803  000DB6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  5804  000DBA  0012               	return		;funcret
  5805  000DBC                     __end_ofi2___lwdiv:
  5806                           	opt stack 0
  5807                           pclatu	equ	0xFFB
  5808                           pclath	equ	0xFFA
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           prodh	equ	0xFF4
  5814                           prodl	equ	0xFF3
  5815                           intcon	equ	0xFF2
  5816                           intcon2	equ	0xFF1
  5817                           intcon3	equ	0xFF0
  5818                           postinc0	equ	0xFEE
  5819                           fsr0h	equ	0xFEA
  5820                           fsr0l	equ	0xFE9
  5821                           wreg	equ	0xFE8
  5822                           fsr1h	equ	0xFE2
  5823                           fsr1l	equ	0xFE1
  5824                           indf2	equ	0xFDF
  5825                           postinc2	equ	0xFDE
  5826                           postdec2	equ	0xFDD
  5827                           fsr2h	equ	0xFDA
  5828                           fsr2l	equ	0xFD9
  5829                           status	equ	0xFD8
  5830                           
  5831 ;; *************** function i2_lcdInst *****************
  5832 ;; Defined at:
  5833 ;;		line 26 in file "lcd.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  data            1    wreg     unsigned char 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  data            1    2[COMRAM] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5850 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;Total ram usage:        1 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    1
  5854 ;; This function calls:
  5855 ;;		i2_lcdNibble
  5856 ;; This function is called by:
  5857 ;;		_isr
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text32
  5862  0010F2                     __ptext32:
  5863                           	opt stack 0
  5864  0010F2                     i2_lcdInst:
  5865                           	opt stack 24
  5866                           
  5867                           ;incstack = 0
  5868                           ;i2lcdInst@data stored from wreg
  5869  0010F2  6E03               	movwf	i2lcdInst@data,c
  5870                           
  5871                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  5872  0010F4  948C               	bcf	3980,2,c	;volatile
  5873                           
  5874                           ;lcd.c: 28: lcdNibble(data);
  5875  0010F6  5003               	movf	i2lcdInst@data,w,c
  5876  0010F8  EC05  F007         	call	i2_lcdNibble
  5877  0010FC  0012               	return		;funcret
  5878  0010FE                     __end_ofi2_lcdInst:
  5879                           	opt stack 0
  5880                           pclatu	equ	0xFFB
  5881                           pclath	equ	0xFFA
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           prodh	equ	0xFF4
  5887                           prodl	equ	0xFF3
  5888                           intcon	equ	0xFF2
  5889                           intcon2	equ	0xFF1
  5890                           intcon3	equ	0xFF0
  5891                           postinc0	equ	0xFEE
  5892                           fsr0h	equ	0xFEA
  5893                           fsr0l	equ	0xFE9
  5894                           wreg	equ	0xFE8
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function i2_lcdNibble *****************
  5905 ;; Defined at:
  5906 ;;		line 36 in file "lcd.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  data            1    wreg     unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  data            1    1[COMRAM] unsigned char 
  5911 ;;  lcdNibble       1    0[COMRAM] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;Total ram usage:        2 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		i2_lcdInst
  5931 ;;		i2_putch
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text33
  5936  000E0A                     __ptext33:
  5937                           	opt stack 0
  5938  000E0A                     i2_lcdNibble:
  5939                           	opt stack 23
  5940                           
  5941                           ;incstack = 0
  5942                           ;i2lcdNibble@data stored from wreg
  5943  000E0A  6E02               	movwf	i2lcdNibble@data,c
  5944                           
  5945                           ;lcd.c: 38: char temp = data & 0xF0;
  5946  000E0C  5002               	movf	i2lcdNibble@data,w,c
  5947  000E0E  0BF0               	andlw	240
  5948  000E10  6E01               	movwf	i2lcdNibble@temp,c
  5949                           
  5950                           ;lcd.c: 39: LATD = LATD & 0x0F;
  5951  000E12  508C               	movf	3980,w,c	;volatile
  5952  000E14  0B0F               	andlw	15
  5953  000E16  6E8C               	movwf	3980,c	;volatile
  5954                           
  5955                           ;lcd.c: 40: LATD = temp | LATD;
  5956  000E18  5001               	movf	i2lcdNibble@temp,w,c
  5957  000E1A  108C               	iorwf	3980,w,c	;volatile
  5958  000E1C  6E8C               	movwf	3980,c	;volatile
  5959                           
  5960                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  5961  000E1E  968C               	bcf	3980,3,c	;volatile
  5962                           
  5963                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5964  000E20  0E19               	movlw	25
  5965  000E22                     i2u228_47:
  5966  000E22  2EE8               	decfsz	wreg,f,c
  5967  000E24  D7FE               	bra	i2u228_47
  5968                           
  5969                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  5970  000E26  868C               	bsf	3980,3,c	;volatile
  5971                           
  5972                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
  5973  000E28  0E19               	movlw	25
  5974  000E2A                     i2u229_47:
  5975  000E2A  2EE8               	decfsz	wreg,f,c
  5976  000E2C  D7FE               	bra	i2u229_47
  5977                           
  5978                           ;lcd.c: 47: data = data << 4;
  5979  000E2E  3802               	swapf	i2lcdNibble@data,w,c
  5980  000E30  0BF0               	andlw	240
  5981  000E32  6E02               	movwf	i2lcdNibble@data,c
  5982                           
  5983                           ;lcd.c: 49: temp = data & 0xF0;
  5984  000E34  5002               	movf	i2lcdNibble@data,w,c
  5985  000E36  0BF0               	andlw	240
  5986  000E38  6E01               	movwf	i2lcdNibble@temp,c
  5987                           
  5988                           ;lcd.c: 50: LATD = LATD & 0x0F;
  5989  000E3A  508C               	movf	3980,w,c	;volatile
  5990  000E3C  0B0F               	andlw	15
  5991  000E3E  6E8C               	movwf	3980,c	;volatile
  5992                           
  5993                           ;lcd.c: 51: LATD = temp | LATD;
  5994  000E40  5001               	movf	i2lcdNibble@temp,w,c
  5995  000E42  108C               	iorwf	3980,w,c	;volatile
  5996  000E44  6E8C               	movwf	3980,c	;volatile
  5997                           
  5998                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  5999  000E46  968C               	bcf	3980,3,c	;volatile
  6000                           
  6001                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
  6002  000E48  0E19               	movlw	25
  6003  000E4A                     i2u230_47:
  6004  000E4A  2EE8               	decfsz	wreg,f,c
  6005  000E4C  D7FE               	bra	i2u230_47
  6006                           
  6007                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  6008  000E4E  868C               	bsf	3980,3,c	;volatile
  6009                           
  6010                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
  6011  000E50  0E19               	movlw	25
  6012  000E52                     i2u231_47:
  6013  000E52  2EE8               	decfsz	wreg,f,c
  6014  000E54  D7FE               	bra	i2u231_47
  6015  000E56  0012               	return		;funcret
  6016  000E58                     __end_ofi2_lcdNibble:
  6017                           	opt stack 0
  6018                           pclatu	equ	0xFFB
  6019                           pclath	equ	0xFFA
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           intcon2	equ	0xFF1
  6028                           intcon3	equ	0xFF0
  6029                           postinc0	equ	0xFEE
  6030                           fsr0h	equ	0xFEA
  6031                           fsr0l	equ	0xFE9
  6032                           wreg	equ	0xFE8
  6033                           fsr1h	equ	0xFE2
  6034                           fsr1l	equ	0xFE1
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function _read_time *****************
  6043 ;; Defined at:
  6044 ;;		line 233 in file "main.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  i               1    3[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;Total ram usage:        1 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    2
  6065 ;; This function calls:
  6066 ;;		i2_I2C_Master_Read
  6067 ;;		i2_I2C_Master_Start
  6068 ;;		i2_I2C_Master_Stop
  6069 ;;		i2_I2C_Master_Write
  6070 ;; This function is called by:
  6071 ;;		_isr
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text34
  6076  000C56                     __ptext34:
  6077                           	opt stack 0
  6078  000C56                     _read_time:
  6079                           	opt stack 23
  6080                           
  6081                           ;main.c: 235: I2C_Master_Start();
  6082                           
  6083                           ;incstack = 0
  6084  000C56  EC95  F008         	call	i2_I2C_Master_Start	;wreg free
  6085                           
  6086                           ;main.c: 236: I2C_Master_Write(0b11010000);
  6087  000C5A  0E00               	movlw	0
  6088  000C5C  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6089  000C5E  0ED0               	movlw	208
  6090  000C60  6E02               	movwf	i2I2C_Master_Write@d,c
  6091  000C62  EC84  F008         	call	i2_I2C_Master_Write	;wreg free
  6092                           
  6093                           ;main.c: 237: I2C_Master_Write(0x00);
  6094  000C66  0E00               	movlw	0
  6095  000C68  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6096  000C6A  0E00               	movlw	0
  6097  000C6C  6E02               	movwf	i2I2C_Master_Write@d,c
  6098  000C6E  EC84  F008         	call	i2_I2C_Master_Write	;wreg free
  6099                           
  6100                           ;main.c: 238: I2C_Master_Stop();
  6101  000C72  EC91  F008         	call	i2_I2C_Master_Stop	;wreg free
  6102                           
  6103                           ;main.c: 241: I2C_Master_Start();
  6104  000C76  EC95  F008         	call	i2_I2C_Master_Start	;wreg free
  6105                           
  6106                           ;main.c: 242: I2C_Master_Write(0b11010001);
  6107  000C7A  0E00               	movlw	0
  6108  000C7C  6E03               	movwf	i2I2C_Master_Write@d+1,c
  6109  000C7E  0ED1               	movlw	209
  6110  000C80  6E02               	movwf	i2I2C_Master_Write@d,c
  6111  000C82  EC84  F008         	call	i2_I2C_Master_Write	;wreg free
  6112                           
  6113                           ;main.c: 243: for(unsigned char i=0;i<0x06;i++){
  6114  000C86  0E00               	movlw	0
  6115  000C88  6E04               	movwf	read_time@i,c
  6116  000C8A                     i2l2333:
  6117  000C8A  0E05               	movlw	5
  6118  000C8C  6404               	cpfsgt	read_time@i,c
  6119  000C8E  D001               	goto	i2l2337
  6120  000C90  D00E               	goto	i2l2343
  6121  000C92                     i2l2337:
  6122                           
  6123                           ;main.c: 244: time[i] = I2C_Master_Read(1);
  6124  000C92  5004               	movf	read_time@i,w,c
  6125  000C94  0D01               	mullw	1
  6126  000C96  0E41               	movlw	low _time
  6127  000C98  24F3               	addwf	prodl,w,c
  6128  000C9A  6ED9               	movwf	fsr2l,c
  6129  000C9C  0E00               	movlw	high _time
  6130  000C9E  20F4               	addwfc	prodh,w,c
  6131  000CA0  6EDA               	movwf	fsr2h,c
  6132  000CA2  0E01               	movlw	1
  6133  000CA4  EC0F  F008         	call	i2_I2C_Master_Read
  6134  000CA8  6EDF               	movwf	indf2,c
  6135  000CAA  2A04               	incf	read_time@i,f,c
  6136  000CAC  D7EE               	goto	i2l2333
  6137  000CAE                     i2l2343:
  6138                           
  6139                           ;main.c: 245: }
  6140                           ;main.c: 246: time[6] = I2C_Master_Read(0);
  6141  000CAE  0E00               	movlw	0
  6142  000CB0  EC0F  F008         	call	i2_I2C_Master_Read
  6143  000CB4  6E47               	movwf	_time+6,c
  6144                           
  6145                           ;main.c: 247: I2C_Master_Stop();
  6146  000CB6  EC91  F008         	call	i2_I2C_Master_Stop	;wreg free
  6147  000CBA  0012               	return	
  6148  000CBC                     __end_of_read_time:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           intcon2	equ	0xFF1
  6160                           intcon3	equ	0xFF0
  6161                           postinc0	equ	0xFEE
  6162                           fsr0h	equ	0xFEA
  6163                           fsr0l	equ	0xFE9
  6164                           wreg	equ	0xFE8
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           indf2	equ	0xFDF
  6168                           postinc2	equ	0xFDE
  6169                           postdec2	equ	0xFDD
  6170                           fsr2h	equ	0xFDA
  6171                           fsr2l	equ	0xFD9
  6172                           status	equ	0xFD8
  6173                           
  6174 ;; *************** function i2_I2C_Master_Write *****************
  6175 ;; Defined at:
  6176 ;;		line 47 in file "I2C.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  d               2    1[COMRAM] unsigned int 
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;Total ram usage:        2 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    1
  6197 ;; This function calls:
  6198 ;;		i2_I2C_Master_Wait
  6199 ;; This function is called by:
  6200 ;;		_read_time
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text35
  6205  001108                     __ptext35:
  6206                           	opt stack 0
  6207  001108                     i2_I2C_Master_Write:
  6208                           	opt stack 23
  6209                           
  6210                           ;I2C.c: 49: I2C_Master_Wait();
  6211                           
  6212                           ;incstack = 0
  6213  001108  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6214                           
  6215                           ;I2C.c: 50: SSPBUF = d;
  6216  00110C  C002  FFC9         	movff	i2I2C_Master_Write@d,4041	;volatile
  6217  001110  0012               	return		;funcret
  6218  001112                     __end_ofi2_I2C_Master_Write:
  6219                           	opt stack 0
  6220                           pclatu	equ	0xFFB
  6221                           pclath	equ	0xFFA
  6222                           tblptru	equ	0xFF8
  6223                           tblptrh	equ	0xFF7
  6224                           tblptrl	equ	0xFF6
  6225                           tablat	equ	0xFF5
  6226                           prodh	equ	0xFF4
  6227                           prodl	equ	0xFF3
  6228                           intcon	equ	0xFF2
  6229                           intcon2	equ	0xFF1
  6230                           intcon3	equ	0xFF0
  6231                           postinc0	equ	0xFEE
  6232                           fsr0h	equ	0xFEA
  6233                           fsr0l	equ	0xFE9
  6234                           wreg	equ	0xFE8
  6235                           fsr1h	equ	0xFE2
  6236                           fsr1l	equ	0xFE1
  6237                           indf2	equ	0xFDF
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           fsr2h	equ	0xFDA
  6241                           fsr2l	equ	0xFD9
  6242                           status	equ	0xFD8
  6243                           
  6244 ;; *************** function i2_I2C_Master_Stop *****************
  6245 ;; Defined at:
  6246 ;;		line 41 in file "I2C.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;		None
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;Total ram usage:        0 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    1
  6267 ;; This function calls:
  6268 ;;		i2_I2C_Master_Wait
  6269 ;; This function is called by:
  6270 ;;		_read_time
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text36
  6275  001122                     __ptext36:
  6276                           	opt stack 0
  6277  001122                     i2_I2C_Master_Stop:
  6278                           	opt stack 23
  6279                           
  6280                           ;I2C.c: 43: I2C_Master_Wait();
  6281                           
  6282                           ;incstack = 0
  6283  001122  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6284                           
  6285                           ;I2C.c: 44: PEN = 1;
  6286  001126  84C5               	bsf	4037,2,c	;volatile
  6287  001128  0012               	return		;funcret
  6288  00112A                     __end_ofi2_I2C_Master_Stop:
  6289                           	opt stack 0
  6290                           pclatu	equ	0xFFB
  6291                           pclath	equ	0xFFA
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           intcon	equ	0xFF2
  6299                           intcon2	equ	0xFF1
  6300                           intcon3	equ	0xFF0
  6301                           postinc0	equ	0xFEE
  6302                           fsr0h	equ	0xFEA
  6303                           fsr0l	equ	0xFE9
  6304                           wreg	equ	0xFE8
  6305                           fsr1h	equ	0xFE2
  6306                           fsr1l	equ	0xFE1
  6307                           indf2	equ	0xFDF
  6308                           postinc2	equ	0xFDE
  6309                           postdec2	equ	0xFDD
  6310                           fsr2h	equ	0xFDA
  6311                           fsr2l	equ	0xFD9
  6312                           status	equ	0xFD8
  6313                           
  6314 ;; *************** function i2_I2C_Master_Start *****************
  6315 ;; Defined at:
  6316 ;;		line 29 in file "I2C.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;Total ram usage:        0 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    1
  6337 ;; This function calls:
  6338 ;;		i2_I2C_Master_Wait
  6339 ;; This function is called by:
  6340 ;;		_read_time
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text37
  6345  00112A                     __ptext37:
  6346                           	opt stack 0
  6347  00112A                     i2_I2C_Master_Start:
  6348                           	opt stack 23
  6349                           
  6350                           ;I2C.c: 31: I2C_Master_Wait();
  6351                           
  6352                           ;incstack = 0
  6353  00112A  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6354                           
  6355                           ;I2C.c: 32: SEN = 1;
  6356  00112E  80C5               	bsf	4037,0,c	;volatile
  6357  001130  0012               	return		;funcret
  6358  001132                     __end_ofi2_I2C_Master_Start:
  6359                           	opt stack 0
  6360                           pclatu	equ	0xFFB
  6361                           pclath	equ	0xFFA
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           intcon2	equ	0xFF1
  6370                           intcon3	equ	0xFF0
  6371                           postinc0	equ	0xFEE
  6372                           fsr0h	equ	0xFEA
  6373                           fsr0l	equ	0xFE9
  6374                           wreg	equ	0xFE8
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           postinc2	equ	0xFDE
  6379                           postdec2	equ	0xFDD
  6380                           fsr2h	equ	0xFDA
  6381                           fsr2l	equ	0xFD9
  6382                           status	equ	0xFD8
  6383                           
  6384 ;; *************** function i2_I2C_Master_Read *****************
  6385 ;; Defined at:
  6386 ;;		line 53 in file "I2C.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  a               1    wreg     unsigned char 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  a               1    1[COMRAM] unsigned char 
  6391 ;;  I2C_Master_R    1    2[COMRAM] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      unsigned char 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0, cstack
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;Total ram usage:        2 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; Hardware stack levels required when called:    1
  6408 ;; This function calls:
  6409 ;;		i2_I2C_Master_Wait
  6410 ;; This function is called by:
  6411 ;;		_read_time
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text38
  6416  00101E                     __ptext38:
  6417                           	opt stack 0
  6418  00101E                     i2_I2C_Master_Read:
  6419                           	opt stack 23
  6420                           
  6421                           ;incstack = 0
  6422                           ;i2I2C_Master_Read@a stored from wreg
  6423  00101E  6E02               	movwf	i2I2C_Master_Read@a,c
  6424                           
  6425                           ;I2C.c: 55: unsigned char temp;
  6426                           ;I2C.c: 56: I2C_Master_Wait();
  6427  001020  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6428                           
  6429                           ;I2C.c: 57: RCEN = 1;
  6430  001024  86C5               	bsf	4037,3,c	;volatile
  6431                           
  6432                           ;I2C.c: 58: I2C_Master_Wait();
  6433  001026  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6434                           
  6435                           ;I2C.c: 59: temp = SSPBUF;
  6436  00102A  CFC9 F003          	movff	4041,i2I2C_Master_Read@temp	;volatile
  6437                           
  6438                           ;I2C.c: 60: I2C_Master_Wait();
  6439  00102E  EC5E  F008         	call	i2_I2C_Master_Wait	;wreg free
  6440                           
  6441                           ;I2C.c: 61: ACKDT = (a)?0:1;
  6442  001032  5002               	movf	i2I2C_Master_Read@a,w,c
  6443  001034  A4D8               	btfss	status,2,c
  6444  001036  D002               	goto	i2u135_40
  6445  001038  8AC5               	bsf	4037,5,c	;volatile
  6446  00103A  D001               	goto	i2l2133
  6447  00103C                     i2u135_40:
  6448  00103C  9AC5               	bcf	4037,5,c	;volatile
  6449  00103E                     i2l2133:
  6450                           
  6451                           ;I2C.c: 62: ACKEN = 1;
  6452  00103E  88C5               	bsf	4037,4,c	;volatile
  6453                           
  6454                           ;I2C.c: 63: return temp;
  6455  001040  5003               	movf	i2I2C_Master_Read@temp,w,c
  6456  001042  0012               	return	
  6457  001044                     __end_ofi2_I2C_Master_Read:
  6458                           	opt stack 0
  6459                           pclatu	equ	0xFFB
  6460                           pclath	equ	0xFFA
  6461                           tblptru	equ	0xFF8
  6462                           tblptrh	equ	0xFF7
  6463                           tblptrl	equ	0xFF6
  6464                           tablat	equ	0xFF5
  6465                           prodh	equ	0xFF4
  6466                           prodl	equ	0xFF3
  6467                           intcon	equ	0xFF2
  6468                           intcon2	equ	0xFF1
  6469                           intcon3	equ	0xFF0
  6470                           postinc0	equ	0xFEE
  6471                           fsr0h	equ	0xFEA
  6472                           fsr0l	equ	0xFE9
  6473                           wreg	equ	0xFE8
  6474                           fsr1h	equ	0xFE2
  6475                           fsr1l	equ	0xFE1
  6476                           indf2	equ	0xFDF
  6477                           postinc2	equ	0xFDE
  6478                           postdec2	equ	0xFDD
  6479                           fsr2h	equ	0xFDA
  6480                           fsr2l	equ	0xFD9
  6481                           status	equ	0xFD8
  6482                           
  6483 ;; *************** function i2_I2C_Master_Wait *****************
  6484 ;; Defined at:
  6485 ;;		line 24 in file "I2C.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;Total ram usage:        1 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		i2_I2C_Master_Start
  6509 ;;		i2_I2C_Master_Stop
  6510 ;;		i2_I2C_Master_Write
  6511 ;;		i2_I2C_Master_Read
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text39
  6516  0010BC                     __ptext39:
  6517                           	opt stack 0
  6518  0010BC                     i2_I2C_Master_Wait:
  6519                           	opt stack 23
  6520  0010BC                     i2l34:
  6521  0010BC  B4C7               	btfsc	4039,2,c	;volatile
  6522  0010BE  D7FE               	goto	i2l34
  6523  0010C0  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
  6524  0010C4  0E1F               	movlw	31
  6525  0010C6  1601               	andwf	??i2_I2C_Master_Wait,f,c
  6526  0010C8  B4D8               	btfsc	status,2,c
  6527  0010CA  0012               	return	
  6528  0010CC  D7F7               	goto	i2l34
  6529  0010CE                     __end_ofi2_I2C_Master_Wait:
  6530                           	opt stack 0
  6531                           pclatu	equ	0xFFB
  6532                           pclath	equ	0xFFA
  6533                           tblptru	equ	0xFF8
  6534                           tblptrh	equ	0xFF7
  6535                           tblptrl	equ	0xFF6
  6536                           tablat	equ	0xFF5
  6537                           prodh	equ	0xFF4
  6538                           prodl	equ	0xFF3
  6539                           intcon	equ	0xFF2
  6540                           intcon2	equ	0xFF1
  6541                           intcon3	equ	0xFF0
  6542                           postinc0	equ	0xFEE
  6543                           fsr0h	equ	0xFEA
  6544                           fsr0l	equ	0xFE9
  6545                           wreg	equ	0xFE8
  6546                           fsr1h	equ	0xFE2
  6547                           fsr1l	equ	0xFE1
  6548                           indf2	equ	0xFDF
  6549                           postinc2	equ	0xFDE
  6550                           postdec2	equ	0xFDD
  6551                           fsr2h	equ	0xFDA
  6552                           fsr2l	equ	0xFD9
  6553                           status	equ	0xFD8
  6554                           pclatu	equ	0xFFB
  6555                           pclath	equ	0xFFA
  6556                           tblptru	equ	0xFF8
  6557                           tblptrh	equ	0xFF7
  6558                           tblptrl	equ	0xFF6
  6559                           tablat	equ	0xFF5
  6560                           prodh	equ	0xFF4
  6561                           prodl	equ	0xFF3
  6562                           intcon	equ	0xFF2
  6563                           intcon2	equ	0xFF1
  6564                           intcon3	equ	0xFF0
  6565                           postinc0	equ	0xFEE
  6566                           fsr0h	equ	0xFEA
  6567                           fsr0l	equ	0xFE9
  6568                           wreg	equ	0xFE8
  6569                           fsr1h	equ	0xFE2
  6570                           fsr1l	equ	0xFE1
  6571                           indf2	equ	0xFDF
  6572                           postinc2	equ	0xFDE
  6573                           postdec2	equ	0xFDD
  6574                           fsr2h	equ	0xFDA
  6575                           fsr2l	equ	0xFD9
  6576                           status	equ	0xFD8
  6577                           
  6578                           	psect	rparam
  6579  0000                     pclatu	equ	0xFFB
  6580                           pclath	equ	0xFFA
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           intcon	equ	0xFF2
  6588                           intcon2	equ	0xFF1
  6589                           intcon3	equ	0xFF0
  6590                           postinc0	equ	0xFEE
  6591                           fsr0h	equ	0xFEA
  6592                           fsr0l	equ	0xFE9
  6593                           wreg	equ	0xFE8
  6594                           fsr1h	equ	0xFE2
  6595                           fsr1l	equ	0xFE1
  6596                           indf2	equ	0xFDF
  6597                           postinc2	equ	0xFDE
  6598                           postdec2	equ	0xFDD
  6599                           fsr2h	equ	0xFDA
  6600                           fsr2l	equ	0xFD9
  6601                           status	equ	0xFD8
  6602                           
  6603                           	psect	temp
  6604  000053                     btemp:
  6605                           	opt stack 0
  6606  000053                     	ds	1
  6607  0000                     int$flags	set	btemp
  6608                           pclatu	equ	0xFFB
  6609                           pclath	equ	0xFFA
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           intcon2	equ	0xFF1
  6618                           intcon3	equ	0xFF0
  6619                           postinc0	equ	0xFEE
  6620                           fsr0h	equ	0xFEA
  6621                           fsr0l	equ	0xFE9
  6622                           wreg	equ	0xFE8
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           indf2	equ	0xFDF
  6626                           postinc2	equ	0xFDE
  6627                           postdec2	equ	0xFDD
  6628                           fsr2h	equ	0xFDA
  6629                           fsr2l	equ	0xFD9
  6630                           status	equ	0xFD8


Data Sizes:
    Strings     439
    Constant    42
    Data        2
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     64      82
    BANK0           128     18      18
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_23(CODE[15]), STR_22(CODE[16]), STR_21(CODE[25]), STR_20(CODE[24]), 
		 -> STR_19(CODE[23]), STR_18(CODE[22]), STR_17(CODE[23]), STR_16(CODE[10]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), STR_4(CODE[23]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _standby->_printf
    _operationend->_printf
    _operation->_printf
    _initLCD->_lcdInst
    _emergencystop->_printf
    _date_time->_printf
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _bottle_time->_printf
    _bottle_count->_printf
    _printf->___lwmod
    _putch->_lcdNibble
    ___lwmod->___lwdiv
    _lcdInst->_lcdNibble
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMRAM

    _isr->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_lcdNibble
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_lcdNibble
    _read_time->i2_I2C_Master_Read
    _read_time->i2_I2C_Master_Write
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    i2_I2C_Master_Read->i2_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_operation
    _standby->_printf
    _operationend->_printf
    _operation->_printf
    _emergencystop->_printf
    _date_time->_printf
    _bottle_time->_printf
    _bottle_count->_printf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   35901
                                             16 BANK0      2     2      0
                    _I2C_Master_Init
                       _bottle_count
                        _bottle_time
                          _date_time
                      _emergencystop
                            _initLCD
                          _operation
                       _operationend
                            _standby
 ---------------------------------------------------------------------------------
 (1) _standby                                              0     0      0    4883
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _operationend                                         0     0      0    4883
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _operation                                            2     2      0    4883
                                             14 BANK0      2     2      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     135
                                             47 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _emergencystop                                        0     0      0    4883
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _date_time                                            1     1      0    5646
                                             14 BANK0      1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     619
                                             45 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      45
                                             45 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bottle_time                                          0     0      0    4883
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _bottle_count                                         0     0      0    5307
                            ___awmod
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    23      8    4748
                                             56 COMRAM     8     0      8
                                              0 BANK0     14    14      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     135
                                             46 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             44 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     392
                                             44 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             51 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     549
                                             44 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                             46 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     113
                                             44 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     424
                                             44 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     398
                                             57 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             44 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 16    16      0    2306
                                             28 COMRAM    16    16      0
                          _read_time
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (6) i2_printf                                            25    23      2    1912
                                             12 COMRAM    16    14      2
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (7) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (7) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (6) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (8) i2_lcdNibble                                          2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _read_time                                            1     1      0     213
                                              3 COMRAM     1     1      0
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (7) i2_I2C_Master_Write                                   2     0      2     100
                                              1 COMRAM     2     0      2
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i2_I2C_Master_Stop                                    0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i2_I2C_Master_Start                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i2_I2C_Master_Read                                    2     2      0      45
                                              1 COMRAM     2     2      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Master_Wait                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _bottle_count
     ___awmod
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _bottle_time
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _date_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _emergencystop
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _operation
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _operationend
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _standby
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
       _putch
         _lcdNibble

 _isr (ROOT)
   _read_time
     i2_I2C_Master_Read
       i2_I2C_Master_Wait
     i2_I2C_Master_Start
       i2_I2C_Master_Wait
     i2_I2C_Master_Stop
       i2_I2C_Master_Wait
     i2_I2C_Master_Write
       i2_I2C_Master_Wait
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2___wmul
     i2_isdigit
     i2_putch
       i2_lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      12       5       14.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     40      52       1       65.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      34        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 07 15:38:51 2017

         i2_I2C_Master_Start 112A           i2_I2C_Master_Write 1108                           l34 10AA  
             ?_emergencystop 0001          ___wmul@multiplicand 002F           i2___lwdiv@dividend 0001  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000  
                        l309 0128                          l274 1094                          l701 0B54  
                        l754 0D60                          l764 0EDC                 __CFG_CPB$OFF 000000  
                        _PEN 007E2A                 __CFG_CPD$OFF 000000                          _SEN 007E28  
                        _PSA 007EAB          ?i2_I2C_Master_Start 0001          ?i2_I2C_Master_Write 0002  
                        _isr 0008                          _ptr 004C                 ___awmod@sign 0032  
                        prod 000FF3                          wreg 000FE8                 ?_bottle_time 0001  
               __CFG_LVP$OFF 000000                 __CFG_WDT$OFF 000000                         l2101 0B16  
                       l3011 08FE                         l2109 0B46                         l3005 08D8  
                       l2071 0C14                         l2063 0BFA                         l2073 0C1C  
                       l3017 091A                         l2075 0C20                         l2083 0C3E  
                       l2067 0C06                         l2087 0C4C                         l2079 0C34  
                       l3071 09D2                         l3063 09BA                         l2097 0B06  
                       l3073 09D8                         l3065 09C0                         l3081 0A10  
                       l2099 0B12                         l3075 09DE                         l3067 09C6  
                       l3069 09CC                         l2703 0D56                         l2711 0EB2  
                       l3079 09E4                         l2713 0EBA                         l2801 0182  
                       l2715 0EBE                         l2813 01B8                         l2719 0ED2  
                       l2815 01BE                         l2831 0206                         l2743 0FA6  
                       l2841 0260                         l2761 0046                         l2691 0D2E  
                       l2675 105A                         l2843 026A                         l2771 007E  
                       l2755 0020                         l2931 0B84                         l2693 0D36  
                       l2861 02C6                         l2837 0228                         l2829 01F4  
                       l2765 004E                         l2925 0B68                         l2695 0D3A  
                       l2855 02A0                         l2783 00F8                         l2759 0034  
                       l2857 02AC                         l2865 02DA                         l2849 0284  
                       l2881 039A                         l2961 0A64                         l2937 0BA0  
                       l2945 0BBC                         l2867 02E0                         l2875 0374  
                       l2795 0160                         l2779 00F2                         l2971 0A8E  
                       l2869 0328                         l2877 0386                         l2981 0840  
                       l2965 0A6E                         l2879 038E                         l2799 017C  
                       l2993 088C                         l2987 0866                         l2999 08B2  
                       ?_isr 0001                         STR_1 FFE6                         STR_2 FEFB  
                       STR_3 FF1D                         STR_4 FEA6                         STR_5 FEBD  
                       STR_6 FF2E                         STR_7 FF0C                         STR_8 FF72  
                       STR_9 FF61                         _T0CS 007EAD                         _LATA 000F89  
                       _LATB 000F8A                         u2207 0A1E                         _LATC 000F8B  
                       _LATD 000F8C                         u2217 0E5E                         _LATE 000F8D  
                       u2155 0CEA                         u2227 0E98                         u2237 0DD4  
                       u2247 0DDC                         u2257 0DFC                         u2267 0E04  
                       u1900 0FA4                         _RCEN 007E2B                         i2l34 10BC  
                       _TMR0 000FD6                         _RSEN 007E29                         _main 0958  
                       _keys FE1D                         _time 0041                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 0005                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                         btemp 0053                         isr@i 002C  
       ??i2_I2C_Master_Start 0002         ??i2_I2C_Master_Write 0004                         prodh 000FF4  
                       prodl 000FF3                         start 000E                __CFG_IESO$OFF 000000  
            __end_ofi2_putch 10F2                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
                i2_lcdNibble 0E0A                ?_bottle_count 0001                        ??_isr 001D  
           ?_I2C_Master_Init 003A             ?_I2C_Master_Read 0001             ?_I2C_Master_Wait 0001  
           ?_I2C_Master_Stop 0001                        ?_main 0001                        _ACKEN 007E2C  
                      _ACKDT 007E2D                        STR_10 FF50                        STR_11 FF3F  
                      STR_12 FF83                        STR_20 FE60                        STR_13 FFA5  
                      STR_21 FE47                        STR_22 FFC7                        STR_14 FF94  
                      STR_23 FFD7                        STR_15 FFB6                        STR_16 FFF4  
                      STR_24 FEEA                        STR_17 FE8F                        STR_18 FED4  
                      STR_19 FE78              __end_of___awmod 0C56              __end_of___lldiv 0B66  
                      _T0PS0 007EA8                        _T0PS1 007EA9                        _T0PS2 007EAA  
            __end_of___lwdiv 0D6A              __end_of___lwmod 0EE6                        i2l204 07AC  
                      i2l207 07A8                        i2l208 0710                        i2l225 0802  
                      i2l309 04A2                        i2l754 0DB2                        i2l764 0F1E  
                      _PORTB 000F81                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000              __end_of_lcdInst 10E6  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                        _nRBPU 007F8F  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
            __end_of_initLCD 0EA4               __CFG_EBTRB$OFF 000000                   i2isdigit@c 0003  
            __end_of_dpowers FE38              __end_of_isdigit 1062                        _putch 10CE  
                      pclath 000FFA                        tablat 000FF5              __end_of_timeset FE47  
           __end_ofi2___wmul 101E              __end_of_standby 0F86                        status 000FD8  
             __CFG_PBADEN$ON 000000                i2printf@width 001A             __end_ofi2_printf 06C2  
         __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042              __initialization 0F28  
         __size_ofi2_lcdInst 000C              ??_emergencystop 0041               ??_bottle_count 0041  
               __end_of_main 0A2E                 __end_of_keys FE2E                   i2printf@ap 0014  
         __size_ofi2_isdigit 001E                       ??_main 0090                __activetblptr 000002  
          ?_I2C_Master_Start 0001            ?_I2C_Master_Write 002E           ??_I2C_Master_Start 002E  
                     _ADCON0 000FC2                       _ADCON1 000FC1           ??_I2C_Master_Write 0030  
                     _T08BIT 007EAE              i2lcdNibble@data 0002                       ?_putch 0001  
            i2lcdNibble@temp 0001                       _INT1IE 007F83                       _INT1IF 007F80  
                     i2l2133 103E                       i2l2171 0D8C                       i2l2411 051A  
                     i2l2333 0C8A                       i2l2157 1078                       i2l2413 051E  
                     i2l2343 0CAE                       i2l2167 0D80                       i2l2191 0F00  
                     i2l2337 0C92                       i2l2169 0D88                       i2l2441 05A0  
                     i2l2353 03C0                       i2l2179 0DA8                       i2l2195 0F14  
                     i2l2187 0EF4                       i2l2435 0574                       i2l2427 054A  
                     i2l2363 03E4                       i2l2603 07D0                       i2l2189 0EFC  
                     i2l2453 05CC                       i2l2429 055A                       i2l2381 0474  
                     i2l2357 03D0                       i2l2613 07EE                       i2l2533 0702  
                     i2l2455 05D4                       i2l2463 05FA                       i2l2447 05B6  
                     i2l2439 0598                       i2l2359 03DE                       i2l2465 0600  
                     i2l2473 068A                       i2l2393 04D0                       i2l2377 0470  
                     i2l2369 0412                       i2l2609 07E6                       i2l2553 0740  
                     i2l2467 0644                       i2l2475 069A                       i2l2459 05E8  
                     i2l2563 0752                       i2l2555 074A                       i2l2547 0732  
                     i2l2477 06A0                       i2l2397 04EA                       i2l2549 0738  
                     i2l2399 04EE                       i2l2479 06A8                       i2l2575 076A  
                     i2l2559 074E                       i2l2585 077C                       _TMR0IE 007F95  
                     _TMR0IF 007F92                    ??i2_putch 0003                       _TMR0ON 007EAF  
                     _SSPADD 000FC8                       _TRISC3 007CA3                       _TRISC4 007CA4  
                     _SSPBUF 000FC9               __CFG_XINST$OFF 000000                       ___wmul 0FD2  
             __CFG_STVREN$ON 000000                    ??___awmod 0031                    ??___lldiv 0035  
                  ??___lwdiv 0031                    ??___lwmod 0038                       clear_0 0F46  
            ___awmod@divisor 002F              ___awmod@counter 0031                    ??_lcdInst 002F  
                     _printf 0012                    ??_initLCD 0030                 __pdataCOMRAM 0051  
                  ??_isdigit 002D            __end_ofi2___lwdiv 0DBC                 __mediumconst FE1C  
          __end_ofi2___lwmod 0F28                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_standby 0041            __end_ofi2_lcdInst 10FE  
          __end_ofi2_isdigit 1080         __size_of_bottle_time 0026                   __accesstop 0080  
    __end_of__initialization 0F4C                ___rparam_used 000001           i2___lwmod@dividend 0008  
             __pcstackCOMRAM 0001                __end_of_putch 10DA                  i2printf@idx 0013  
                i2printf@val 0017           __size_of_date_time 00B6                    ?i2___wmul 0001  
         __size_of_lcdNibble 004E                  i2putch@data 0003                    ?i2_printf 000D  
       __end_of_bottle_count 0958                      ??_putch 002F           __size_of_read_time 0066  
               ?i2_lcdNibble 0001                      ?___wmul 002D                      ?_printf 0039  
         __size_of_operation 0080                   ??i2___wmul 0005                   ??i2_printf 000F  
                    _SSPCON1 000FC6                      _SSPCON2 000FC5                      _SSPSTAT 000FC7  
          __end_of_date_time 0AE4                      i2_putch 10E6            _bottle_count_disp 0051  
__size_ofi2_I2C_Master_Start 0008            __end_of_lcdNibble 0E0A  __size_ofi2_I2C_Master_Write 000A  
              ?_operationend 0001                      __Hparam 0000                      __Lparam 0000  
                    ___awmod 0BE6                      ___lldiv 0AE4              __size_of___wmul 0026  
                    ___lwdiv 0D18                      ___lwmod 0EA4                   _curr_state 0050  
                    __pcinit 0F28                      __ramtop 1000                      _lcdInst 10DA  
                    __ptext0 0958                      __ptext1 0F5A                      __ptext2 1096  
                    __ptext3 0B66                      __ptext4 0E58                      __ptext5 1080  
                    __ptext6 0A2E                      __ptext7 10FE                      __ptext8 1112  
                    __ptext9 111A              __size_of_printf 03A4                      _initLCD 0E58  
          __end_of_hexpowers FE40                i2_isdigit$563 0002                      _dpowers FE2E  
                    _isdigit 1044                 __size_of_isr 0836             ___awmod@dividend 002D  
          __end_of_read_time 0CBC     __size_of_I2C_Master_Init 005C     __size_of_I2C_Master_Read 0026  
   __size_of_I2C_Master_Wait 0012                   date_time@i 008E     __size_of_I2C_Master_Stop 0008  
                    _timeset FE40                      _standby 0F5A               __pintcode_body 06C2  
       end_of_initialization 0F4C                __Lmediumconst FE1C                      int_func 06C2  
        i2___wmul@multiplier 0001            __end_of_operation 0BE6               _operation_disp 004A  
             ??_operationend 0041    __size_of_I2C_Master_Start 0008    __size_of_I2C_Master_Write 000A  
            ___lldiv@divisor 0031              ___lldiv@counter 0039                      printf@c 008D  
                    printf@f 0039             I2C_Master_Init@c 003A             I2C_Master_Read@a 002E  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
      __end_of_emergencystop 1096        __size_of_bottle_count 011A            i2_I2C_Master_Read 101E  
          i2_I2C_Master_Wait 10BC            i2_I2C_Master_Stop 1122            i2___lwdiv@divisor 0003  
                  i2___lwdiv 0D6A                    i2___lwmod 0EE6            i2___lwdiv@counter 0007  
         ?i2_I2C_Master_Read 0001           ?i2_I2C_Master_Wait 0001           ?i2_I2C_Master_Stop 0001  
                 _start_time 004E                    i2_lcdInst 10F2                  printf@width 008B  
        ??i2_I2C_Master_Read 0002                    i2_isdigit 1062          ??i2_I2C_Master_Wait 0001  
        ??i2_I2C_Master_Stop 0002                 _bottle_count 083E               __end_of___wmul 0FF8  
       __size_ofi2_lcdNibble 004E                __pidataCOMRAM 1132                i2lcdInst@data 0003  
           i2___wmul@product 0005               __end_of_printf 03B6                 i2printf@flag 0019  
  __end_ofi2_I2C_Master_Read 1044    __end_ofi2_I2C_Master_Wait 10CE                 i2printf@prec 0016  
        start_initialization 0F28    __end_ofi2_I2C_Master_Stop 112A            __size_ofi2___wmul 0026  
                __end_of_isr 083E                    i2printf@c 001C                    i2printf@f 000D  
              ??_bottle_time 0041        i2I2C_Master_Read@temp 0003                   ?i2___lwdiv 0001  
                 ?i2___lwmod 0008            __size_ofi2_printf 030C            ??_I2C_Master_Init 0080  
          ??_I2C_Master_Read 002E            ??_I2C_Master_Wait 002D                   ?i2_lcdInst 0001  
          ??_I2C_Master_Stop 002E                   ?i2_isdigit 0001                     ??___wmul 0031  
           __CFG_LPT1OSC$OFF 000000                     ??_printf 0080                   read_time@i 0004  
                __pbssCOMRAM 0041         __end_of_operationend 10AA                __pcstackBANK0 0080  
          i2___lwmod@divisor 000A            i2___lwmod@counter 000C                     ?i2_putch 0001  
        __end_of_bottle_time 0FD2             _I2C_Master_Start 111A          i2I2C_Master_Write@d 0002  
           _I2C_Master_Write 10FE                    _date_time 0A2E             ___lwdiv@dividend 002D  
          __CFG_CCP2MX$PORTC 000000                    __pintcode 0008                __pmediumconst FE1C  
                  _lcdNibble 0DBC                     ?___awmod 002D                     ?___lldiv 002D  
                   ?___lwdiv 002D                     ?___lwmod 0034                     ?_lcdInst 0001  
                   ?_initLCD 0001                     ?_isdigit 0001   __size_ofi2_I2C_Master_Read 0026  
 __size_ofi2_I2C_Master_Wait 0012   __size_ofi2_I2C_Master_Stop 0008                    _hexpowers FE38  
                   ?_standby 0001             ___lwdiv@quotient 0032                  ??i2___lwdiv 0005  
                ??i2___lwmod 000C                    _read_time 0C56               __size_of_putch 000C  
 __end_ofi2_I2C_Master_Start 1132   __end_ofi2_I2C_Master_Write 1112                  ??i2_lcdInst 0003  
             ___wmul@product 0031                     _LATDbits 000F8C                  ??i2_isdigit 0001  
                 ?_date_time 0001                     i2u230_47 0E4A                     i2u135_40 103C  
                   i2u231_47 0E52                     i2u227_47 07F4                     i2u228_47 0E22  
                   i2u229_47 0E2A                    _operation 0B66             __CFG_WDTPS$32768 000000  
                 ?_lcdNibble 0001            ___wmul@multiplier 002D                     i2___wmul 0FF8  
              lcdNibble@data 002E                   printf@flag 008A                lcdNibble@temp 002D  
                 printf@prec 0087                     i2_printf 03B6                  _bottle_time 0FAC  
        I2C_Master_Read@temp 002F                   ?_read_time 0001             __size_ofi2_putch 000C  
                   __Hrparam 0000                   ?_operation 0001                     __Lrparam 0000  
         __CFG_BOREN$SBORDIS 000000             __size_of___awmod 0070        i2___wmul@multiplicand 0003  
           __size_of___lldiv 0082             __size_of___lwdiv 0052             __size_of___lwmod 0042  
      __size_of_operationend 0014                  _isdigit$563 002E           i2I2C_Master_Read@a 0002  
           __size_of_lcdInst 000C              _I2C_Master_Init 0CBC              _I2C_Master_Read 0F86  
           __size_of_initLCD 004C              _I2C_Master_Wait 10AA              _I2C_Master_Stop 1112  
           __size_of_isdigit 001E              ___lwdiv@divisor 002F              ___lwdiv@counter 0031  
                   __ptext10 0F86                     __ptext11 10AA                     __ptext20 10DA  
                   __ptext12 0FAC                     __ptext21 0DBC                     __ptext13 083E  
                   __ptext30 0EE6                     __ptext22 0BE6                     __ptext14 0012  
                   __ptext31 0D6A                     __ptext23 0CBC                     __ptext15 10CE  
                   __ptext32 10F2                     __ptext24 0AE4                     __ptext16 1044  
                   __ptext33 0E0A                     __ptext17 0FD2                     __ptext34 0C56  
                   __ptext26 03B6                     __ptext18 0EA4                     __ptext35 1108  
                   __ptext27 10E6                     __ptext19 0D18                     __ptext36 1122  
                   __ptext28 1062                     __ptext37 112A                     __ptext29 0FF8  
                   __ptext38 101E                     __ptext39 10BC                     _end_time 0048  
           __size_of_standby 002C       __size_of_emergencystop 0016                __size_of_main 00D6  
                ??_date_time 0041                 _operationend 1096                ??i2_lcdNibble 0001  
                ??_lcdNibble 002D                     int$flags 0053                    printf@idx 0084  
                  printf@val 0088                    putch@data 002F     __end_of_I2C_Master_Start 1122  
   __end_of_I2C_Master_Write 1108                   _INTCONbits 000FF2                     isdigit@c 002F  
                ??_read_time 0004                     intlevel2 0000             ___lwmod@dividend 0034  
           ___lldiv@dividend 002D                  ??_operation 008E                     printf@ap 0085  
    __end_of_I2C_Master_Init 0D18      __end_of_I2C_Master_Read 0FAC      __end_of_I2C_Master_Wait 10BC  
    __end_of_I2C_Master_Stop 111A                  lcdInst@data 002F                _emergencystop 1080  
        __end_ofi2_lcdNibble 0E58             ___lldiv@quotient 0035            I2C_Master_Write@d 002E  
            ___lwmod@divisor 0036              ___lwmod@counter 0038  
