

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun Feb 05 21:33:57 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 1.40
    29                           ; Generated 01/12/2016 GMT
    30                           ; 
    31                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4620 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	smallconst
    64  001000                     __psmallconst:
    65                           	opt stack 0
    66  001000  00                 	db	0
    67  001001                     _keys:
    68                           	opt stack 0
    69  001001  31                 	db	49
    70  001002  32                 	db	50
    71  001003  33                 	db	51
    72  001004  41                 	db	65
    73  001005  34                 	db	52
    74  001006  35                 	db	53
    75  001007  36                 	db	54
    76  001008  42                 	db	66
    77  001009  37                 	db	55
    78  00100A  38                 	db	56
    79  00100B  39                 	db	57
    80  00100C  43                 	db	67
    81  00100D  2A                 	db	42
    82  00100E  30                 	db	48
    83  00100F  23                 	db	35
    84  001010  44                 	db	68
    85  001011  00                 	db	0
    86  001012                     __end_of_keys:
    87                           	opt stack 0
    88  001012                     _hexpowers:
    89                           	opt stack 0
    90  001012  0001               	dw	1
    91  001014  0010               	dw	16
    92  001016  0100               	dw	256
    93  001018  1000               	dw	4096
    94  00101A                     __end_of_hexpowers:
    95                           	opt stack 0
    96  00101A                     _timeset:
    97                           	opt stack 0
    98  00101A  50                 	db	80
    99  00101B  30                 	db	48
   100  00101C  21                 	db	33
   101  00101D  08                 	db	8
   102  00101E  05                 	db	5
   103  00101F  02                 	db	2
   104  001020  17                 	db	23
   105  001021                     __end_of_timeset:
   106                           	opt stack 0
   107  0000                     _LATA	set	3977
   108  0000                     _LATB	set	3978
   109  0000                     _LATC	set	3979
   110  0000                     _LATD	set	3980
   111  0000                     _LATDbits	set	3980
   112  0000                     _LATE	set	3981
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISC	set	3988
   116  0000                     _TRISD	set	3989
   117  0000                     _TRISE	set	3990
   118  0000                     _TRISC3	set	31907
   119  0000                     _TRISC4	set	31908
   120  0000                     _ADCON0	set	4034
   121  0000                     _ADCON1	set	4033
   122  0000                     _SSPADD	set	4040
   123  0000                     _SSPBUF	set	4041
   124  0000                     _SSPCON1	set	4038
   125  0000                     _SSPCON2	set	4037
   126  0000                     _SSPSTAT	set	4039
   127  0000                     _ACKDT	set	32301
   128  0000                     _ACKEN	set	32300
   129  0000                     _PEN	set	32298
   130  0000                     _RCEN	set	32299
   131  0000                     _RSEN	set	32297
   132  0000                     _SEN	set	32296
   133  0000                     _INTCONbits	set	4082
   134  0000                     _nRBPU	set	32655
   135  001021                     STR_3:
   136  001021  30                 	db	48	;'0'
   137  001022  31                 	db	49	;'1'
   138  001023  32                 	db	50	;'2'
   139  001024  33                 	db	51	;'3'
   140  001025  34                 	db	52	;'4'
   141  001026  35                 	db	53	;'5'
   142  001027  36                 	db	54	;'6'
   143  001028  37                 	db	55	;'7'
   144  001029  38                 	db	56	;'8'
   145  00102A  39                 	db	57	;'9'
   146  00102B  61                 	db	97	;'a'
   147  00102C  62                 	db	98	;'b'
   148  00102D  63                 	db	99	;'c'
   149  00102E  64                 	db	100	;'d'
   150  00102F  65                 	db	101	;'e'
   151  001030  66                 	db	102	;'f'
   152  001031  00                 	db	0
   153  001032                     STR_1:
   154  001032  25                 	db	37
   155  001033  30                 	db	48	;'0'
   156  001034  32                 	db	50	;'2'
   157  001035  78                 	db	120	;'x'
   158  001036  2F                 	db	47
   159  001037  25                 	db	37
   160  001038  30                 	db	48	;'0'
   161  001039  32                 	db	50	;'2'
   162  00103A  78                 	db	120	;'x'
   163  00103B  2F                 	db	47
   164  00103C  25                 	db	37
   165  00103D  30                 	db	48	;'0'
   166  00103E  32                 	db	50	;'2'
   167  00103F  78                 	db	120	;'x'
   168  001040  00                 	db	0
   169  001041                     STR_2:
   170  001041  25                 	db	37
   171  001042  30                 	db	48	;'0'
   172  001043  32                 	db	50	;'2'
   173  001044  78                 	db	120	;'x'
   174  001045  3A                 	db	58	;':'
   175  001046  25                 	db	37
   176  001047  30                 	db	48	;'0'
   177  001048  32                 	db	50	;'2'
   178  001049  78                 	db	120	;'x'
   179  00104A  3A                 	db	58	;':'
   180  00104B  25                 	db	37
   181  00104C  30                 	db	48	;'0'
   182  00104D  32                 	db	50	;'2'
   183  00104E  78                 	db	120	;'x'
   184  00104F  00                 	db	0
   185                           
   186                           ; #config settings
   187  001050  00                 	db	0	; dummy byte at the end
   188  0000                     
   189                           	psect	cinit
   190  0015BC                     __pcinit:
   191                           	opt stack 0
   192  0015BC                     start_initialization:
   193                           	opt stack 0
   194  0015BC                     __initialization:
   195                           	opt stack 0
   196  0015BC                     end_of_initialization:
   197                           	opt stack 0
   198  0015BC                     __end_of__initialization:
   199                           	opt stack 0
   200  0015BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201  0015BE  6EF8               	movwf	tblptru,c
   202  0015C0  0100               	movlb	0
   203  0015C2  EF20  F00A         	goto	_main	;jump to C main() function
   204                           tblptru	equ	0xFF8
   205                           
   206                           	psect	cstackCOMRAM
   207  000001                     __pcstackCOMRAM:
   208                           	opt stack 0
   209  000001                     ??_isdigit:
   210  000001                     ??_I2C_Master_Wait:
   211  000001                     ?___wmul:
   212                           	opt stack 0
   213  000001                     ?___lwdiv:
   214                           	opt stack 0
   215  000001                     ?___lldiv:
   216                           	opt stack 0
   217  000001                     lcdNibble@temp:
   218                           	opt stack 0
   219  000001                     ___wmul@multiplier:
   220                           	opt stack 0
   221  000001                     ___lwdiv@dividend:
   222                           	opt stack 0
   223  000001                     ___lldiv@dividend:
   224                           	opt stack 0
   225                           
   226                           ; 4 bytes @ 0x0
   227  000001                     	ds	1
   228  000002                     I2C_Master_Read@a:
   229                           	opt stack 0
   230  000002                     lcdNibble@data:
   231                           	opt stack 0
   232  000002                     _isdigit$476:
   233                           	opt stack 0
   234  000002                     I2C_Master_Write@d:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x1
   238  000002                     	ds	1
   239  000003                     I2C_Master_Read@temp:
   240                           	opt stack 0
   241  000003                     lcdInst@data:
   242                           	opt stack 0
   243  000003                     putch@data:
   244                           	opt stack 0
   245  000003                     isdigit@c:
   246                           	opt stack 0
   247  000003                     ___wmul@multiplicand:
   248                           	opt stack 0
   249  000003                     ___lwdiv@divisor:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253  000003                     	ds	1
   254  000004                     ??_initLCD:
   255                           
   256                           ; 1 bytes @ 0x3
   257  000004                     	ds	1
   258  000005                     ___wmul@product:
   259                           	opt stack 0
   260  000005                     ___lwdiv@quotient:
   261                           	opt stack 0
   262  000005                     ___lldiv@divisor:
   263                           	opt stack 0
   264                           
   265                           ; 4 bytes @ 0x4
   266  000005                     	ds	2
   267  000007                     ___lwdiv@counter:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x6
   271  000007                     	ds	1
   272  000008                     ?_printf:
   273                           	opt stack 0
   274  000008                     printf@f:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x7
   278  000008                     	ds	1
   279  000009                     ___lldiv@quotient:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x8
   283  000009                     	ds	4
   284  00000D                     ___lldiv@counter:
   285                           	opt stack 0
   286                           
   287                           ; 1 bytes @ 0xC
   288  00000D                     	ds	1
   289  00000E                     I2C_Master_Init@c:
   290                           	opt stack 0
   291                           
   292                           ; 4 bytes @ 0xD
   293  00000E                     	ds	2
   294  000010                     ??_printf:
   295                           
   296                           ; 1 bytes @ 0xF
   297  000010                     	ds	2
   298  000012                     ??_I2C_Master_Init:
   299                           
   300                           ; 1 bytes @ 0x11
   301  000012                     	ds	2
   302  000014                     printf@ap:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x13
   306  000014                     	ds	2
   307  000016                     printf@idx:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x15
   311  000016                     	ds	1
   312  000017                     printf@flag:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x16
   316  000017                     	ds	1
   317  000018                     printf@val:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x17
   321  000018                     	ds	2
   322  00001A                     printf@prec:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x19
   326  00001A                     	ds	1
   327  00001B                     printf@width:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x1A
   331  00001B                     	ds	2
   332  00001D                     printf@c:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x1C
   336  00001D                     	ds	1
   337  00001E                     ??_disp_time:
   338                           
   339                           ; 1 bytes @ 0x1D
   340  00001E                     	ds	1
   341  00001F                     disp_time@time:
   342                           	opt stack 0
   343                           
   344                           ; 7 bytes @ 0x1E
   345  00001F                     	ds	7
   346  000026                     disp_time@i_227:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x25
   350  000026                     	ds	1
   351  000027                     disp_time@i:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x26
   355  000027                     	ds	1
   356  000028                     tblptru	equ	0xFF8
   357                           
   358                           ; 1 bytes @ 0x27
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 26 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels required when called:    4
   384 ;; This function calls:
   385 ;;		_I2C_Master_Init
   386 ;;		_disp_time
   387 ;;		_initLCD
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text0
   394  001440                     __ptext0:
   395                           	opt stack 0
   396  001440                     _main:
   397                           	opt stack 27
   398                           
   399                           ;main.c: 30: TRISA = 0xFF;
   400                           
   401                           ;incstack = 0
   402  001440  6892               	setf	3986,c	;volatile
   403                           
   404                           ;main.c: 31: TRISB = 0xFF;
   405  001442  6893               	setf	3987,c	;volatile
   406                           
   407                           ;main.c: 32: TRISC = 0x00;
   408  001444  0E00               	movlw	0
   409  001446  6E94               	movwf	3988,c	;volatile
   410                           
   411                           ;main.c: 33: TRISD = 0x00;
   412  001448  0E00               	movlw	0
   413  00144A  6E95               	movwf	3989,c	;volatile
   414                           
   415                           ;main.c: 34: TRISE = 0x00;
   416  00144C  0E00               	movlw	0
   417  00144E  6E96               	movwf	3990,c	;volatile
   418                           
   419                           ;main.c: 36: LATA = 0x00;
   420  001450  0E00               	movlw	0
   421  001452  6E89               	movwf	3977,c	;volatile
   422                           
   423                           ;main.c: 37: LATB = 0x00;
   424  001454  0E00               	movlw	0
   425  001456  6E8A               	movwf	3978,c	;volatile
   426                           
   427                           ;main.c: 38: LATC = 0x00;
   428  001458  0E00               	movlw	0
   429  00145A  6E8B               	movwf	3979,c	;volatile
   430                           
   431                           ;main.c: 39: LATD = 0x00;
   432  00145C  0E00               	movlw	0
   433  00145E  6E8C               	movwf	3980,c	;volatile
   434                           
   435                           ;main.c: 40: LATE = 0x00;
   436  001460  0E00               	movlw	0
   437  001462  6E8D               	movwf	3981,c	;volatile
   438                           
   439                           ;main.c: 42: ADCON0 = 0x00;
   440  001464  0E00               	movlw	0
   441  001466  6EC2               	movwf	4034,c	;volatile
   442                           
   443                           ;main.c: 43: ADCON1 = 0xFF;
   444  001468  68C1               	setf	4033,c	;volatile
   445                           
   446                           ;main.c: 45: nRBPU = 0;
   447  00146A  9EF1               	bcf	intcon2,7,c	;volatile
   448                           
   449                           ;main.c: 49: initLCD();
   450  00146C  EC6E  F00A         	call	_initLCD	;wreg free
   451                           
   452                           ;main.c: 50: I2C_Master_Init(10000);
   453  001470  0E10               	movlw	16
   454  001472  6E0E               	movwf	I2C_Master_Init@c,c
   455  001474  0E27               	movlw	39
   456  001476  6E0F               	movwf	I2C_Master_Init@c+1,c
   457  001478  0E00               	movlw	0
   458  00147A  6E10               	movwf	I2C_Master_Init@c+2,c
   459  00147C  0E00               	movlw	0
   460  00147E  6E11               	movwf	I2C_Master_Init@c+3,c
   461  001480  ECCA  F009         	call	_I2C_Master_Init	;wreg free
   462                           
   463                           ;main.c: 52: (INTCONbits.GIE = 0);
   464  001484  9EF2               	bcf	intcon,7,c	;volatile
   465                           
   466                           ;main.c: 55: disp_time();
   467  001486  EC23  F009         	call	_disp_time	;wreg free
   468                           
   469                           ;main.c: 57: return;
   470  00148A  EF01  F000         	goto	start
   471  00148E                     __end_of_main:
   472                           	opt stack 0
   473                           tblptru	equ	0xFF8
   474                           intcon	equ	0xFF2
   475                           intcon2	equ	0xFF1
   476                           
   477 ;; *************** function _initLCD *****************
   478 ;; Defined at:
   479 ;;		line 14 in file "lcd.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    2
   500 ;; This function calls:
   501 ;;		_lcdInst
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text1
   508  0014DC                     __ptext1:
   509                           	opt stack 0
   510  0014DC                     _initLCD:
   511                           	opt stack 28
   512                           
   513                           ;lcd.c: 15: _delay((unsigned long)((15)*(10000000/4000.0)));
   514                           
   515                           ;incstack = 0
   516  0014DC  0E31               	movlw	49
   517  0014DE  6E04               	movwf	??_initLCD& (0+255),c
   518  0014E0  0EB2               	movlw	178
   519  0014E2                     u647:
   520  0014E2  2EE8               	decfsz	wreg,f,c
   521  0014E4  D7FE               	bra	u647
   522  0014E6  2E04               	decfsz	??_initLCD& (0+255),f,c
   523  0014E8  D7FC               	bra	u647
   524  0014EA  D000               	nop2	
   525                           
   526                           ;lcd.c: 16: lcdInst(0b00110011);
   527  0014EC  0E33               	movlw	51
   528  0014EE  ECD8  F00A         	call	_lcdInst
   529                           
   530                           ;lcd.c: 17: lcdInst(0b00110011);
   531  0014F2  0E33               	movlw	51
   532  0014F4  ECD8  F00A         	call	_lcdInst
   533                           
   534                           ;lcd.c: 18: lcdInst(0b00110010);
   535  0014F8  0E32               	movlw	50
   536  0014FA  ECD8  F00A         	call	_lcdInst
   537                           
   538                           ;lcd.c: 19: lcdInst(0b00101000);
   539  0014FE  0E28               	movlw	40
   540  001500  ECD8  F00A         	call	_lcdInst
   541                           
   542                           ;lcd.c: 20: lcdInst(0b00001111);
   543  001504  0E0F               	movlw	15
   544  001506  ECD8  F00A         	call	_lcdInst
   545                           
   546                           ;lcd.c: 21: lcdInst(0b00000110);
   547  00150A  0E06               	movlw	6
   548  00150C  ECD8  F00A         	call	_lcdInst
   549                           
   550                           ;lcd.c: 22: lcdInst(0b00000001);
   551  001510  0E01               	movlw	1
   552  001512  ECD8  F00A         	call	_lcdInst
   553                           
   554                           ;lcd.c: 23: _delay((unsigned long)((15)*(10000000/4000.0)));
   555  001516  0E31               	movlw	49
   556  001518  6E04               	movwf	??_initLCD& (0+255),c
   557  00151A  0EB2               	movlw	178
   558  00151C                     u657:
   559  00151C  2EE8               	decfsz	wreg,f,c
   560  00151E  D7FE               	bra	u657
   561  001520  2E04               	decfsz	??_initLCD& (0+255),f,c
   562  001522  D7FC               	bra	u657
   563  001524  D000               	nop2	
   564  001526  0012               	return		;funcret
   565  001528                     __end_of_initLCD:
   566                           	opt stack 0
   567                           tblptru	equ	0xFF8
   568                           intcon	equ	0xFF2
   569                           intcon2	equ	0xFF1
   570                           wreg	equ	0xFE8
   571                           
   572 ;; *************** function _disp_time *****************
   573 ;; Defined at:
   574 ;;		line 70 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  i               1   37[COMRAM] unsigned char 
   579 ;;  i               1   38[COMRAM] unsigned char 
   580 ;;  time            7   30[COMRAM] unsigned char [7]
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;Total ram usage:       10 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    3
   597 ;; This function calls:
   598 ;;		_I2C_Master_Read
   599 ;;		_I2C_Master_Start
   600 ;;		_I2C_Master_Stop
   601 ;;		_I2C_Master_Write
   602 ;;		_lcdInst
   603 ;;		_printf
   604 ;; This function is called by:
   605 ;;		_main
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text2
   610  001246                     __ptext2:
   611                           	opt stack 0
   612  001246                     _disp_time:
   613                           	opt stack 27
   614  001246                     
   615                           ;main.c: 74: I2C_Master_Start();
   616  001246  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
   617                           
   618                           ;main.c: 75: I2C_Master_Write(0b11010000);
   619  00124A  0E00               	movlw	0
   620  00124C  6E03               	movwf	I2C_Master_Write@d+1,c
   621  00124E  0ED0               	movlw	208
   622  001250  6E02               	movwf	I2C_Master_Write@d,c
   623  001252  ECE3  F00A         	call	_I2C_Master_Write	;wreg free
   624                           
   625                           ;main.c: 76: I2C_Master_Write(0x00);
   626  001256  0E00               	movlw	0
   627  001258  6E03               	movwf	I2C_Master_Write@d+1,c
   628  00125A  0E00               	movlw	0
   629  00125C  6E02               	movwf	I2C_Master_Write@d,c
   630  00125E  ECE3  F00A         	call	_I2C_Master_Write	;wreg free
   631                           
   632                           ;main.c: 77: I2C_Master_Stop();
   633  001262  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
   634                           
   635                           ;main.c: 80: I2C_Master_Start();
   636  001266  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
   637                           
   638                           ;main.c: 81: I2C_Master_Write(0b11010001);
   639  00126A  0E00               	movlw	0
   640  00126C  6E03               	movwf	I2C_Master_Write@d+1,c
   641  00126E  0ED1               	movlw	209
   642  001270  6E02               	movwf	I2C_Master_Write@d,c
   643  001272  ECE3  F00A         	call	_I2C_Master_Write	;wreg free
   644                           
   645                           ;main.c: 82: for(unsigned char i=0;i<0x06;i++){
   646  001276  0E00               	movlw	0
   647  001278  6E27               	movwf	disp_time@i,c
   648  00127A                     l1265:
   649  00127A  0E05               	movlw	5
   650  00127C  6427               	cpfsgt	disp_time@i,c
   651  00127E  D001               	goto	l1269
   652  001280  D00E               	goto	l1275
   653  001282                     l1269:
   654                           
   655                           ;main.c: 83: time[i] = I2C_Master_Read(1);
   656  001282  5027               	movf	disp_time@i,w,c
   657  001284  0D01               	mullw	1
   658  001286  0E1F               	movlw	low disp_time@time
   659  001288  24F3               	addwf	prodl,w,c
   660  00128A  6ED9               	movwf	fsr2l,c
   661  00128C  0E00               	movlw	high disp_time@time
   662  00128E  20F4               	addwfc	prodh,w,c
   663  001290  6EDA               	movwf	fsr2h,c
   664  001292  0E01               	movlw	1
   665  001294  ECA7  F00A         	call	_I2C_Master_Read
   666  001298  6EDF               	movwf	indf2,c
   667  00129A  2A27               	incf	disp_time@i,f,c
   668  00129C  D7EE               	goto	l1265
   669  00129E                     l1275:
   670                           
   671                           ;main.c: 84: }
   672                           ;main.c: 85: time[6] = I2C_Master_Read(0);
   673  00129E  0E00               	movlw	0
   674  0012A0  ECA7  F00A         	call	_I2C_Master_Read
   675  0012A4  6E25               	movwf	disp_time@time+6,c
   676                           
   677                           ;main.c: 86: I2C_Master_Stop();
   678  0012A6  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
   679                           
   680                           ;main.c: 89: lcdInst(0b10000000);
   681  0012AA  0E80               	movlw	128
   682  0012AC  ECD8  F00A         	call	_lcdInst
   683                           
   684                           ;main.c: 90: printf("%02x/%02x/%02x", time[5],time[4],time[6]);
   685  0012B0  0E32               	movlw	low STR_1
   686  0012B2  6E08               	movwf	printf@f,c
   687  0012B4  0E10               	movlw	high STR_1
   688  0012B6  6E09               	movwf	printf@f+1,c
   689  0012B8  C024  F00A         	movff	disp_time@time+5,?_printf+2
   690  0012BC  6A0B               	clrf	?_printf+3,c
   691  0012BE  C023  F00C         	movff	disp_time@time+4,?_printf+4
   692  0012C2  6A0D               	clrf	?_printf+5,c
   693  0012C4  C025  F00E         	movff	disp_time@time+6,?_printf+6
   694  0012C8  6A0F               	clrf	?_printf+7,c
   695  0012CA  EC29  F008         	call	_printf	;wreg free
   696                           
   697                           ;main.c: 91: lcdInst(0b11000000);
   698  0012CE  0EC0               	movlw	192
   699  0012D0  ECD8  F00A         	call	_lcdInst
   700                           
   701                           ;main.c: 92: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
   702  0012D4  0E41               	movlw	low STR_2
   703  0012D6  6E08               	movwf	printf@f,c
   704  0012D8  0E10               	movlw	high STR_2
   705  0012DA  6E09               	movwf	printf@f+1,c
   706  0012DC  C021  F00A         	movff	disp_time@time+2,?_printf+2
   707  0012E0  6A0B               	clrf	?_printf+3,c
   708  0012E2  C020  F00C         	movff	disp_time@time+1,?_printf+4
   709  0012E6  6A0D               	clrf	?_printf+5,c
   710  0012E8  C01F  F00E         	movff	disp_time@time,?_printf+6
   711  0012EC  6A0F               	clrf	?_printf+7,c
   712  0012EE  EC29  F008         	call	_printf	;wreg free
   713                           
   714                           ;main.c: 93: for(char i=0;i<100;i++){_delay((unsigned long)((10)*(10000000/4000.0)));};
   715  0012F2  0E00               	movlw	0
   716  0012F4  6E26               	movwf	disp_time@i_227,c
   717  0012F6                     l1283:
   718  0012F6  0E63               	movlw	99
   719  0012F8  6426               	cpfsgt	disp_time@i_227,c
   720  0012FA  D001               	goto	l1287
   721  0012FC  D7A4               	goto	l1261
   722  0012FE                     l1287:
   723  0012FE  0E21               	movlw	33
   724  001300  6E1E               	movwf	??_disp_time& (0+255),c
   725  001302  0E76               	movlw	118
   726  001304                     u667:
   727  001304  2EE8               	decfsz	wreg,f,c
   728  001306  D7FE               	bra	u667
   729  001308  2E1E               	decfsz	??_disp_time& (0+255),f,c
   730  00130A  D7FC               	bra	u667
   731  00130C  D000               	nop2	
   732  00130E  2A26               	incf	disp_time@i_227,f,c
   733  001310  D7F2               	goto	l1283
   734  001312                     __end_of_disp_time:
   735                           	opt stack 0
   736                           tblptru	equ	0xFF8
   737                           prodh	equ	0xFF4
   738                           prodl	equ	0xFF3
   739                           intcon	equ	0xFF2
   740                           intcon2	equ	0xFF1
   741                           wreg	equ	0xFE8
   742                           indf2	equ	0xFDF
   743                           fsr2h	equ	0xFDA
   744                           fsr2l	equ	0xFD9
   745                           
   746 ;; *************** function _printf *****************
   747 ;; Defined at:
   748 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  f               2    7[COMRAM] PTR const unsigned char 
   751 ;;		 -> STR_2(15), STR_1(15), 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  idx             1   21[COMRAM] unsigned char 
   754 ;;  tmpval          4    0        struct .
   755 ;;  cp              3    0        PTR const unsigned char 
   756 ;;  width           2   26[COMRAM] int 
   757 ;;  val             2   23[COMRAM] unsigned int 
   758 ;;  ap              2   19[COMRAM] PTR void [1]
   759 ;;		 -> ?_printf(2), 
   760 ;;  len             2    0        unsigned int 
   761 ;;  c               1   28[COMRAM] char 
   762 ;;  prec            1   25[COMRAM] char 
   763 ;;  flag            1   22[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    7[COMRAM] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:       22 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    2
   780 ;; This function calls:
   781 ;;		___lwdiv
   782 ;;		___wmul
   783 ;;		_isdigit
   784 ;;		_putch
   785 ;; This function is called by:
   786 ;;		_disp_time
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text3
   791  001052                     __ptext3:
   792                           	opt stack 0
   793  001052                     _printf:
   794                           	opt stack 27
   795                           
   796                           ;doprnt.c: 466: va_list ap;
   797                           ;doprnt.c: 499: signed char c;
   798                           ;doprnt.c: 501: int width;
   799                           ;doprnt.c: 506: signed char prec;
   800                           ;doprnt.c: 508: unsigned char flag;
   801                           ;doprnt.c: 523: union {
   802                           ;doprnt.c: 524: unsigned long vd;
   803                           ;doprnt.c: 525: double integ;
   804                           ;doprnt.c: 526: } tmpval;
   805                           ;doprnt.c: 528: unsigned int val;
   806                           ;doprnt.c: 529: unsigned len;
   807                           ;doprnt.c: 530: const char * cp;
   808                           ;doprnt.c: 533: *ap = __va_start();
   809                           
   810                           ;incstack = 0
   811  001052  0E0A               	movlw	low (?_printf+2)
   812  001054  6E14               	movwf	printf@ap,c
   813  001056  0E00               	movlw	high (?_printf+2)
   814  001058  6E15               	movwf	printf@ap+1,c
   815                           
   816                           ;doprnt.c: 536: while(c = *f++) {
   817  00105A  D0E8               	goto	l1229
   818  00105C                     l1157:
   819                           
   820                           ;doprnt.c: 538: if(c != '%')
   821  00105C  0E25               	movlw	37
   822  00105E  181D               	xorwf	printf@c,w,c
   823  001060  B4D8               	btfsc	status,2,c
   824  001062  D004               	goto	l1161
   825                           
   826                           ;doprnt.c: 540: {
   827                           ;doprnt.c: 541: (putch(c) );
   828  001064  501D               	movf	printf@c,w,c
   829  001066  ECD2  F00A         	call	_putch
   830                           
   831                           ;doprnt.c: 542: continue;
   832  00106A  D0E0               	goto	l1229
   833  00106C                     l1161:
   834                           
   835                           ;doprnt.c: 543: }
   836                           ;doprnt.c: 546: width = 0;
   837  00106C  0E00               	movlw	0
   838  00106E  6E1C               	movwf	printf@width+1,c
   839  001070  0E00               	movlw	0
   840  001072  6E1B               	movwf	printf@width,c
   841                           
   842                           ;doprnt.c: 548: flag = 0;
   843  001074  0E00               	movlw	0
   844  001076  6E17               	movwf	printf@flag,c
   845                           
   846                           ;doprnt.c: 551: switch(*f) {
   847                           
   848                           ;doprnt.c: 550: for(;;) {
   849  001078  D003               	goto	l1167
   850  00107A                     l1163:
   851                           
   852                           ;doprnt.c: 580: flag |= 0x04;
   853  00107A  8417               	bsf	printf@flag,2,c
   854                           
   855                           ;doprnt.c: 581: f++;
   856  00107C  4A08               	infsnz	printf@f,f,c
   857  00107E  2A09               	incf	printf@f+1,f,c
   858  001080                     l1167:
   859  001080  C008  FFF6         	movff	printf@f,tblptrl
   860  001084  C009  FFF7         	movff	printf@f+1,tblptrh
   861  001088                     	if	0	;tblptru may be non-zero
   862  001088                     	endif
   863  001088                     	if	0	;tblptru may be non-zero
   864  001088                     	endif
   865  001088  0008               	tblrd		*
   866  00108A  50F5               	movf	tablat,w,c
   867                           
   868                           ; Switch size 1, requested type "space"
   869                           ; Number of cases is 1, Range of values is 48 to 48
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ;	Chosen strategy is simple_byte
   874  00108C  0A30               	xorlw	48	; case 48
   875  00108E  B4D8               	btfsc	status,2,c
   876  001090  D7F4               	goto	l1163
   877                           
   878                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
   879                           
   880                           ;doprnt.c: 586: }
   881                           
   882                           ;doprnt.c: 585: break;
   883  001092  C008  FFF6         	movff	printf@f,tblptrl
   884  001096  C009  FFF7         	movff	printf@f+1,tblptrh
   885  00109A                     	if	0	;tblptru may be non-zero
   886  00109A                     	endif
   887  00109A                     	if	0	;tblptru may be non-zero
   888  00109A                     	endif
   889  00109A  0008               	tblrd		*
   890  00109C  50F5               	movf	tablat,w,c
   891  00109E  ECBA  F00A         	call	_isdigit
   892  0010A2  A0D8               	btfss	status,0,c
   893  0010A4  D032               	goto	l1183
   894                           
   895                           ;doprnt.c: 598: width = 0;
   896  0010A6  0E00               	movlw	0
   897  0010A8  6E1C               	movwf	printf@width+1,c
   898  0010AA  0E00               	movlw	0
   899  0010AC  6E1B               	movwf	printf@width,c
   900  0010AE                     l1173:
   901                           
   902                           ;doprnt.c: 600: width *= 10;
   903  0010AE  C01B  F001         	movff	printf@width,___wmul@multiplier
   904  0010B2  C01C  F002         	movff	printf@width+1,___wmul@multiplier+1
   905  0010B6  0E00               	movlw	0
   906  0010B8  6E04               	movwf	___wmul@multiplicand+1,c
   907  0010BA  0E0A               	movlw	10
   908  0010BC  6E03               	movwf	___wmul@multiplicand,c
   909  0010BE  EC94  F00A         	call	___wmul	;wreg free
   910  0010C2  C001  F01B         	movff	?___wmul,printf@width
   911  0010C6  C002  F01C         	movff	?___wmul+1,printf@width+1
   912                           
   913                           ;doprnt.c: 601: width += *f++ - '0';
   914  0010CA  0ED0               	movlw	208
   915  0010CC  6E10               	movwf	??_printf& (0+255),c
   916  0010CE  0EFF               	movlw	255
   917  0010D0  6E11               	movwf	(??_printf+1)& (0+255),c
   918  0010D2  C008  FFF6         	movff	printf@f,tblptrl
   919  0010D6  C009  FFF7         	movff	printf@f+1,tblptrh
   920  0010DA                     	if	0	;tblptru may be non-zero
   921  0010DA                     	endif
   922  0010DA                     	if	0	;tblptru may be non-zero
   923  0010DA                     	endif
   924  0010DA  0008               	tblrd		*
   925  0010DC  50F5               	movf	tablat,w,c
   926  0010DE  6E12               	movwf	(??_printf+2)& (0+255),c
   927  0010E0  6A13               	clrf	(??_printf+3)& (0+255),c
   928  0010E2  5010               	movf	??_printf,w,c
   929  0010E4  2612               	addwf	??_printf+2,f,c
   930  0010E6  5011               	movf	??_printf+1,w,c
   931  0010E8  2213               	addwfc	??_printf+3,f,c
   932  0010EA  5012               	movf	??_printf+2,w,c
   933  0010EC  261B               	addwf	printf@width,f,c
   934  0010EE  5013               	movf	??_printf+3,w,c
   935  0010F0  221C               	addwfc	printf@width+1,f,c
   936  0010F2  4A08               	infsnz	printf@f,f,c
   937  0010F4  2A09               	incf	printf@f+1,f,c
   938                           
   939                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
   940  0010F6  C008  FFF6         	movff	printf@f,tblptrl
   941  0010FA  C009  FFF7         	movff	printf@f+1,tblptrh
   942  0010FE                     	if	0	;tblptru may be non-zero
   943  0010FE                     	endif
   944  0010FE                     	if	0	;tblptru may be non-zero
   945  0010FE                     	endif
   946  0010FE  0008               	tblrd		*
   947  001100  50F5               	movf	tablat,w,c
   948  001102  ECBA  F00A         	call	_isdigit
   949  001106  B0D8               	btfsc	status,0,c
   950  001108  D7D2               	goto	l1173
   951  00110A                     l1183:
   952  00110A  C008  FFF6         	movff	printf@f,tblptrl
   953  00110E  C009  FFF7         	movff	printf@f+1,tblptrh
   954  001112  4A08               	infsnz	printf@f,f,c
   955  001114  2A09               	incf	printf@f+1,f,c
   956  001116                     	if	0	;tblptru may be non-zero
   957  001116                     	endif
   958  001116                     	if	0	;tblptru may be non-zero
   959  001116                     	endif
   960  001116  0008               	tblrd		*
   961  001118  CFF5 F01D          	movff	tablat,printf@c
   962  00111C  501D               	movf	printf@c,w,c
   963                           
   964                           ; Switch size 1, requested type "space"
   965                           ; Number of cases is 2, Range of values is 0 to 120
   966                           ; switch strategies available:
   967                           ; Name         Instructions Cycles
   968                           ; simple_byte            7     4 (average)
   969                           ;	Chosen strategy is simple_byte
   970  00111E  0A00               	xorlw	0	; case 0
   971  001120  B4D8               	btfsc	status,2,c
   972  001122  0012               	return	
   973  001124  0A78               	xorlw	120	; case 120
   974  001126  A4D8               	btfss	status,2,c
   975  001128  D081               	goto	l1229
   976                           
   977                           ;doprnt.c: 1273: {
   978                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
   979  00112A  C014  FFD9         	movff	printf@ap,fsr2l
   980  00112E  C015  FFDA         	movff	printf@ap+1,fsr2h
   981  001132  CFDE F018          	movff	postinc2,printf@val
   982  001136  CFDD F019          	movff	postdec2,printf@val+1
   983  00113A  0E02               	movlw	2
   984  00113C  2614               	addwf	printf@ap,f,c
   985  00113E  0E00               	movlw	0
   986  001140  2215               	addwfc	printf@ap+1,f,c
   987                           
   988                           ;doprnt.c: 1287: }
   989                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
   990  001142  0E01               	movlw	1
   991  001144  6E1D               	movwf	printf@c,c
   992  001146                     l1191:
   993  001146  0E04               	movlw	4
   994  001148  181D               	xorwf	printf@c,w,c
   995  00114A  B4D8               	btfsc	status,2,c
   996  00114C  D012               	goto	l1203
   997                           
   998                           ;doprnt.c: 1317: if(val < hexpowers[c])
   999  00114E  501D               	movf	printf@c,w,c
  1000  001150  0D02               	mullw	2
  1001  001152  0E12               	movlw	low _hexpowers
  1002  001154  24F3               	addwf	prodl,w,c
  1003  001156  6EF6               	movwf	tblptrl,c
  1004  001158  0E10               	movlw	high _hexpowers
  1005  00115A  20F4               	addwfc	prodh,w,c
  1006  00115C  6EF7               	movwf	tblptrh,c
  1007  00115E                     	if	0	;There are less than 3 active tblptr bytes
  1008  00115E                     	endif
  1009  00115E  0009               	tblrd		*+
  1010  001160  50F5               	movf	tablat,w,c
  1011  001162  5C18               	subwf	printf@val,w,c
  1012  001164  0009               	tblrd		*+
  1013  001166  50F5               	movf	tablat,w,c
  1014  001168  5819               	subwfb	printf@val+1,w,c
  1015  00116A  A0D8               	btfss	status,0,c
  1016  00116C  D002               	goto	l1203
  1017                           
  1018                           ;doprnt.c: 1318: break;
  1019  00116E  2A1D               	incf	printf@c,f,c
  1020  001170  D7EA               	goto	l1191
  1021  001172                     l1203:
  1022                           
  1023                           ;doprnt.c: 1381: if(width > c)
  1024  001172  0E80               	movlw	128
  1025  001174  BE1D               	btfsc	printf@c,7,c
  1026  001176  0E7F               	movlw	127
  1027  001178  6E10               	movwf	??_printf& (0+255),c
  1028  00117A  501B               	movf	printf@width,w,c
  1029  00117C  5C1D               	subwf	printf@c,w,c
  1030  00117E  501C               	movf	printf@width+1,w,c
  1031  001180  0A80               	xorlw	128
  1032  001182  5810               	subwfb	??_printf& (0+255),w,c
  1033  001184  B0D8               	btfsc	status,0,c
  1034  001186  D007               	goto	l1207
  1035                           
  1036                           ;doprnt.c: 1382: width -= c;
  1037  001188  501D               	movf	printf@c,w,c
  1038  00118A  5E1B               	subwf	printf@width,f,c
  1039  00118C  0E00               	movlw	0
  1040  00118E  BE1D               	btfsc	printf@c,7,c
  1041  001190  0EFF               	movlw	255
  1042  001192  5A1C               	subwfb	printf@width+1,f,c
  1043  001194  D004               	goto	l1209
  1044  001196                     l1207:
  1045                           
  1046                           ;doprnt.c: 1383: else
  1047                           ;doprnt.c: 1384: width = 0;
  1048  001196  0E00               	movlw	0
  1049  001198  6E1C               	movwf	printf@width+1,c
  1050  00119A  0E00               	movlw	0
  1051  00119C  6E1B               	movwf	printf@width,c
  1052  00119E                     l1209:
  1053                           
  1054                           ;doprnt.c: 1387: if(flag & 0x04) {
  1055  00119E  A417               	btfss	printf@flag,2,c
  1056  0011A0  D00B               	goto	l1217
  1057  0011A2                     
  1058                           ;doprnt.c: 1415: if(width)
  1059  0011A2  501B               	movf	printf@width,w,c
  1060  0011A4  101C               	iorwf	printf@width+1,w,c
  1061  0011A6  B4D8               	btfsc	status,2,c
  1062  0011A8  D015               	goto	l190
  1063                           
  1064                           ;doprnt.c: 1417: (putch('0') );
  1065                           
  1066                           ;doprnt.c: 1416: do
  1067  0011AA  0E30               	movlw	48
  1068  0011AC  ECD2  F00A         	call	_putch
  1069                           
  1070                           ;doprnt.c: 1418: while(--width);
  1071  0011B0  061B               	decf	printf@width,f,c
  1072  0011B2  A0D8               	btfss	status,0,c
  1073  0011B4  061C               	decf	printf@width+1,f,c
  1074  0011B6  D7F5               	goto	L1
  1075  0011B8                     l1217:
  1076                           
  1077                           ;doprnt.c: 1422: {
  1078                           ;doprnt.c: 1424: if(width
  1079                           ;doprnt.c: 1428: )
  1080  0011B8  501B               	movf	printf@width,w,c
  1081  0011BA  101C               	iorwf	printf@width+1,w,c
  1082  0011BC  B4D8               	btfsc	status,2,c
  1083  0011BE  D00A               	goto	l190
  1084  0011C0                     l1219:
  1085                           
  1086                           ;doprnt.c: 1430: (putch(' ') );
  1087  0011C0  0E20               	movlw	32
  1088  0011C2  ECD2  F00A         	call	_putch
  1089                           
  1090                           ;doprnt.c: 1431: while(--width);
  1091  0011C6  061B               	decf	printf@width,f,c
  1092  0011C8  A0D8               	btfss	status,0,c
  1093  0011CA  061C               	decf	printf@width+1,f,c
  1094  0011CC  501B               	movf	printf@width,w,c
  1095  0011CE  101C               	iorwf	printf@width+1,w,c
  1096  0011D0  A4D8               	btfss	status,2,c
  1097  0011D2  D7F6               	goto	l1219
  1098  0011D4                     l190:
  1099                           
  1100                           ;doprnt.c: 1469: }
  1101                           ;doprnt.c: 1472: prec = c;
  1102  0011D4  C01D  F01A         	movff	printf@c,printf@prec
  1103                           
  1104                           ;doprnt.c: 1474: while(prec--) {
  1105  0011D8  D025               	goto	l194
  1106  0011DA                     l1223:
  1107                           
  1108                           ;doprnt.c: 1478: {
  1109                           ;doprnt.c: 1499: {
  1110                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1111  0011DA  C018  F001         	movff	printf@val,___lwdiv@dividend
  1112  0011DE  C019  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1113  0011E2  501A               	movf	printf@prec,w,c
  1114  0011E4  0D02               	mullw	2
  1115  0011E6  0E12               	movlw	low _hexpowers
  1116  0011E8  24F3               	addwf	prodl,w,c
  1117  0011EA  6EF6               	movwf	tblptrl,c
  1118  0011EC  0E10               	movlw	high _hexpowers
  1119  0011EE  20F4               	addwfc	prodh,w,c
  1120  0011F0  6EF7               	movwf	tblptrh,c
  1121  0011F2                     	if	0	;There are less than 3 active tblptr bytes
  1122  0011F2                     	endif
  1123  0011F2  0009               	tblrd		*+
  1124  0011F4  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1125  0011F8  000A               	tblrd		*-
  1126  0011FA  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1127  0011FE  ECF7  F009         	call	___lwdiv	;wreg free
  1128  001202  5001               	movf	?___lwdiv,w,c
  1129  001204  0B0F               	andlw	15
  1130  001206  6E16               	movwf	printf@idx,c
  1131                           
  1132                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1133  001208  5016               	movf	printf@idx,w,c
  1134  00120A  0D01               	mullw	1
  1135  00120C  0E21               	movlw	low STR_3
  1136  00120E  24F3               	addwf	prodl,w,c
  1137  001210  6EF6               	movwf	tblptrl,c
  1138  001212  0E10               	movlw	high STR_3
  1139  001214  20F4               	addwfc	prodh,w,c
  1140  001216  6EF7               	movwf	tblptrh,c
  1141  001218                     	if	0	;There are less than 3 active tblptr bytes
  1142  001218                     	endif
  1143  001218  0008               	tblrd		*
  1144  00121A  CFF5 F01D          	movff	tablat,printf@c
  1145                           
  1146                           ;doprnt.c: 1508: }
  1147                           ;doprnt.c: 1523: }
  1148                           ;doprnt.c: 1524: (putch(c) );
  1149  00121E  501D               	movf	printf@c,w,c
  1150  001220  ECD2  F00A         	call	_putch
  1151  001224                     l194:
  1152  001224  061A               	decf	printf@prec,f,c
  1153  001226  281A               	incf	printf@prec,w,c
  1154  001228  A4D8               	btfss	status,2,c
  1155  00122A  D7D7               	goto	l1223
  1156  00122C                     l1229:
  1157  00122C  C008  FFF6         	movff	printf@f,tblptrl
  1158  001230  C009  FFF7         	movff	printf@f+1,tblptrh
  1159  001234  4A08               	infsnz	printf@f,f,c
  1160  001236  2A09               	incf	printf@f+1,f,c
  1161  001238                     	if	0	;tblptru may be non-zero
  1162  001238                     	endif
  1163  001238                     	if	0	;tblptru may be non-zero
  1164  001238                     	endif
  1165  001238  0008               	tblrd		*
  1166  00123A  CFF5 F01D          	movff	tablat,printf@c
  1167  00123E  501D               	movf	printf@c,w,c
  1168  001240  B4D8               	btfsc	status,2,c
  1169  001242  0012               	return	
  1170  001244  D70B               	goto	l1157
  1171  001246                     __end_of_printf:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           prodh	equ	0xFF4
  1178                           prodl	equ	0xFF3
  1179                           intcon	equ	0xFF2
  1180                           intcon2	equ	0xFF1
  1181                           wreg	equ	0xFE8
  1182                           indf2	equ	0xFDF
  1183                           postinc2	equ	0xFDE
  1184                           postdec2	equ	0xFDD
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function _putch *****************
  1190 ;; Defined at:
  1191 ;;		line 31 in file "lcd.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  data            1    wreg     unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  data            1    2[COMRAM] unsigned char 
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;Total ram usage:        1 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    1
  1212 ;; This function calls:
  1213 ;;		_lcdNibble
  1214 ;; This function is called by:
  1215 ;;		_printf
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text4
  1220  0015A4                     __ptext4:
  1221                           	opt stack 0
  1222  0015A4                     _putch:
  1223                           	opt stack 27
  1224                           
  1225                           ;incstack = 0
  1226                           ;putch@data stored from wreg
  1227  0015A4  6E03               	movwf	putch@data,c
  1228                           
  1229                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  1230  0015A6  848C               	bsf	3980,2,c	;volatile
  1231                           
  1232                           ;lcd.c: 33: lcdNibble(data);
  1233  0015A8  5003               	movf	putch@data,w,c
  1234  0015AA  EC47  F00A         	call	_lcdNibble
  1235  0015AE  0012               	return		;funcret
  1236  0015B0                     __end_of_putch:
  1237                           	opt stack 0
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           prodh	equ	0xFF4
  1243                           prodl	equ	0xFF3
  1244                           intcon	equ	0xFF2
  1245                           intcon2	equ	0xFF1
  1246                           wreg	equ	0xFE8
  1247                           indf2	equ	0xFDF
  1248                           postinc2	equ	0xFDE
  1249                           postdec2	equ	0xFDD
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _isdigit *****************
  1255 ;; Defined at:
  1256 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  c               1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  c               1    2[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_printf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text5
  1284  001574                     __ptext5:
  1285                           	opt stack 0
  1286  001574                     _isdigit:
  1287                           	opt stack 28
  1288                           
  1289                           ;incstack = 0
  1290                           ;isdigit@c stored from wreg
  1291  001574  6E03               	movwf	isdigit@c,c
  1292  001576  0E00               	movlw	0
  1293  001578  6E02               	movwf	_isdigit$476,c
  1294  00157A  0E3A               	movlw	58
  1295  00157C  6003               	cpfslt	isdigit@c,c
  1296  00157E  D005               	goto	l1119
  1297  001580  0E2F               	movlw	47
  1298  001582  6403               	cpfsgt	isdigit@c,c
  1299  001584  D002               	goto	l1119
  1300  001586  0E01               	movlw	1
  1301  001588  6E02               	movwf	_isdigit$476,c
  1302  00158A                     l1119:
  1303  00158A  C002  F001         	movff	_isdigit$476,??_isdigit
  1304  00158E  3001               	rrcf	??_isdigit,w,c
  1305  001590  0012               	return	
  1306  001592                     __end_of_isdigit:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           prodh	equ	0xFF4
  1313                           prodl	equ	0xFF3
  1314                           intcon	equ	0xFF2
  1315                           intcon2	equ	0xFF1
  1316                           wreg	equ	0xFE8
  1317                           indf2	equ	0xFDF
  1318                           postinc2	equ	0xFDE
  1319                           postdec2	equ	0xFDD
  1320                           fsr2h	equ	0xFDA
  1321                           fsr2l	equ	0xFD9
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function ___wmul *****************
  1325 ;; Defined at:
  1326 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  multiplier      2    0[COMRAM] unsigned int 
  1329 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  product         2    4[COMRAM] unsigned int 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  2    0[COMRAM] unsigned int 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, prodl, prodh
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1341 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;Total ram usage:        6 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; This function calls:
  1348 ;;		Nothing
  1349 ;; This function is called by:
  1350 ;;		_printf
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text6
  1355  001528                     __ptext6:
  1356                           	opt stack 0
  1357  001528                     ___wmul:
  1358                           	opt stack 28
  1359                           
  1360                           ;incstack = 0
  1361  001528  5001               	movf	___wmul@multiplier,w,c
  1362  00152A  0203               	mulwf	___wmul@multiplicand,c
  1363  00152C  CFF3 F005          	movff	prodl,___wmul@product
  1364  001530  CFF4 F006          	movff	prodh,___wmul@product+1
  1365  001534  5001               	movf	___wmul@multiplier,w,c
  1366  001536  0204               	mulwf	___wmul@multiplicand+1,c
  1367  001538  50F3               	movf	prodl,w,c
  1368  00153A  2606               	addwf	___wmul@product+1,f,c
  1369  00153C  5002               	movf	___wmul@multiplier+1,w,c
  1370  00153E  0203               	mulwf	___wmul@multiplicand,c
  1371  001540  50F3               	movf	prodl,w,c
  1372  001542  2606               	addwf	___wmul@product+1,f,c
  1373  001544  C005  F001         	movff	___wmul@product,?___wmul
  1374  001548  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1375  00154C  0012               	return	
  1376  00154E                     __end_of___wmul:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           prodh	equ	0xFF4
  1383                           prodl	equ	0xFF3
  1384                           intcon	equ	0xFF2
  1385                           intcon2	equ	0xFF1
  1386                           wreg	equ	0xFE8
  1387                           indf2	equ	0xFDF
  1388                           postinc2	equ	0xFDE
  1389                           postdec2	equ	0xFDD
  1390                           fsr2h	equ	0xFDA
  1391                           fsr2l	equ	0xFD9
  1392                           status	equ	0xFD8
  1393                           
  1394 ;; *************** function ___lwdiv *****************
  1395 ;; Defined at:
  1396 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  dividend        2    0[COMRAM] unsigned int 
  1399 ;;  divisor         2    2[COMRAM] unsigned int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  quotient        2    4[COMRAM] unsigned int 
  1402 ;;  counter         1    6[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  2    0[COMRAM] unsigned int 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        7 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_printf
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text7
  1426  0013EE                     __ptext7:
  1427                           	opt stack 0
  1428  0013EE                     ___lwdiv:
  1429                           	opt stack 28
  1430                           
  1431                           ;incstack = 0
  1432  0013EE  0E00               	movlw	0
  1433  0013F0  6E06               	movwf	___lwdiv@quotient+1,c
  1434  0013F2  0E00               	movlw	0
  1435  0013F4  6E05               	movwf	___lwdiv@quotient,c
  1436  0013F6  5003               	movf	___lwdiv@divisor,w,c
  1437  0013F8  1004               	iorwf	___lwdiv@divisor+1,w,c
  1438  0013FA  B4D8               	btfsc	status,2,c
  1439  0013FC  D01C               	goto	l606
  1440  0013FE  0E01               	movlw	1
  1441  001400  6E07               	movwf	___lwdiv@counter,c
  1442  001402  D004               	goto	l1137
  1443  001404                     l1135:
  1444  001404  90D8               	bcf	status,0,c
  1445  001406  3603               	rlcf	___lwdiv@divisor,f,c
  1446  001408  3604               	rlcf	___lwdiv@divisor+1,f,c
  1447  00140A  2A07               	incf	___lwdiv@counter,f,c
  1448  00140C                     l1137:
  1449  00140C  AE04               	btfss	___lwdiv@divisor+1,7,c
  1450  00140E  D7FA               	goto	l1135
  1451  001410                     l1139:
  1452  001410  90D8               	bcf	status,0,c
  1453  001412  3605               	rlcf	___lwdiv@quotient,f,c
  1454  001414  3606               	rlcf	___lwdiv@quotient+1,f,c
  1455  001416  5003               	movf	___lwdiv@divisor,w,c
  1456  001418  5C01               	subwf	___lwdiv@dividend,w,c
  1457  00141A  5004               	movf	___lwdiv@divisor+1,w,c
  1458  00141C  5802               	subwfb	___lwdiv@dividend+1,w,c
  1459  00141E  A0D8               	btfss	status,0,c
  1460  001420  D005               	goto	l1147
  1461  001422  5003               	movf	___lwdiv@divisor,w,c
  1462  001424  5E01               	subwf	___lwdiv@dividend,f,c
  1463  001426  5004               	movf	___lwdiv@divisor+1,w,c
  1464  001428  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1465  00142A  8005               	bsf	___lwdiv@quotient,0,c
  1466  00142C                     l1147:
  1467  00142C  90D8               	bcf	status,0,c
  1468  00142E  3204               	rrcf	___lwdiv@divisor+1,f,c
  1469  001430  3203               	rrcf	___lwdiv@divisor,f,c
  1470  001432  2E07               	decfsz	___lwdiv@counter,f,c
  1471  001434  D7ED               	goto	l1139
  1472  001436                     l606:
  1473  001436  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1474  00143A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1475  00143E  0012               	return		;funcret
  1476  001440                     __end_of___lwdiv:
  1477                           	opt stack 0
  1478                           tblptru	equ	0xFF8
  1479                           tblptrh	equ	0xFF7
  1480                           tblptrl	equ	0xFF6
  1481                           tablat	equ	0xFF5
  1482                           prodh	equ	0xFF4
  1483                           prodl	equ	0xFF3
  1484                           intcon	equ	0xFF2
  1485                           intcon2	equ	0xFF1
  1486                           wreg	equ	0xFE8
  1487                           indf2	equ	0xFDF
  1488                           postinc2	equ	0xFDE
  1489                           postdec2	equ	0xFDD
  1490                           fsr2h	equ	0xFDA
  1491                           fsr2l	equ	0xFD9
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _lcdInst *****************
  1495 ;; Defined at:
  1496 ;;		line 26 in file "lcd.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  data            1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  data            1    2[COMRAM] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;Total ram usage:        1 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		_lcdNibble
  1519 ;; This function is called by:
  1520 ;;		_initLCD
  1521 ;;		_disp_time
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text8
  1526  0015B0                     __ptext8:
  1527                           	opt stack 0
  1528  0015B0                     _lcdInst:
  1529                           	opt stack 28
  1530                           
  1531                           ;incstack = 0
  1532                           ;lcdInst@data stored from wreg
  1533  0015B0  6E03               	movwf	lcdInst@data,c
  1534                           
  1535                           ;lcd.c: 27: LATDbits.LATD2 = 0;
  1536  0015B2  948C               	bcf	3980,2,c	;volatile
  1537                           
  1538                           ;lcd.c: 28: lcdNibble(data);
  1539  0015B4  5003               	movf	lcdInst@data,w,c
  1540  0015B6  EC47  F00A         	call	_lcdNibble
  1541  0015BA  0012               	return		;funcret
  1542  0015BC                     __end_of_lcdInst:
  1543                           	opt stack 0
  1544                           tblptru	equ	0xFF8
  1545                           tblptrh	equ	0xFF7
  1546                           tblptrl	equ	0xFF6
  1547                           tablat	equ	0xFF5
  1548                           prodh	equ	0xFF4
  1549                           prodl	equ	0xFF3
  1550                           intcon	equ	0xFF2
  1551                           intcon2	equ	0xFF1
  1552                           wreg	equ	0xFE8
  1553                           indf2	equ	0xFDF
  1554                           postinc2	equ	0xFDE
  1555                           postdec2	equ	0xFDD
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           status	equ	0xFD8
  1559                           
  1560 ;; *************** function _lcdNibble *****************
  1561 ;; Defined at:
  1562 ;;		line 36 in file "lcd.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  data            1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  data            1    1[COMRAM] unsigned char 
  1567 ;;  temp            1    0[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;Total ram usage:        2 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_lcdInst
  1587 ;;		_putch
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text9
  1592  00148E                     __ptext9:
  1593                           	opt stack 0
  1594  00148E                     _lcdNibble:
  1595                           	opt stack 28
  1596                           
  1597                           ;incstack = 0
  1598                           ;lcdNibble@data stored from wreg
  1599  00148E  6E02               	movwf	lcdNibble@data,c
  1600                           
  1601                           ;lcd.c: 38: char temp = data & 0xF0;
  1602  001490  5002               	movf	lcdNibble@data,w,c
  1603  001492  0BF0               	andlw	240
  1604  001494  6E01               	movwf	lcdNibble@temp,c
  1605                           
  1606                           ;lcd.c: 39: LATD = LATD & 0x0F;
  1607  001496  508C               	movf	3980,w,c	;volatile
  1608  001498  0B0F               	andlw	15
  1609  00149A  6E8C               	movwf	3980,c	;volatile
  1610                           
  1611                           ;lcd.c: 40: LATD = temp | LATD;
  1612  00149C  5001               	movf	lcdNibble@temp,w,c
  1613  00149E  108C               	iorwf	3980,w,c	;volatile
  1614  0014A0  6E8C               	movwf	3980,c	;volatile
  1615                           
  1616                           ;lcd.c: 42: LATDbits.LATD3 = 0;
  1617  0014A2  968C               	bcf	3980,3,c	;volatile
  1618                           
  1619                           ;lcd.c: 43: _delay((unsigned long)((30)*(10000000/4000000.0)));
  1620  0014A4  0E19               	movlw	25
  1621  0014A6                     u677:
  1622  0014A6  2EE8               	decfsz	wreg,f,c
  1623  0014A8  D7FE               	bra	u677
  1624                           
  1625                           ;lcd.c: 44: LATDbits.LATD3 = 1;
  1626  0014AA  868C               	bsf	3980,3,c	;volatile
  1627                           
  1628                           ;lcd.c: 45: _delay((unsigned long)((30)*(10000000/4000000.0)));
  1629  0014AC  0E19               	movlw	25
  1630  0014AE                     u687:
  1631  0014AE  2EE8               	decfsz	wreg,f,c
  1632  0014B0  D7FE               	bra	u687
  1633                           
  1634                           ;lcd.c: 47: data = data << 4;
  1635  0014B2  3802               	swapf	lcdNibble@data,w,c
  1636  0014B4  0BF0               	andlw	240
  1637  0014B6  6E02               	movwf	lcdNibble@data,c
  1638                           
  1639                           ;lcd.c: 49: temp = data & 0xF0;
  1640  0014B8  5002               	movf	lcdNibble@data,w,c
  1641  0014BA  0BF0               	andlw	240
  1642  0014BC  6E01               	movwf	lcdNibble@temp,c
  1643                           
  1644                           ;lcd.c: 50: LATD = LATD & 0x0F;
  1645  0014BE  508C               	movf	3980,w,c	;volatile
  1646  0014C0  0B0F               	andlw	15
  1647  0014C2  6E8C               	movwf	3980,c	;volatile
  1648                           
  1649                           ;lcd.c: 51: LATD = temp | LATD;
  1650  0014C4  5001               	movf	lcdNibble@temp,w,c
  1651  0014C6  108C               	iorwf	3980,w,c	;volatile
  1652  0014C8  6E8C               	movwf	3980,c	;volatile
  1653                           
  1654                           ;lcd.c: 53: LATDbits.LATD3 = 0;
  1655  0014CA  968C               	bcf	3980,3,c	;volatile
  1656                           
  1657                           ;lcd.c: 54: _delay((unsigned long)((30)*(10000000/4000000.0)));
  1658  0014CC  0E19               	movlw	25
  1659  0014CE                     u697:
  1660  0014CE  2EE8               	decfsz	wreg,f,c
  1661  0014D0  D7FE               	bra	u697
  1662                           
  1663                           ;lcd.c: 55: LATDbits.LATD3 = 1;
  1664  0014D2  868C               	bsf	3980,3,c	;volatile
  1665                           
  1666                           ;lcd.c: 56: _delay((unsigned long)((30)*(10000000/4000000.0)));
  1667  0014D4  0E19               	movlw	25
  1668  0014D6                     u707:
  1669  0014D6  2EE8               	decfsz	wreg,f,c
  1670  0014D8  D7FE               	bra	u707
  1671  0014DA  0012               	return		;funcret
  1672  0014DC                     __end_of_lcdNibble:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           prodh	equ	0xFF4
  1679                           prodl	equ	0xFF3
  1680                           intcon	equ	0xFF2
  1681                           intcon2	equ	0xFF1
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           postdec2	equ	0xFDD
  1686                           fsr2h	equ	0xFDA
  1687                           fsr2l	equ	0xFD9
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _I2C_Master_Write *****************
  1691 ;; Defined at:
  1692 ;;		line 47 in file "I2C.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  d               2    1[COMRAM] unsigned int 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		_I2C_Master_Wait
  1715 ;; This function is called by:
  1716 ;;		_disp_time
  1717 ;;		_set_time
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text10
  1722  0015C6                     __ptext10:
  1723                           	opt stack 0
  1724  0015C6                     _I2C_Master_Write:
  1725                           	opt stack 28
  1726                           
  1727                           ;I2C.c: 49: I2C_Master_Wait();
  1728                           
  1729                           ;incstack = 0
  1730  0015C6  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1731                           
  1732                           ;I2C.c: 50: SSPBUF = d;
  1733  0015CA  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  1734  0015CE  0012               	return		;funcret
  1735  0015D0                     __end_of_I2C_Master_Write:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           prodh	equ	0xFF4
  1742                           prodl	equ	0xFF3
  1743                           intcon	equ	0xFF2
  1744                           intcon2	equ	0xFF1
  1745                           wreg	equ	0xFE8
  1746                           indf2	equ	0xFDF
  1747                           postinc2	equ	0xFDE
  1748                           postdec2	equ	0xFDD
  1749                           fsr2h	equ	0xFDA
  1750                           fsr2l	equ	0xFD9
  1751                           status	equ	0xFD8
  1752                           
  1753 ;; *************** function _I2C_Master_Stop *****************
  1754 ;; Defined at:
  1755 ;;		line 41 in file "I2C.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		_I2C_Master_Wait
  1778 ;; This function is called by:
  1779 ;;		_disp_time
  1780 ;;		_set_time
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text11
  1785  0015D0                     __ptext11:
  1786                           	opt stack 0
  1787  0015D0                     _I2C_Master_Stop:
  1788                           	opt stack 28
  1789                           
  1790                           ;I2C.c: 43: I2C_Master_Wait();
  1791                           
  1792                           ;incstack = 0
  1793  0015D0  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1794                           
  1795                           ;I2C.c: 44: PEN = 1;
  1796  0015D4  84C5               	bsf	4037,2,c	;volatile
  1797  0015D6  0012               	return		;funcret
  1798  0015D8                     __end_of_I2C_Master_Stop:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           intcon	equ	0xFF2
  1807                           intcon2	equ	0xFF1
  1808                           wreg	equ	0xFE8
  1809                           indf2	equ	0xFDF
  1810                           postinc2	equ	0xFDE
  1811                           postdec2	equ	0xFDD
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           
  1816 ;; *************** function _I2C_Master_Start *****************
  1817 ;; Defined at:
  1818 ;;		line 29 in file "I2C.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    1
  1839 ;; This function calls:
  1840 ;;		_I2C_Master_Wait
  1841 ;; This function is called by:
  1842 ;;		_disp_time
  1843 ;;		_set_time
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text12
  1848  0015D8                     __ptext12:
  1849                           	opt stack 0
  1850  0015D8                     _I2C_Master_Start:
  1851                           	opt stack 28
  1852                           
  1853                           ;I2C.c: 31: I2C_Master_Wait();
  1854                           
  1855                           ;incstack = 0
  1856  0015D8  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1857                           
  1858                           ;I2C.c: 32: SEN = 1;
  1859  0015DC  80C5               	bsf	4037,0,c	;volatile
  1860  0015DE  0012               	return		;funcret
  1861  0015E0                     __end_of_I2C_Master_Start:
  1862                           	opt stack 0
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           prodh	equ	0xFF4
  1868                           prodl	equ	0xFF3
  1869                           intcon	equ	0xFF2
  1870                           intcon2	equ	0xFF1
  1871                           wreg	equ	0xFE8
  1872                           indf2	equ	0xFDF
  1873                           postinc2	equ	0xFDE
  1874                           postdec2	equ	0xFDD
  1875                           fsr2h	equ	0xFDA
  1876                           fsr2l	equ	0xFD9
  1877                           status	equ	0xFD8
  1878                           
  1879 ;; *************** function _I2C_Master_Read *****************
  1880 ;; Defined at:
  1881 ;;		line 53 in file "I2C.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  a               1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  a               1    1[COMRAM] unsigned char 
  1886 ;;  temp            1    2[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    1
  1903 ;; This function calls:
  1904 ;;		_I2C_Master_Wait
  1905 ;; This function is called by:
  1906 ;;		_disp_time
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text13
  1911  00154E                     __ptext13:
  1912                           	opt stack 0
  1913  00154E                     _I2C_Master_Read:
  1914                           	opt stack 28
  1915                           
  1916                           ;incstack = 0
  1917                           ;I2C_Master_Read@a stored from wreg
  1918  00154E  6E02               	movwf	I2C_Master_Read@a,c
  1919                           
  1920                           ;I2C.c: 55: unsigned char temp;
  1921                           ;I2C.c: 56: I2C_Master_Wait();
  1922  001550  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1923                           
  1924                           ;I2C.c: 57: RCEN = 1;
  1925  001554  86C5               	bsf	4037,3,c	;volatile
  1926                           
  1927                           ;I2C.c: 58: I2C_Master_Wait();
  1928  001556  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1929                           
  1930                           ;I2C.c: 59: temp = SSPBUF;
  1931  00155A  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  1932                           
  1933                           ;I2C.c: 60: I2C_Master_Wait();
  1934  00155E  ECC9  F00A         	call	_I2C_Master_Wait	;wreg free
  1935                           
  1936                           ;I2C.c: 61: ACKDT = (a)?0:1;
  1937  001562  5002               	movf	I2C_Master_Read@a,w,c
  1938  001564  A4D8               	btfss	status,2,c
  1939  001566  D002               	goto	u80
  1940  001568  8AC5               	bsf	4037,5,c	;volatile
  1941  00156A  D001               	goto	l903
  1942  00156C                     u80:
  1943  00156C  9AC5               	bcf	4037,5,c	;volatile
  1944  00156E                     l903:
  1945                           
  1946                           ;I2C.c: 62: ACKEN = 1;
  1947  00156E  88C5               	bsf	4037,4,c	;volatile
  1948                           
  1949                           ;I2C.c: 63: return temp;
  1950  001570  5003               	movf	I2C_Master_Read@temp,w,c
  1951  001572  0012               	return	
  1952  001574                     __end_of_I2C_Master_Read:
  1953                           	opt stack 0
  1954                           tblptru	equ	0xFF8
  1955                           tblptrh	equ	0xFF7
  1956                           tblptrl	equ	0xFF6
  1957                           tablat	equ	0xFF5
  1958                           prodh	equ	0xFF4
  1959                           prodl	equ	0xFF3
  1960                           intcon	equ	0xFF2
  1961                           intcon2	equ	0xFF1
  1962                           wreg	equ	0xFE8
  1963                           indf2	equ	0xFDF
  1964                           postinc2	equ	0xFDE
  1965                           postdec2	equ	0xFDD
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _I2C_Master_Wait *****************
  1971 ;; Defined at:
  1972 ;;		line 24 in file "I2C.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_I2C_Master_Start
  1996 ;;		_I2C_Master_Stop
  1997 ;;		_I2C_Master_Write
  1998 ;;		_I2C_Master_Read
  1999 ;;		_I2C_Master_RepeatedStart
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text14
  2004  001592                     __ptext14:
  2005                           	opt stack 0
  2006  001592                     _I2C_Master_Wait:
  2007                           	opt stack 28
  2008  001592                     l34:
  2009  001592  B4C7               	btfsc	4039,2,c	;volatile
  2010  001594  D7FE               	goto	l34
  2011  001596  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  2012  00159A  0E1F               	movlw	31
  2013  00159C  1601               	andwf	??_I2C_Master_Wait,f,c
  2014  00159E  B4D8               	btfsc	status,2,c
  2015  0015A0  0012               	return	
  2016  0015A2  D7F7               	goto	l34
  2017  0015A4                     __end_of_I2C_Master_Wait:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon	equ	0xFF2
  2026                           intcon2	equ	0xFF1
  2027                           wreg	equ	0xFE8
  2028                           indf2	equ	0xFDF
  2029                           postinc2	equ	0xFDE
  2030                           postdec2	equ	0xFDD
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _I2C_Master_Init *****************
  2036 ;; Defined at:
  2037 ;;		line 13 in file "I2C.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  c               4   13[COMRAM] const unsigned long 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        8 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    1
  2058 ;; This function calls:
  2059 ;;		___lldiv
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text15
  2066  001394                     __ptext15:
  2067                           	opt stack 0
  2068  001394                     _I2C_Master_Init:
  2069                           	opt stack 29
  2070                           
  2071                           ;I2C.c: 16: SSPSTAT = 0b00000000;
  2072                           
  2073                           ;incstack = 0
  2074  001394  0E00               	movlw	0
  2075  001396  6EC7               	movwf	4039,c	;volatile
  2076                           
  2077                           ;I2C.c: 17: SSPCON1 = 0b00101000;
  2078  001398  0E28               	movlw	40
  2079  00139A  6EC6               	movwf	4038,c	;volatile
  2080                           
  2081                           ;I2C.c: 18: SSPCON2 = 0b00000000;
  2082  00139C  0E00               	movlw	0
  2083  00139E  6EC5               	movwf	4037,c	;volatile
  2084                           
  2085                           ;I2C.c: 19: SSPADD = (10000000/(4*c))-1;
  2086  0013A0  0E80               	movlw	128
  2087  0013A2  6E01               	movwf	___lldiv@dividend,c
  2088  0013A4  0E96               	movlw	150
  2089  0013A6  6E02               	movwf	___lldiv@dividend+1,c
  2090  0013A8  0E98               	movlw	152
  2091  0013AA  6E03               	movwf	___lldiv@dividend+2,c
  2092  0013AC  0E00               	movlw	0
  2093  0013AE  6E04               	movwf	___lldiv@dividend+3,c
  2094  0013B0  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2095  0013B4  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2096  0013B8  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2097  0013BC  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2098  0013C0  0E02               	movlw	2
  2099  0013C2                     u575:
  2100  0013C2  90D8               	bcf	status,0,c
  2101  0013C4  3612               	rlcf	??_I2C_Master_Init,f,c
  2102  0013C6  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2103  0013C8  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2104  0013CA  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2105  0013CC  2EE8               	decfsz	wreg,f,c
  2106  0013CE  D7F9               	goto	u575
  2107  0013D0  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2108  0013D4  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2109  0013D8  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2110  0013DC  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2111  0013E0  EC89  F009         	call	___lldiv	;wreg free
  2112  0013E4  0401               	decf	?___lldiv,w,c
  2113  0013E6  6EC8               	movwf	4040,c	;volatile
  2114                           
  2115                           ;I2C.c: 20: TRISC3 = 1;
  2116  0013E8  8694               	bsf	3988,3,c	;volatile
  2117                           
  2118                           ;I2C.c: 21: TRISC4 = 1;
  2119  0013EA  8894               	bsf	3988,4,c	;volatile
  2120  0013EC  0012               	return		;funcret
  2121  0013EE                     __end_of_I2C_Master_Init:
  2122                           	opt stack 0
  2123                           tblptru	equ	0xFF8
  2124                           tblptrh	equ	0xFF7
  2125                           tblptrl	equ	0xFF6
  2126                           tablat	equ	0xFF5
  2127                           prodh	equ	0xFF4
  2128                           prodl	equ	0xFF3
  2129                           intcon	equ	0xFF2
  2130                           intcon2	equ	0xFF1
  2131                           wreg	equ	0xFE8
  2132                           indf2	equ	0xFDF
  2133                           postinc2	equ	0xFDE
  2134                           postdec2	equ	0xFDD
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function ___lldiv *****************
  2140 ;; Defined at:
  2141 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  dividend        4    0[COMRAM] unsigned long 
  2144 ;;  divisor         4    4[COMRAM] unsigned long 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        4    8[COMRAM] unsigned long 
  2147 ;;  counter         1   12[COMRAM] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  4    0[COMRAM] unsigned long 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:       13 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_I2C_Master_Init
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text16
  2171  001312                     __ptext16:
  2172                           	opt stack 0
  2173  001312                     ___lldiv:
  2174                           	opt stack 29
  2175                           
  2176                           ;incstack = 0
  2177  001312  0E00               	movlw	0
  2178  001314  6E09               	movwf	___lldiv@quotient,c
  2179  001316  0E00               	movlw	0
  2180  001318  6E0A               	movwf	___lldiv@quotient+1,c
  2181  00131A  0E00               	movlw	0
  2182  00131C  6E0B               	movwf	___lldiv@quotient+2,c
  2183  00131E  0E00               	movlw	0
  2184  001320  6E0C               	movwf	___lldiv@quotient+3,c
  2185  001322  5005               	movf	___lldiv@divisor,w,c
  2186  001324  1006               	iorwf	___lldiv@divisor+1,w,c
  2187  001326  1007               	iorwf	___lldiv@divisor+2,w,c
  2188  001328  1008               	iorwf	___lldiv@divisor+3,w,c
  2189  00132A  B4D8               	btfsc	status,2,c
  2190  00132C  D02A               	goto	l553
  2191  00132E  0E01               	movlw	1
  2192  001330  6E0D               	movwf	___lldiv@counter,c
  2193  001332  D006               	goto	l1239
  2194  001334                     l1237:
  2195  001334  90D8               	bcf	status,0,c
  2196  001336  3605               	rlcf	___lldiv@divisor,f,c
  2197  001338  3606               	rlcf	___lldiv@divisor+1,f,c
  2198  00133A  3607               	rlcf	___lldiv@divisor+2,f,c
  2199  00133C  3608               	rlcf	___lldiv@divisor+3,f,c
  2200  00133E  2A0D               	incf	___lldiv@counter,f,c
  2201  001340                     l1239:
  2202  001340  AE08               	btfss	___lldiv@divisor+3,7,c
  2203  001342  D7F8               	goto	l1237
  2204  001344                     l1241:
  2205  001344  90D8               	bcf	status,0,c
  2206  001346  3609               	rlcf	___lldiv@quotient,f,c
  2207  001348  360A               	rlcf	___lldiv@quotient+1,f,c
  2208  00134A  360B               	rlcf	___lldiv@quotient+2,f,c
  2209  00134C  360C               	rlcf	___lldiv@quotient+3,f,c
  2210  00134E  5005               	movf	___lldiv@divisor,w,c
  2211  001350  5C01               	subwf	___lldiv@dividend,w,c
  2212  001352  5006               	movf	___lldiv@divisor+1,w,c
  2213  001354  5802               	subwfb	___lldiv@dividend+1,w,c
  2214  001356  5007               	movf	___lldiv@divisor+2,w,c
  2215  001358  5803               	subwfb	___lldiv@dividend+2,w,c
  2216  00135A  5008               	movf	___lldiv@divisor+3,w,c
  2217  00135C  5804               	subwfb	___lldiv@dividend+3,w,c
  2218  00135E  A0D8               	btfss	status,0,c
  2219  001360  D009               	goto	l1249
  2220  001362  5005               	movf	___lldiv@divisor,w,c
  2221  001364  5E01               	subwf	___lldiv@dividend,f,c
  2222  001366  5006               	movf	___lldiv@divisor+1,w,c
  2223  001368  5A02               	subwfb	___lldiv@dividend+1,f,c
  2224  00136A  5007               	movf	___lldiv@divisor+2,w,c
  2225  00136C  5A03               	subwfb	___lldiv@dividend+2,f,c
  2226  00136E  5008               	movf	___lldiv@divisor+3,w,c
  2227  001370  5A04               	subwfb	___lldiv@dividend+3,f,c
  2228  001372  8009               	bsf	___lldiv@quotient,0,c
  2229  001374                     l1249:
  2230  001374  90D8               	bcf	status,0,c
  2231  001376  3208               	rrcf	___lldiv@divisor+3,f,c
  2232  001378  3207               	rrcf	___lldiv@divisor+2,f,c
  2233  00137A  3206               	rrcf	___lldiv@divisor+1,f,c
  2234  00137C  3205               	rrcf	___lldiv@divisor,f,c
  2235  00137E  2E0D               	decfsz	___lldiv@counter,f,c
  2236  001380  D7E1               	goto	l1241
  2237  001382                     l553:
  2238  001382  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2239  001386  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2240  00138A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2241  00138E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2242  001392  0012               	return		;funcret
  2243  001394                     __end_of___lldiv:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           prodh	equ	0xFF4
  2250                           prodl	equ	0xFF3
  2251                           intcon	equ	0xFF2
  2252                           intcon2	equ	0xFF1
  2253                           wreg	equ	0xFE8
  2254                           indf2	equ	0xFDF
  2255                           postinc2	equ	0xFDE
  2256                           postdec2	equ	0xFDD
  2257                           fsr2h	equ	0xFDA
  2258                           fsr2l	equ	0xFD9
  2259                           status	equ	0xFD8
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           intcon	equ	0xFF2
  2267                           intcon2	equ	0xFF1
  2268                           wreg	equ	0xFE8
  2269                           indf2	equ	0xFDF
  2270                           postinc2	equ	0xFDE
  2271                           postdec2	equ	0xFDD
  2272                           fsr2h	equ	0xFDA
  2273                           fsr2l	equ	0xFD9
  2274                           status	equ	0xFD8
  2275                           
  2276                           	psect	rparam
  2277  0000                     tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           intcon	equ	0xFF2
  2284                           intcon2	equ	0xFF1
  2285                           wreg	equ	0xFE8
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    32
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      39
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_disp_time
    _initLCD->_lcdInst
    _disp_time->_printf
    _printf->___lwdiv
    _putch->_lcdNibble
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2790
                    _I2C_Master_Init
                          _disp_time
                            _initLCD
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _disp_time                                           10    10      0    2324
                                             29 COMRAM    10    10      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              31    23      8    1499
                                              7 COMRAM    22    14      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _disp_time
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     27      27       1       30.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM_1            80      0       0      37        0.0%
BIGRAM             EEE      0       0      38        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun Feb 05 21:33:57 2017

                       l34 1592                         u80 156C        ___wmul@multiplicand 0003  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000  
                      l190 11D4                        l194 1224                        l606 1436  
                      l553 1382                        l903 156E               __CFG_CPB$OFF 000000  
                      _PEN 007E2A               __CFG_CPD$OFF 000000                        u707 14D6  
                      _SEN 007E28                        u575 13C2                        u647 14E2  
                      u657 151C                        u667 1304                        u677 14A6  
                      u687 14AE                        u697 14CE                        prod 000FF3  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     l1203 1172                       l1135 1404                       l1119 158A  
                     l1223 11DA                       l1207 1196                       l1241 1344  
                     l1137 140C                       l1217 11B8                       l1209 119E  
                     l1161 106C                       l1147 142C                       l1139 1410  
                     l1219 11C0                       l1163 107A                       l1237 1334  
                     l1173 10AE                       l1157 105C                       l1229 122C  
                     l1261 1246                       l1239 1340                       l1191 1146  
                     l1183 110A                       l1167 1080                       l1249 1374  
                     l1265 127A                       l1283 12F6                       l1275 129E  
                     l1269 1282                       l1287 12FE                       STR_1 1032  
                     STR_2 1041                       STR_3 1021                       _LATA 000F89  
                     _LATB 000F8A                       _LATC 000F8B                       _LATD 000F8C  
                     _LATE 000F8D                       _RCEN 007E2B                       _RSEN 007E29  
                     _main 1440                       _keys 1001                       fsr2h 000FDA  
                     indf2 000FDF                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0002              __CFG_IESO$OFF 000000  
            __CFG_MCLRE$ON 000000               ___param_bank 000000           ?_I2C_Master_Init 000E  
         ?_I2C_Master_Read 0001           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
          __end_of___lldiv 1394            __end_of___lwdiv 1440                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 15BC             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _nRBPU 007F8F              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000            __end_of_initLCD 1528             __CFG_EBTRB$OFF 000000  
          __end_of_isdigit 1592                      _putch 15A4                      tablat 000FF5  
          __end_of_timeset 1021                      status 000FD8             __CFG_PBADEN$ON 000000  
          __initialization 15BC               __end_of_main 148E               __end_of_keys 1012  
                   ??_main 0028              __activetblptr 000002          ?_I2C_Master_Start 0001  
        ?_I2C_Master_Write 0002         ??_I2C_Master_Start 0002                     _ADCON0 000FC2  
                   _ADCON1 000FC1         ??_I2C_Master_Write 0004              disp_time@time 001F  
                   ?_putch 0001                     _SSPADD 000FC8                     _TRISC3 007CA3  
                   _TRISC4 007CA4                     _SSPBUF 000FC9             __CFG_XINST$OFF 000000  
                   ___wmul 1528             __CFG_STVREN$ON 000000                  ??___lldiv 0009  
                ??___lwdiv 0005                  ??_lcdInst 0003                     _printf 1052  
                ??_initLCD 0004                  ??_isdigit 0001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 15BC              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_putch 15B0         __size_of_lcdNibble 004E  
       __size_of_disp_time 00CC                    ??_putch 0003             disp_time@i_227 0026  
                  ?___wmul 0001                    ?_printf 0008                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7          __end_of_lcdNibble 14DC  
                  __Hparam 0000                    __Lparam 0000          __end_of_disp_time 1312  
                  ___lldiv 1312            __size_of___wmul 0026                    ___lwdiv 13EE  
             __psmallconst 1000                    __pcinit 15BC                    __ramtop 1000  
                  _lcdInst 15B0                    __ptext0 1440                    __ptext1 14DC  
                  __ptext2 1246                    __ptext3 1052                    __ptext4 15A4  
                  __ptext5 1574                    __ptext6 1528                    __ptext7 13EE  
                  __ptext8 15B0                    __ptext9 148E            __size_of_printf 01F4  
                  _initLCD 14DC          __end_of_hexpowers 101A                    _isdigit 1574  
 __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Read 0026   __size_of_I2C_Master_Wait 0012  
 __size_of_I2C_Master_Stop 0008                    _timeset 101A       end_of_initialization 15BC  
            __Lmediumconst 0000  __size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0005            ___lldiv@counter 000D                    printf@c 001D  
                  printf@f 0008           I2C_Master_Init@c 000E           I2C_Master_Read@a 0002  
                  postdec2 000FDD                    postinc2 000FDE                 disp_time@i 0027  
              printf@width 001B             __end_of___wmul 154E             __end_of_printf 1246  
      start_initialization 15BC          ??_I2C_Master_Init 0012          ??_I2C_Master_Read 0002  
        ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002                   ??___wmul 0005  
         __CFG_LPT1OSC$OFF 000000                   ??_printf 0010           _I2C_Master_Start 15D8  
         _I2C_Master_Write 15C6           ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000  
                _lcdNibble 148E                   ?___lldiv 0001                   ?___lwdiv 0001  
                _disp_time 1246                   ?_lcdInst 0001                   ?_initLCD 0001  
              __smallconst 1000                   ?_isdigit 0001                  _hexpowers 1012  
         ___lwdiv@quotient 0005             __size_of_putch 000C             ___wmul@product 0005  
                 _LATDbits 000F8C           __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001  
               ?_disp_time 0001          ___wmul@multiplier 0001              lcdNibble@data 0002  
               printf@flag 0017              lcdNibble@temp 0001                 printf@prec 001A  
      I2C_Master_Read@temp 0003                   __Hrparam 0000                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000           __size_of___lldiv 0082           __size_of___lwdiv 0052  
              _isdigit$476 0002           __size_of_lcdInst 000C            _I2C_Master_Init 1394  
          _I2C_Master_Read 154E           __size_of_initLCD 004C            _I2C_Master_Wait 1592  
          _I2C_Master_Stop 15D0           __size_of_isdigit 001E            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   __ptext10 15C6                   __ptext11 15D0  
                 __ptext12 15D8                   __ptext13 154E                   __ptext14 1592  
                 __ptext15 1394                   __ptext16 1312              __size_of_main 004E  
              ??_lcdNibble 0001                  printf@idx 0016                  printf@val 0018  
              ??_disp_time 001E                  putch@data 0003   __end_of_I2C_Master_Start 15E0  
 __end_of_I2C_Master_Write 15D0                 _INTCONbits 000FF2                   isdigit@c 0003  
         ___lldiv@dividend 0001                   printf@ap 0014    __end_of_I2C_Master_Init 13EE  
  __end_of_I2C_Master_Read 1574    __end_of_I2C_Master_Wait 15A4    __end_of_I2C_Master_Stop 15D8  
              lcdInst@data 0003           ___lldiv@quotient 0009          I2C_Master_Write@d 0002  
